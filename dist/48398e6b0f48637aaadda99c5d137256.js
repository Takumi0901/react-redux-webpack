// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles

require = (function (modules, cache, entry) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof require === "function" && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof require === "function" && require;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      function localRequire(x) {
        return newRequire(localRequire.resolve(x));
      }

      localRequire.resolve = function (x) {
        return modules[name][1][x] || x;
      };

      var module = cache[name] = new newRequire.Module;
      modules[name][0].call(module.exports, localRequire, module, module.exports);
    }

    return cache[name].exports;
  }

  function Module() {
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;

  for (var i = 0; i < entry.length; i++) {
    newRequire(entry[i]);
  }

  // Override the current require with this new one
  return newRequire;
})({7:[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],11:[function(require,module,exports) {
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],12:[function(require,module,exports) {
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function placeHoldersCount (b64) {
  var len = b64.length
  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // the number of equal signs (place holders)
  // if there are two placeholders, than the two characters before it
  // represent one byte
  // if there is only one, then the three characters before it represent 2 bytes
  // this is just a cheap hack to not do indexOf twice
  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0
}

function byteLength (b64) {
  // base64 is 4/3 + up to two characters of the original data
  return (b64.length * 3 / 4) - placeHoldersCount(b64)
}

function toByteArray (b64) {
  var i, l, tmp, placeHolders, arr
  var len = b64.length
  placeHolders = placeHoldersCount(b64)

  arr = new Arr((len * 3 / 4) - placeHolders)

  // if there are placeholders, only get up to the last complete 4 chars
  l = placeHolders > 0 ? len - 4 : len

  var L = 0

  for (i = 0; i < l; i += 4) {
    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]
    arr[L++] = (tmp >> 16) & 0xFF
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  if (placeHolders === 2) {
    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[L++] = tmp & 0xFF
  } else if (placeHolders === 1) {
    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[L++] = (tmp >> 8) & 0xFF
    arr[L++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var output = ''
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    output += lookup[tmp >> 2]
    output += lookup[(tmp << 4) & 0x3F]
    output += '=='
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])
    output += lookup[tmp >> 10]
    output += lookup[(tmp >> 4) & 0x3F]
    output += lookup[(tmp << 2) & 0x3F]
    output += '='
  }

  parts.push(output)

  return parts.join('')
}

},{}],13:[function(require,module,exports) {
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = nBytes * 8 - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],8:[function(require,module,exports) {

var global = (1,eval)("this");
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

},{"buffer":8,"isarray":11,"base64-js":12,"ieee754":13}],6:[function(require,module,exports) {
var process = require("process");
var global = (1,eval)("this");
var Buffer = require("buffer").Buffer;
"use strict";

var _typeof4 = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/******/(function (modules) {
  // webpackBootstrap
  /******/ // The module cache
  /******/var installedModules = {};
  /******/
  /******/ // The require function
  /******/function __webpack_require__(moduleId) {
    /******/
    /******/ // Check if module is in cache
    /******/if (installedModules[moduleId]) {
      /******/return installedModules[moduleId].exports;
      /******/
    }
    /******/ // Create a new module (and put it into the cache)
    /******/var module = installedModules[moduleId] = {
      /******/i: moduleId,
      /******/l: false,
      /******/exports: {}
      /******/ };
    /******/
    /******/ // Execute the module function
    /******/modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
    /******/
    /******/ // Flag the module as loaded
    /******/module.l = true;
    /******/
    /******/ // Return the exports of the module
    /******/return module.exports;
    /******/
  }
  /******/
  /******/
  /******/ // expose the modules object (__webpack_modules__)
  /******/__webpack_require__.m = modules;
  /******/
  /******/ // expose the module cache
  /******/__webpack_require__.c = installedModules;
  /******/
  /******/ // define getter function for harmony exports
  /******/__webpack_require__.d = function (exports, name, getter) {
    /******/if (!__webpack_require__.o(exports, name)) {
      /******/Object.defineProperty(exports, name, {
        /******/configurable: false,
        /******/enumerable: true,
        /******/get: getter
        /******/ });
      /******/
    }
    /******/
  };
  /******/
  /******/ // getDefaultExport function for compatibility with non-harmony modules
  /******/__webpack_require__.n = function (module) {
    /******/var getter = module && module.__esModule ?
    /******/function getDefault() {
      return module['default'];
    } :
    /******/function getModuleExports() {
      return module;
    };
    /******/__webpack_require__.d(getter, 'a', getter);
    /******/return getter;
    /******/
  };
  /******/
  /******/ // Object.prototype.hasOwnProperty.call
  /******/__webpack_require__.o = function (object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
  };
  /******/
  /******/ // __webpack_public_path__
  /******/__webpack_require__.p = "";
  /******/
  /******/ // Load entry module and return exports
  /******/return __webpack_require__(__webpack_require__.s = 224);
  /******/
})(
/************************************************************************/
/******/[
/* 0 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {

    if (undefined === 'production') {
      module.exports = __webpack_require__(225);
    } else {
      module.exports = __webpack_require__(226);
    }

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 1 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__splice__ = __webpack_require__(267);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__getIn__ = __webpack_require__(268);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__setIn__ = __webpack_require__(293);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__deepEqual__ = __webpack_require__(294);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__deleteIn__ = __webpack_require__(329);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__keys__ = __webpack_require__(330);

  var structure = {
    allowsArrayErrors: true,
    empty: {},
    emptyList: [],
    getIn: __WEBPACK_IMPORTED_MODULE_1__getIn__["a" /* default */],
    setIn: __WEBPACK_IMPORTED_MODULE_2__setIn__["a" /* default */],
    deepEqual: __WEBPACK_IMPORTED_MODULE_3__deepEqual__["a" /* default */],
    deleteIn: __WEBPACK_IMPORTED_MODULE_4__deleteIn__["a" /* default */],
    forEach: function forEach(items, callback) {
      return items.forEach(callback);
    },
    fromJS: function fromJS(value) {
      return value;
    },
    keys: __WEBPACK_IMPORTED_MODULE_5__keys__["a" /* default */],
    size: function size(array) {
      return array ? array.length : 0;
    },
    some: function some(items, callback) {
      return items.some(callback);
    },
    splice: __WEBPACK_IMPORTED_MODULE_0__splice__["a" /* default */],
    toJS: function toJS(value) {
      return value;
    }
  };

  /* harmony default export */__webpack_exports__["a"] = structure;

  /***/
},
/* 2 */
/***/function (module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function (process) {
    /**
    * Copyright (c) 2013-present, Facebook, Inc.
    *
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    */

    if (undefined !== 'production') {
      var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;

      var isValidElement = function isValidElement(object) {
        return (typeof object === "undefined" ? "undefined" : _typeof4(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
      };

      // By explicitly using `prop-types` you are opting into new development behavior.
      // http://fb.me/prop-types-in-prod
      var throwOnDirectAccess = true;
      module.exports = __webpack_require__(238)(isValidElement, throwOnDirectAccess);
    } else {
      // By explicitly using `prop-types` you are opting into new production behavior.
      // http://fb.me/prop-types-in-prod
      module.exports = __webpack_require__(239)();
    }

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 3 */
/***/function (module, exports) {

  // shim for using process in browser
  var process = module.exports = {};

  // cached from whatever global is present so that test runners that stub it
  // don't break things.  But we need to wrap it in a try catch in case it is
  // wrapped in strict mode code which doesn't define any globals.  It's inside a
  // function because try/catches deoptimize in certain engines.

  var cachedSetTimeout;
  var cachedClearTimeout;

  function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
  }
  function defaultClearTimeout() {
    throw new Error('clearTimeout has not been defined');
  }
  (function () {
    try {
      if (typeof setTimeout === 'function') {
        cachedSetTimeout = setTimeout;
      } else {
        cachedSetTimeout = defaultSetTimout;
      }
    } catch (e) {
      cachedSetTimeout = defaultSetTimout;
    }
    try {
      if (typeof clearTimeout === 'function') {
        cachedClearTimeout = clearTimeout;
      } else {
        cachedClearTimeout = defaultClearTimeout;
      }
    } catch (e) {
      cachedClearTimeout = defaultClearTimeout;
    }
  })();
  function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
      //normal enviroments in sane situations
      return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
      cachedSetTimeout = setTimeout;
      return setTimeout(fun, 0);
    }
    try {
      // when when somebody has screwed with setTimeout but no I.E. maddness
      return cachedSetTimeout(fun, 0);
    } catch (e) {
      try {
        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
        return cachedSetTimeout.call(null, fun, 0);
      } catch (e) {
        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
        return cachedSetTimeout.call(this, fun, 0);
      }
    }
  }
  function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
      //normal enviroments in sane situations
      return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
      cachedClearTimeout = clearTimeout;
      return clearTimeout(marker);
    }
    try {
      // when when somebody has screwed with setTimeout but no I.E. maddness
      return cachedClearTimeout(marker);
    } catch (e) {
      try {
        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
        return cachedClearTimeout.call(null, marker);
      } catch (e) {
        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
        // Some versions of I.E. have different rules for clearTimeout vs setTimeout
        return cachedClearTimeout.call(this, marker);
      }
    }
  }
  var queue = [];
  var draining = false;
  var currentQueue;
  var queueIndex = -1;

  function cleanUpNextTick() {
    if (!draining || !currentQueue) {
      return;
    }
    draining = false;
    if (currentQueue.length) {
      queue = currentQueue.concat(queue);
    } else {
      queueIndex = -1;
    }
    if (queue.length) {
      drainQueue();
    }
  }

  function drainQueue() {
    if (draining) {
      return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while (len) {
      currentQueue = queue;
      queue = [];
      while (++queueIndex < len) {
        if (currentQueue) {
          currentQueue[queueIndex].run();
        }
      }
      queueIndex = -1;
      len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
  }

  process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
      for (var i = 1; i < arguments.length; i++) {
        args[i - 1] = arguments[i];
      }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
      runTimeout(drainQueue);
    }
  };

  // v8 likes predictible objects
  function Item(fun, array) {
    this.fun = fun;
    this.array = array;
  }
  Item.prototype.run = function () {
    this.fun.apply(null, this.array);
  };
  process.title = 'browser';
  process.browser = true;
  process.env = {};
  process.argv = [];
  process.version = ''; // empty string to avoid regexp issues
  process.versions = {};

  function noop() {}

  process.on = noop;
  process.addListener = noop;
  process.once = noop;
  process.off = noop;
  process.removeListener = noop;
  process.removeAllListeners = noop;
  process.emit = noop;
  process.prependListener = noop;
  process.prependOnceListener = noop;

  process.listeners = function (name) {
    return [];
  };

  process.binding = function (name) {
    throw new Error('process.binding is not supported');
  };

  process.cwd = function () {
    return '/';
  };
  process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
  };
  process.umask = function () {
    return 0;
  };

  /***/
},
/* 4 */
/***/function (module, exports) {

  var core = module.exports = { version: '2.5.1' };
  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


  /***/
},
/* 5 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__ = __webpack_require__(132);

  /** Detect free variable `self`. */
  var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof4(self)) == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__["a" /* default */] || freeSelf || Function('return this')();

  /* harmony default export */__webpack_exports__["a"] = root;

  /***/
},
/* 6 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */

  var isArray = Array.isArray;

  /* harmony default export */__webpack_exports__["a"] = isArray;

  /***/
},
/* 7 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _assign = __webpack_require__(598);

  var _assign2 = _interopRequireDefault(_assign);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _assign2.default || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  /***/
},
/* 8 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__components_Provider__ = __webpack_require__(240);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__ = __webpack_require__(129);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__connect_connect__ = __webpack_require__(242);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "Provider", function () {
    return __WEBPACK_IMPORTED_MODULE_0__components_Provider__["b"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "createProvider", function () {
    return __WEBPACK_IMPORTED_MODULE_0__components_Provider__["a"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "connectAdvanced", function () {
    return __WEBPACK_IMPORTED_MODULE_1__components_connectAdvanced__["a"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "connect", function () {
    return __WEBPACK_IMPORTED_MODULE_2__connect_connect__["a"];
  });

  /***/
},
/* 9 */
/***/function (module, exports, __webpack_require__) {

  var freeGlobal = __webpack_require__(176);

  /** Detect free variable `self`. */
  var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof4(self)) == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  module.exports = root;

  /***/
},
/* 10 */
/***/function (module, exports) {

  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */
  var isArray = Array.isArray;

  module.exports = isArray;

  /***/
},
/* 11 */
/***/function (module, exports, __webpack_require__) {

  var store = __webpack_require__(111)('wks');
  var uid = __webpack_require__(62);
  var _Symbol2 = __webpack_require__(14).Symbol;
  var USE_SYMBOL = typeof _Symbol2 == 'function';

  var $exports = module.exports = function (name) {
    return store[name] || (store[name] = USE_SYMBOL && _Symbol2[name] || (USE_SYMBOL ? _Symbol2 : uid)('Symbol.' + name));
  };

  $exports.store = store;

  /***/
},
/* 12 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  function makeEmptyFunction(arg) {
    return function () {
      return arg;
    };
  }

  /**
   * This function accepts and discards inputs; it has no side effects. This is
   * primarily useful idiomatically for overridable function endpoints which
   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
   */
  var emptyFunction = function emptyFunction() {};

  emptyFunction.thatReturns = makeEmptyFunction;
  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
  emptyFunction.thatReturnsNull = makeEmptyFunction(null);
  emptyFunction.thatReturnsThis = function () {
    return this;
  };
  emptyFunction.thatReturnsArgument = function (arg) {
    return arg;
  };

  module.exports = emptyFunction;

  /***/
},
/* 13 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */

  function isObject(value) {
    var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
    return value != null && (type == 'object' || type == 'function');
  }

  /* harmony default export */__webpack_exports__["a"] = isObject;

  /***/
},
/* 14 */
/***/function (module, exports) {

  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


  /***/
},
/* 15 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /**
    * Copyright (c) 2013-present, Facebook, Inc.
    *
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    *
    */

    /**
     * Use invariant() to assert state which your program assumes to be true.
     *
     * Provide sprintf-style format (only %s is supported) and arguments
     * to provide information about what broke and what you were
     * expecting.
     *
     * The invariant message will be stripped in production, but the invariant
     * will remain to ensure logic does not differ in production.
     */

    var validateFormat = function validateFormat(format) {};

    if (undefined !== 'production') {
      validateFormat = function validateFormat(format) {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      };
    }

    function invariant(condition, format, a, b, c, d, e, f) {
      validateFormat(format);

      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }

        error.framesToPop = 1; // we don't care about invariant's own frame
        throw error;
      }
    }

    module.exports = invariant;
    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 16 */
/***/function (module, exports) {

  var g;

  // This works in non-strict mode
  g = function () {
    return this;
  }();

  try {
    // This works if eval is allowed (see CSP)
    g = g || Function("return this")() || (1, eval)("this");
  } catch (e) {
    // This works if the window reference is available
    if ((typeof window === "undefined" ? "undefined" : _typeof4(window)) === "object") g = window;
  }

  // g can still be undefined, but nothing to do about it...
  // We return undefined, instead of nothing here, so it's
  // easier to handle this case. if(!global) { ...}

  module.exports = g;

  /***/
},
/* 17 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */

  function isObjectLike(value) {
    return value != null && (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'object';
  }

  /* harmony default export */__webpack_exports__["a"] = isObjectLike;

  /***/
},
/* 18 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseIsNative_js__ = __webpack_require__(274);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__getValue_js__ = __webpack_require__(277);

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = Object(__WEBPACK_IMPORTED_MODULE_1__getValue_js__["a" /* default */])(object, key);
    return Object(__WEBPACK_IMPORTED_MODULE_0__baseIsNative_js__["a" /* default */])(value) ? value : undefined;
  }

  /* harmony default export */__webpack_exports__["a"] = getNative;

  /***/
},
/* 19 */
/***/function (module, exports, __webpack_require__) {

  var baseIsNative = __webpack_require__(429),
      getValue = __webpack_require__(434);

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }

  module.exports = getNative;

  /***/
},
/* 20 */
/***/function (module, exports) {

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike(value) {
    return value != null && (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'object';
  }

  module.exports = isObjectLike;

  /***/
},
/* 21 */
/***/function (module, exports, __webpack_require__) {

  var global = __webpack_require__(14);
  var core = __webpack_require__(4);
  var ctx = __webpack_require__(206);
  var hide = __webpack_require__(27);
  var PROTOTYPE = 'prototype';

  var $export = function $export(type, name, source) {
    var IS_FORCED = type & $export.F;
    var IS_GLOBAL = type & $export.G;
    var IS_STATIC = type & $export.S;
    var IS_PROTO = type & $export.P;
    var IS_BIND = type & $export.B;
    var IS_WRAP = type & $export.W;
    var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
    var expProto = exports[PROTOTYPE];
    var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
    var key, own, out;
    if (IS_GLOBAL) source = name;
    for (key in source) {
      // contains in native
      own = !IS_FORCED && target && target[key] !== undefined;
      if (own && key in exports) continue;
      // export native or passed
      out = own ? target[key] : source[key];
      // prevent global pollution for namespaces
      exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
      // bind timers to global for call from export context
      : IS_BIND && own ? ctx(out, global)
      // wrap global constructors for prevent change them in library
      : IS_WRAP && target[key] == out ? function (C) {
        var F = function F(a, b, c) {
          if (this instanceof C) {
            switch (arguments.length) {
              case 0:
                return new C();
              case 1:
                return new C(a);
              case 2:
                return new C(a, b);
            }return new C(a, b, c);
          }return C.apply(this, arguments);
        };
        F[PROTOTYPE] = C[PROTOTYPE];
        return F;
        // make static versions for prototype methods
      }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
      // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
      if (IS_PROTO) {
        (exports.virtual || (exports.virtual = {}))[key] = out;
        // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
        if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
      }
    }
  };
  // type bitmap
  $export.F = 1; // forced
  $export.G = 2; // global
  $export.S = 4; // static
  $export.P = 8; // proto
  $export.B = 16; // bind
  $export.W = 32; // wrap
  $export.U = 64; // safe
  $export.R = 128; // real proto method for `library`
  module.exports = $export;

  /***/
},
/* 22 */
/***/function (module, exports) {

  var hasOwnProperty = {}.hasOwnProperty;
  module.exports = function (it, key) {
    return hasOwnProperty.call(it, key);
  };

  /***/
},
/* 23 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /**
    * Copyright 2013-2015, Facebook, Inc.
    * All rights reserved.
    *
    * This source code is licensed under the BSD-style license found in the
    * LICENSE file in the root directory of this source tree. An additional grant
    * of patent rights can be found in the PATENTS file in the same directory.
    */

    /**
     * Use invariant() to assert state which your program assumes to be true.
     *
     * Provide sprintf-style format (only %s is supported) and arguments
     * to provide information about what broke and what you were
     * expecting.
     *
     * The invariant message will be stripped in production, but the invariant
     * will remain to ensure logic does not differ in production.
     */

    var invariant = function invariant(condition, format, a, b, c, d, e, f) {
      if (undefined !== 'production') {
        if (format === undefined) {
          throw new Error('invariant requires an error message argument');
        }
      }

      if (!condition) {
        var error;
        if (format === undefined) {
          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
          var args = [a, b, c, d, e, f];
          var argIndex = 0;
          error = new Error(format.replace(/%s/g, function () {
            return args[argIndex++];
          }));
          error.name = 'Invariant Violation';
        }

        error.framesToPop = 1; // we don't care about invariant's own frame
        throw error;
      }
    };

    module.exports = invariant;

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 24 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
  /* WEBPACK VAR INJECTION */(function (process) {
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(131);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__combineReducers__ = __webpack_require__(249);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__ = __webpack_require__(250);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__ = __webpack_require__(251);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__compose__ = __webpack_require__(137);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__utils_warning__ = __webpack_require__(136);
    /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "createStore", function () {
      return __WEBPACK_IMPORTED_MODULE_0__createStore__["b"];
    });
    /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "combineReducers", function () {
      return __WEBPACK_IMPORTED_MODULE_1__combineReducers__["a"];
    });
    /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "bindActionCreators", function () {
      return __WEBPACK_IMPORTED_MODULE_2__bindActionCreators__["a"];
    });
    /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "applyMiddleware", function () {
      return __WEBPACK_IMPORTED_MODULE_3__applyMiddleware__["a"];
    });
    /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "compose", function () {
      return __WEBPACK_IMPORTED_MODULE_4__compose__["a"];
    });

    /*
    * This is a dummy function to check if the function name has been altered by minification.
    * If the function has been minified and NODE_ENV !== 'production', warn the user.
    */
    function isCrushed() {}

    if (undefined !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {
      Object(__WEBPACK_IMPORTED_MODULE_5__utils_warning__["a" /* default */])('You are currently using minified code outside of NODE_ENV === \'production\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');
    }

    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(3));

  /***/
},
/* 25 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(46);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__getRawTag_js__ = __webpack_require__(245);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__objectToString_js__ = __webpack_require__(246);

  /** `Object#toString` result references. */
  var nullTag = '[object Null]',
      undefinedTag = '[object Undefined]';

  /** Built-in value references. */
  var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */].toStringTag : undefined;

  /**
   * The base implementation of `getTag` without fallbacks for buggy environments.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  function baseGetTag(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? Object(__WEBPACK_IMPORTED_MODULE_1__getRawTag_js__["a" /* default */])(value) : Object(__WEBPACK_IMPORTED_MODULE_2__objectToString_js__["a" /* default */])(value);
  }

  /* harmony default export */__webpack_exports__["a"] = baseGetTag;

  /***/
},
/* 26 */
/***/function (module, exports, __webpack_require__) {

  var _Symbol3 = __webpack_require__(38),
      getRawTag = __webpack_require__(430),
      objectToString = __webpack_require__(431);

  /** `Object#toString` result references. */
  var nullTag = '[object Null]',
      undefinedTag = '[object Undefined]';

  /** Built-in value references. */
  var symToStringTag = _Symbol3 ? _Symbol3.toStringTag : undefined;

  /**
   * The base implementation of `getTag` without fallbacks for buggy environments.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  function baseGetTag(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
  }

  module.exports = baseGetTag;

  /***/
},
/* 27 */
/***/function (module, exports, __webpack_require__) {

  var dP = __webpack_require__(28);
  var createDesc = __webpack_require__(61);
  module.exports = __webpack_require__(31) ? function (object, key, value) {
    return dP.f(object, key, createDesc(1, value));
  } : function (object, key, value) {
    object[key] = value;
    return object;
  };

  /***/
},
/* 28 */
/***/function (module, exports, __webpack_require__) {

  var anObject = __webpack_require__(29);
  var IE8_DOM_DEFINE = __webpack_require__(207);
  var toPrimitive = __webpack_require__(107);
  var dP = Object.defineProperty;

  exports.f = __webpack_require__(31) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
    anObject(O);
    P = toPrimitive(P, true);
    anObject(Attributes);
    if (IE8_DOM_DEFINE) try {
      return dP(O, P, Attributes);
    } catch (e) {/* empty */}
    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
    if ('value' in Attributes) O[P] = Attributes.value;
    return O;
  };

  /***/
},
/* 29 */
/***/function (module, exports, __webpack_require__) {

  var isObject = __webpack_require__(30);
  module.exports = function (it) {
    if (!isObject(it)) throw TypeError(it + ' is not an object!');
    return it;
  };

  /***/
},
/* 30 */
/***/function (module, exports) {

  module.exports = function (it) {
    return (typeof it === "undefined" ? "undefined" : _typeof4(it)) === 'object' ? it !== null : typeof it === 'function';
  };

  /***/
},
/* 31 */
/***/function (module, exports, __webpack_require__) {

  // Thank's IE8 for his funny defineProperty
  module.exports = !__webpack_require__(32)(function () {
    return Object.defineProperty({}, 'a', { get: function get() {
        return 7;
      } }).a != 7;
  });

  /***/
},
/* 32 */
/***/function (module, exports) {

  module.exports = function (exec) {
    try {
      return !!exec();
    } catch (e) {
      return true;
    }
  };

  /***/
},
/* 33 */
/***/function (module, exports, __webpack_require__) {

  // to indexed object, toObject with fallback for non-array-like ES3 strings
  var IObject = __webpack_require__(211);
  var defined = __webpack_require__(105);
  module.exports = function (it) {
    return IObject(defined(it));
  };

  /***/
},
/* 34 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */

  /* eslint-disable no-unused-vars */

  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var propIsEnumerable = Object.prototype.propertyIsEnumerable;

  function toObject(val) {
    if (val === null || val === undefined) {
      throw new TypeError('Object.assign cannot be called with null or undefined');
    }

    return Object(val);
  }

  function shouldUseNative() {
    try {
      if (!Object.assign) {
        return false;
      }

      // Detect buggy property enumeration order in older V8 versions.

      // https://bugs.chromium.org/p/v8/issues/detail?id=4118
      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers
      test1[5] = 'de';
      if (Object.getOwnPropertyNames(test1)[0] === '5') {
        return false;
      }

      // https://bugs.chromium.org/p/v8/issues/detail?id=3056
      var test2 = {};
      for (var i = 0; i < 10; i++) {
        test2['_' + String.fromCharCode(i)] = i;
      }
      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
        return test2[n];
      });
      if (order2.join('') !== '0123456789') {
        return false;
      }

      // https://bugs.chromium.org/p/v8/issues/detail?id=3056
      var test3 = {};
      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
        test3[letter] = letter;
      });
      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
        return false;
      }

      return true;
    } catch (err) {
      // We don't expect any of the above to throw, but better to be safe.
      return false;
    }
  }

  module.exports = shouldUseNative() ? Object.assign : function (target, source) {
    var from;
    var to = toObject(target);
    var symbols;

    for (var s = 1; s < arguments.length; s++) {
      from = Object(arguments[s]);

      for (var key in from) {
        if (hasOwnProperty.call(from, key)) {
          to[key] = from[key];
        }
      }

      if (getOwnPropertySymbols) {
        symbols = getOwnPropertySymbols(from);
        for (var i = 0; i < symbols.length; i++) {
          if (propIsEnumerable.call(from, symbols[i])) {
            to[symbols[i]] = from[symbols[i]];
          }
        }
      }
    }

    return to;
  };

  /***/
},
/* 35 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var formatName = function formatName(_ref, name) {
    var sectionPrefix = _ref._reduxForm.sectionPrefix;
    return sectionPrefix ? sectionPrefix + '.' + name : name;
  };

  /* harmony default export */__webpack_exports__["a"] = formatName;

  /***/
},
/* 36 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Performs a
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * comparison between two values to determine if they are equivalent.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.eq(object, object);
   * // => true
   *
   * _.eq(object, other);
   * // => false
   *
   * _.eq('a', 'a');
   * // => true
   *
   * _.eq('a', Object('a'));
   * // => false
   *
   * _.eq(NaN, NaN);
   * // => true
   */

  function eq(value, other) {
    return value === other || value !== value && other !== other;
  }

  /* harmony default export */__webpack_exports__["a"] = eq;

  /***/
},
/* 37 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isSymbol_js__ = __webpack_require__(48);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /**
   * Converts `value` to a string key if it's not a string or symbol.
   *
   * @private
   * @param {*} value The value to inspect.
   * @returns {string|symbol} Returns the key.
   */
  function toKey(value) {
    if (typeof value == 'string' || Object(__WEBPACK_IMPORTED_MODULE_0__isSymbol_js__["a" /* default */])(value)) {
      return value;
    }
    var result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
  }

  /* harmony default export */__webpack_exports__["a"] = toKey;

  /***/
},
/* 38 */
/***/function (module, exports, __webpack_require__) {

  var root = __webpack_require__(9);

  /** Built-in value references. */
  var _Symbol4 = root.Symbol;

  module.exports = _Symbol4;

  /***/
},
/* 39 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = shouldPureComponentUpdate;

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var _shallowEqual = __webpack_require__(523);

  var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

  function shouldPureComponentUpdate(nextProps, nextState) {
    return !(0, _shallowEqual2['default'])(this.props, nextProps) || !(0, _shallowEqual2['default'])(this.state, nextState);
  }

  module.exports = exports['default'];

  /***/
},
/* 40 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  exports.default = function (obj, keys) {
    var target = {};

    for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;
      if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
      target[i] = obj[i];
    }

    return target;
  };

  /***/
},
/* 41 */
/***/function (module, exports) {

  module.exports = {};

  /***/
},
/* 42 */
/***/function (module, exports, __webpack_require__) {

  // 19.1.2.14 / 15.2.3.14 Object.keys(O)
  var $keys = __webpack_require__(210);
  var enumBugKeys = __webpack_require__(112);

  module.exports = Object.keys || function keys(O) {
    return $keys(O, enumBugKeys);
  };

  /***/
},
/* 43 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /**
    * Copyright (c) 2013-present, Facebook, Inc.
    *
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    *
    */

    var emptyObject = {};

    if (undefined !== 'production') {
      Object.freeze(emptyObject);
    }

    module.exports = emptyObject;
    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 44 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /**
    * Copyright (c) 2014-present, Facebook, Inc.
    *
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    *
    */

    var emptyFunction = __webpack_require__(12);

    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */

    var warning = emptyFunction;

    if (undefined !== 'production') {
      var printWarning = function printWarning(format) {
        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });
        if (typeof console !== 'undefined') {
          console.error(message);
        }
        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      warning = function warning(condition, format) {
        if (format === undefined) {
          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (format.indexOf('Failed Composite propType: ') === 0) {
          return; // Ignore CompositeComponent proptype check.
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(undefined, [format].concat(args));
        }
      };
    }

    module.exports = warning;
    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 45 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(25);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__getPrototype_js__ = __webpack_require__(133);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__ = __webpack_require__(17);

  /** `Object#toString` result references. */
  var objectTag = '[object Object]';

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to infer the `Object` constructor. */
  var objectCtorString = funcToString.call(Object);

  /**
   * Checks if `value` is a plain object, that is, an object created by the
   * `Object` constructor or one with a `[[Prototype]]` of `null`.
   *
   * @static
   * @memberOf _
   * @since 0.8.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   * }
   *
   * _.isPlainObject(new Foo);
   * // => false
   *
   * _.isPlainObject([1, 2, 3]);
   * // => false
   *
   * _.isPlainObject({ 'x': 0, 'y': 0 });
   * // => true
   *
   * _.isPlainObject(Object.create(null));
   * // => true
   */
  function isPlainObject(value) {
    if (!Object(__WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__["a" /* default */])(value) || Object(__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__["a" /* default */])(value) != objectTag) {
      return false;
    }
    var proto = Object(__WEBPACK_IMPORTED_MODULE_1__getPrototype_js__["a" /* default */])(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }

  /* harmony default export */__webpack_exports__["a"] = isPlainObject;

  /***/
},
/* 46 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(5);

  /** Built-in value references. */
  var _Symbol5 = __WEBPACK_IMPORTED_MODULE_0__root_js__["a" /* default */].Symbol;

  /* harmony default export */__webpack_exports__["a"] = _Symbol5;

  /***/
},
/* 47 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__arrayMap_js__ = __webpack_require__(151);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__copyArray_js__ = __webpack_require__(152);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isArray_js__ = __webpack_require__(6);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__isSymbol_js__ = __webpack_require__(48);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__stringToPath_js__ = __webpack_require__(153);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__toKey_js__ = __webpack_require__(37);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__toString_js__ = __webpack_require__(155);

  /**
   * Converts `value` to a property path array.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Util
   * @param {*} value The value to convert.
   * @returns {Array} Returns the new property path array.
   * @example
   *
   * _.toPath('a.b.c');
   * // => ['a', 'b', 'c']
   *
   * _.toPath('a[0].b.c');
   * // => ['a', '0', 'b', 'c']
   */
  function toPath(value) {
    if (Object(__WEBPACK_IMPORTED_MODULE_2__isArray_js__["a" /* default */])(value)) {
      return Object(__WEBPACK_IMPORTED_MODULE_0__arrayMap_js__["a" /* default */])(value, __WEBPACK_IMPORTED_MODULE_5__toKey_js__["a" /* default */]);
    }
    return Object(__WEBPACK_IMPORTED_MODULE_3__isSymbol_js__["a" /* default */])(value) ? [value] : Object(__WEBPACK_IMPORTED_MODULE_1__copyArray_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_4__stringToPath_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_6__toString_js__["a" /* default */])(value)));
  }

  /* harmony default export */__webpack_exports__["a"] = toPath;

  /***/
},
/* 48 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(25);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__ = __webpack_require__(17);

  /** `Object#toString` result references. */
  var symbolTag = '[object Symbol]';

  /**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */
  function isSymbol(value) {
    return (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'symbol' || Object(__WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__["a" /* default */])(value) && Object(__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__["a" /* default */])(value) == symbolTag;
  }

  /* harmony default export */__webpack_exports__["a"] = isSymbol;

  /***/
},
/* 49 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getNative_js__ = __webpack_require__(18);

  /* Built-in method references that are verified to be native. */
  var nativeCreate = Object(__WEBPACK_IMPORTED_MODULE_0__getNative_js__["a" /* default */])(Object, 'create');

  /* harmony default export */__webpack_exports__["a"] = nativeCreate;

  /***/
},
/* 50 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__listCacheClear_js__ = __webpack_require__(282);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__listCacheDelete_js__ = __webpack_require__(283);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__listCacheGet_js__ = __webpack_require__(284);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__listCacheHas_js__ = __webpack_require__(285);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__listCacheSet_js__ = __webpack_require__(286);

  /**
   * Creates an list cache object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `ListCache`.
  ListCache.prototype.clear = __WEBPACK_IMPORTED_MODULE_0__listCacheClear_js__["a" /* default */];
  ListCache.prototype['delete'] = __WEBPACK_IMPORTED_MODULE_1__listCacheDelete_js__["a" /* default */];
  ListCache.prototype.get = __WEBPACK_IMPORTED_MODULE_2__listCacheGet_js__["a" /* default */];
  ListCache.prototype.has = __WEBPACK_IMPORTED_MODULE_3__listCacheHas_js__["a" /* default */];
  ListCache.prototype.set = __WEBPACK_IMPORTED_MODULE_4__listCacheSet_js__["a" /* default */];

  /* harmony default export */__webpack_exports__["a"] = ListCache;

  /***/
},
/* 51 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__eq_js__ = __webpack_require__(36);

  /**
   * Gets the index at which the `key` is found in `array` of key-value pairs.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} key The key to search for.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function assocIndexOf(array, key) {
    var length = array.length;
    while (length--) {
      if (Object(__WEBPACK_IMPORTED_MODULE_0__eq_js__["a" /* default */])(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }

  /* harmony default export */__webpack_exports__["a"] = assocIndexOf;

  /***/
},
/* 52 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isKeyable_js__ = __webpack_require__(288);

  /**
   * Gets the data for `map`.
   *
   * @private
   * @param {Object} map The map to query.
   * @param {string} key The reference key.
   * @returns {*} Returns the map data.
   */
  function getMapData(map, key) {
    var data = map.__data__;
    return Object(__WEBPACK_IMPORTED_MODULE_0__isKeyable_js__["a" /* default */])(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
  }

  /* harmony default export */__webpack_exports__["a"] = getMapData;

  /***/
},
/* 53 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isFunction_js__ = __webpack_require__(72);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isLength_js__ = __webpack_require__(82);

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike(value) {
    return value != null && Object(__WEBPACK_IMPORTED_MODULE_1__isLength_js__["a" /* default */])(value.length) && !Object(__WEBPACK_IMPORTED_MODULE_0__isFunction_js__["a" /* default */])(value);
  }

  /* harmony default export */__webpack_exports__["a"] = isArrayLike;

  /***/
},
/* 54 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__defineProperty_js__ = __webpack_require__(162);

  /**
   * The base implementation of `assignValue` and `assignMergeValue` without
   * value checks.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {string} key The key of the property to assign.
   * @param {*} value The value to assign.
   */
  function baseAssignValue(object, key, value) {
    if (key == '__proto__' && __WEBPACK_IMPORTED_MODULE_0__defineProperty_js__["a" /* default */]) {
      Object(__WEBPACK_IMPORTED_MODULE_0__defineProperty_js__["a" /* default */])(object, key, {
        'configurable': true,
        'enumerable': true,
        'value': value,
        'writable': true
      });
    } else {
      object[key] = value;
    }
  }

  /* harmony default export */__webpack_exports__["a"] = baseAssignValue;

  /***/
},
/* 55 */
/***/function (module, exports, __webpack_require__) {

  var getNative = __webpack_require__(19);

  /* Built-in method references that are verified to be native. */
  var nativeCreate = getNative(Object, 'create');

  module.exports = nativeCreate;

  /***/
},
/* 56 */
/***/function (module, exports, __webpack_require__) {

  var listCacheClear = __webpack_require__(439),
      listCacheDelete = __webpack_require__(440),
      listCacheGet = __webpack_require__(441),
      listCacheHas = __webpack_require__(442),
      listCacheSet = __webpack_require__(443);

  /**
   * Creates an list cache object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `ListCache`.
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype['delete'] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;

  module.exports = ListCache;

  /***/
},
/* 57 */
/***/function (module, exports, __webpack_require__) {

  var eq = __webpack_require__(178);

  /**
   * Gets the index at which the `key` is found in `array` of key-value pairs.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} key The key to search for.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function assocIndexOf(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }

  module.exports = assocIndexOf;

  /***/
},
/* 58 */
/***/function (module, exports, __webpack_require__) {

  var isKeyable = __webpack_require__(445);

  /**
   * Gets the data for `map`.
   *
   * @private
   * @param {Object} map The map to query.
   * @param {string} key The reference key.
   * @returns {*} Returns the map data.
   */
  function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;
  }

  module.exports = getMapData;

  /***/
},
/* 59 */
/***/function (module, exports) {

  /**
   * This method returns the first argument it receives.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Util
   * @param {*} value Any value.
   * @returns {*} Returns `value`.
   * @example
   *
   * var object = { 'a': 1 };
   *
   * console.log(_.identity(object) === object);
   * // => true
   */
  function identity(value) {
    return value;
  }

  module.exports = identity;

  /***/
},
/* 60 */
/***/function (module, exports, __webpack_require__) {

  var isSymbol = __webpack_require__(99);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /**
   * Converts `value` to a string key if it's not a string or symbol.
   *
   * @private
   * @param {*} value The value to inspect.
   * @returns {string|symbol} Returns the key.
   */
  function toKey(value) {
    if (typeof value == 'string' || isSymbol(value)) {
      return value;
    }
    var result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
  }

  module.exports = toKey;

  /***/
},
/* 61 */
/***/function (module, exports) {

  module.exports = function (bitmap, value) {
    return {
      enumerable: !(bitmap & 1),
      configurable: !(bitmap & 2),
      writable: !(bitmap & 4),
      value: value
    };
  };

  /***/
},
/* 62 */
/***/function (module, exports) {

  var id = 0;
  var px = Math.random();
  module.exports = function (key) {
    return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
  };

  /***/
},
/* 63 */
/***/function (module, exports) {

  exports.f = {}.propertyIsEnumerable;

  /***/
},
/* 64 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(602), __esModule: true };

  /***/
},
/* 65 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /**
    * Copyright (c) 2013-present, Facebook, Inc.
    *
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    */

    if (undefined !== 'production') {
      var invariant = __webpack_require__(15);
      var warning = __webpack_require__(44);
      var ReactPropTypesSecret = __webpack_require__(66);
      var loggedTypeFailures = {};
    }

    /**
     * Assert that the values match with the type specs.
     * Error messages are memorized and will only be shown once.
     *
     * @param {object} typeSpecs Map of name to a ReactPropType
     * @param {object} values Runtime values that need to be type-checked
     * @param {string} location e.g. "prop", "context", "child context"
     * @param {string} componentName Name of the component for error messages.
     * @param {?Function} getStack Returns the component stack.
     * @private
     */
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (undefined !== 'production') {
        for (var typeSpecName in typeSpecs) {
          if (typeSpecs.hasOwnProperty(typeSpecName)) {
            var error;
            // Prop type validation may throw. In case they do, we don't want to
            // fail the render phase where it didn't fail before. So we log it.
            // After these have been cleaned up, we'll let them throw.
            try {
              // This is intentionally an invariant that gets caught. It's the same
              // behavior as without this statement except with a better message.
              invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, _typeof4(typeSpecs[typeSpecName]));
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error === "undefined" ? "undefined" : _typeof4(error));
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              // Only monitor this failure once because there tends to be a lot of the
              // same error.
              loggedTypeFailures[error.message] = true;

              var stack = getStack ? getStack() : '';

              warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
            }
          }
        }
      }
    }

    module.exports = checkPropTypes;

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 66 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

  module.exports = ReactPropTypesSecret;

  /***/
},
/* 67 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

  /**
   * Simple, lightweight module assisting with the detection and context of
   * Worker. Helps avoid circular dependencies and allows code to reason about
   * whether or not they are in a Worker, even if they never include the main
   * `ReactWorker` dependency.
   */
  var ExecutionEnvironment = {

    canUseDOM: canUseDOM,

    canUseWorkers: typeof Worker !== 'undefined',

    canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

    canUseViewport: canUseDOM && !!window.screen,

    isInWorker: !canUseDOM // For now, this is true - might change in the future.

  };

  module.exports = ExecutionEnvironment;

  /***/
},
/* 68 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (immutable) */
  __webpack_exports__["a"] = warning;
  /**
   * Prints a warning in the console if it exists.
   *
   * @param {String} message The warning message.
   * @returns {void}
   */
  function warning(message) {
    /* eslint-disable no-console */
    if (typeof console !== 'undefined' && typeof console.error === 'function') {
      console.error(message);
    }
    /* eslint-enable no-console */
    try {
      // This error was thrown as a convenience so that if you enable
      // "break on all exceptions" in your console,
      // it would pause the execution at this line.
      throw new Error(message);
      /* eslint-disable no-empty */
    } catch (e) {}
    /* eslint-enable no-empty */
  }

  /***/
},
/* 69 */
/***/function (module, exports) {

  module.exports = function (module) {
    if (!module.webpackPolyfill) {
      module.deprecate = function () {};
      module.paths = [];
      // module.parent = undefined by default
      if (!module.children) module.children = [];
      Object.defineProperty(module, "loaded", {
        enumerable: true,
        get: function get() {
          return module.l;
        }
      });
      Object.defineProperty(module, "id", {
        enumerable: true,
        get: function get() {
          return module.i;
        }
      });
      module.webpackPolyfill = 1;
    }
    return module;
  };

  /***/
},
/* 70 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "prefix", function () {
    return prefix;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_INSERT", function () {
    return ARRAY_INSERT;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_MOVE", function () {
    return ARRAY_MOVE;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_POP", function () {
    return ARRAY_POP;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_PUSH", function () {
    return ARRAY_PUSH;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_REMOVE", function () {
    return ARRAY_REMOVE;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_REMOVE_ALL", function () {
    return ARRAY_REMOVE_ALL;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_SHIFT", function () {
    return ARRAY_SHIFT;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_SPLICE", function () {
    return ARRAY_SPLICE;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_UNSHIFT", function () {
    return ARRAY_UNSHIFT;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "ARRAY_SWAP", function () {
    return ARRAY_SWAP;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "AUTOFILL", function () {
    return AUTOFILL;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "BLUR", function () {
    return BLUR;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "CHANGE", function () {
    return CHANGE;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "CLEAR_SUBMIT", function () {
    return CLEAR_SUBMIT;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "CLEAR_SUBMIT_ERRORS", function () {
    return CLEAR_SUBMIT_ERRORS;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "CLEAR_ASYNC_ERROR", function () {
    return CLEAR_ASYNC_ERROR;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "DESTROY", function () {
    return DESTROY;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "FOCUS", function () {
    return FOCUS;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "INITIALIZE", function () {
    return INITIALIZE;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "REGISTER_FIELD", function () {
    return REGISTER_FIELD;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "RESET", function () {
    return RESET;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "SET_SUBMIT_FAILED", function () {
    return SET_SUBMIT_FAILED;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "SET_SUBMIT_SUCCEEDED", function () {
    return SET_SUBMIT_SUCCEEDED;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "START_ASYNC_VALIDATION", function () {
    return START_ASYNC_VALIDATION;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "START_SUBMIT", function () {
    return START_SUBMIT;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "STOP_ASYNC_VALIDATION", function () {
    return STOP_ASYNC_VALIDATION;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "STOP_SUBMIT", function () {
    return STOP_SUBMIT;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "SUBMIT", function () {
    return SUBMIT;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "TOUCH", function () {
    return TOUCH;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "UNREGISTER_FIELD", function () {
    return UNREGISTER_FIELD;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "UNTOUCH", function () {
    return UNTOUCH;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "UPDATE_SYNC_ERRORS", function () {
    return UPDATE_SYNC_ERRORS;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "UPDATE_SYNC_WARNINGS", function () {
    return UPDATE_SYNC_WARNINGS;
  });
  var prefix = '@@redux-form/';

  var ARRAY_INSERT = prefix + 'ARRAY_INSERT';
  var ARRAY_MOVE = prefix + 'ARRAY_MOVE';
  var ARRAY_POP = prefix + 'ARRAY_POP';
  var ARRAY_PUSH = prefix + 'ARRAY_PUSH';
  var ARRAY_REMOVE = prefix + 'ARRAY_REMOVE';
  var ARRAY_REMOVE_ALL = prefix + 'ARRAY_REMOVE_ALL';
  var ARRAY_SHIFT = prefix + 'ARRAY_SHIFT';
  var ARRAY_SPLICE = prefix + 'ARRAY_SPLICE';
  var ARRAY_UNSHIFT = prefix + 'ARRAY_UNSHIFT';
  var ARRAY_SWAP = prefix + 'ARRAY_SWAP';
  var AUTOFILL = prefix + 'AUTOFILL';
  var BLUR = prefix + 'BLUR';
  var CHANGE = prefix + 'CHANGE';
  var CLEAR_SUBMIT = prefix + 'CLEAR_SUBMIT';
  var CLEAR_SUBMIT_ERRORS = prefix + 'CLEAR_SUBMIT_ERRORS';
  var CLEAR_ASYNC_ERROR = prefix + 'CLEAR_ASYNC_ERROR';
  var DESTROY = prefix + 'DESTROY';
  var FOCUS = prefix + 'FOCUS';
  var INITIALIZE = prefix + 'INITIALIZE';
  var REGISTER_FIELD = prefix + 'REGISTER_FIELD';
  var RESET = prefix + 'RESET';
  var SET_SUBMIT_FAILED = prefix + 'SET_SUBMIT_FAILED';
  var SET_SUBMIT_SUCCEEDED = prefix + 'SET_SUBMIT_SUCCEEDED';
  var START_ASYNC_VALIDATION = prefix + 'START_ASYNC_VALIDATION';
  var START_SUBMIT = prefix + 'START_SUBMIT';
  var STOP_ASYNC_VALIDATION = prefix + 'STOP_ASYNC_VALIDATION';
  var STOP_SUBMIT = prefix + 'STOP_SUBMIT';
  var SUBMIT = prefix + 'SUBMIT';
  var TOUCH = prefix + 'TOUCH';
  var UNREGISTER_FIELD = prefix + 'UNREGISTER_FIELD';
  var UNTOUCH = prefix + 'UNTOUCH';
  var UPDATE_SYNC_ERRORS = prefix + 'UPDATE_SYNC_ERRORS';
  var UPDATE_SYNC_WARNINGS = prefix + 'UPDATE_SYNC_WARNINGS';

  /***/
},
/* 71 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__mapCacheClear_js__ = __webpack_require__(271);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__mapCacheDelete_js__ = __webpack_require__(287);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__mapCacheGet_js__ = __webpack_require__(289);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__mapCacheHas_js__ = __webpack_require__(290);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__mapCacheSet_js__ = __webpack_require__(291);

  /**
   * Creates a map cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `MapCache`.
  MapCache.prototype.clear = __WEBPACK_IMPORTED_MODULE_0__mapCacheClear_js__["a" /* default */];
  MapCache.prototype['delete'] = __WEBPACK_IMPORTED_MODULE_1__mapCacheDelete_js__["a" /* default */];
  MapCache.prototype.get = __WEBPACK_IMPORTED_MODULE_2__mapCacheGet_js__["a" /* default */];
  MapCache.prototype.has = __WEBPACK_IMPORTED_MODULE_3__mapCacheHas_js__["a" /* default */];
  MapCache.prototype.set = __WEBPACK_IMPORTED_MODULE_4__mapCacheSet_js__["a" /* default */];

  /* harmony default export */__webpack_exports__["a"] = MapCache;

  /***/
},
/* 72 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(25);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isObject_js__ = __webpack_require__(13);

  /** `Object#toString` result references. */
  var asyncTag = '[object AsyncFunction]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      proxyTag = '[object Proxy]';

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction(value) {
    if (!Object(__WEBPACK_IMPORTED_MODULE_1__isObject_js__["a" /* default */])(value)) {
      return false;
    }
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = Object(__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__["a" /* default */])(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
  }

  /* harmony default export */__webpack_exports__["a"] = isFunction;

  /***/
},
/* 73 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getNative_js__ = __webpack_require__(18);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__root_js__ = __webpack_require__(5);

  /* Built-in method references that are verified to be native. */
  var Map = Object(__WEBPACK_IMPORTED_MODULE_0__getNative_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__root_js__["a" /* default */], 'Map');

  /* harmony default export */__webpack_exports__["a"] = Map;

  /***/
},
/* 74 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseIsEqualDeep_js__ = __webpack_require__(295);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__ = __webpack_require__(17);

  /**
   * The base implementation of `_.isEqual` which supports partial comparisons
   * and tracks traversed objects.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @param {boolean} bitmask The bitmask flags.
   *  1 - Unordered comparison
   *  2 - Partial comparison
   * @param {Function} [customizer] The function to customize comparisons.
   * @param {Object} [stack] Tracks traversed `value` and `other` objects.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   */
  function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || !Object(__WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__["a" /* default */])(value) && !Object(__WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__["a" /* default */])(other)) {
      return value !== value && other !== other;
    }
    return Object(__WEBPACK_IMPORTED_MODULE_0__baseIsEqualDeep_js__["a" /* default */])(value, other, bitmask, customizer, baseIsEqual, stack);
  }

  /* harmony default export */__webpack_exports__["a"] = baseIsEqual;

  /***/
},
/* 75 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__ListCache_js__ = __webpack_require__(50);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__stackClear_js__ = __webpack_require__(296);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__stackDelete_js__ = __webpack_require__(297);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__stackGet_js__ = __webpack_require__(298);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__stackHas_js__ = __webpack_require__(299);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__stackSet_js__ = __webpack_require__(300);

  /**
   * Creates a stack cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Stack(entries) {
    var data = this.__data__ = new __WEBPACK_IMPORTED_MODULE_0__ListCache_js__["a" /* default */](entries);
    this.size = data.size;
  }

  // Add methods to `Stack`.
  Stack.prototype.clear = __WEBPACK_IMPORTED_MODULE_1__stackClear_js__["a" /* default */];
  Stack.prototype['delete'] = __WEBPACK_IMPORTED_MODULE_2__stackDelete_js__["a" /* default */];
  Stack.prototype.get = __WEBPACK_IMPORTED_MODULE_3__stackGet_js__["a" /* default */];
  Stack.prototype.has = __WEBPACK_IMPORTED_MODULE_4__stackHas_js__["a" /* default */];
  Stack.prototype.set = __WEBPACK_IMPORTED_MODULE_5__stackSet_js__["a" /* default */];

  /* harmony default export */__webpack_exports__["a"] = Stack;

  /***/
},
/* 76 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__arrayLikeKeys_js__ = __webpack_require__(159);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__baseKeys_js__ = __webpack_require__(322);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isArrayLike_js__ = __webpack_require__(53);

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys(object) {
    return Object(__WEBPACK_IMPORTED_MODULE_2__isArrayLike_js__["a" /* default */])(object) ? Object(__WEBPACK_IMPORTED_MODULE_0__arrayLikeKeys_js__["a" /* default */])(object) : Object(__WEBPACK_IMPORTED_MODULE_1__baseKeys_js__["a" /* default */])(object);
  }

  /* harmony default export */__webpack_exports__["a"] = keys;

  /***/
},
/* 77 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseIsArguments_js__ = __webpack_require__(317);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__ = __webpack_require__(17);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Built-in value references. */
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;

  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  var isArguments = Object(__WEBPACK_IMPORTED_MODULE_0__baseIsArguments_js__["a" /* default */])(function () {
    return arguments;
  }()) ? __WEBPACK_IMPORTED_MODULE_0__baseIsArguments_js__["a" /* default */] : function (value) {
    return Object(__WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__["a" /* default */])(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
  };

  /* harmony default export */__webpack_exports__["a"] = isArguments;

  /***/
},
/* 78 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (module) {
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(5);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__stubFalse_js__ = __webpack_require__(318);

    /** Detect free variable `exports`. */
    var freeExports = (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) == 'object' && exports && !exports.nodeType && exports;

    /** Detect free variable `module`. */
    var freeModule = freeExports && (typeof module === "undefined" ? "undefined" : _typeof4(module)) == 'object' && module && !module.nodeType && module;

    /** Detect the popular CommonJS extension `module.exports`. */
    var moduleExports = freeModule && freeModule.exports === freeExports;

    /** Built-in value references. */
    var Buffer = moduleExports ? __WEBPACK_IMPORTED_MODULE_0__root_js__["a" /* default */].Buffer : undefined;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || __WEBPACK_IMPORTED_MODULE_1__stubFalse_js__["a" /* default */];

    /* harmony default export */__webpack_exports__["a"] = isBuffer;

    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(79)(module));

  /***/
},
/* 79 */
/***/function (module, exports) {

  module.exports = function (originalModule) {
    if (!originalModule.webpackPolyfill) {
      var module = Object.create(originalModule);
      // module.parent = undefined by default
      if (!module.children) module.children = [];
      Object.defineProperty(module, "loaded", {
        enumerable: true,
        get: function get() {
          return module.l;
        }
      });
      Object.defineProperty(module, "id", {
        enumerable: true,
        get: function get() {
          return module.i;
        }
      });
      Object.defineProperty(module, "exports", {
        enumerable: true
      });
      module.webpackPolyfill = 1;
    }
    return module;
  };

  /***/
},
/* 80 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /** Used as references for various `Number` constants. */

  var MAX_SAFE_INTEGER = 9007199254740991;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
  }

  /* harmony default export */__webpack_exports__["a"] = isIndex;

  /***/
},
/* 81 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseIsTypedArray_js__ = __webpack_require__(319);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__baseUnary_js__ = __webpack_require__(320);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__nodeUtil_js__ = __webpack_require__(321);

  /* Node.js helper references. */
  var nodeIsTypedArray = __WEBPACK_IMPORTED_MODULE_2__nodeUtil_js__["a" /* default */] && __WEBPACK_IMPORTED_MODULE_2__nodeUtil_js__["a" /* default */].isTypedArray;

  /**
   * Checks if `value` is classified as a typed array.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   * @example
   *
   * _.isTypedArray(new Uint8Array);
   * // => true
   *
   * _.isTypedArray([]);
   * // => false
   */
  var isTypedArray = nodeIsTypedArray ? Object(__WEBPACK_IMPORTED_MODULE_1__baseUnary_js__["a" /* default */])(nodeIsTypedArray) : __WEBPACK_IMPORTED_MODULE_0__baseIsTypedArray_js__["a" /* default */];

  /* harmony default export */__webpack_exports__["a"] = isTypedArray;

  /***/
},
/* 82 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /** Used as references for various `Number` constants. */

  var MAX_SAFE_INTEGER = 9007199254740991;

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  /* harmony default export */__webpack_exports__["a"] = isLength;

  /***/
},
/* 83 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /** Used for built-in method references. */

  var objectProto = Object.prototype;

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;

    return value === proto;
  }

  /* harmony default export */__webpack_exports__["a"] = isPrototype;

  /***/
},
/* 84 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isArray_js__ = __webpack_require__(6);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isSymbol_js__ = __webpack_require__(48);

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/;

  /**
   * Checks if `value` is a property name and not a property path.
   *
   * @private
   * @param {*} value The value to check.
   * @param {Object} [object] The object to query keys on.
   * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
   */
  function isKey(value, object) {
    if (Object(__WEBPACK_IMPORTED_MODULE_0__isArray_js__["a" /* default */])(value)) {
      return false;
    }
    var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
    if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || Object(__WEBPACK_IMPORTED_MODULE_1__isSymbol_js__["a" /* default */])(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
  }

  /* harmony default export */__webpack_exports__["a"] = isKey;

  /***/
},
/* 85 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * This method returns the first argument it receives.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Util
   * @param {*} value Any value.
   * @returns {*} Returns `value`.
   * @example
   *
   * var object = { 'a': 1 };
   *
   * console.log(_.identity(object) === object);
   * // => true
   */

  function identity(value) {
    return value;
  }

  /* harmony default export */__webpack_exports__["a"] = identity;

  /***/
},
/* 86 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__hasError__ = __webpack_require__(378);

  var createIsValid = function createIsValid(structure) {
    var getIn = structure.getIn,
        keys = structure.keys;

    var hasError = Object(__WEBPACK_IMPORTED_MODULE_0__hasError__["a" /* default */])(structure);
    return function (form, getFormState) {
      var ignoreSubmitErrors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        var formState = nonNullGetFormState(state);
        var syncError = getIn(formState, form + '.syncError');
        if (syncError) {
          return false;
        }
        if (!ignoreSubmitErrors) {
          var error = getIn(formState, form + '.error');
          if (error) {
            return false;
          }
        }
        var syncErrors = getIn(formState, form + '.syncErrors');
        var asyncErrors = getIn(formState, form + '.asyncErrors');
        var submitErrors = ignoreSubmitErrors ? undefined : getIn(formState, form + '.submitErrors');
        if (!syncErrors && !asyncErrors && !submitErrors) {
          return true;
        }

        var registeredFields = getIn(formState, form + '.registeredFields');
        if (!registeredFields) {
          return true;
        }

        return !keys(registeredFields).filter(function (name) {
          return getIn(registeredFields, '[\'' + name + '\'].count') > 0;
        }).some(function (name) {
          return hasError(getIn(registeredFields, '[\'' + name + '\']'), syncErrors, asyncErrors, submitErrors);
        });
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createIsValid;

  /***/
},
/* 87 */
/***/function (module, exports) {

  module.exports = isPromise;

  function isPromise(obj) {
    return !!obj && ((typeof obj === "undefined" ? "undefined" : _typeof4(obj)) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
  }

  /***/
},
/* 88 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _reduxDevtoolsInstrument = __webpack_require__(174);

  Object.defineProperty(exports, 'instrument', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_reduxDevtoolsInstrument).default;
    }
  });
  Object.defineProperty(exports, 'ActionCreators', {
    enumerable: true,
    get: function get() {
      return _reduxDevtoolsInstrument.ActionCreators;
    }
  });
  Object.defineProperty(exports, 'ActionTypes', {
    enumerable: true,
    get: function get() {
      return _reduxDevtoolsInstrument.ActionTypes;
    }
  });

  var _persistState = __webpack_require__(469);

  Object.defineProperty(exports, 'persistState', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_persistState).default;
    }
  });

  var _createDevTools = __webpack_require__(520);

  Object.defineProperty(exports, 'createDevTools', {
    enumerable: true,
    get: function get() {
      return _interopRequireDefault(_createDevTools).default;
    }
  });

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  /***/
},
/* 89 */
/***/function (module, exports, __webpack_require__) {

  var MapCache = __webpack_require__(90),
      setCacheAdd = __webpack_require__(449),
      setCacheHas = __webpack_require__(450);

  /**
   *
   * Creates an array cache object to store unique values.
   *
   * @private
   * @constructor
   * @param {Array} [values] The values to cache.
   */
  function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;

    this.__data__ = new MapCache();
    while (++index < length) {
      this.add(values[index]);
    }
  }

  // Add methods to `SetCache`.
  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;

  module.exports = SetCache;

  /***/
},
/* 90 */
/***/function (module, exports, __webpack_require__) {

  var mapCacheClear = __webpack_require__(426),
      mapCacheDelete = __webpack_require__(444),
      mapCacheGet = __webpack_require__(446),
      mapCacheHas = __webpack_require__(447),
      mapCacheSet = __webpack_require__(448);

  /**
   * Creates a map cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `MapCache`.
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype['delete'] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;

  module.exports = MapCache;

  /***/
},
/* 91 */
/***/function (module, exports) {

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject(value) {
    var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
    return value != null && (type == 'object' || type == 'function');
  }

  module.exports = isObject;

  /***/
},
/* 92 */
/***/function (module, exports, __webpack_require__) {

  var getNative = __webpack_require__(19),
      root = __webpack_require__(9);

  /* Built-in method references that are verified to be native. */
  var Map = getNative(root, 'Map');

  module.exports = Map;

  /***/
},
/* 93 */
/***/function (module, exports) {

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  module.exports = cacheHas;

  /***/
},
/* 94 */
/***/function (module, exports, __webpack_require__) {

  var baseIsArguments = __webpack_require__(456),
      isObjectLike = __webpack_require__(20);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Built-in value references. */
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;

  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  var isArguments = baseIsArguments(function () {
    return arguments;
  }()) ? baseIsArguments : function (value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');
  };

  module.exports = isArguments;

  /***/
},
/* 95 */
/***/function (module, exports) {

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  module.exports = isLength;

  /***/
},
/* 96 */
/***/function (module, exports) {

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function (value) {
      result[++index] = value;
    });
    return result;
  }

  module.exports = setToArray;

  /***/
},
/* 97 */
/***/function (module, exports, __webpack_require__) {

  var arrayLikeKeys = __webpack_require__(475),
      baseKeys = __webpack_require__(480),
      isArrayLike = __webpack_require__(188);

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }

  module.exports = keys;

  /***/
},
/* 98 */
/***/function (module, exports, __webpack_require__) {

  var isArray = __webpack_require__(10),
      isSymbol = __webpack_require__(99);

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/;

  /**
   * Checks if `value` is a property name and not a property path.
   *
   * @private
   * @param {*} value The value to check.
   * @param {Object} [object] The object to query keys on.
   * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
   */
  function isKey(value, object) {
    if (isArray(value)) {
      return false;
    }
    var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
    if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
  }

  module.exports = isKey;

  /***/
},
/* 99 */
/***/function (module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(26),
      isObjectLike = __webpack_require__(20);

  /** `Object#toString` result references. */
  var symbolTag = '[object Symbol]';

  /**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */
  function isSymbol(value) {
    return (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;
  }

  module.exports = isSymbol;

  /***/
},
/* 100 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  exports.default = function (instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  };

  /***/
},
/* 101 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _typeof2 = __webpack_require__(102);

  var _typeof3 = _interopRequireDefault(_typeof2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = function (self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
  };

  /***/
},
/* 102 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _iterator = __webpack_require__(204);

  var _iterator2 = _interopRequireDefault(_iterator);

  var _symbol = __webpack_require__(582);

  var _symbol2 = _interopRequireDefault(_symbol);

  var _typeof = typeof _symbol2.default === "function" && _typeof4(_iterator2.default) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  } : function (obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  };

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof(obj);
  } : function (obj) {
    return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
  };

  /***/
},
/* 103 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  var $at = __webpack_require__(570)(true);

  // 21.1.3.27 String.prototype[@@iterator]()
  __webpack_require__(205)(String, 'String', function (iterated) {
    this._t = String(iterated); // target
    this._i = 0; // next index
    // 21.1.5.2.1 %StringIteratorPrototype%.next()
  }, function () {
    var O = this._t;
    var index = this._i;
    var point;
    if (index >= O.length) return { value: undefined, done: true };
    point = $at(O, index);
    this._i += point.length;
    return { value: point, done: false };
  });

  /***/
},
/* 104 */
/***/function (module, exports) {

  // 7.1.4 ToInteger
  var ceil = Math.ceil;
  var floor = Math.floor;
  module.exports = function (it) {
    return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
  };

  /***/
},
/* 105 */
/***/function (module, exports) {

  // 7.2.1 RequireObjectCoercible(argument)
  module.exports = function (it) {
    if (it == undefined) throw TypeError("Can't call method on  " + it);
    return it;
  };

  /***/
},
/* 106 */
/***/function (module, exports) {

  module.exports = true;

  /***/
},
/* 107 */
/***/function (module, exports, __webpack_require__) {

  // 7.1.1 ToPrimitive(input [, PreferredType])
  var isObject = __webpack_require__(30);
  // instead of the ES6 spec version, we didn't implement @@toPrimitive case
  // and the second argument - flag - preferred type is a string
  module.exports = function (it, S) {
    if (!isObject(it)) return it;
    var fn, val;
    if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
    if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
    throw TypeError("Can't convert object to primitive value");
  };

  /***/
},
/* 108 */
/***/function (module, exports, __webpack_require__) {

  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  var anObject = __webpack_require__(29);
  var dPs = __webpack_require__(573);
  var enumBugKeys = __webpack_require__(112);
  var IE_PROTO = __webpack_require__(110)('IE_PROTO');
  var Empty = function Empty() {/* empty */};
  var PROTOTYPE = 'prototype';

  // Create object with fake `null` prototype: use iframe Object with cleared prototype
  var _createDict = function createDict() {
    // Thrash, waste and sodomy: IE GC bug
    var iframe = __webpack_require__(208)('iframe');
    var i = enumBugKeys.length;
    var lt = '<';
    var gt = '>';
    var iframeDocument;
    iframe.style.display = 'none';
    __webpack_require__(577).appendChild(iframe);
    iframe.src = 'javascript:'; // eslint-disable-line no-script-url
    // createDict = iframe.contentWindow.Object;
    // html.removeChild(iframe);
    iframeDocument = iframe.contentWindow.document;
    iframeDocument.open();
    iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
    iframeDocument.close();
    _createDict = iframeDocument.F;
    while (i--) {
      delete _createDict[PROTOTYPE][enumBugKeys[i]];
    }return _createDict();
  };

  module.exports = Object.create || function create(O, Properties) {
    var result;
    if (O !== null) {
      Empty[PROTOTYPE] = anObject(O);
      result = new Empty();
      Empty[PROTOTYPE] = null;
      // add "__proto__" for Object.getPrototypeOf polyfill
      result[IE_PROTO] = O;
    } else result = _createDict();
    return Properties === undefined ? result : dPs(result, Properties);
  };

  /***/
},
/* 109 */
/***/function (module, exports) {

  var toString = {}.toString;

  module.exports = function (it) {
    return toString.call(it).slice(8, -1);
  };

  /***/
},
/* 110 */
/***/function (module, exports, __webpack_require__) {

  var shared = __webpack_require__(111)('keys');
  var uid = __webpack_require__(62);
  module.exports = function (key) {
    return shared[key] || (shared[key] = uid(key));
  };

  /***/
},
/* 111 */
/***/function (module, exports, __webpack_require__) {

  var global = __webpack_require__(14);
  var SHARED = '__core-js_shared__';
  var store = global[SHARED] || (global[SHARED] = {});
  module.exports = function (key) {
    return store[key] || (store[key] = {});
  };

  /***/
},
/* 112 */
/***/function (module, exports) {

  // IE 8- don't enum bug keys
  module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');

  /***/
},
/* 113 */
/***/function (module, exports, __webpack_require__) {

  var def = __webpack_require__(28).f;
  var has = __webpack_require__(22);
  var TAG = __webpack_require__(11)('toStringTag');

  module.exports = function (it, tag, stat) {
    if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
  };

  /***/
},
/* 114 */
/***/function (module, exports, __webpack_require__) {

  // 7.1.13 ToObject(argument)
  var defined = __webpack_require__(105);
  module.exports = function (it) {
    return Object(defined(it));
  };

  /***/
},
/* 115 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(579);
  var global = __webpack_require__(14);
  var hide = __webpack_require__(27);
  var Iterators = __webpack_require__(41);
  var TO_STRING_TAG = __webpack_require__(11)('toStringTag');

  var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' + 'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' + 'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' + 'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' + 'TextTrackList,TouchList').split(',');

  for (var i = 0; i < DOMIterables.length; i++) {
    var NAME = DOMIterables[i];
    var Collection = global[NAME];
    var proto = Collection && Collection.prototype;
    if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = Iterators.Array;
  }

  /***/
},
/* 116 */
/***/function (module, exports, __webpack_require__) {

  exports.f = __webpack_require__(11);

  /***/
},
/* 117 */
/***/function (module, exports, __webpack_require__) {

  var global = __webpack_require__(14);
  var core = __webpack_require__(4);
  var LIBRARY = __webpack_require__(106);
  var wksExt = __webpack_require__(116);
  var defineProperty = __webpack_require__(28).f;
  module.exports = function (name) {
    var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
    if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
  };

  /***/
},
/* 118 */
/***/function (module, exports) {

  exports.f = Object.getOwnPropertySymbols;

  /***/
},
/* 119 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _setPrototypeOf = __webpack_require__(591);

  var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

  var _create = __webpack_require__(595);

  var _create2 = _interopRequireDefault(_create);

  var _typeof2 = __webpack_require__(102);

  var _typeof3 = _interopRequireDefault(_typeof2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = function (subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
    }

    subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
  };

  /***/
},
/* 120 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = undefined;

  var _keys = __webpack_require__(64);

  var _keys2 = _interopRequireDefault(_keys);

  var _classCallCheck2 = __webpack_require__(100);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _possibleConstructorReturn2 = __webpack_require__(101);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = __webpack_require__(119);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _class, _temp;

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _JSONArrow = __webpack_require__(218);

  var _JSONArrow2 = _interopRequireDefault(_JSONArrow);

  var _getCollectionEntries = __webpack_require__(608);

  var _getCollectionEntries2 = _interopRequireDefault(_getCollectionEntries);

  var _JSONNode = __webpack_require__(216);

  var _JSONNode2 = _interopRequireDefault(_JSONNode);

  var _ItemRange = __webpack_require__(612);

  var _ItemRange2 = _interopRequireDefault(_ItemRange);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  /**
   * Renders nested values (eg. objects, arrays, lists, etc.)
   */

  function renderChildNodes(props, from, to) {
    var nodeType = props.nodeType,
        data = props.data,
        collectionLimit = props.collectionLimit,
        circularCache = props.circularCache,
        keyPath = props.keyPath,
        postprocessValue = props.postprocessValue,
        sortObjectKeys = props.sortObjectKeys;

    var childNodes = [];

    (0, _getCollectionEntries2['default'])(nodeType, data, sortObjectKeys, collectionLimit, from, to).forEach(function (entry) {
      if (entry.to) {
        childNodes.push(_react2['default'].createElement(_ItemRange2['default'], (0, _extends3['default'])({}, props, {
          key: 'ItemRange--' + entry.from + '-' + entry.to,
          from: entry.from,
          to: entry.to,
          renderChildNodes: renderChildNodes
        })));
      } else {
        var key = entry.key,
            value = entry.value;

        var isCircular = circularCache.indexOf(value) !== -1;

        var node = _react2['default'].createElement(_JSONNode2['default'], (0, _extends3['default'])({}, props, { postprocessValue: postprocessValue, collectionLimit: collectionLimit }, {
          key: 'Node--' + key,
          keyPath: [key].concat(keyPath),
          value: postprocessValue(value),
          circularCache: [].concat(circularCache, [value]),
          isCircular: isCircular,
          hideRoot: false
        }));

        if (node !== false) {
          childNodes.push(node);
        }
      }
    });

    return childNodes;
  }

  function getStateFromProps(props) {
    // calculate individual node expansion if necessary
    var expanded = props.shouldExpandNode && !props.isCircular ? props.shouldExpandNode(props.keyPath, props.data, props.level) : false;
    return {
      expanded: expanded
    };
  }

  var JSONNestedNode = (_temp = _class = function (_React$Component) {
    (0, _inherits3['default'])(JSONNestedNode, _React$Component);

    function JSONNestedNode(props) {
      (0, _classCallCheck3['default'])(this, JSONNestedNode);

      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));

      _this.handleClick = function () {
        return _this.setState({ expanded: !_this.state.expanded });
      };

      _this.state = getStateFromProps(props);
      return _this;
    }

    JSONNestedNode.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var nextState = getStateFromProps(nextProps);
      if (getStateFromProps(this.props).expanded !== nextState.expanded) {
        this.setState(nextState);
      }
    };

    JSONNestedNode.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
      var _this2 = this;

      return !!(0, _keys2['default'])(nextProps).find(function (key) {
        return key !== 'circularCache' && (key === 'keyPath' ? nextProps[key].join('/') !== _this2.props[key].join('/') : nextProps[key] !== _this2.props[key]);
      }) || nextState.expanded !== this.state.expanded;
    };

    JSONNestedNode.prototype.render = function render() {
      var _props = this.props,
          getItemString = _props.getItemString,
          nodeTypeIndicator = _props.nodeTypeIndicator,
          nodeType = _props.nodeType,
          data = _props.data,
          hideRoot = _props.hideRoot,
          createItemString = _props.createItemString,
          styling = _props.styling,
          collectionLimit = _props.collectionLimit,
          keyPath = _props.keyPath,
          labelRenderer = _props.labelRenderer,
          expandable = _props.expandable;
      var expanded = this.state.expanded;

      var renderedChildren = expanded || hideRoot && this.props.level === 0 ? renderChildNodes((0, _extends3['default'])({}, this.props, { level: this.props.level + 1 })) : null;

      var itemType = _react2['default'].createElement('span', styling('nestedNodeItemType', expanded), nodeTypeIndicator);
      var renderedItemString = getItemString(nodeType, data, itemType, createItemString(data, collectionLimit));
      var stylingArgs = [keyPath, nodeType, expanded, expandable];

      return hideRoot ? _react2['default'].createElement('li', styling.apply(undefined, ['rootNode'].concat(stylingArgs)), _react2['default'].createElement('ul', styling.apply(undefined, ['rootNodeChildren'].concat(stylingArgs)), renderedChildren)) : _react2['default'].createElement('li', styling.apply(undefined, ['nestedNode'].concat(stylingArgs)), expandable && _react2['default'].createElement(_JSONArrow2['default'], {
        styling: styling,
        nodeType: nodeType,
        expanded: expanded,
        onClick: this.handleClick
      }), _react2['default'].createElement('label', (0, _extends3['default'])({}, styling.apply(undefined, [['label', 'nestedNodeLabel']].concat(stylingArgs)), {
        onClick: expandable && this.handleClick
      }), labelRenderer.apply(undefined, stylingArgs)), _react2['default'].createElement('span', (0, _extends3['default'])({}, styling.apply(undefined, ['nestedNodeItemString'].concat(stylingArgs)), {
        onClick: expandable && this.handleClick
      }), renderedItemString), _react2['default'].createElement('ul', styling.apply(undefined, ['nestedNodeChildren'].concat(stylingArgs)), renderedChildren));
    };

    return JSONNestedNode;
  }(_react2['default'].Component), _class.propTypes = {
    getItemString: _propTypes2['default'].func.isRequired,
    nodeTypeIndicator: _propTypes2['default'].any,
    nodeType: _propTypes2['default'].string.isRequired,
    data: _propTypes2['default'].any,
    hideRoot: _propTypes2['default'].bool.isRequired,
    createItemString: _propTypes2['default'].func.isRequired,
    styling: _propTypes2['default'].func.isRequired,
    collectionLimit: _propTypes2['default'].number,
    keyPath: _propTypes2['default'].arrayOf(_propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number])).isRequired,
    labelRenderer: _propTypes2['default'].func.isRequired,
    shouldExpandNode: _propTypes2['default'].func,
    level: _propTypes2['default'].number.isRequired,
    sortObjectKeys: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].bool]),
    isCircular: _propTypes2['default'].bool,
    expandable: _propTypes2['default'].bool
  }, _class.defaultProps = {
    data: [],
    circularCache: [],
    level: 0,
    expandable: true
  }, _temp);
  exports['default'] = JSONNestedNode;

  /***/
},
/* 121 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(609), __esModule: true };

  /***/
},
/* 122 */
/***/function (module, exports) {

  function clamp(val, min, max) {
    return Math.min(Math.max(val, min), max);
  }

  module.exports = clamp;

  /***/
},
/* 123 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {

    /**
     * Copyright (c) 2013-present, Facebook, Inc.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     *
     * @typechecks
     */

    var emptyFunction = __webpack_require__(12);

    /**
     * Upstream version of event listener. Does not take into account specific
     * nature of platform.
     */
    var EventListener = {
      /**
       * Listen to DOM events during the bubble phase.
       *
       * @param {DOMEventTarget} target DOM element to register listener on.
       * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
       * @param {function} callback Callback function.
       * @return {object} Object with a `remove` method.
       */
      listen: function listen(target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, false);
          return {
            remove: function remove() {
              target.removeEventListener(eventType, callback, false);
            }
          };
        } else if (target.attachEvent) {
          target.attachEvent('on' + eventType, callback);
          return {
            remove: function remove() {
              target.detachEvent('on' + eventType, callback);
            }
          };
        }
      },

      /**
       * Listen to DOM events during the capture phase.
       *
       * @param {DOMEventTarget} target DOM element to register listener on.
       * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
       * @param {function} callback Callback function.
       * @return {object} Object with a `remove` method.
       */
      capture: function capture(target, eventType, callback) {
        if (target.addEventListener) {
          target.addEventListener(eventType, callback, true);
          return {
            remove: function remove() {
              target.removeEventListener(eventType, callback, true);
            }
          };
        } else {
          if (undefined !== 'production') {
            console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
          }
          return {
            remove: emptyFunction
          };
        }
      },

      registerDefault: function registerDefault() {}
    };

    module.exports = EventListener;
    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 124 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   * 
   */

  /*eslint-disable no-self-compare */

  var hasOwnProperty = Object.prototype.hasOwnProperty;

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      // Added the nonzero y check to make Flow happy, but it is redundant
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }

  /**
   * Performs equality by iterating through keys on an object and returning false
   * when any key has values which are not strictly equal between the arguments.
   * Returns true when the values of all keys are strictly equal.
   */
  function shallowEqual(objA, objB) {
    if (is(objA, objB)) {
      return true;
    }

    if ((typeof objA === "undefined" ? "undefined" : _typeof4(objA)) !== 'object' || objA === null || (typeof objB === "undefined" ? "undefined" : _typeof4(objB)) !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    }

    // Test for A's keys different from B.
    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }

    return true;
  }

  module.exports = shallowEqual;

  /***/
},
/* 125 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * 
   */

  var isTextNode = __webpack_require__(229);

  /*eslint-disable no-bitwise */

  /**
   * Checks if a given DOM node contains or is another DOM node.
   */
  function containsNode(outerNode, innerNode) {
    if (!outerNode || !innerNode) {
      return false;
    } else if (outerNode === innerNode) {
      return true;
    } else if (isTextNode(outerNode)) {
      return false;
    } else if (isTextNode(innerNode)) {
      return containsNode(outerNode, innerNode.parentNode);
    } else if ('contains' in outerNode) {
      return outerNode.contains(innerNode);
    } else if (outerNode.compareDocumentPosition) {
      return !!(outerNode.compareDocumentPosition(innerNode) & 16);
    } else {
      return false;
    }
  }

  module.exports = containsNode;

  /***/
},
/* 126 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */

  /**
   * @param {DOMElement} node input/textarea to focus
   */

  function focusNode(node) {
    // IE8 can throw "Can't move focus to the control because it is invisible,
    // not enabled, or of a type that does not accept the focus." for all kinds of
    // reasons that are too expensive and fragile to test.
    try {
      node.focus();
    } catch (e) {}
  }

  module.exports = focusNode;

  /***/
},
/* 127 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  /* eslint-disable fb-www/typeof-undefined */

  /**
   * Same as document.activeElement but wraps in a try-catch block. In IE it is
   * not safe to call document.activeElement if there is nothing focused.
   *
   * The activeElement will be null only if the document or document body is not
   * yet defined.
   *
   * @param {?DOMDocument} doc Defaults to current document.
   * @return {?DOMElement}
   */

  function getActiveElement(doc) /*?DOMElement*/{
    doc = doc || (typeof document !== 'undefined' ? document : undefined);
    if (typeof doc === 'undefined') {
      return null;
    }
    try {
      return doc.activeElement || doc.body;
    } catch (e) {
      return doc.body;
    }
  }

  module.exports = getActiveElement;

  /***/
},
/* 128 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (binding) */
  __webpack_require__.d(__webpack_exports__, "b", function () {
    return subscriptionShape;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "a", function () {
    return storeShape;
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_prop_types__);

  var subscriptionShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape({
    trySubscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
    tryUnsubscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
    notifyNestedSubs: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
    isSubscribed: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired
  });

  var storeShape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape({
    subscribe: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
    dispatch: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired,
    getState: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func.isRequired
  });

  /***/
},
/* 129 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /* harmony export (immutable) */__webpack_exports__["a"] = connectAdvanced;
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__ = __webpack_require__(130);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics__);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_invariant__ = __webpack_require__(23);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_invariant__);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_react__ = __webpack_require__(0);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_react__);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__ = __webpack_require__(241);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__ = __webpack_require__(128);
    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }return target;
    };

    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
      }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    function _objectWithoutProperties(obj, keys) {
      var target = {};for (var i in obj) {
        if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
      }return target;
    }

    var hotReloadingVersion = 0;
    var dummyState = {};
    function noop() {}
    function makeSelectorStateful(sourceSelector, store) {
      // wrap the selector in an object that tracks its results between runs.
      var selector = {
        run: function runComponentSelector(props) {
          try {
            var nextProps = sourceSelector(store.getState(), props);
            if (nextProps !== selector.props || selector.error) {
              selector.shouldComponentUpdate = true;
              selector.props = nextProps;
              selector.error = null;
            }
          } catch (error) {
            selector.shouldComponentUpdate = true;
            selector.error = error;
          }
        }
      };

      return selector;
    }

    function connectAdvanced(
    /*
      selectorFactory is a func that is responsible for returning the selector function used to
      compute new props from state, props, and dispatch. For example:
         export default connectAdvanced((dispatch, options) => (state, props) => ({
          thing: state.things[props.thingId],
          saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),
        }))(YourComponent)
       Access to dispatch is provided to the factory so selectorFactories can bind actionCreators
      outside of their selector as an optimization. Options passed to connectAdvanced are passed to
      the selectorFactory, along with displayName and WrappedComponent, as the second argument.
       Note that selectorFactory is responsible for all caching/memoization of inbound and outbound
      props. Do not use connectAdvanced directly without memoizing results between calls to your
      selector, otherwise the Connect component will re-render on every state or props change.
    */
    selectorFactory) {
      var _contextTypes, _childContextTypes;

      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref$getDisplayName = _ref.getDisplayName,
          getDisplayName = _ref$getDisplayName === undefined ? function (name) {
        return 'ConnectAdvanced(' + name + ')';
      } : _ref$getDisplayName,
          _ref$methodName = _ref.methodName,
          methodName = _ref$methodName === undefined ? 'connectAdvanced' : _ref$methodName,
          _ref$renderCountProp = _ref.renderCountProp,
          renderCountProp = _ref$renderCountProp === undefined ? undefined : _ref$renderCountProp,
          _ref$shouldHandleStat = _ref.shouldHandleStateChanges,
          shouldHandleStateChanges = _ref$shouldHandleStat === undefined ? true : _ref$shouldHandleStat,
          _ref$storeKey = _ref.storeKey,
          storeKey = _ref$storeKey === undefined ? 'store' : _ref$storeKey,
          _ref$withRef = _ref.withRef,
          withRef = _ref$withRef === undefined ? false : _ref$withRef,
          connectOptions = _objectWithoutProperties(_ref, ['getDisplayName', 'methodName', 'renderCountProp', 'shouldHandleStateChanges', 'storeKey', 'withRef']);

      var subscriptionKey = storeKey + 'Subscription';
      var version = hotReloadingVersion++;

      var contextTypes = (_contextTypes = {}, _contextTypes[storeKey] = __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__["a" /* storeShape */], _contextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__["b" /* subscriptionShape */], _contextTypes);
      var childContextTypes = (_childContextTypes = {}, _childContextTypes[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_4__utils_PropTypes__["b" /* subscriptionShape */], _childContextTypes);

      return function wrapWithConnect(WrappedComponent) {
        __WEBPACK_IMPORTED_MODULE_1_invariant___default()(typeof WrappedComponent == 'function', 'You must pass a component to the function returned by ' + ('connect. Instead received ' + JSON.stringify(WrappedComponent)));

        var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';

        var displayName = getDisplayName(wrappedComponentName);

        var selectorFactoryOptions = _extends({}, connectOptions, {
          getDisplayName: getDisplayName,
          methodName: methodName,
          renderCountProp: renderCountProp,
          shouldHandleStateChanges: shouldHandleStateChanges,
          storeKey: storeKey,
          withRef: withRef,
          displayName: displayName,
          wrappedComponentName: wrappedComponentName,
          WrappedComponent: WrappedComponent
        });

        var Connect = function (_Component) {
          _inherits(Connect, _Component);

          function Connect(props, context) {
            _classCallCheck(this, Connect);

            var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

            _this.version = version;
            _this.state = {};
            _this.renderCount = 0;
            _this.store = props[storeKey] || context[storeKey];
            _this.propsMode = Boolean(props[storeKey]);
            _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);

            __WEBPACK_IMPORTED_MODULE_1_invariant___default()(_this.store, 'Could not find "' + storeKey + '" in either the context or props of ' + ('"' + displayName + '". Either wrap the root component in a <Provider>, ') + ('or explicitly pass "' + storeKey + '" as a prop to "' + displayName + '".'));

            _this.initSelector();
            _this.initSubscription();
            return _this;
          }

          Connect.prototype.getChildContext = function getChildContext() {
            var _ref2;

            // If this component received store from props, its subscription should be transparent
            // to any descendants receiving store+subscription from context; it passes along
            // subscription passed to it. Otherwise, it shadows the parent subscription, which allows
            // Connect to control ordering of notifications to flow top-down.
            var subscription = this.propsMode ? null : this.subscription;
            return _ref2 = {}, _ref2[subscriptionKey] = subscription || this.context[subscriptionKey], _ref2;
          };

          Connect.prototype.componentDidMount = function componentDidMount() {
            if (!shouldHandleStateChanges) return;

            // componentWillMount fires during server side rendering, but componentDidMount and
            // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.
            // Otherwise, unsubscription would never take place during SSR, causing a memory leak.
            // To handle the case where a child component may have triggered a state change by
            // dispatching an action in its componentWillMount, we have to re-run the select and maybe
            // re-render.
            this.subscription.trySubscribe();
            this.selector.run(this.props);
            if (this.selector.shouldComponentUpdate) this.forceUpdate();
          };

          Connect.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
            this.selector.run(nextProps);
          };

          Connect.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
            return this.selector.shouldComponentUpdate;
          };

          Connect.prototype.componentWillUnmount = function componentWillUnmount() {
            if (this.subscription) this.subscription.tryUnsubscribe();
            this.subscription = null;
            this.notifyNestedSubs = noop;
            this.store = null;
            this.selector.run = noop;
            this.selector.shouldComponentUpdate = false;
          };

          Connect.prototype.getWrappedInstance = function getWrappedInstance() {
            __WEBPACK_IMPORTED_MODULE_1_invariant___default()(withRef, 'To access the wrapped instance, you need to specify ' + ('{ withRef: true } in the options argument of the ' + methodName + '() call.'));
            return this.wrappedInstance;
          };

          Connect.prototype.setWrappedInstance = function setWrappedInstance(ref) {
            this.wrappedInstance = ref;
          };

          Connect.prototype.initSelector = function initSelector() {
            var sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions);
            this.selector = makeSelectorStateful(sourceSelector, this.store);
            this.selector.run(this.props);
          };

          Connect.prototype.initSubscription = function initSubscription() {
            if (!shouldHandleStateChanges) return;

            // parentSub's source should match where store came from: props vs. context. A component
            // connected to the store via props shouldn't use subscription from context, or vice versa.
            var parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey];
            this.subscription = new __WEBPACK_IMPORTED_MODULE_3__utils_Subscription__["a" /* default */](this.store, parentSub, this.onStateChange.bind(this));

            // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in
            // the middle of the notification loop, where `this.subscription` will then be null. An
            // extra null check every change can be avoided by copying the method onto `this` and then
            // replacing it with a no-op on unmount. This can probably be avoided if Subscription's
            // listeners logic is changed to not call listeners that have been unsubscribed in the
            // middle of the notification loop.
            this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription);
          };

          Connect.prototype.onStateChange = function onStateChange() {
            this.selector.run(this.props);

            if (!this.selector.shouldComponentUpdate) {
              this.notifyNestedSubs();
            } else {
              this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate;
              this.setState(dummyState);
            }
          };

          Connect.prototype.notifyNestedSubsOnComponentDidUpdate = function notifyNestedSubsOnComponentDidUpdate() {
            // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it
            // needs to notify nested subs. Once called, it unimplements itself until further state
            // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does
            // a boolean check every time avoids an extra method call most of the time, resulting
            // in some perf boost.
            this.componentDidUpdate = undefined;
            this.notifyNestedSubs();
          };

          Connect.prototype.isSubscribed = function isSubscribed() {
            return Boolean(this.subscription) && this.subscription.isSubscribed();
          };

          Connect.prototype.addExtraProps = function addExtraProps(props) {
            if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props;
            // make a shallow copy so that fields added don't leak to the original selector.
            // this is especially important for 'ref' since that's a reference back to the component
            // instance. a singleton memoized selector would then be holding a reference to the
            // instance, preventing the instance from being garbage collected, and that would be bad
            var withExtras = _extends({}, props);
            if (withRef) withExtras.ref = this.setWrappedInstance;
            if (renderCountProp) withExtras[renderCountProp] = this.renderCount++;
            if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription;
            return withExtras;
          };

          Connect.prototype.render = function render() {
            var selector = this.selector;
            selector.shouldComponentUpdate = false;

            if (selector.error) {
              throw selector.error;
            } else {
              return Object(__WEBPACK_IMPORTED_MODULE_2_react__["createElement"])(WrappedComponent, this.addExtraProps(selector.props));
            }
          };

          return Connect;
        }(__WEBPACK_IMPORTED_MODULE_2_react__["Component"]);

        Connect.WrappedComponent = WrappedComponent;
        Connect.displayName = displayName;
        Connect.childContextTypes = childContextTypes;
        Connect.contextTypes = contextTypes;
        Connect.propTypes = contextTypes;

        if (undefined !== 'production') {
          Connect.prototype.componentWillUpdate = function componentWillUpdate() {
            var _this2 = this;

            // We are hot reloading!
            if (this.version !== version) {
              this.version = version;
              this.initSelector();

              // If any connected descendants don't hot reload (and resubscribe in the process), their
              // listeners will be lost when we unsubscribe. Unfortunately, by copying over all
              // listeners, this does mean that the old versions of connected descendants will still be
              // notified of state changes; however, their onStateChange function is a no-op so this
              // isn't a huge deal.
              var oldListeners = [];

              if (this.subscription) {
                oldListeners = this.subscription.listeners.get();
                this.subscription.tryUnsubscribe();
              }
              this.initSubscription();
              if (shouldHandleStateChanges) {
                this.subscription.trySubscribe();
                oldListeners.forEach(function (listener) {
                  return _this2.subscription.listeners.subscribe(listener);
                });
              }
            }
          };
        }

        return __WEBPACK_IMPORTED_MODULE_0_hoist_non_react_statics___default()(Connect, WrappedComponent);
      };
    }
    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(3));

  /***/
},
/* 130 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /**
   * Copyright 2015, Yahoo! Inc.
   * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
   */

  var REACT_STATICS = {
    childContextTypes: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    mixins: true,
    propTypes: true,
    type: true
  };

  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true
  };

  var defineProperty = Object.defineProperty;
  var getOwnPropertyNames = Object.getOwnPropertyNames;
  var getOwnPropertySymbols = Object.getOwnPropertySymbols;
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var getPrototypeOf = Object.getPrototypeOf;
  var objectPrototype = getPrototypeOf && getPrototypeOf(Object);

  module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      // don't hoist over string (html) components

      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent);
        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
        }
      }

      var keys = getOwnPropertyNames(sourceComponent);

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent));
      }

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i];
        if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
          try {
            // Avoid failures from read-only properties
            defineProperty(targetComponent, key, descriptor);
          } catch (e) {}
        }
      }

      return targetComponent;
    }

    return targetComponent;
  };

  /***/
},
/* 131 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (binding) */
  __webpack_require__.d(__webpack_exports__, "a", function () {
    return ActionTypes;
  });
  /* harmony export (immutable) */__webpack_exports__["b"] = createStore;
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(45);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_symbol_observable__ = __webpack_require__(135);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_symbol_observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_symbol_observable__);

  /**
   * These are private action types reserved by Redux.
   * For any unknown actions, you must return the current state.
   * If the current state is undefined, you must return the initial state.
   * Do not reference these action types directly in your code.
   */
  var ActionTypes = {
    INIT: '@@redux/INIT'

    /**
     * Creates a Redux store that holds the state tree.
     * The only way to change the data in the store is to call `dispatch()` on it.
     *
     * There should only be a single store in your app. To specify how different
     * parts of the state tree respond to actions, you may combine several reducers
     * into a single reducer function by using `combineReducers`.
     *
     * @param {Function} reducer A function that returns the next state tree, given
     * the current state tree and the action to handle.
     *
     * @param {any} [preloadedState] The initial state. You may optionally specify it
     * to hydrate the state from the server in universal apps, or to restore a
     * previously serialized user session.
     * If you use `combineReducers` to produce the root reducer function, this must be
     * an object with the same shape as `combineReducers` keys.
     *
     * @param {Function} [enhancer] The store enhancer. You may optionally specify it
     * to enhance the store with third-party capabilities such as middleware,
     * time travel, persistence, etc. The only store enhancer that ships with Redux
     * is `applyMiddleware()`.
     *
     * @returns {Store} A Redux store that lets you read the state, dispatch actions
     * and subscribe to changes.
     */
  };function createStore(reducer, preloadedState, enhancer) {
    var _ref2;

    if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
      enhancer = preloadedState;
      preloadedState = undefined;
    }

    if (typeof enhancer !== 'undefined') {
      if (typeof enhancer !== 'function') {
        throw new Error('Expected the enhancer to be a function.');
      }

      return enhancer(createStore)(reducer, preloadedState);
    }

    if (typeof reducer !== 'function') {
      throw new Error('Expected the reducer to be a function.');
    }

    var currentReducer = reducer;
    var currentState = preloadedState;
    var currentListeners = [];
    var nextListeners = currentListeners;
    var isDispatching = false;

    function ensureCanMutateNextListeners() {
      if (nextListeners === currentListeners) {
        nextListeners = currentListeners.slice();
      }
    }

    /**
     * Reads the state tree managed by the store.
     *
     * @returns {any} The current state tree of your application.
     */
    function getState() {
      return currentState;
    }

    /**
     * Adds a change listener. It will be called any time an action is dispatched,
     * and some part of the state tree may potentially have changed. You may then
     * call `getState()` to read the current state tree inside the callback.
     *
     * You may call `dispatch()` from a change listener, with the following
     * caveats:
     *
     * 1. The subscriptions are snapshotted just before every `dispatch()` call.
     * If you subscribe or unsubscribe while the listeners are being invoked, this
     * will not have any effect on the `dispatch()` that is currently in progress.
     * However, the next `dispatch()` call, whether nested or not, will use a more
     * recent snapshot of the subscription list.
     *
     * 2. The listener should not expect to see all state changes, as the state
     * might have been updated multiple times during a nested `dispatch()` before
     * the listener is called. It is, however, guaranteed that all subscribers
     * registered before the `dispatch()` started will be called with the latest
     * state by the time it exits.
     *
     * @param {Function} listener A callback to be invoked on every dispatch.
     * @returns {Function} A function to remove this change listener.
     */
    function subscribe(listener) {
      if (typeof listener !== 'function') {
        throw new Error('Expected listener to be a function.');
      }

      var isSubscribed = true;

      ensureCanMutateNextListeners();
      nextListeners.push(listener);

      return function unsubscribe() {
        if (!isSubscribed) {
          return;
        }

        isSubscribed = false;

        ensureCanMutateNextListeners();
        var index = nextListeners.indexOf(listener);
        nextListeners.splice(index, 1);
      };
    }

    /**
     * Dispatches an action. It is the only way to trigger a state change.
     *
     * The `reducer` function, used to create the store, will be called with the
     * current state tree and the given `action`. Its return value will
     * be considered the **next** state of the tree, and the change listeners
     * will be notified.
     *
     * The base implementation only supports plain object actions. If you want to
     * dispatch a Promise, an Observable, a thunk, or something else, you need to
     * wrap your store creating function into the corresponding middleware. For
     * example, see the documentation for the `redux-thunk` package. Even the
     * middleware will eventually dispatch plain object actions using this method.
     *
     * @param {Object} action A plain object representing “what changed”. It is
     * a good idea to keep actions serializable so you can record and replay user
     * sessions, or use the time travelling `redux-devtools`. An action must have
     * a `type` property which may not be `undefined`. It is a good idea to use
     * string constants for action types.
     *
     * @returns {Object} For convenience, the same action object you dispatched.
     *
     * Note that, if you use a custom middleware, it may wrap `dispatch()` to
     * return something else (for example, a Promise you can await).
     */
    function dispatch(action) {
      if (!Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__["a" /* default */])(action)) {
        throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
      }

      if (typeof action.type === 'undefined') {
        throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
      }

      if (isDispatching) {
        throw new Error('Reducers may not dispatch actions.');
      }

      try {
        isDispatching = true;
        currentState = currentReducer(currentState, action);
      } finally {
        isDispatching = false;
      }

      var listeners = currentListeners = nextListeners;
      for (var i = 0; i < listeners.length; i++) {
        var listener = listeners[i];
        listener();
      }

      return action;
    }

    /**
     * Replaces the reducer currently used by the store to calculate the state.
     *
     * You might need this if your app implements code splitting and you want to
     * load some of the reducers dynamically. You might also need this if you
     * implement a hot reloading mechanism for Redux.
     *
     * @param {Function} nextReducer The reducer for the store to use instead.
     * @returns {void}
     */
    function replaceReducer(nextReducer) {
      if (typeof nextReducer !== 'function') {
        throw new Error('Expected the nextReducer to be a function.');
      }

      currentReducer = nextReducer;
      dispatch({ type: ActionTypes.INIT });
    }

    /**
     * Interoperability point for observable/reactive libraries.
     * @returns {observable} A minimal observable of state changes.
     * For more information, see the observable proposal:
     * https://github.com/tc39/proposal-observable
     */
    function observable() {
      var _ref;

      var outerSubscribe = subscribe;
      return _ref = {
        /**
         * The minimal observable subscription method.
         * @param {Object} observer Any object that can be used as an observer.
         * The observer object should have a `next` method.
         * @returns {subscription} An object with an `unsubscribe` method that can
         * be used to unsubscribe the observable from the store, and prevent further
         * emission of values from the observable.
         */
        subscribe: function subscribe(observer) {
          if ((typeof observer === "undefined" ? "undefined" : _typeof4(observer)) !== 'object') {
            throw new TypeError('Expected the observer to be an object.');
          }

          function observeState() {
            if (observer.next) {
              observer.next(getState());
            }
          }

          observeState();
          var unsubscribe = outerSubscribe(observeState);
          return { unsubscribe: unsubscribe };
        }
      }, _ref[__WEBPACK_IMPORTED_MODULE_1_symbol_observable___default.a] = function () {
        return this;
      }, _ref;
    }

    // When a store is created, an "INIT" action is dispatched so that every
    // reducer returns their initial state. This effectively populates
    // the initial state tree.
    dispatch({ type: ActionTypes.INIT });

    return _ref2 = {
      dispatch: dispatch,
      subscribe: subscribe,
      getState: getState,
      replaceReducer: replaceReducer
    }, _ref2[__WEBPACK_IMPORTED_MODULE_1_symbol_observable___default.a] = observable, _ref2;
  }

  /***/
},
/* 132 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (global) {
    /** Detect free variable `global` from Node.js. */
    var freeGlobal = (typeof global === "undefined" ? "undefined" : _typeof4(global)) == 'object' && global && global.Object === Object && global;

    /* harmony default export */__webpack_exports__["a"] = freeGlobal;

    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(16));

  /***/
},
/* 133 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__overArg_js__ = __webpack_require__(134);

  /** Built-in value references. */
  var getPrototype = Object(__WEBPACK_IMPORTED_MODULE_0__overArg_js__["a" /* default */])(Object.getPrototypeOf, Object);

  /* harmony default export */__webpack_exports__["a"] = getPrototype;

  /***/
},
/* 134 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */

  function overArg(func, transform) {
    return function (arg) {
      return func(transform(arg));
    };
  }

  /* harmony default export */__webpack_exports__["a"] = overArg;

  /***/
},
/* 135 */
/***/function (module, exports, __webpack_require__) {

  module.exports = __webpack_require__(247);

  /***/
},
/* 136 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (immutable) */
  __webpack_exports__["a"] = warning;
  /**
   * Prints a warning in the console if it exists.
   *
   * @param {String} message The warning message.
   * @returns {void}
   */
  function warning(message) {
    /* eslint-disable no-console */
    if (typeof console !== 'undefined' && typeof console.error === 'function') {
      console.error(message);
    }
    /* eslint-enable no-console */
    try {
      // This error was thrown as a convenience so that if you enable
      // "break on all exceptions" in your console,
      // it would pause the execution at this line.
      throw new Error(message);
      /* eslint-disable no-empty */
    } catch (e) {}
    /* eslint-enable no-empty */
  }

  /***/
},
/* 137 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (immutable) */
  __webpack_exports__["a"] = compose;
  /**
   * Composes single-argument functions from right to left. The rightmost
   * function can take multiple arguments as it provides the signature for
   * the resulting composite function.
   *
   * @param {...Function} funcs The functions to compose.
   * @returns {Function} A function obtained by composing the argument functions
   * from right to left. For example, compose(f, g, h) is identical to doing
   * (...args) => f(g(h(...args))).
   */

  function compose() {
    for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
      funcs[_key] = arguments[_key];
    }

    if (funcs.length === 0) {
      return function (arg) {
        return arg;
      };
    }

    if (funcs.length === 1) {
      return funcs[0];
    }

    return funcs.reduce(function (a, b) {
      return function () {
        return a(b.apply(undefined, arguments));
      };
    });
  }

  /***/
},
/* 138 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /* harmony export (immutable) */__webpack_exports__["a"] = wrapMapToPropsConstant;
    /* unused harmony export getDependsOnOwnProps */
    /* harmony export (immutable) */__webpack_exports__["b"] = wrapMapToPropsFunc;
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(139);

    function wrapMapToPropsConstant(getConstant) {
      return function initConstantSelector(dispatch, options) {
        var constant = getConstant(dispatch, options);

        function constantSelector() {
          return constant;
        }
        constantSelector.dependsOnOwnProps = false;
        return constantSelector;
      };
    }

    // dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args
    // to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine
    // whether mapToProps needs to be invoked when props have changed.
    // 
    // A length of one signals that mapToProps does not depend on props from the parent component.
    // A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and
    // therefore not reporting its length accurately..
    function getDependsOnOwnProps(mapToProps) {
      return mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined ? Boolean(mapToProps.dependsOnOwnProps) : mapToProps.length !== 1;
    }

    // Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,
    // this function wraps mapToProps in a proxy function which does several things:
    // 
    //  * Detects whether the mapToProps function being called depends on props, which
    //    is used by selectorFactory to decide if it should reinvoke on props changes.
    //    
    //  * On first call, handles mapToProps if returns another function, and treats that
    //    new function as the true mapToProps for subsequent calls.
    //    
    //  * On first call, verifies the first result is a plain object, in order to warn
    //    the developer that their mapToProps function is not returning a valid result.
    //    
    function wrapMapToPropsFunc(mapToProps, methodName) {
      return function initProxySelector(dispatch, _ref) {
        var displayName = _ref.displayName;

        var proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {
          return proxy.dependsOnOwnProps ? proxy.mapToProps(stateOrDispatch, ownProps) : proxy.mapToProps(stateOrDispatch);
        };

        // allow detectFactoryAndVerify to get ownProps
        proxy.dependsOnOwnProps = true;

        proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {
          proxy.mapToProps = mapToProps;
          proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps);
          var props = proxy(stateOrDispatch, ownProps);

          if (typeof props === 'function') {
            proxy.mapToProps = props;
            proxy.dependsOnOwnProps = getDependsOnOwnProps(props);
            props = proxy(stateOrDispatch, ownProps);
          }

          if (undefined !== 'production') Object(__WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__["a" /* default */])(props, displayName, methodName);

          return props;
        };

        return proxy;
      };
    }
    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(3));

  /***/
},
/* 139 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (immutable) */
  __webpack_exports__["a"] = verifyPlainObject;
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__ = __webpack_require__(45);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__warning__ = __webpack_require__(68);

  function verifyPlainObject(value, displayName, methodName) {
    if (!Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isPlainObject__["a" /* default */])(value)) {
      Object(__WEBPACK_IMPORTED_MODULE_1__warning__["a" /* default */])(methodName + '() in ' + displayName + ' must return a plain object. Instead received ' + value + '.');
    }
  }

  /***/
},
/* 140 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "actionTypes", function () {
    return actionTypes;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arrayInsert", function () {
    return arrayInsert;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arrayMove", function () {
    return arrayMove;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arrayPop", function () {
    return arrayPop;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arrayPush", function () {
    return arrayPush;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arrayRemove", function () {
    return arrayRemove;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arrayRemoveAll", function () {
    return arrayRemoveAll;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arrayShift", function () {
    return arrayShift;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arraySplice", function () {
    return arraySplice;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arraySwap", function () {
    return arraySwap;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "arrayUnshift", function () {
    return arrayUnshift;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "autofill", function () {
    return autofill;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "blur", function () {
    return blur;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "change", function () {
    return change;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "clearSubmitErrors", function () {
    return clearSubmitErrors;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "destroy", function () {
    return destroy;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "focus", function () {
    return focus;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "initialize", function () {
    return initialize;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "registerField", function () {
    return registerField;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "reset", function () {
    return reset;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "setSubmitFailed", function () {
    return setSubmitFailed;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "setSubmitSucceeded", function () {
    return setSubmitSucceeded;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "startAsyncValidation", function () {
    return startAsyncValidation;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "startSubmit", function () {
    return startSubmit;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "stopAsyncValidation", function () {
    return stopAsyncValidation;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "stopSubmit", function () {
    return stopSubmit;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "submit", function () {
    return submit;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "touch", function () {
    return touch;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "unregisterField", function () {
    return unregisterField;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "untouch", function () {
    return untouch;
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__actions__ = __webpack_require__(141);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__actionTypes__ = __webpack_require__(70);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__defaultShouldAsyncValidate__ = __webpack_require__(142);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "defaultShouldAsyncValidate", function () {
    return __WEBPACK_IMPORTED_MODULE_2__defaultShouldAsyncValidate__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__defaultShouldValidate__ = __webpack_require__(143);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "defaultShouldValidate", function () {
    return __WEBPACK_IMPORTED_MODULE_3__defaultShouldValidate__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__defaultShouldError__ = __webpack_require__(144);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "defaultShouldError", function () {
    return __WEBPACK_IMPORTED_MODULE_4__defaultShouldError__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__defaultShouldWarn__ = __webpack_require__(145);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "defaultShouldWarn", function () {
    return __WEBPACK_IMPORTED_MODULE_5__defaultShouldWarn__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__Form__ = __webpack_require__(258);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "Form", function () {
    return __WEBPACK_IMPORTED_MODULE_6__Form__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_7__FormSection__ = __webpack_require__(259);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "FormSection", function () {
    return __WEBPACK_IMPORTED_MODULE_7__FormSection__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_8__SubmissionError__ = __webpack_require__(146);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "SubmissionError", function () {
    return __WEBPACK_IMPORTED_MODULE_8__SubmissionError__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_9__propTypes__ = __webpack_require__(261);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "propTypes", function () {
    return __WEBPACK_IMPORTED_MODULE_9__propTypes__["a"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "fieldInputPropTypes", function () {
    return __WEBPACK_IMPORTED_MODULE_9__propTypes__["e"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "fieldMetaPropTypes", function () {
    return __WEBPACK_IMPORTED_MODULE_9__propTypes__["f"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "fieldPropTypes", function () {
    return __WEBPACK_IMPORTED_MODULE_9__propTypes__["g"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "fieldArrayFieldsPropTypes", function () {
    return __WEBPACK_IMPORTED_MODULE_9__propTypes__["b"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "fieldArrayMetaPropTypes", function () {
    return __WEBPACK_IMPORTED_MODULE_9__propTypes__["c"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "fieldArrayPropTypes", function () {
    return __WEBPACK_IMPORTED_MODULE_9__propTypes__["d"];
  });
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "formPropTypes", function () {
    return __WEBPACK_IMPORTED_MODULE_9__propTypes__["h"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_10__Field__ = __webpack_require__(262);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "Field", function () {
    return __WEBPACK_IMPORTED_MODULE_10__Field__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_11__Fields__ = __webpack_require__(331);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "Fields", function () {
    return __WEBPACK_IMPORTED_MODULE_11__Fields__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_12__FieldArray__ = __webpack_require__(334);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "FieldArray", function () {
    return __WEBPACK_IMPORTED_MODULE_12__FieldArray__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_13__formValueSelector__ = __webpack_require__(352);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "formValueSelector", function () {
    return __WEBPACK_IMPORTED_MODULE_13__formValueSelector__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_14__formValues__ = __webpack_require__(354);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "formValues", function () {
    return __WEBPACK_IMPORTED_MODULE_14__formValues__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_15__getFormError__ = __webpack_require__(356);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "getFormError", function () {
    return __WEBPACK_IMPORTED_MODULE_15__getFormError__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_16__getFormNames__ = __webpack_require__(358);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "getFormNames", function () {
    return __WEBPACK_IMPORTED_MODULE_16__getFormNames__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_17__getFormValues__ = __webpack_require__(360);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "getFormValues", function () {
    return __WEBPACK_IMPORTED_MODULE_17__getFormValues__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_18__getFormInitialValues__ = __webpack_require__(362);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "getFormInitialValues", function () {
    return __WEBPACK_IMPORTED_MODULE_18__getFormInitialValues__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_19__getFormSyncErrors__ = __webpack_require__(364);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "getFormSyncErrors", function () {
    return __WEBPACK_IMPORTED_MODULE_19__getFormSyncErrors__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_20__getFormMeta__ = __webpack_require__(366);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "getFormMeta", function () {
    return __WEBPACK_IMPORTED_MODULE_20__getFormMeta__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_21__getFormAsyncErrors__ = __webpack_require__(368);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "getFormAsyncErrors", function () {
    return __WEBPACK_IMPORTED_MODULE_21__getFormAsyncErrors__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_22__getFormSyncWarnings__ = __webpack_require__(370);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "getFormSyncWarnings", function () {
    return __WEBPACK_IMPORTED_MODULE_22__getFormSyncWarnings__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_23__getFormSubmitErrors__ = __webpack_require__(372);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "getFormSubmitErrors", function () {
    return __WEBPACK_IMPORTED_MODULE_23__getFormSubmitErrors__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_24__isDirty__ = __webpack_require__(374);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "isDirty", function () {
    return __WEBPACK_IMPORTED_MODULE_24__isDirty__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_25__isInvalid__ = __webpack_require__(376);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "isInvalid", function () {
    return __WEBPACK_IMPORTED_MODULE_25__isInvalid__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_26__isPristine__ = __webpack_require__(379);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "isPristine", function () {
    return __WEBPACK_IMPORTED_MODULE_26__isPristine__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_27__isValid__ = __webpack_require__(380);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "isValid", function () {
    return __WEBPACK_IMPORTED_MODULE_27__isValid__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_28__isSubmitting__ = __webpack_require__(381);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "isSubmitting", function () {
    return __WEBPACK_IMPORTED_MODULE_28__isSubmitting__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_29__hasSubmitSucceeded__ = __webpack_require__(383);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "hasSubmitSucceeded", function () {
    return __WEBPACK_IMPORTED_MODULE_29__hasSubmitSucceeded__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_30__hasSubmitFailed__ = __webpack_require__(385);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "hasSubmitFailed", function () {
    return __WEBPACK_IMPORTED_MODULE_30__hasSubmitFailed__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_31__reduxForm__ = __webpack_require__(387);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "reduxForm", function () {
    return __WEBPACK_IMPORTED_MODULE_31__reduxForm__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_32__reducer__ = __webpack_require__(417);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "reducer", function () {
    return __WEBPACK_IMPORTED_MODULE_32__reducer__["a"];
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_33__values__ = __webpack_require__(420);
  /* harmony reexport (binding) */__webpack_require__.d(__webpack_exports__, "values", function () {
    return __WEBPACK_IMPORTED_MODULE_33__values__["a"];
  });

  // alias for propTypes


  var actionTypes = __WEBPACK_IMPORTED_MODULE_1__actionTypes__;
  var arrayInsert = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arrayInsert;
  var arrayMove = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arrayMove;
  var arrayPop = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arrayPop;
  var arrayPush = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arrayPush;
  var arrayRemove = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arrayRemove;
  var arrayRemoveAll = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arrayRemoveAll;
  var arrayShift = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arrayShift;
  var arraySplice = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arraySplice;
  var arraySwap = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arraySwap;
  var arrayUnshift = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].arrayUnshift;
  var autofill = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].autofill;
  var blur = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].blur;
  var change = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].change;
  var clearSubmitErrors = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].clearSubmitErrors;
  var destroy = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].destroy;
  var focus = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].focus;
  var initialize = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].initialize;
  var registerField = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].registerField;
  var reset = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].reset;
  var setSubmitFailed = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].setSubmitFailed;
  var setSubmitSucceeded = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].setSubmitSucceeded;
  var startAsyncValidation = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].startAsyncValidation;
  var startSubmit = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].startSubmit;
  var stopAsyncValidation = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].stopAsyncValidation;
  var stopSubmit = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].stopSubmit;
  var submit = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].submit;
  var touch = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].touch;
  var unregisterField = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].unregisterField;
  var untouch = __WEBPACK_IMPORTED_MODULE_0__actions__["a" /* default */].untouch;

  /***/
},
/* 141 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__actionTypes__ = __webpack_require__(70);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var arrayInsert = function arrayInsert(form, field, index, value) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_INSERT"],
      meta: { form: form, field: field, index: index },
      payload: value
    };
  };

  var arrayMove = function arrayMove(form, field, from, to) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_MOVE"],
      meta: { form: form, field: field, from: from, to: to }
    };
  };

  var arrayPop = function arrayPop(form, field) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_POP"],
      meta: { form: form, field: field }
    };
  };

  var arrayPush = function arrayPush(form, field, value) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_PUSH"],
      meta: { form: form, field: field },
      payload: value
    };
  };

  var arrayRemove = function arrayRemove(form, field, index) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_REMOVE"],
      meta: { form: form, field: field, index: index }
    };
  };

  var arrayRemoveAll = function arrayRemoveAll(form, field) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_REMOVE_ALL"],
      meta: { form: form, field: field }
    };
  };

  var arrayShift = function arrayShift(form, field) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_SHIFT"],
      meta: { form: form, field: field }
    };
  };

  var arraySplice = function arraySplice(form, field, index, removeNum, value) {
    var action = {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_SPLICE"],
      meta: { form: form, field: field, index: index, removeNum: removeNum }
    };
    if (value !== undefined) {
      action.payload = value;
    }
    return action;
  };

  var arraySwap = function arraySwap(form, field, indexA, indexB) {
    if (indexA === indexB) {
      throw new Error('Swap indices cannot be equal');
    }
    if (indexA < 0 || indexB < 0) {
      throw new Error('Swap indices cannot be negative');
    }
    return { type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_SWAP"], meta: { form: form, field: field, indexA: indexA, indexB: indexB } };
  };

  var arrayUnshift = function arrayUnshift(form, field, value) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_UNSHIFT"],
      meta: { form: form, field: field },
      payload: value
    };
  };

  var autofill = function autofill(form, field, value) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["AUTOFILL"],
      meta: { form: form, field: field },
      payload: value
    };
  };

  var blur = function blur(form, field, value, touch) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["BLUR"],
      meta: { form: form, field: field, touch: touch },
      payload: value
    };
  };

  var change = function change(form, field, value, touch, persistentSubmitErrors) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["CHANGE"],
      meta: { form: form, field: field, touch: touch, persistentSubmitErrors: persistentSubmitErrors },
      payload: value
    };
  };

  var clearSubmit = function clearSubmit(form) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["CLEAR_SUBMIT"],
      meta: { form: form }
    };
  };

  var clearSubmitErrors = function clearSubmitErrors(form) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["CLEAR_SUBMIT_ERRORS"],
      meta: { form: form }
    };
  };

  var clearAsyncError = function clearAsyncError(form, field) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["CLEAR_ASYNC_ERROR"],
      meta: { form: form, field: field }
    };
  };

  var destroy = function destroy() {
    for (var _len = arguments.length, form = Array(_len), _key = 0; _key < _len; _key++) {
      form[_key] = arguments[_key];
    }

    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["DESTROY"],
      meta: { form: form }
    };
  };

  var focus = function focus(form, field) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["FOCUS"],
      meta: { form: form, field: field }
    };
  };

  var initialize = function initialize(form, values, keepDirty) {
    var otherMeta = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    if (keepDirty instanceof Object) {
      otherMeta = keepDirty;
      keepDirty = false;
    }
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["INITIALIZE"],
      meta: _extends({ form: form, keepDirty: keepDirty }, otherMeta),
      payload: values
    };
  };

  var registerField = function registerField(form, name, type) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["REGISTER_FIELD"],
      meta: { form: form },
      payload: { name: name, type: type }
    };
  };

  var reset = function reset(form) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["RESET"],
      meta: { form: form }
    };
  };

  var startAsyncValidation = function startAsyncValidation(form, field) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["START_ASYNC_VALIDATION"],
      meta: { form: form, field: field }
    };
  };

  var startSubmit = function startSubmit(form) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["START_SUBMIT"],
      meta: { form: form }
    };
  };

  var stopAsyncValidation = function stopAsyncValidation(form, errors) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["STOP_ASYNC_VALIDATION"],
      meta: { form: form },
      payload: errors,
      error: !!(errors && Object.keys(errors).length)
    };
  };

  var stopSubmit = function stopSubmit(form, errors) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["STOP_SUBMIT"],
      meta: { form: form },
      payload: errors,
      error: !!(errors && Object.keys(errors).length)
    };
  };

  var submit = function submit(form) {
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["SUBMIT"],
      meta: { form: form }
    };
  };

  var setSubmitFailed = function setSubmitFailed(form) {
    for (var _len2 = arguments.length, fields = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      fields[_key2 - 1] = arguments[_key2];
    }

    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["SET_SUBMIT_FAILED"],
      meta: { form: form, fields: fields },
      error: true
    };
  };

  var setSubmitSucceeded = function setSubmitSucceeded(form) {
    for (var _len3 = arguments.length, fields = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      fields[_key3 - 1] = arguments[_key3];
    }

    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["SET_SUBMIT_SUCCEEDED"],
      meta: { form: form, fields: fields },
      error: false
    };
  };

  var touch = function touch(form) {
    for (var _len4 = arguments.length, fields = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
      fields[_key4 - 1] = arguments[_key4];
    }

    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["TOUCH"],
      meta: { form: form, fields: fields }
    };
  };

  var unregisterField = function unregisterField(form, name) {
    var destroyOnUnmount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["UNREGISTER_FIELD"],
      meta: { form: form },
      payload: { name: name, destroyOnUnmount: destroyOnUnmount }
    };
  };

  var untouch = function untouch(form) {
    for (var _len5 = arguments.length, fields = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
      fields[_key5 - 1] = arguments[_key5];
    }

    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["UNTOUCH"],
      meta: { form: form, fields: fields }
    };
  };

  var updateSyncErrors = function updateSyncErrors(form) {
    var syncErrors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var error = arguments[2];
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["UPDATE_SYNC_ERRORS"],
      meta: { form: form },
      payload: { syncErrors: syncErrors, error: error }
    };
  };

  var updateSyncWarnings = function updateSyncWarnings(form) {
    var syncWarnings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var warning = arguments[2];
    return {
      type: __WEBPACK_IMPORTED_MODULE_0__actionTypes__["UPDATE_SYNC_WARNINGS"],
      meta: { form: form },
      payload: { syncWarnings: syncWarnings, warning: warning }
    };
  };

  var actions = {
    arrayInsert: arrayInsert,
    arrayMove: arrayMove,
    arrayPop: arrayPop,
    arrayPush: arrayPush,
    arrayRemove: arrayRemove,
    arrayRemoveAll: arrayRemoveAll,
    arrayShift: arrayShift,
    arraySplice: arraySplice,
    arraySwap: arraySwap,
    arrayUnshift: arrayUnshift,
    autofill: autofill,
    blur: blur,
    change: change,
    clearSubmit: clearSubmit,
    clearSubmitErrors: clearSubmitErrors,
    clearAsyncError: clearAsyncError,
    destroy: destroy,
    focus: focus,
    initialize: initialize,
    registerField: registerField,
    reset: reset,
    startAsyncValidation: startAsyncValidation,
    startSubmit: startSubmit,
    stopAsyncValidation: stopAsyncValidation,
    stopSubmit: stopSubmit,
    submit: submit,
    setSubmitFailed: setSubmitFailed,
    setSubmitSucceeded: setSubmitSucceeded,
    touch: touch,
    unregisterField: unregisterField,
    untouch: untouch,
    updateSyncErrors: updateSyncErrors,
    updateSyncWarnings: updateSyncWarnings
  };

  /* harmony default export */__webpack_exports__["a"] = actions;

  /***/
},
/* 142 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var defaultShouldAsyncValidate = function defaultShouldAsyncValidate(_ref) {
    var initialized = _ref.initialized,
        trigger = _ref.trigger,
        pristine = _ref.pristine,
        syncValidationPasses = _ref.syncValidationPasses;

    if (!syncValidationPasses) {
      return false;
    }
    switch (trigger) {
      case 'blur':
        // blurring
        return true;
      case 'submit':
        // submitting, so only async validate if form is dirty or was never initialized
        // conversely, DON'T async validate if the form is pristine just as it was initialized
        return !pristine || !initialized;
      default:
        return false;
    }
  };

  /* harmony default export */__webpack_exports__["a"] = defaultShouldAsyncValidate;

  /***/
},
/* 143 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var defaultShouldValidate = function defaultShouldValidate(_ref) {
    var values = _ref.values,
        nextProps = _ref.nextProps,
        initialRender = _ref.initialRender,
        lastFieldValidatorKeys = _ref.lastFieldValidatorKeys,
        fieldValidatorKeys = _ref.fieldValidatorKeys,
        structure = _ref.structure;

    if (initialRender) {
      return true;
    }
    return !structure.deepEqual(values, nextProps && nextProps.values) || !structure.deepEqual(lastFieldValidatorKeys, fieldValidatorKeys);
  };

  /* harmony default export */__webpack_exports__["a"] = defaultShouldValidate;

  /***/
},
/* 144 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var defaultShouldError = function defaultShouldError(_ref) {
    var values = _ref.values,
        nextProps = _ref.nextProps,
        initialRender = _ref.initialRender,
        lastFieldValidatorKeys = _ref.lastFieldValidatorKeys,
        fieldValidatorKeys = _ref.fieldValidatorKeys,
        structure = _ref.structure;

    if (initialRender) {
      return true;
    }
    return !structure.deepEqual(values, nextProps && nextProps.values) || !structure.deepEqual(lastFieldValidatorKeys, fieldValidatorKeys);
  };

  /* harmony default export */__webpack_exports__["a"] = defaultShouldError;

  /***/
},
/* 145 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var defaultShouldWarn = function defaultShouldWarn(_ref) {
    var values = _ref.values,
        nextProps = _ref.nextProps,
        initialRender = _ref.initialRender,
        lastFieldValidatorKeys = _ref.lastFieldValidatorKeys,
        fieldValidatorKeys = _ref.fieldValidatorKeys,
        structure = _ref.structure;

    if (initialRender) {
      return true;
    }
    return !structure.deepEqual(values, nextProps && nextProps.values) || !structure.deepEqual(lastFieldValidatorKeys, fieldValidatorKeys);
  };

  /* harmony default export */__webpack_exports__["a"] = defaultShouldWarn;

  /***/
},
/* 146 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_es6_error__ = __webpack_require__(260);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_es6_error___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_es6_error__);
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var SubmissionError = function (_ExtendableError) {
    _inherits(SubmissionError, _ExtendableError);

    function SubmissionError(errors) {
      _classCallCheck(this, SubmissionError);

      var _this = _possibleConstructorReturn(this, (SubmissionError.__proto__ || Object.getPrototypeOf(SubmissionError)).call(this, 'Submit Validation Failed'));

      _this.errors = errors;
      return _this;
    }

    return SubmissionError;
  }(__WEBPACK_IMPORTED_MODULE_0_es6_error___default.a);

  /* harmony default export */__webpack_exports__["a"] = SubmissionError;

  /***/
},
/* 147 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  var processProps = function processProps(type, props, _value, deepEqual) {
    var value = props.value;

    if (type === 'checkbox') {
      return _extends({}, props, {
        checked: !!value
      });
    }
    if (type === 'radio') {
      return _extends({}, props, {
        checked: deepEqual(value, _value),
        value: _value
      });
    }
    if (type === 'select-multiple') {
      return _extends({}, props, {
        value: value || []
      });
    }
    if (type === 'file') {
      return _extends({}, props, {
        value: value || undefined
      });
    }
    return props;
  };

  var createFieldProps = function createFieldProps(_ref2, name, _ref) {
    var getIn = _ref2.getIn,
        toJS = _ref2.toJS,
        deepEqual = _ref2.deepEqual;

    var asyncError = _ref.asyncError,
        asyncValidating = _ref.asyncValidating,
        onBlur = _ref.onBlur,
        onChange = _ref.onChange,
        onDrop = _ref.onDrop,
        onDragStart = _ref.onDragStart,
        dirty = _ref.dirty,
        dispatch = _ref.dispatch,
        onFocus = _ref.onFocus,
        form = _ref.form,
        format = _ref.format,
        initial = _ref.initial,
        parse = _ref.parse,
        pristine = _ref.pristine,
        props = _ref.props,
        state = _ref.state,
        submitError = _ref.submitError,
        submitFailed = _ref.submitFailed,
        submitting = _ref.submitting,
        syncError = _ref.syncError,
        syncWarning = _ref.syncWarning,
        validate = _ref.validate,
        value = _ref.value,
        _value = _ref._value,
        warn = _ref.warn,
        custom = _objectWithoutProperties(_ref, ['asyncError', 'asyncValidating', 'onBlur', 'onChange', 'onDrop', 'onDragStart', 'dirty', 'dispatch', 'onFocus', 'form', 'format', 'initial', 'parse', 'pristine', 'props', 'state', 'submitError', 'submitFailed', 'submitting', 'syncError', 'syncWarning', 'validate', 'value', '_value', 'warn']);

    var error = syncError || asyncError || submitError;
    var warning = syncWarning;

    var formatFieldValue = function formatFieldValue(value, format) {
      if (format === null) {
        return value;
      }
      var defaultFormattedValue = value == null ? '' : value;
      return format ? format(value, name) : defaultFormattedValue;
    };

    var formattedFieldValue = formatFieldValue(value, format);

    return {
      input: processProps(custom.type, {
        name: name,
        onBlur: onBlur,
        onChange: onChange,
        onDragStart: onDragStart,
        onDrop: onDrop,
        onFocus: onFocus,
        value: formattedFieldValue
      }, _value, deepEqual),
      meta: _extends({}, toJS(state), {
        active: !!(state && getIn(state, 'active')),
        asyncValidating: asyncValidating,
        autofilled: !!(state && getIn(state, 'autofilled')),
        dirty: dirty,
        dispatch: dispatch,
        error: error,
        form: form,
        initial: initial,
        warning: warning,
        invalid: !!error,
        pristine: pristine,
        submitting: !!submitting,
        submitFailed: !!submitFailed,
        touched: !!(state && getIn(state, 'touched')),
        valid: !error,
        visited: !!(state && getIn(state, 'visited'))
      }),
      custom: _extends({}, custom, props)
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createFieldProps;

  /***/
},
/* 148 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getValue__ = __webpack_require__(265);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isReactNative__ = __webpack_require__(150);

  var onChangeValue = function onChangeValue(event, _ref) {
    var name = _ref.name,
        parse = _ref.parse,
        normalize = _ref.normalize;

    // read value from input
    var value = Object(__WEBPACK_IMPORTED_MODULE_0__getValue__["a" /* default */])(event, __WEBPACK_IMPORTED_MODULE_1__isReactNative__["a" /* default */]);

    // parse value if we have a parser
    if (parse) {
      value = parse(value, name);
    }

    // normalize value
    if (normalize) {
      value = normalize(name, value);
    }

    return value;
  };

  /* harmony default export */__webpack_exports__["a"] = onChangeValue;

  /***/
},
/* 149 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var isEvent = function isEvent(candidate) {
    return !!(candidate && candidate.stopPropagation && candidate.preventDefault);
  };

  /* harmony default export */__webpack_exports__["a"] = isEvent;

  /***/
},
/* 150 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';

  /* harmony default export */__webpack_exports__["a"] = isReactNative;

  /***/
},
/* 151 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */

  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = arrayMap;

  /***/
},
/* 152 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Copies the values of `source` to `array`.
   *
   * @private
   * @param {Array} source The array to copy values from.
   * @param {Array} [array=[]] The array to copy values to.
   * @returns {Array} Returns `array`.
   */

  function copyArray(source, array) {
    var index = -1,
        length = source.length;

    array || (array = Array(length));
    while (++index < length) {
      array[index] = source[index];
    }
    return array;
  }

  /* harmony default export */__webpack_exports__["a"] = copyArray;

  /***/
},
/* 153 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__memoizeCapped_js__ = __webpack_require__(269);

  /** Used to match property names within property paths. */
  var reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Converts `string` to a property path array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the property path array.
   */
  var stringToPath = Object(__WEBPACK_IMPORTED_MODULE_0__memoizeCapped_js__["a" /* default */])(function (string) {
    var result = [];
    if (reLeadingDot.test(string)) {
      result.push('');
    }
    string.replace(rePropName, function (match, number, quote, string) {
      result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);
    });
    return result;
  });

  /* harmony default export */__webpack_exports__["a"] = stringToPath;

  /***/
},
/* 154 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /** Used for built-in method references. */

  var funcProto = Function.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /**
   * Converts `func` to its source code.
   *
   * @private
   * @param {Function} func The function to convert.
   * @returns {string} Returns the source code.
   */
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}
      try {
        return func + '';
      } catch (e) {}
    }
    return '';
  }

  /* harmony default export */__webpack_exports__["a"] = toSource;

  /***/
},
/* 155 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseToString_js__ = __webpack_require__(292);

  /**
   * Converts `value` to a string. An empty string is returned for `null`
   * and `undefined` values. The sign of `-0` is preserved.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   * @example
   *
   * _.toString(null);
   * // => ''
   *
   * _.toString(-0);
   * // => '-0'
   *
   * _.toString([1, 2, 3]);
   * // => '1,2,3'
   */
  function toString(value) {
    return value == null ? '' : Object(__WEBPACK_IMPORTED_MODULE_0__baseToString_js__["a" /* default */])(value);
  }

  /* harmony default export */__webpack_exports__["a"] = toString;

  /***/
},
/* 156 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseIsEqual_js__ = __webpack_require__(74);

  /**
   * This method is like `_.isEqual` except that it accepts `customizer` which
   * is invoked to compare values. If `customizer` returns `undefined`, comparisons
   * are handled by the method instead. The `customizer` is invoked with up to
   * six arguments: (objValue, othValue [, index|key, object, other, stack]).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @param {Function} [customizer] The function to customize comparisons.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * function isGreeting(value) {
   *   return /^h(?:i|ello)$/.test(value);
   * }
   *
   * function customizer(objValue, othValue) {
   *   if (isGreeting(objValue) && isGreeting(othValue)) {
   *     return true;
   *   }
   * }
   *
   * var array = ['hello', 'goodbye'];
   * var other = ['hi', 'goodbye'];
   *
   * _.isEqualWith(array, other, customizer);
   * // => true
   */
  function isEqualWith(value, other, customizer) {
    customizer = typeof customizer == 'function' ? customizer : undefined;
    var result = customizer ? customizer(value, other) : undefined;
    return result === undefined ? Object(__WEBPACK_IMPORTED_MODULE_0__baseIsEqual_js__["a" /* default */])(value, other, undefined, customizer) : !!result;
  }

  /* harmony default export */__webpack_exports__["a"] = isEqualWith;

  /***/
},
/* 157 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__SetCache_js__ = __webpack_require__(301);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__arraySome_js__ = __webpack_require__(304);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__cacheHas_js__ = __webpack_require__(305);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * A specialized version of `baseIsEqualDeep` for arrays with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Array} array The array to compare.
   * @param {Array} other The other array to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `array` and `other` objects.
   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
   */
  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        arrLength = array.length,
        othLength = other.length;

    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(array);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var index = -1,
        result = true,
        seen = bitmask & COMPARE_UNORDERED_FLAG ? new __WEBPACK_IMPORTED_MODULE_0__SetCache_js__["a" /* default */]() : undefined;

    stack.set(array, other);
    stack.set(other, array);

    // Ignore non-index properties.
    while (++index < arrLength) {
      var arrValue = array[index],
          othValue = other[index];

      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
      }
      if (compared !== undefined) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      // Recursively compare arrays (susceptible to call stack limits).
      if (seen) {
        if (!Object(__WEBPACK_IMPORTED_MODULE_1__arraySome_js__["a" /* default */])(other, function (othValue, othIndex) {
          if (!Object(__WEBPACK_IMPORTED_MODULE_2__cacheHas_js__["a" /* default */])(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            return seen.push(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
        result = false;
        break;
      }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = equalArrays;

  /***/
},
/* 158 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(5);

  /** Built-in value references. */
  var Uint8Array = __WEBPACK_IMPORTED_MODULE_0__root_js__["a" /* default */].Uint8Array;

  /* harmony default export */__webpack_exports__["a"] = Uint8Array;

  /***/
},
/* 159 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseTimes_js__ = __webpack_require__(316);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isArguments_js__ = __webpack_require__(77);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isArray_js__ = __webpack_require__(6);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__isBuffer_js__ = __webpack_require__(78);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__isIndex_js__ = __webpack_require__(80);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__isTypedArray_js__ = __webpack_require__(81);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys(value, inherited) {
    var isArr = Object(__WEBPACK_IMPORTED_MODULE_2__isArray_js__["a" /* default */])(value),
        isArg = !isArr && Object(__WEBPACK_IMPORTED_MODULE_1__isArguments_js__["a" /* default */])(value),
        isBuff = !isArr && !isArg && Object(__WEBPACK_IMPORTED_MODULE_3__isBuffer_js__["a" /* default */])(value),
        isType = !isArr && !isArg && !isBuff && Object(__WEBPACK_IMPORTED_MODULE_5__isTypedArray_js__["a" /* default */])(value),
        skipIndexes = isArr || isArg || isBuff || isType,
        result = skipIndexes ? Object(__WEBPACK_IMPORTED_MODULE_0__baseTimes_js__["a" /* default */])(value.length, String) : [],
        length = result.length;

    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (
      // Safari 9 has enumerable `arguments.length` in strict mode.
      key == 'length' ||
      // Node.js 0.10 has enumerable non-index properties on buffers.
      isBuff && (key == 'offset' || key == 'parent') ||
      // PhantomJS 2 has enumerable non-index properties on typed arrays.
      isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') ||
      // Skip index properties.
      Object(__WEBPACK_IMPORTED_MODULE_4__isIndex_js__["a" /* default */])(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = arrayLikeKeys;

  /***/
},
/* 160 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isEqualWith__ = __webpack_require__(156);

  var customizer = function customizer(objectValue, otherValue, indexOrkey, object, other, stack) {
    // https://lodash.com/docs/4.17.4#isEqualWith
    if (stack) {
      // Shallow compares
      // For 1st level, stack === undefined.
      //   -> Do nothing (and implicitly return undefined so that it goes to compare 2nd level)
      // For 2nd level and up, stack !== undefined.
      //   -> Compare by === operator
      return objectValue === otherValue;
    }
  };

  var shallowCompare = function shallowCompare(instance, nextProps, nextState) {
    return !Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isEqualWith__["a" /* default */])(instance.props, nextProps, customizer) || !Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isEqualWith__["a" /* default */])(instance.state, nextState, customizer);
  };

  /* harmony default export */__webpack_exports__["a"] = shallowCompare;

  /***/
},
/* 161 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseAssignValue_js__ = __webpack_require__(54);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__baseForOwn_js__ = __webpack_require__(337);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__baseIteratee_js__ = __webpack_require__(339);

  /**
   * Creates an object with the same keys as `object` and values generated
   * by running each own enumerable string keyed property of `object` thru
   * `iteratee`. The iteratee is invoked with three arguments:
   * (value, key, object).
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Object
   * @param {Object} object The object to iterate over.
   * @param {Function} [iteratee=_.identity] The function invoked per iteration.
   * @returns {Object} Returns the new mapped object.
   * @see _.mapKeys
   * @example
   *
   * var users = {
   *   'fred':    { 'user': 'fred',    'age': 40 },
   *   'pebbles': { 'user': 'pebbles', 'age': 1 }
   * };
   *
   * _.mapValues(users, function(o) { return o.age; });
   * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
   *
   * // The `_.property` iteratee shorthand.
   * _.mapValues(users, 'age');
   * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
   */
  function mapValues(object, iteratee) {
    var result = {};
    iteratee = Object(__WEBPACK_IMPORTED_MODULE_2__baseIteratee_js__["a" /* default */])(iteratee, 3);

    Object(__WEBPACK_IMPORTED_MODULE_1__baseForOwn_js__["a" /* default */])(object, function (value, key, object) {
      Object(__WEBPACK_IMPORTED_MODULE_0__baseAssignValue_js__["a" /* default */])(result, key, iteratee(value, key, object));
    });
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = mapValues;

  /***/
},
/* 162 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getNative_js__ = __webpack_require__(18);

  var defineProperty = function () {
    try {
      var func = Object(__WEBPACK_IMPORTED_MODULE_0__getNative_js__["a" /* default */])(Object, 'defineProperty');
      func({}, '', {});
      return func;
    } catch (e) {}
  }();

  /* harmony default export */__webpack_exports__["a"] = defineProperty;

  /***/
},
/* 163 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__createBaseFor_js__ = __webpack_require__(338);

  /**
   * The base implementation of `baseForOwn` which iterates over `object`
   * properties returned by `keysFunc` and invokes `iteratee` for each property.
   * Iteratee functions may exit iteration early by explicitly returning `false`.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @returns {Object} Returns `object`.
   */
  var baseFor = Object(__WEBPACK_IMPORTED_MODULE_0__createBaseFor_js__["a" /* default */])();

  /* harmony default export */__webpack_exports__["a"] = baseFor;

  /***/
},
/* 164 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isObject_js__ = __webpack_require__(13);

  /**
   * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` if suitable for strict
   *  equality comparisons, else `false`.
   */
  function isStrictComparable(value) {
    return value === value && !Object(__WEBPACK_IMPORTED_MODULE_0__isObject_js__["a" /* default */])(value);
  }

  /* harmony default export */__webpack_exports__["a"] = isStrictComparable;

  /***/
},
/* 165 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * A specialized version of `matchesProperty` for source values suitable
   * for strict equality comparisons, i.e. `===`.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @param {*} srcValue The value to match.
   * @returns {Function} Returns the new spec function.
   */

  function matchesStrictComparable(key, srcValue) {
    return function (object) {
      if (object == null) {
        return false;
      }
      return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
    };
  }

  /* harmony default export */__webpack_exports__["a"] = matchesStrictComparable;

  /***/
},
/* 166 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__castPath_js__ = __webpack_require__(167);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__toKey_js__ = __webpack_require__(37);

  /**
   * The base implementation of `_.get` without support for default values.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the property to get.
   * @returns {*} Returns the resolved value.
   */
  function baseGet(object, path) {
    path = Object(__WEBPACK_IMPORTED_MODULE_0__castPath_js__["a" /* default */])(path, object);

    var index = 0,
        length = path.length;

    while (object != null && index < length) {
      object = object[Object(__WEBPACK_IMPORTED_MODULE_1__toKey_js__["a" /* default */])(path[index++])];
    }
    return index && index == length ? object : undefined;
  }

  /* harmony default export */__webpack_exports__["a"] = baseGet;

  /***/
},
/* 167 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isArray_js__ = __webpack_require__(6);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isKey_js__ = __webpack_require__(84);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__stringToPath_js__ = __webpack_require__(153);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__toString_js__ = __webpack_require__(155);

  /**
   * Casts `value` to a path array if it's not one.
   *
   * @private
   * @param {*} value The value to inspect.
   * @param {Object} [object] The object to query keys on.
   * @returns {Array} Returns the cast property path array.
   */
  function castPath(value, object) {
    if (Object(__WEBPACK_IMPORTED_MODULE_0__isArray_js__["a" /* default */])(value)) {
      return value;
    }
    return Object(__WEBPACK_IMPORTED_MODULE_1__isKey_js__["a" /* default */])(value, object) ? [value] : Object(__WEBPACK_IMPORTED_MODULE_2__stringToPath_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_3__toString_js__["a" /* default */])(value));
  }

  /* harmony default export */__webpack_exports__["a"] = castPath;

  /***/
},
/* 168 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createIsPristine = function createIsPristine(_ref) {
    var deepEqual = _ref.deepEqual,
        empty = _ref.empty,
        getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        var formState = nonNullGetFormState(state);
        var initial = getIn(formState, form + '.initial') || empty;
        var values = getIn(formState, form + '.values') || initial;
        return deepEqual(initial, values);
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createIsPristine;

  /***/
},
/* 169 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseAssignValue_js__ = __webpack_require__(54);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__eq_js__ = __webpack_require__(36);

  /**
   * This function is like `assignValue` except that it doesn't assign
   * `undefined` values.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {string} key The key of the property to assign.
   * @param {*} value The value to assign.
   */
  function assignMergeValue(object, key, value) {
    if (value !== undefined && !Object(__WEBPACK_IMPORTED_MODULE_1__eq_js__["a" /* default */])(object[key], value) || value === undefined && !(key in object)) {
      Object(__WEBPACK_IMPORTED_MODULE_0__baseAssignValue_js__["a" /* default */])(object, key, value);
    }
  }

  /* harmony default export */__webpack_exports__["a"] = assignMergeValue;

  /***/
},
/* 170 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__arrayLikeKeys_js__ = __webpack_require__(159);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__baseKeysIn_js__ = __webpack_require__(401);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isArrayLike_js__ = __webpack_require__(53);

  /**
   * Creates an array of the own and inherited enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keysIn(new Foo);
   * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
   */
  function keysIn(object) {
    return Object(__WEBPACK_IMPORTED_MODULE_2__isArrayLike_js__["a" /* default */])(object) ? Object(__WEBPACK_IMPORTED_MODULE_0__arrayLikeKeys_js__["a" /* default */])(object, true) : Object(__WEBPACK_IMPORTED_MODULE_1__baseKeysIn_js__["a" /* default */])(object);
  }

  /* harmony default export */__webpack_exports__["a"] = keysIn;

  /***/
},
/* 171 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isEvent__ = __webpack_require__(149);

  var silenceEvent = function silenceEvent(event) {
    var is = Object(__WEBPACK_IMPORTED_MODULE_0__isEvent__["a" /* default */])(event);
    if (is) {
      event.preventDefault();
    }
    return is;
  };

  /* harmony default export */__webpack_exports__["a"] = silenceEvent;

  /***/
},
/* 172 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  var MODAL_OPEN = exports.MODAL_OPEN = "MODAL_OPEN";

  /***/
},
/* 173 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _reduxDevtools = __webpack_require__(88);

  var _reduxDevtoolsLogMonitor = __webpack_require__(521);

  var _reduxDevtoolsLogMonitor2 = _interopRequireDefault(_reduxDevtoolsLogMonitor);

  var _reduxDevtoolsDockMonitor = __webpack_require__(637);

  var _reduxDevtoolsDockMonitor2 = _interopRequireDefault(_reduxDevtoolsDockMonitor);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = (0, _reduxDevtools.createDevTools)(_react2.default.createElement(_reduxDevtoolsDockMonitor2.default, { toggleVisibilityKey: 'ctrl-h',
    changePositionKey: 'ctrl-w' }, _react2.default.createElement(_reduxDevtoolsLogMonitor2.default, null)));

  /***/
},
/* 174 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports.INIT_ACTION = exports.ActionCreators = exports.ActionTypes = undefined;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _typeof = typeof Symbol === "function" && _typeof4(Symbol.iterator) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  };

  exports.liftAction = liftAction;
  exports.liftReducerWith = liftReducerWith;
  exports.unliftState = unliftState;
  exports.unliftStore = unliftStore;
  exports.default = instrument;

  var _difference = __webpack_require__(424);

  var _difference2 = _interopRequireDefault(_difference);

  var _union = __webpack_require__(463);

  var _union2 = _interopRequireDefault(_union);

  var _isPlainObject = __webpack_require__(467);

  var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

  var _symbolObservable = __webpack_require__(135);

  var _symbolObservable2 = _interopRequireDefault(_symbolObservable);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var ActionTypes = exports.ActionTypes = {
    PERFORM_ACTION: 'PERFORM_ACTION',
    RESET: 'RESET',
    ROLLBACK: 'ROLLBACK',
    COMMIT: 'COMMIT',
    SWEEP: 'SWEEP',
    TOGGLE_ACTION: 'TOGGLE_ACTION',
    SET_ACTIONS_ACTIVE: 'SET_ACTIONS_ACTIVE',
    JUMP_TO_STATE: 'JUMP_TO_STATE',
    JUMP_TO_ACTION: 'JUMP_TO_ACTION',
    REORDER_ACTION: 'REORDER_ACTION',
    IMPORT_STATE: 'IMPORT_STATE',
    LOCK_CHANGES: 'LOCK_CHANGES',
    PAUSE_RECORDING: 'PAUSE_RECORDING'
  };

  /**
   * Action creators to change the History state.
   */
  var ActionCreators = exports.ActionCreators = {
    performAction: function performAction(action) {
      if (!(0, _isPlainObject2.default)(action)) {
        throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');
      }

      if (typeof action.type === 'undefined') {
        throw new Error('Actions may not have an undefined "type" property. ' + 'Have you misspelled a constant?');
      }

      return { type: ActionTypes.PERFORM_ACTION, action: action, timestamp: Date.now() };
    },
    reset: function reset() {
      return { type: ActionTypes.RESET, timestamp: Date.now() };
    },
    rollback: function rollback() {
      return { type: ActionTypes.ROLLBACK, timestamp: Date.now() };
    },
    commit: function commit() {
      return { type: ActionTypes.COMMIT, timestamp: Date.now() };
    },
    sweep: function sweep() {
      return { type: ActionTypes.SWEEP };
    },
    toggleAction: function toggleAction(id) {
      return { type: ActionTypes.TOGGLE_ACTION, id: id };
    },
    setActionsActive: function setActionsActive(start, end) {
      var active = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];

      return { type: ActionTypes.SET_ACTIONS_ACTIVE, start: start, end: end, active: active };
    },
    reorderAction: function reorderAction(actionId, beforeActionId) {
      return { type: ActionTypes.REORDER_ACTION, actionId: actionId, beforeActionId: beforeActionId };
    },
    jumpToState: function jumpToState(index) {
      return { type: ActionTypes.JUMP_TO_STATE, index: index };
    },
    jumpToAction: function jumpToAction(actionId) {
      return { type: ActionTypes.JUMP_TO_ACTION, actionId: actionId };
    },
    importState: function importState(nextLiftedState, noRecompute) {
      return { type: ActionTypes.IMPORT_STATE, nextLiftedState: nextLiftedState, noRecompute: noRecompute };
    },
    lockChanges: function lockChanges(status) {
      return { type: ActionTypes.LOCK_CHANGES, status: status };
    },
    pauseRecording: function pauseRecording(status) {
      return { type: ActionTypes.PAUSE_RECORDING, status: status };
    }
  };

  var INIT_ACTION = exports.INIT_ACTION = { type: '@@INIT' };

  /**
   * Computes the next entry with exceptions catching.
   */
  function computeWithTryCatch(reducer, action, state) {
    var nextState = state;
    var nextError = void 0;
    try {
      nextState = reducer(state, action);
    } catch (err) {
      nextError = err.toString();
      if ((typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof window.chrome !== 'undefined' || typeof window.process !== 'undefined' && window.process.type === 'renderer')) {
        // In Chrome, rethrowing provides better source map support
        setTimeout(function () {
          throw err;
        });
      } else {
        console.error(err);
      }
    }

    return {
      state: nextState,
      error: nextError
    };
  }

  /**
   * Computes the next entry in the log by applying an action.
   */
  function computeNextEntry(reducer, action, state, shouldCatchErrors) {
    if (!shouldCatchErrors) {
      return { state: reducer(state, action) };
    }
    return computeWithTryCatch(reducer, action, state);
  }

  /**
   * Runs the reducer on invalidated actions to get a fresh computation log.
   */
  function recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, shouldCatchErrors) {
    // Optimization: exit early and return the same reference
    // if we know nothing could have changed.
    if (!computedStates || minInvalidatedStateIndex === -1 || minInvalidatedStateIndex >= computedStates.length && computedStates.length === stagedActionIds.length) {
      return computedStates;
    }

    var nextComputedStates = computedStates.slice(0, minInvalidatedStateIndex);
    for (var i = minInvalidatedStateIndex; i < stagedActionIds.length; i++) {
      var actionId = stagedActionIds[i];
      var action = actionsById[actionId].action;

      var previousEntry = nextComputedStates[i - 1];
      var previousState = previousEntry ? previousEntry.state : committedState;

      var shouldSkip = skippedActionIds.indexOf(actionId) > -1;
      var entry = void 0;
      if (shouldSkip) {
        entry = previousEntry;
      } else {
        if (shouldCatchErrors && previousEntry && previousEntry.error) {
          entry = {
            state: previousState,
            error: 'Interrupted by an error up the chain'
          };
        } else {
          entry = computeNextEntry(reducer, action, previousState, shouldCatchErrors);
        }
      }
      nextComputedStates.push(entry);
    }

    return nextComputedStates;
  }

  /**
   * Lifts an app's action into an action on the lifted store.
   */
  function liftAction(action) {
    return ActionCreators.performAction(action);
  }

  /**
   * Creates a history state reducer from an app's reducer.
   */
  function liftReducerWith(reducer, initialCommittedState, monitorReducer, options) {
    var initialLiftedState = {
      monitorState: monitorReducer(undefined, {}),
      nextActionId: 1,
      actionsById: { 0: liftAction(INIT_ACTION) },
      stagedActionIds: [0],
      skippedActionIds: [],
      committedState: initialCommittedState,
      currentStateIndex: 0,
      computedStates: [],
      isLocked: options.shouldStartLocked === true,
      isPaused: options.shouldRecordChanges === false
    };

    /**
     * Manages how the history actions modify the history state.
     */
    return function (liftedState, liftedAction) {
      var _ref = liftedState || initialLiftedState;

      var monitorState = _ref.monitorState;
      var actionsById = _ref.actionsById;
      var nextActionId = _ref.nextActionId;
      var stagedActionIds = _ref.stagedActionIds;
      var skippedActionIds = _ref.skippedActionIds;
      var committedState = _ref.committedState;
      var currentStateIndex = _ref.currentStateIndex;
      var computedStates = _ref.computedStates;
      var isLocked = _ref.isLocked;
      var isPaused = _ref.isPaused;

      if (!liftedState) {
        // Prevent mutating initialLiftedState
        actionsById = _extends({}, actionsById);
      }

      function commitExcessActions(n) {
        // Auto-commits n-number of excess actions.
        var excess = n;
        var idsToDelete = stagedActionIds.slice(1, excess + 1);

        for (var i = 0; i < idsToDelete.length; i++) {
          if (computedStates[i + 1].error) {
            // Stop if error is found. Commit actions up to error.
            excess = i;
            idsToDelete = stagedActionIds.slice(1, excess + 1);
            break;
          } else {
            delete actionsById[idsToDelete[i]];
          }
        }

        skippedActionIds = skippedActionIds.filter(function (id) {
          return idsToDelete.indexOf(id) === -1;
        });
        stagedActionIds = [0].concat(stagedActionIds.slice(excess + 1));
        committedState = computedStates[excess].state;
        computedStates = computedStates.slice(excess);
        currentStateIndex = currentStateIndex > excess ? currentStateIndex - excess : 0;
      }

      function computePausedAction(shouldInit) {
        var _extends2;

        var computedState = void 0;
        if (shouldInit) {
          computedState = computedStates[currentStateIndex];
          monitorState = monitorReducer(monitorState, liftedAction);
        } else {
          computedState = computeNextEntry(reducer, liftedAction.action, computedStates[currentStateIndex].state, false);
        }
        if (!options.pauseActionType || nextActionId === 1) {
          return {
            monitorState: monitorState,
            actionsById: { 0: liftAction(INIT_ACTION) },
            nextActionId: 1,
            stagedActionIds: [0],
            skippedActionIds: [],
            committedState: computedState.state,
            currentStateIndex: 0,
            computedStates: [computedState],
            isLocked: isLocked,
            isPaused: true
          };
        }
        if (shouldInit) {
          if (currentStateIndex === stagedActionIds.length - 1) {
            currentStateIndex++;
          }
          stagedActionIds = [].concat(stagedActionIds, [nextActionId]);
          nextActionId++;
        }
        return {
          monitorState: monitorState,
          actionsById: _extends({}, actionsById, (_extends2 = {}, _extends2[nextActionId - 1] = liftAction({ type: options.pauseActionType }), _extends2)),
          nextActionId: nextActionId,
          stagedActionIds: stagedActionIds,
          skippedActionIds: skippedActionIds,
          committedState: committedState,
          currentStateIndex: currentStateIndex,
          computedStates: [].concat(computedStates.slice(0, stagedActionIds.length - 1), [computedState]),
          isLocked: isLocked,
          isPaused: true
        };
      }

      // By default, agressively recompute every state whatever happens.
      // This has O(n) performance, so we'll override this to a sensible
      // value whenever we feel like we don't have to recompute the states.
      var minInvalidatedStateIndex = 0;

      switch (liftedAction.type) {
        case ActionTypes.PERFORM_ACTION:
          {
            if (isLocked) return liftedState || initialLiftedState;
            if (isPaused) return computePausedAction();

            // Auto-commit as new actions come in.
            if (options.maxAge && stagedActionIds.length === options.maxAge) {
              commitExcessActions(1);
            }

            if (currentStateIndex === stagedActionIds.length - 1) {
              currentStateIndex++;
            }
            var actionId = nextActionId++;
            // Mutation! This is the hottest path, and we optimize on purpose.
            // It is safe because we set a new key in a cache dictionary.
            actionsById[actionId] = liftedAction;
            stagedActionIds = [].concat(stagedActionIds, [actionId]);
            // Optimization: we know that only the new action needs computing.
            minInvalidatedStateIndex = stagedActionIds.length - 1;
            break;
          }
        case ActionTypes.RESET:
          {
            // Get back to the state the store was created with.
            actionsById = { 0: liftAction(INIT_ACTION) };
            nextActionId = 1;
            stagedActionIds = [0];
            skippedActionIds = [];
            committedState = initialCommittedState;
            currentStateIndex = 0;
            computedStates = [];
            break;
          }
        case ActionTypes.COMMIT:
          {
            // Consider the last committed state the new starting point.
            // Squash any staged actions into a single committed state.
            actionsById = { 0: liftAction(INIT_ACTION) };
            nextActionId = 1;
            stagedActionIds = [0];
            skippedActionIds = [];
            committedState = computedStates[currentStateIndex].state;
            currentStateIndex = 0;
            computedStates = [];
            break;
          }
        case ActionTypes.ROLLBACK:
          {
            // Forget about any staged actions.
            // Start again from the last committed state.
            actionsById = { 0: liftAction(INIT_ACTION) };
            nextActionId = 1;
            stagedActionIds = [0];
            skippedActionIds = [];
            currentStateIndex = 0;
            computedStates = [];
            break;
          }
        case ActionTypes.TOGGLE_ACTION:
          {
            var _ret = function () {
              // Toggle whether an action with given ID is skipped.
              // Being skipped means it is a no-op during the computation.
              var actionId = liftedAction.id;

              var index = skippedActionIds.indexOf(actionId);
              if (index === -1) {
                skippedActionIds = [actionId].concat(skippedActionIds);
              } else {
                skippedActionIds = skippedActionIds.filter(function (id) {
                  return id !== actionId;
                });
              }
              // Optimization: we know history before this action hasn't changed
              minInvalidatedStateIndex = stagedActionIds.indexOf(actionId);
              return 'break';
            }();

            if (_ret === 'break') break;
          }
        case ActionTypes.SET_ACTIONS_ACTIVE:
          {
            // Toggle whether an action with given ID is skipped.
            // Being skipped means it is a no-op during the computation.
            var start = liftedAction.start;
            var end = liftedAction.end;
            var active = liftedAction.active;

            var actionIds = [];
            for (var i = start; i < end; i++) {
              actionIds.push(i);
            }if (active) {
              skippedActionIds = (0, _difference2.default)(skippedActionIds, actionIds);
            } else {
              skippedActionIds = (0, _union2.default)(skippedActionIds, actionIds);
            }

            // Optimization: we know history before this action hasn't changed
            minInvalidatedStateIndex = stagedActionIds.indexOf(start);
            break;
          }
        case ActionTypes.JUMP_TO_STATE:
          {
            // Without recomputing anything, move the pointer that tell us
            // which state is considered the current one. Useful for sliders.
            currentStateIndex = liftedAction.index;
            // Optimization: we know the history has not changed.
            minInvalidatedStateIndex = Infinity;
            break;
          }
        case ActionTypes.JUMP_TO_ACTION:
          {
            // Jumps to a corresponding state to a specific action.
            // Useful when filtering actions.
            var _index = stagedActionIds.indexOf(liftedAction.actionId);
            if (_index !== -1) currentStateIndex = _index;
            minInvalidatedStateIndex = Infinity;
            break;
          }
        case ActionTypes.SWEEP:
          {
            // Forget any actions that are currently being skipped.
            stagedActionIds = (0, _difference2.default)(stagedActionIds, skippedActionIds);
            skippedActionIds = [];
            currentStateIndex = Math.min(currentStateIndex, stagedActionIds.length - 1);
            break;
          }
        case ActionTypes.REORDER_ACTION:
          {
            // Recompute actions in a new order.
            var _actionId = liftedAction.actionId;
            var idx = stagedActionIds.indexOf(_actionId);
            // do nothing in case the action is already removed or trying to move the first action
            if (idx < 1) break;
            var beforeActionId = liftedAction.beforeActionId;
            var newIdx = stagedActionIds.indexOf(beforeActionId);
            if (newIdx < 1) {
              // move to the beginning or to the end
              var count = stagedActionIds.length;
              newIdx = beforeActionId > stagedActionIds[count - 1] ? count : 1;
            }
            var diff = idx - newIdx;

            if (diff > 0) {
              // move left
              stagedActionIds = [].concat(stagedActionIds.slice(0, newIdx), [_actionId], stagedActionIds.slice(newIdx, idx), stagedActionIds.slice(idx + 1));
              minInvalidatedStateIndex = newIdx;
            } else if (diff < 0) {
              // move right
              stagedActionIds = [].concat(stagedActionIds.slice(0, idx), stagedActionIds.slice(idx + 1, newIdx), [_actionId], stagedActionIds.slice(newIdx));
              minInvalidatedStateIndex = idx;
            }
            break;
          }
        case ActionTypes.IMPORT_STATE:
          {
            if (Array.isArray(liftedAction.nextLiftedState)) {
              // recompute array of actions
              actionsById = { 0: liftAction(INIT_ACTION) };
              nextActionId = 1;
              stagedActionIds = [0];
              skippedActionIds = [];
              currentStateIndex = liftedAction.nextLiftedState.length;
              computedStates = [];
              committedState = liftedAction.preloadedState;
              minInvalidatedStateIndex = 0;
              // iterate through actions
              liftedAction.nextLiftedState.forEach(function (action) {
                actionsById[nextActionId] = liftAction(action);
                stagedActionIds.push(nextActionId);
                nextActionId++;
              });
            } else {
              var _liftedAction$nextLif = liftedAction.nextLiftedState;
              // Completely replace everything.

              monitorState = _liftedAction$nextLif.monitorState;
              actionsById = _liftedAction$nextLif.actionsById;
              nextActionId = _liftedAction$nextLif.nextActionId;
              stagedActionIds = _liftedAction$nextLif.stagedActionIds;
              skippedActionIds = _liftedAction$nextLif.skippedActionIds;
              committedState = _liftedAction$nextLif.committedState;
              currentStateIndex = _liftedAction$nextLif.currentStateIndex;
              computedStates = _liftedAction$nextLif.computedStates;

              if (liftedAction.noRecompute) {
                minInvalidatedStateIndex = Infinity;
              }
            }

            break;
          }
        case ActionTypes.LOCK_CHANGES:
          {
            isLocked = liftedAction.status;
            minInvalidatedStateIndex = Infinity;
            break;
          }
        case ActionTypes.PAUSE_RECORDING:
          {
            isPaused = liftedAction.status;
            if (isPaused) {
              return computePausedAction(true);
            }
            // Commit when unpausing
            actionsById = { 0: liftAction(INIT_ACTION) };
            nextActionId = 1;
            stagedActionIds = [0];
            skippedActionIds = [];
            committedState = computedStates[currentStateIndex].state;
            currentStateIndex = 0;
            computedStates = [];
            break;
          }
        case '@@redux/INIT':
          {
            if (options.shouldHotReload === false) {
              actionsById = { 0: liftAction(INIT_ACTION) };
              nextActionId = 1;
              stagedActionIds = [0];
              skippedActionIds = [];
              committedState = computedStates.length === 0 ? initialCommittedState : computedStates[currentStateIndex].state;
              currentStateIndex = 0;
              computedStates = [];
            }

            // Recompute states on hot reload and init.
            minInvalidatedStateIndex = 0;

            if (options.maxAge && stagedActionIds.length > options.maxAge) {
              // States must be recomputed before committing excess.
              computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, options.shouldCatchErrors);

              commitExcessActions(stagedActionIds.length - options.maxAge);

              // Avoid double computation.
              minInvalidatedStateIndex = Infinity;
            }

            break;
          }
        default:
          {
            // If the action is not recognized, it's a monitor action.
            // Optimization: a monitor action can't change history.
            minInvalidatedStateIndex = Infinity;
            break;
          }
      }

      computedStates = recomputeStates(computedStates, minInvalidatedStateIndex, reducer, committedState, actionsById, stagedActionIds, skippedActionIds, options.shouldCatchErrors);
      monitorState = monitorReducer(monitorState, liftedAction);
      return {
        monitorState: monitorState,
        actionsById: actionsById,
        nextActionId: nextActionId,
        stagedActionIds: stagedActionIds,
        skippedActionIds: skippedActionIds,
        committedState: committedState,
        currentStateIndex: currentStateIndex,
        computedStates: computedStates,
        isLocked: isLocked,
        isPaused: isPaused
      };
    };
  }

  /**
   * Provides an app's view into the state of the lifted store.
   */
  function unliftState(liftedState) {
    var computedStates = liftedState.computedStates;
    var currentStateIndex = liftedState.currentStateIndex;
    var state = computedStates[currentStateIndex].state;

    return state;
  }

  /**
   * Provides an app's view into the lifted store.
   */
  function unliftStore(liftedStore, liftReducer) {
    var _extends3;

    var lastDefinedState = void 0;

    function getState() {
      var state = unliftState(liftedStore.getState());
      if (state !== undefined) {
        lastDefinedState = state;
      }
      return lastDefinedState;
    }

    return _extends({}, liftedStore, (_extends3 = {

      liftedStore: liftedStore,

      dispatch: function dispatch(action) {
        liftedStore.dispatch(liftAction(action));
        return action;
      },

      getState: getState,

      replaceReducer: function replaceReducer(nextReducer) {
        liftedStore.replaceReducer(liftReducer(nextReducer));
      }
    }, _extends3[_symbolObservable2.default] = function () {
      return _extends({}, liftedStore[_symbolObservable2.default](), {
        subscribe: function subscribe(observer) {
          if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object') {
            throw new TypeError('Expected the observer to be an object.');
          }

          function observeState() {
            if (observer.next) {
              observer.next(getState());
            }
          }

          observeState();
          var unsubscribe = liftedStore.subscribe(observeState);
          return { unsubscribe: unsubscribe };
        }
      });
    }, _extends3));
  }

  /**
   * Redux instrumentation store enhancer.
   */
  function instrument() {
    var monitorReducer = arguments.length <= 0 || arguments[0] === undefined ? function () {
      return null;
    } : arguments[0];
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    /* eslint-disable no-eq-null */
    if (options.maxAge != null && options.maxAge < 2) {
      /* eslint-enable */
      throw new Error('DevTools.instrument({ maxAge }) option, if specified, ' + 'may not be less than 2.');
    }

    return function (createStore) {
      return function (reducer, initialState, enhancer) {

        function liftReducer(r) {
          if (typeof r !== 'function') {
            if (r && typeof r.default === 'function') {
              throw new Error('Expected the reducer to be a function. ' + 'Instead got an object with a "default" field. ' + 'Did you pass a module instead of the default export? ' + 'Try passing require(...).default instead.');
            }
            throw new Error('Expected the reducer to be a function.');
          }
          return liftReducerWith(r, initialState, monitorReducer, options);
        }

        var liftedStore = createStore(liftReducer(reducer), enhancer);
        if (liftedStore.liftedStore) {
          throw new Error('DevTools instrumentation should not be applied more than once. ' + 'Check your store configuration.');
        }

        return unliftStore(liftedStore, liftReducer);
      };
    };
  }

  /***/
},
/* 175 */
/***/function (module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(26),
      isObject = __webpack_require__(91);

  /** `Object#toString` result references. */
  var asyncTag = '[object AsyncFunction]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      proxyTag = '[object Proxy]';

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction(value) {
    if (!isObject(value)) {
      return false;
    }
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
  }

  module.exports = isFunction;

  /***/
},
/* 176 */
/***/function (module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function (global) {
    /** Detect free variable `global` from Node.js. */
    var freeGlobal = (typeof global === "undefined" ? "undefined" : _typeof4(global)) == 'object' && global && global.Object === Object && global;

    module.exports = freeGlobal;

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(16));

  /***/
},
/* 177 */
/***/function (module, exports) {

  /** Used for built-in method references. */
  var funcProto = Function.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /**
   * Converts `func` to its source code.
   *
   * @private
   * @param {Function} func The function to convert.
   * @returns {string} Returns the source code.
   */
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}
      try {
        return func + '';
      } catch (e) {}
    }
    return '';
  }

  module.exports = toSource;

  /***/
},
/* 178 */
/***/function (module, exports) {

  /**
   * Performs a
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * comparison between two values to determine if they are equivalent.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.eq(object, object);
   * // => true
   *
   * _.eq(object, other);
   * // => false
   *
   * _.eq('a', 'a');
   * // => true
   *
   * _.eq('a', Object('a'));
   * // => false
   *
   * _.eq(NaN, NaN);
   * // => true
   */
  function eq(value, other) {
    return value === other || value !== value && other !== other;
  }

  module.exports = eq;

  /***/
},
/* 179 */
/***/function (module, exports, __webpack_require__) {

  var baseIndexOf = __webpack_require__(451);

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  module.exports = arrayIncludes;

  /***/
},
/* 180 */
/***/function (module, exports) {

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  module.exports = arrayIncludesWith;

  /***/
},
/* 181 */
/***/function (module, exports) {

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  module.exports = arrayMap;

  /***/
},
/* 182 */
/***/function (module, exports) {

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function (value) {
      return func(value);
    };
  }

  module.exports = baseUnary;

  /***/
},
/* 183 */
/***/function (module, exports, __webpack_require__) {

  var arrayPush = __webpack_require__(184),
      isFlattenable = __webpack_require__(455);

  /**
   * The base implementation of `_.flatten` with support for restricting flattening.
   *
   * @private
   * @param {Array} array The array to flatten.
   * @param {number} depth The maximum recursion depth.
   * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
   * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
   * @param {Array} [result=[]] The initial result value.
   * @returns {Array} Returns the new flattened array.
   */
  function baseFlatten(array, depth, predicate, isStrict, result) {
    var index = -1,
        length = array.length;

    predicate || (predicate = isFlattenable);
    result || (result = []);

    while (++index < length) {
      var value = array[index];
      if (depth > 0 && predicate(value)) {
        if (depth > 1) {
          // Recursively flatten arrays (susceptible to call stack limits).
          baseFlatten(value, depth - 1, predicate, isStrict, result);
        } else {
          arrayPush(result, value);
        }
      } else if (!isStrict) {
        result[result.length] = value;
      }
    }
    return result;
  }

  module.exports = baseFlatten;

  /***/
},
/* 184 */
/***/function (module, exports) {

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  module.exports = arrayPush;

  /***/
},
/* 185 */
/***/function (module, exports, __webpack_require__) {

  var identity = __webpack_require__(59),
      overRest = __webpack_require__(457),
      setToString = __webpack_require__(459);

  /**
   * The base implementation of `_.rest` which doesn't validate or coerce arguments.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @returns {Function} Returns the new function.
   */
  function baseRest(func, start) {
    return setToString(overRest(func, start, identity), func + '');
  }

  module.exports = baseRest;

  /***/
},
/* 186 */
/***/function (module, exports, __webpack_require__) {

  var getNative = __webpack_require__(19);

  var defineProperty = function () {
    try {
      var func = getNative(Object, 'defineProperty');
      func({}, '', {});
      return func;
    } catch (e) {}
  }();

  module.exports = defineProperty;

  /***/
},
/* 187 */
/***/function (module, exports, __webpack_require__) {

  var isArrayLike = __webpack_require__(188),
      isObjectLike = __webpack_require__(20);

  /**
   * This method is like `_.isArrayLike` except that it also checks if `value`
   * is an object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array-like object,
   *  else `false`.
   * @example
   *
   * _.isArrayLikeObject([1, 2, 3]);
   * // => true
   *
   * _.isArrayLikeObject(document.body.children);
   * // => true
   *
   * _.isArrayLikeObject('abc');
   * // => false
   *
   * _.isArrayLikeObject(_.noop);
   * // => false
   */
  function isArrayLikeObject(value) {
    return isObjectLike(value) && isArrayLike(value);
  }

  module.exports = isArrayLikeObject;

  /***/
},
/* 188 */
/***/function (module, exports, __webpack_require__) {

  var isFunction = __webpack_require__(175),
      isLength = __webpack_require__(95);

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }

  module.exports = isArrayLike;

  /***/
},
/* 189 */
/***/function (module, exports, __webpack_require__) {

  var getNative = __webpack_require__(19),
      root = __webpack_require__(9);

  /* Built-in method references that are verified to be native. */
  var Set = getNative(root, 'Set');

  module.exports = Set;

  /***/
},
/* 190 */
/***/function (module, exports) {

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function (arg) {
      return func(transform(arg));
    };
  }

  module.exports = overArg;

  /***/
},
/* 191 */
/***/function (module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function (module) {
    var root = __webpack_require__(9),
        stubFalse = __webpack_require__(477);

    /** Detect free variable `exports`. */
    var freeExports = (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) == 'object' && exports && !exports.nodeType && exports;

    /** Detect free variable `module`. */
    var freeModule = freeExports && (typeof module === "undefined" ? "undefined" : _typeof4(module)) == 'object' && module && !module.nodeType && module;

    /** Detect the popular CommonJS extension `module.exports`. */
    var moduleExports = freeModule && freeModule.exports === freeExports;

    /** Built-in value references. */
    var Buffer = moduleExports ? root.Buffer : undefined;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    module.exports = isBuffer;

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(69)(module));

  /***/
},
/* 192 */
/***/function (module, exports) {

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
  }

  module.exports = isIndex;

  /***/
},
/* 193 */
/***/function (module, exports, __webpack_require__) {

  var baseIsTypedArray = __webpack_require__(478),
      baseUnary = __webpack_require__(182),
      nodeUtil = __webpack_require__(479);

  /* Node.js helper references. */
  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /**
   * Checks if `value` is classified as a typed array.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   * @example
   *
   * _.isTypedArray(new Uint8Array);
   * // => true
   *
   * _.isTypedArray([]);
   * // => false
   */
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

  module.exports = isTypedArray;

  /***/
},
/* 194 */
/***/function (module, exports, __webpack_require__) {

  var ListCache = __webpack_require__(56),
      stackClear = __webpack_require__(486),
      stackDelete = __webpack_require__(487),
      stackGet = __webpack_require__(488),
      stackHas = __webpack_require__(489),
      stackSet = __webpack_require__(490);

  /**
   * Creates a stack cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }

  // Add methods to `Stack`.
  Stack.prototype.clear = stackClear;
  Stack.prototype['delete'] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;

  module.exports = Stack;

  /***/
},
/* 195 */
/***/function (module, exports, __webpack_require__) {

  var baseIsEqualDeep = __webpack_require__(491),
      isObjectLike = __webpack_require__(20);

  /**
   * The base implementation of `_.isEqual` which supports partial comparisons
   * and tracks traversed objects.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @param {boolean} bitmask The bitmask flags.
   *  1 - Unordered comparison
   *  2 - Partial comparison
   * @param {Function} [customizer] The function to customize comparisons.
   * @param {Object} [stack] Tracks traversed `value` and `other` objects.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   */
  function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
      return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
  }

  module.exports = baseIsEqual;

  /***/
},
/* 196 */
/***/function (module, exports, __webpack_require__) {

  var SetCache = __webpack_require__(89),
      arraySome = __webpack_require__(492),
      cacheHas = __webpack_require__(93);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * A specialized version of `baseIsEqualDeep` for arrays with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Array} array The array to compare.
   * @param {Array} other The other array to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `array` and `other` objects.
   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
   */
  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        arrLength = array.length,
        othLength = other.length;

    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(array);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var index = -1,
        result = true,
        seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;

    stack.set(array, other);
    stack.set(other, array);

    // Ignore non-index properties.
    while (++index < arrLength) {
      var arrValue = array[index],
          othValue = other[index];

      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
      }
      if (compared !== undefined) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      // Recursively compare arrays (susceptible to call stack limits).
      if (seen) {
        if (!arraySome(other, function (othValue, othIndex) {
          if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
            return seen.push(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
        result = false;
        break;
      }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
  }

  module.exports = equalArrays;

  /***/
},
/* 197 */
/***/function (module, exports, __webpack_require__) {

  var isObject = __webpack_require__(91);

  /**
   * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` if suitable for strict
   *  equality comparisons, else `false`.
   */
  function isStrictComparable(value) {
    return value === value && !isObject(value);
  }

  module.exports = isStrictComparable;

  /***/
},
/* 198 */
/***/function (module, exports) {

  /**
   * A specialized version of `matchesProperty` for source values suitable
   * for strict equality comparisons, i.e. `===`.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @param {*} srcValue The value to match.
   * @returns {Function} Returns the new spec function.
   */
  function matchesStrictComparable(key, srcValue) {
    return function (object) {
      if (object == null) {
        return false;
      }
      return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
    };
  }

  module.exports = matchesStrictComparable;

  /***/
},
/* 199 */
/***/function (module, exports, __webpack_require__) {

  var castPath = __webpack_require__(200),
      toKey = __webpack_require__(60);

  /**
   * The base implementation of `_.get` without support for default values.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the property to get.
   * @returns {*} Returns the resolved value.
   */
  function baseGet(object, path) {
    path = castPath(path, object);

    var index = 0,
        length = path.length;

    while (object != null && index < length) {
      object = object[toKey(path[index++])];
    }
    return index && index == length ? object : undefined;
  }

  module.exports = baseGet;

  /***/
},
/* 200 */
/***/function (module, exports, __webpack_require__) {

  var isArray = __webpack_require__(10),
      isKey = __webpack_require__(98),
      stringToPath = __webpack_require__(509),
      toString = __webpack_require__(512);

  /**
   * Casts `value` to a path array if it's not one.
   *
   * @private
   * @param {*} value The value to inspect.
   * @param {Object} [object] The object to query keys on.
   * @returns {Array} Returns the cast property path array.
   */
  function castPath(value, object) {
    if (isArray(value)) {
      return value;
    }
    return isKey(value, object) ? [value] : stringToPath(toString(value));
  }

  module.exports = castPath;

  /***/
},
/* 201 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  function _interopRequire(obj) {
    return obj && obj.__esModule ? obj['default'] : obj;
  }

  var _threezerotwofour = __webpack_require__(525);

  exports.threezerotwofour = _interopRequire(_threezerotwofour);

  var _apathy = __webpack_require__(526);

  exports.apathy = _interopRequire(_apathy);

  var _ashes = __webpack_require__(527);

  exports.ashes = _interopRequire(_ashes);

  var _atelierDune = __webpack_require__(528);

  exports.atelierDune = _interopRequire(_atelierDune);

  var _atelierForest = __webpack_require__(529);

  exports.atelierForest = _interopRequire(_atelierForest);

  var _atelierHeath = __webpack_require__(530);

  exports.atelierHeath = _interopRequire(_atelierHeath);

  var _atelierLakeside = __webpack_require__(531);

  exports.atelierLakeside = _interopRequire(_atelierLakeside);

  var _atelierSeaside = __webpack_require__(532);

  exports.atelierSeaside = _interopRequire(_atelierSeaside);

  var _bespin = __webpack_require__(533);

  exports.bespin = _interopRequire(_bespin);

  var _brewer = __webpack_require__(534);

  exports.brewer = _interopRequire(_brewer);

  var _bright = __webpack_require__(535);

  exports.bright = _interopRequire(_bright);

  var _chalk = __webpack_require__(536);

  exports.chalk = _interopRequire(_chalk);

  var _codeschool = __webpack_require__(537);

  exports.codeschool = _interopRequire(_codeschool);

  var _colors = __webpack_require__(538);

  exports.colors = _interopRequire(_colors);

  var _default = __webpack_require__(539);

  exports['default'] = _interopRequire(_default);

  var _eighties = __webpack_require__(540);

  exports.eighties = _interopRequire(_eighties);

  var _embers = __webpack_require__(541);

  exports.embers = _interopRequire(_embers);

  var _flat = __webpack_require__(542);

  exports.flat = _interopRequire(_flat);

  var _google = __webpack_require__(543);

  exports.google = _interopRequire(_google);

  var _grayscale = __webpack_require__(544);

  exports.grayscale = _interopRequire(_grayscale);

  var _greenscreen = __webpack_require__(545);

  exports.greenscreen = _interopRequire(_greenscreen);

  var _harmonic = __webpack_require__(546);

  exports.harmonic = _interopRequire(_harmonic);

  var _hopscotch = __webpack_require__(547);

  exports.hopscotch = _interopRequire(_hopscotch);

  var _isotope = __webpack_require__(548);

  exports.isotope = _interopRequire(_isotope);

  var _marrakesh = __webpack_require__(549);

  exports.marrakesh = _interopRequire(_marrakesh);

  var _mocha = __webpack_require__(550);

  exports.mocha = _interopRequire(_mocha);

  var _monokai = __webpack_require__(551);

  exports.monokai = _interopRequire(_monokai);

  var _ocean = __webpack_require__(552);

  exports.ocean = _interopRequire(_ocean);

  var _paraiso = __webpack_require__(553);

  exports.paraiso = _interopRequire(_paraiso);

  var _pop = __webpack_require__(554);

  exports.pop = _interopRequire(_pop);

  var _railscasts = __webpack_require__(555);

  exports.railscasts = _interopRequire(_railscasts);

  var _shapeshifter = __webpack_require__(556);

  exports.shapeshifter = _interopRequire(_shapeshifter);

  var _solarized = __webpack_require__(557);

  exports.solarized = _interopRequire(_solarized);

  var _summerfruit = __webpack_require__(558);

  exports.summerfruit = _interopRequire(_summerfruit);

  var _tomorrow = __webpack_require__(559);

  exports.tomorrow = _interopRequire(_tomorrow);

  var _tube = __webpack_require__(560);

  exports.tube = _interopRequire(_tube);

  var _twilight = __webpack_require__(561);

  exports.twilight = _interopRequire(_twilight);

  /***/
},
/* 202 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports.updateScrollTop = updateScrollTop;
  exports.startConsecutiveToggle = startConsecutiveToggle;
  var UPDATE_SCROLL_TOP = exports.UPDATE_SCROLL_TOP = '@@redux-devtools-log-monitor/UPDATE_SCROLL_TOP';
  function updateScrollTop(scrollTop) {
    return { type: UPDATE_SCROLL_TOP, scrollTop: scrollTop };
  }

  var START_CONSECUTIVE_TOGGLE = exports.START_CONSECUTIVE_TOGGLE = '@@redux-devtools-log-monitor/START_CONSECUTIVE_TOGGLE';
  function startConsecutiveToggle(id) {
    return { type: START_CONSECUTIVE_TOGGLE, id: id };
  }

  /***/
},
/* 203 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = undefined;

  var _objectWithoutProperties2 = __webpack_require__(40);

  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

  var _classCallCheck2 = __webpack_require__(100);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _possibleConstructorReturn2 = __webpack_require__(101);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = __webpack_require__(119);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _keys = __webpack_require__(64);

  var _keys2 = _interopRequireDefault(_keys);

  var _class, _temp; // ES6 + inline style port of JSONViewer https://bitbucket.org/davevedder/react-json-viewer/
  // all credits and original code to the author
  // Dave Vedder <veddermatic@gmail.com> http://www.eskimospy.com/
  // port by Daniele Zannotti http://www.github.com/dzannotti <dzannotti@me.com>

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _JSONNode = __webpack_require__(216);

  var _JSONNode2 = _interopRequireDefault(_JSONNode);

  var _createStylingFromTheme = __webpack_require__(620);

  var _createStylingFromTheme2 = _interopRequireDefault(_createStylingFromTheme);

  var _reactBase16Styling = __webpack_require__(220);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var identity = function identity(value) {
    return value;
  };
  var expandRootNode = function expandRootNode(keyName, data, level) {
    return level === 0;
  };
  var defaultItemString = function defaultItemString(type, data, itemType, itemString) {
    return _react2['default'].createElement('span', null, itemType, ' ', itemString);
  };
  var defaultLabelRenderer = function defaultLabelRenderer(_ref) {
    var label = _ref[0];
    return _react2['default'].createElement('span', null, label, ':');
  };
  var noCustomNode = function noCustomNode() {
    return false;
  };

  function checkLegacyTheming(theme, props) {
    var deprecatedStylingMethodsMap = {
      getArrowStyle: 'arrow',
      getListStyle: 'nestedNodeChildren',
      getItemStringStyle: 'nestedNodeItemString',
      getLabelStyle: 'label',
      getValueStyle: 'valueText'
    };

    var deprecatedStylingMethods = (0, _keys2['default'])(deprecatedStylingMethodsMap).filter(function (name) {
      return props[name];
    });

    if (deprecatedStylingMethods.length > 0) {
      if (typeof theme === 'string') {
        theme = {
          extend: theme
        };
      } else {
        theme = (0, _extends3['default'])({}, theme);
      }

      deprecatedStylingMethods.forEach(function (name) {
        console.error( // eslint-disable-line no-console
        'Styling method "' + name + '" is deprecated, use "theme" property instead');

        theme[deprecatedStylingMethodsMap[name]] = function (_ref2) {
          for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          var style = _ref2.style;
          return {
            style: (0, _extends3['default'])({}, style, props[name].apply(props, args))
          };
        };
      });
    }

    return theme;
  }

  function getStateFromProps(props) {
    var theme = checkLegacyTheming(props.theme, props);
    if (props.invertTheme) {
      if (typeof theme === 'string') {
        theme = theme + ':inverted';
      } else if (theme && theme.extend) {
        if (typeof theme === 'string') {
          theme = (0, _extends3['default'])({}, theme, { extend: theme.extend + ':inverted' });
        } else {
          theme = (0, _extends3['default'])({}, theme, { extend: (0, _reactBase16Styling.invertTheme)(theme.extend) });
        }
      } else if (theme) {
        theme = (0, _reactBase16Styling.invertTheme)(theme);
      }
    }
    return {
      styling: (0, _createStylingFromTheme2['default'])(theme)
    };
  }

  var JSONTree = (_temp = _class = function (_React$Component) {
    (0, _inherits3['default'])(JSONTree, _React$Component);

    function JSONTree(props) {
      (0, _classCallCheck3['default'])(this, JSONTree);

      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));

      _this.state = getStateFromProps(props);
      return _this;
    }

    JSONTree.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (['theme', 'invertTheme'].find(function (k) {
        return nextProps[k] !== _this2.props[k];
      })) {
        this.setState(getStateFromProps(nextProps));
      }
    };

    JSONTree.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {
      var _this3 = this;

      return !!(0, _keys2['default'])(nextProps).find(function (k) {
        return k === 'keyPath' ? nextProps[k].join('/') !== _this3.props[k].join('/') : nextProps[k] !== _this3.props[k];
      });
    };

    JSONTree.prototype.render = function render() {
      var _props = this.props,
          value = _props.data,
          keyPath = _props.keyPath,
          postprocessValue = _props.postprocessValue,
          hideRoot = _props.hideRoot,
          theme = _props.theme,
          _ = _props.invertTheme,
          rest = (0, _objectWithoutProperties3['default'])(_props, ['data', 'keyPath', 'postprocessValue', 'hideRoot', 'theme', 'invertTheme']);
      var styling = this.state.styling;

      return _react2['default'].createElement('ul', styling('tree'), _react2['default'].createElement(_JSONNode2['default'], (0, _extends3['default'])({}, (0, _extends3['default'])({ postprocessValue: postprocessValue, hideRoot: hideRoot, styling: styling }, rest), {
        keyPath: hideRoot ? [] : keyPath,
        value: postprocessValue(value)
      })));
    };

    return JSONTree;
  }(_react2['default'].Component), _class.propTypes = {
    data: _propTypes2['default'].oneOfType([_propTypes2['default'].array, _propTypes2['default'].object]).isRequired,
    hideRoot: _propTypes2['default'].bool,
    theme: _propTypes2['default'].oneOfType([_propTypes2['default'].object, _propTypes2['default'].string]),
    invertTheme: _propTypes2['default'].bool,
    keyPath: _propTypes2['default'].arrayOf(_propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number])),
    postprocessValue: _propTypes2['default'].func,
    sortObjectKeys: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].bool])
  }, _class.defaultProps = {
    shouldExpandNode: expandRootNode,
    hideRoot: false,
    keyPath: ['root'],
    getItemString: defaultItemString,
    labelRenderer: defaultLabelRenderer,
    valueRenderer: identity,
    postprocessValue: identity,
    isCustomNode: noCustomNode,
    collectionLimit: 50,
    invertTheme: true
  }, _temp);
  exports['default'] = JSONTree;

  /***/
},
/* 204 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(569), __esModule: true };

  /***/
},
/* 205 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  var LIBRARY = __webpack_require__(106);
  var $export = __webpack_require__(21);
  var redefine = __webpack_require__(209);
  var hide = __webpack_require__(27);
  var has = __webpack_require__(22);
  var Iterators = __webpack_require__(41);
  var $iterCreate = __webpack_require__(572);
  var setToStringTag = __webpack_require__(113);
  var getPrototypeOf = __webpack_require__(578);
  var ITERATOR = __webpack_require__(11)('iterator');
  var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
  var FF_ITERATOR = '@@iterator';
  var KEYS = 'keys';
  var VALUES = 'values';

  var returnThis = function returnThis() {
    return this;
  };

  module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
    $iterCreate(Constructor, NAME, next);
    var getMethod = function getMethod(kind) {
      if (!BUGGY && kind in proto) return proto[kind];
      switch (kind) {
        case KEYS:
          return function keys() {
            return new Constructor(this, kind);
          };
        case VALUES:
          return function values() {
            return new Constructor(this, kind);
          };
      }return function entries() {
        return new Constructor(this, kind);
      };
    };
    var TAG = NAME + ' Iterator';
    var DEF_VALUES = DEFAULT == VALUES;
    var VALUES_BUG = false;
    var proto = Base.prototype;
    var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
    var $default = $native || getMethod(DEFAULT);
    var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
    var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
    var methods, key, IteratorPrototype;
    // Fix native
    if ($anyNative) {
      IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
      if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
        // Set @@toStringTag to native iterators
        setToStringTag(IteratorPrototype, TAG, true);
        // fix for some old engines
        if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);
      }
    }
    // fix Array#{values, @@iterator}.name in V8 / FF
    if (DEF_VALUES && $native && $native.name !== VALUES) {
      VALUES_BUG = true;
      $default = function values() {
        return $native.call(this);
      };
    }
    // Define iterator
    if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
      hide(proto, ITERATOR, $default);
    }
    // Plug for library
    Iterators[NAME] = $default;
    Iterators[TAG] = returnThis;
    if (DEFAULT) {
      methods = {
        values: DEF_VALUES ? $default : getMethod(VALUES),
        keys: IS_SET ? $default : getMethod(KEYS),
        entries: $entries
      };
      if (FORCED) for (key in methods) {
        if (!(key in proto)) redefine(proto, key, methods[key]);
      } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
    }
    return methods;
  };

  /***/
},
/* 206 */
/***/function (module, exports, __webpack_require__) {

  // optional / simple context binding
  var aFunction = __webpack_require__(571);
  module.exports = function (fn, that, length) {
    aFunction(fn);
    if (that === undefined) return fn;
    switch (length) {
      case 1:
        return function (a) {
          return fn.call(that, a);
        };
      case 2:
        return function (a, b) {
          return fn.call(that, a, b);
        };
      case 3:
        return function (a, b, c) {
          return fn.call(that, a, b, c);
        };
    }
    return function () /* ...args */{
      return fn.apply(that, arguments);
    };
  };

  /***/
},
/* 207 */
/***/function (module, exports, __webpack_require__) {

  module.exports = !__webpack_require__(31) && !__webpack_require__(32)(function () {
    return Object.defineProperty(__webpack_require__(208)('div'), 'a', { get: function get() {
        return 7;
      } }).a != 7;
  });

  /***/
},
/* 208 */
/***/function (module, exports, __webpack_require__) {

  var isObject = __webpack_require__(30);
  var document = __webpack_require__(14).document;
  // typeof document.createElement is 'object' in old IE
  var is = isObject(document) && isObject(document.createElement);
  module.exports = function (it) {
    return is ? document.createElement(it) : {};
  };

  /***/
},
/* 209 */
/***/function (module, exports, __webpack_require__) {

  module.exports = __webpack_require__(27);

  /***/
},
/* 210 */
/***/function (module, exports, __webpack_require__) {

  var has = __webpack_require__(22);
  var toIObject = __webpack_require__(33);
  var arrayIndexOf = __webpack_require__(574)(false);
  var IE_PROTO = __webpack_require__(110)('IE_PROTO');

  module.exports = function (object, names) {
    var O = toIObject(object);
    var i = 0;
    var result = [];
    var key;
    for (key in O) {
      if (key != IE_PROTO) has(O, key) && result.push(key);
    } // Don't enum bug & hidden keys
    while (names.length > i) {
      if (has(O, key = names[i++])) {
        ~arrayIndexOf(result, key) || result.push(key);
      }
    }return result;
  };

  /***/
},
/* 211 */
/***/function (module, exports, __webpack_require__) {

  // fallback for non-array-like ES3 and non-enumerable old V8 strings
  var cof = __webpack_require__(109);
  // eslint-disable-next-line no-prototype-builtins
  module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
    return cof(it) == 'String' ? it.split('') : Object(it);
  };

  /***/
},
/* 212 */
/***/function (module, exports, __webpack_require__) {

  // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
  var toIObject = __webpack_require__(33);
  var gOPN = __webpack_require__(213).f;
  var toString = {}.toString;

  var windowNames = (typeof window === "undefined" ? "undefined" : _typeof4(window)) == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

  var getWindowNames = function getWindowNames(it) {
    try {
      return gOPN(it);
    } catch (e) {
      return windowNames.slice();
    }
  };

  module.exports.f = function getOwnPropertyNames(it) {
    return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
  };

  /***/
},
/* 213 */
/***/function (module, exports, __webpack_require__) {

  // 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
  var $keys = __webpack_require__(210);
  var hiddenKeys = __webpack_require__(112).concat('length', 'prototype');

  exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
    return $keys(O, hiddenKeys);
  };

  /***/
},
/* 214 */
/***/function (module, exports, __webpack_require__) {

  var pIE = __webpack_require__(63);
  var createDesc = __webpack_require__(61);
  var toIObject = __webpack_require__(33);
  var toPrimitive = __webpack_require__(107);
  var has = __webpack_require__(22);
  var IE8_DOM_DEFINE = __webpack_require__(207);
  var gOPD = Object.getOwnPropertyDescriptor;

  exports.f = __webpack_require__(31) ? gOPD : function getOwnPropertyDescriptor(O, P) {
    O = toIObject(O);
    P = toPrimitive(P, true);
    if (IE8_DOM_DEFINE) try {
      return gOPD(O, P);
    } catch (e) {/* empty */}
    if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
  };

  /***/
},
/* 215 */
/***/function (module, exports, __webpack_require__) {

  // most Object methods by ES6 should accept primitives
  var $export = __webpack_require__(21);
  var core = __webpack_require__(4);
  var fails = __webpack_require__(32);
  module.exports = function (KEY, exec) {
    var fn = (core.Object || {})[KEY] || Object[KEY];
    var exp = {};
    exp[KEY] = exec(fn);
    $export($export.S + $export.F * fails(function () {
      fn(1);
    }), 'Object', exp);
  };

  /***/
},
/* 216 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _objectWithoutProperties2 = __webpack_require__(40);

  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _objType = __webpack_require__(604);

  var _objType2 = _interopRequireDefault(_objType);

  var _JSONObjectNode = __webpack_require__(605);

  var _JSONObjectNode2 = _interopRequireDefault(_JSONObjectNode);

  var _JSONArrayNode = __webpack_require__(613);

  var _JSONArrayNode2 = _interopRequireDefault(_JSONArrayNode);

  var _JSONIterableNode = __webpack_require__(614);

  var _JSONIterableNode2 = _interopRequireDefault(_JSONIterableNode);

  var _JSONValueNode = __webpack_require__(619);

  var _JSONValueNode2 = _interopRequireDefault(_JSONValueNode);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var JSONNode = function JSONNode(_ref) {
    var getItemString = _ref.getItemString,
        keyPath = _ref.keyPath,
        labelRenderer = _ref.labelRenderer,
        styling = _ref.styling,
        value = _ref.value,
        valueRenderer = _ref.valueRenderer,
        isCustomNode = _ref.isCustomNode,
        rest = (0, _objectWithoutProperties3['default'])(_ref, ['getItemString', 'keyPath', 'labelRenderer', 'styling', 'value', 'valueRenderer', 'isCustomNode']);

    var nodeType = isCustomNode(value) ? 'Custom' : (0, _objType2['default'])(value);

    var simpleNodeProps = {
      getItemString: getItemString,
      key: keyPath[0],
      keyPath: keyPath,
      labelRenderer: labelRenderer,
      nodeType: nodeType,
      styling: styling,
      value: value,
      valueRenderer: valueRenderer
    };

    var nestedNodeProps = (0, _extends3['default'])({}, rest, simpleNodeProps, {
      data: value,
      isCustomNode: isCustomNode
    });

    switch (nodeType) {
      case 'Object':
      case 'Error':
      case 'WeakMap':
      case 'WeakSet':
        return _react2['default'].createElement(_JSONObjectNode2['default'], nestedNodeProps);
      case 'Array':
        return _react2['default'].createElement(_JSONArrayNode2['default'], nestedNodeProps);
      case 'Iterable':
      case 'Map':
      case 'Set':
        return _react2['default'].createElement(_JSONIterableNode2['default'], nestedNodeProps);
      case 'String':
        return _react2['default'].createElement(_JSONValueNode2['default'], (0, _extends3['default'])({}, simpleNodeProps, { valueGetter: function valueGetter(raw) {
            return '"' + raw + '"';
          } }));
      case 'Number':
        return _react2['default'].createElement(_JSONValueNode2['default'], simpleNodeProps);
      case 'Boolean':
        return _react2['default'].createElement(_JSONValueNode2['default'], (0, _extends3['default'])({}, simpleNodeProps, { valueGetter: function valueGetter(raw) {
            return raw ? 'true' : 'false';
          } }));
      case 'Date':
        return _react2['default'].createElement(_JSONValueNode2['default'], (0, _extends3['default'])({}, simpleNodeProps, { valueGetter: function valueGetter(raw) {
            return raw.toISOString();
          } }));
      case 'Null':
        return _react2['default'].createElement(_JSONValueNode2['default'], (0, _extends3['default'])({}, simpleNodeProps, { valueGetter: function valueGetter() {
            return 'null';
          } }));
      case 'Undefined':
        return _react2['default'].createElement(_JSONValueNode2['default'], (0, _extends3['default'])({}, simpleNodeProps, { valueGetter: function valueGetter() {
            return 'undefined';
          } }));
      case 'Function':
      case 'Symbol':
        return _react2['default'].createElement(_JSONValueNode2['default'], (0, _extends3['default'])({}, simpleNodeProps, { valueGetter: function valueGetter(raw) {
            return raw.toString();
          } }));
      case 'Custom':
        return _react2['default'].createElement(_JSONValueNode2['default'], simpleNodeProps);
      default:
        return null;
    }
  };

  JSONNode.propTypes = {
    getItemString: _propTypes2['default'].func.isRequired,
    keyPath: _propTypes2['default'].arrayOf(_propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number])).isRequired,
    labelRenderer: _propTypes2['default'].func.isRequired,
    styling: _propTypes2['default'].func.isRequired,
    value: _propTypes2['default'].any,
    valueRenderer: _propTypes2['default'].func.isRequired,
    isCustomNode: _propTypes2['default'].func.isRequired
  };

  exports['default'] = JSONNode;

  /***/
},
/* 217 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(606), __esModule: true };

  /***/
},
/* 218 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var JSONArrow = function JSONArrow(_ref) {
    var styling = _ref.styling,
        arrowStyle = _ref.arrowStyle,
        expanded = _ref.expanded,
        nodeType = _ref.nodeType,
        onClick = _ref.onClick;
    return _react2['default'].createElement('div', (0, _extends3['default'])({}, styling('arrowContainer', arrowStyle), {
      onClick: onClick
    }), _react2['default'].createElement('div', styling(['arrow', 'arrowSign'], nodeType, expanded, arrowStyle), "\u25B6", arrowStyle === 'double' && _react2['default'].createElement('div', styling(['arrowSign', 'arrowSignInner']), "\u25B6")));
  };

  JSONArrow.propTypes = {
    styling: _propTypes2['default'].func.isRequired,
    arrowStyle: _propTypes2['default'].oneOf(['single', 'double']),
    expanded: _propTypes2['default'].bool.isRequired,
    nodeType: _propTypes2['default'].string.isRequired,
    onClick: _propTypes2['default'].func.isRequired
  };

  JSONArrow.defaultProps = {
    arrowStyle: 'single'
  };

  exports['default'] = JSONArrow;

  /***/
},
/* 219 */
/***/function (module, exports, __webpack_require__) {

  // getting tag from 19.1.3.6 Object.prototype.toString()
  var cof = __webpack_require__(109);
  var TAG = __webpack_require__(11)('toStringTag');
  // ES3 wrong here
  var ARG = cof(function () {
    return arguments;
  }()) == 'Arguments';

  // fallback for IE11 Script Access Denied error
  var tryGet = function tryGet(it, key) {
    try {
      return it[key];
    } catch (e) {/* empty */}
  };

  module.exports = function (it) {
    var O, T, B;
    return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
  };

  /***/
},
/* 220 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.getBase16Theme = exports.createStyling = exports.invertTheme = undefined;

  var _typeof2 = __webpack_require__(102);

  var _typeof3 = _interopRequireDefault(_typeof2);

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _slicedToArray2 = __webpack_require__(622);

  var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

  var _keys = __webpack_require__(64);

  var _keys2 = _interopRequireDefault(_keys);

  var _lodash = __webpack_require__(626);

  var _lodash2 = _interopRequireDefault(_lodash);

  var _base = __webpack_require__(201);

  var base16 = _interopRequireWildcard(_base);

  var _rgb2hex = __webpack_require__(627);

  var _rgb2hex2 = _interopRequireDefault(_rgb2hex);

  var _parse = __webpack_require__(628);

  var _parse2 = _interopRequireDefault(_parse);

  var _lodash3 = __webpack_require__(633);

  var _lodash4 = _interopRequireDefault(_lodash3);

  var _colorConverters = __webpack_require__(634);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var DEFAULT_BASE16 = base16.default;

  var BASE16_KEYS = (0, _keys2.default)(DEFAULT_BASE16);

  // we need a correcting factor, so that a dark, but not black background color
  // converts to bright enough inversed color
  var flip = function flip(x) {
    return x < 0.25 ? 1 : x < 0.5 ? 0.9 - x : 1.1 - x;
  };

  var invertColor = (0, _lodash4.default)(_parse2.default, _colorConverters.rgb2yuv, function (_ref) {
    var _ref2 = (0, _slicedToArray3.default)(_ref, 3),
        y = _ref2[0],
        u = _ref2[1],
        v = _ref2[2];

    return [flip(y), u, v];
  }, _colorConverters.yuv2rgb, _rgb2hex2.default);

  var merger = function merger(styling) {
    return function (prevStyling) {
      return {
        className: [prevStyling.className, styling.className].filter(Boolean).join(' '),
        style: (0, _extends3.default)({}, prevStyling.style || {}, styling.style || {})
      };
    };
  };

  var mergeStyling = function mergeStyling(customStyling, defaultStyling) {
    if (customStyling === undefined) {
      return defaultStyling;
    }
    if (defaultStyling === undefined) {
      return customStyling;
    }

    var customType = typeof customStyling === 'undefined' ? 'undefined' : (0, _typeof3.default)(customStyling);
    var defaultType = typeof defaultStyling === 'undefined' ? 'undefined' : (0, _typeof3.default)(defaultStyling);

    switch (customType) {
      case 'string':
        switch (defaultType) {
          case 'string':
            return [defaultStyling, customStyling].filter(Boolean).join(' ');
          case 'object':
            return merger({ className: customStyling, style: defaultStyling });
          case 'function':
            return function (styling) {
              for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }

              return merger({
                className: customStyling
              })(defaultStyling.apply(undefined, [styling].concat(args)));
            };
        }
      case 'object':
        switch (defaultType) {
          case 'string':
            return merger({ className: defaultStyling, style: customStyling });
          case 'object':
            return (0, _extends3.default)({}, defaultStyling, customStyling);
          case 'function':
            return function (styling) {
              for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }

              return merger({
                style: customStyling
              })(defaultStyling.apply(undefined, [styling].concat(args)));
            };
        }
      case 'function':
        switch (defaultType) {
          case 'string':
            return function (styling) {
              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
                args[_key3 - 1] = arguments[_key3];
              }

              return customStyling.apply(undefined, [merger(styling)({
                className: defaultStyling
              })].concat(args));
            };
          case 'object':
            return function (styling) {
              for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
                args[_key4 - 1] = arguments[_key4];
              }

              return customStyling.apply(undefined, [merger(styling)({
                style: defaultStyling
              })].concat(args));
            };
          case 'function':
            return function (styling) {
              for (var _len5 = arguments.length, args = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
                args[_key5 - 1] = arguments[_key5];
              }

              return customStyling.apply(undefined, [defaultStyling.apply(undefined, [styling].concat(args))].concat(args));
            };
        }
    }
  };

  var mergeStylings = function mergeStylings(customStylings, defaultStylings) {
    var keys = (0, _keys2.default)(defaultStylings);
    for (var key in customStylings) {
      if (keys.indexOf(key) === -1) keys.push(key);
    }

    return keys.reduce(function (mergedStyling, key) {
      return mergedStyling[key] = mergeStyling(customStylings[key], defaultStylings[key]), mergedStyling;
    }, {});
  };

  var getStylingByKeys = function getStylingByKeys(mergedStyling, keys) {
    for (var _len6 = arguments.length, args = Array(_len6 > 2 ? _len6 - 2 : 0), _key6 = 2; _key6 < _len6; _key6++) {
      args[_key6 - 2] = arguments[_key6];
    }

    if (keys === null) {
      return mergedStyling;
    }

    if (!Array.isArray(keys)) {
      keys = [keys];
    }

    var styles = keys.map(function (key) {
      return mergedStyling[key];
    }).filter(Boolean);

    var props = styles.reduce(function (obj, s) {
      if (typeof s === 'string') {
        obj.className = [obj.className, s].filter(Boolean).join(' ');
      } else if ((typeof s === 'undefined' ? 'undefined' : (0, _typeof3.default)(s)) === 'object') {
        obj.style = (0, _extends3.default)({}, obj.style, s);
      } else if (typeof s === 'function') {
        obj = (0, _extends3.default)({}, obj, s.apply(undefined, [obj].concat(args)));
      }

      return obj;
    }, { className: '', style: {} });

    if (!props.className) {
      delete props.className;
    }

    if ((0, _keys2.default)(props.style).length === 0) {
      delete props.style;
    }

    return props;
  };

  var invertTheme = exports.invertTheme = function invertTheme(theme) {
    return (0, _keys2.default)(theme).reduce(function (t, key) {
      return t[key] = /^base/.test(key) ? invertColor(theme[key]) : key === 'scheme' ? theme[key] + ':inverted' : theme[key], t;
    }, {});
  };

  var createStyling = exports.createStyling = (0, _lodash2.default)(function (getStylingFromBase16) {
    for (var _len7 = arguments.length, args = Array(_len7 > 3 ? _len7 - 3 : 0), _key7 = 3; _key7 < _len7; _key7++) {
      args[_key7 - 3] = arguments[_key7];
    }

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var themeOrStyling = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var _options$defaultBase = options.defaultBase16,
        defaultBase16 = _options$defaultBase === undefined ? DEFAULT_BASE16 : _options$defaultBase,
        _options$base16Themes = options.base16Themes,
        base16Themes = _options$base16Themes === undefined ? null : _options$base16Themes;

    var base16Theme = getBase16Theme(themeOrStyling, base16Themes);
    if (base16Theme) {
      themeOrStyling = (0, _extends3.default)({}, base16Theme, themeOrStyling);
    }

    var theme = BASE16_KEYS.reduce(function (t, key) {
      return t[key] = themeOrStyling[key] || defaultBase16[key], t;
    }, {});

    var customStyling = (0, _keys2.default)(themeOrStyling).reduce(function (s, key) {
      return BASE16_KEYS.indexOf(key) === -1 ? (s[key] = themeOrStyling[key], s) : s;
    }, {});

    var defaultStyling = getStylingFromBase16(theme);

    var mergedStyling = mergeStylings(customStyling, defaultStyling);

    return (0, _lodash2.default)(getStylingByKeys, 2).apply(undefined, [mergedStyling].concat(args));
  }, 3);

  var getBase16Theme = exports.getBase16Theme = function getBase16Theme(theme, base16Themes) {
    if (theme && theme.extend) {
      theme = theme.extend;
    }

    if (typeof theme === 'string') {
      var _theme$split = theme.split(':'),
          _theme$split2 = (0, _slicedToArray3.default)(_theme$split, 2),
          themeName = _theme$split2[0],
          modifier = _theme$split2[1];

      theme = (base16Themes || {})[themeName] || base16[themeName];
      if (modifier === 'inverted') {
        theme = invertTheme(theme);
      }
    }

    return theme && theme.hasOwnProperty('base00') ? theme : undefined;
  };

  /***/
},
/* 221 */
/***/function (module, exports) {

  var component = /-?\d+(\.\d+)?%?/g;
  function extractComponents(color) {
    return color.match(component);
  }

  module.exports = extractComponents;

  /***/
},
/* 222 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  var POSITIONS = exports.POSITIONS = ['left', 'top', 'right', 'bottom'];

  /***/
},
/* 223 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports.toggleVisibility = toggleVisibility;
  exports.changePosition = changePosition;
  exports.changeSize = changeSize;
  exports.changeMonitor = changeMonitor;
  var TOGGLE_VISIBILITY = exports.TOGGLE_VISIBILITY = '@@redux-devtools-log-monitor/TOGGLE_VISIBILITY';
  function toggleVisibility() {
    return { type: TOGGLE_VISIBILITY };
  }

  var CHANGE_POSITION = exports.CHANGE_POSITION = '@@redux-devtools-log-monitor/CHANGE_POSITION';
  function changePosition() {
    return { type: CHANGE_POSITION };
  }

  var CHANGE_SIZE = exports.CHANGE_SIZE = '@@redux-devtools-log-monitor/CHANGE_SIZE';
  function changeSize(size) {
    return { type: CHANGE_SIZE, size: size };
  }

  var CHANGE_MONITOR = exports.CHANGE_MONITOR = '@@redux-devtools-log-monitor/CHANGE_MONITOR';
  function changeMonitor() {
    return { type: CHANGE_MONITOR };
  }

  /***/
},
/* 224 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _reactDom = __webpack_require__(227);

  var _reactRedux = __webpack_require__(8);

  var _reduxStore = __webpack_require__(256);

  var _reduxStore2 = _interopRequireDefault(_reduxStore);

  var _App = __webpack_require__(647);

  var _App2 = _interopRequireDefault(_App);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var store = (0, _reduxStore2.default)();

  (0, _reactDom.render)(_react2.default.createElement(_reactRedux.Provider, { store: store }, _react2.default.createElement(_App2.default, null)), document.getElementById("root"));

  /***/
},
/* 225 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /*
   React v16.0.0
   react.production.min.js
  
   Copyright (c) 2013-present, Facebook, Inc.
  
   This source code is licensed under the MIT license found in the
   LICENSE file in the root directory of this source tree.
  */

  var f = __webpack_require__(34),
      p = __webpack_require__(43);__webpack_require__(15);var r = __webpack_require__(12);
  function t(a) {
    for (var b = arguments.length - 1, d = "Minified React error #" + a + "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d" + a, e = 0; e < b; e++) {
      d += "\x26args[]\x3d" + encodeURIComponent(arguments[e + 1]);
    }b = Error(d + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name = "Invariant Violation";b.framesToPop = 1;throw b;
  }
  var u = { isMounted: function isMounted() {
      return !1;
    }, enqueueForceUpdate: function enqueueForceUpdate() {}, enqueueReplaceState: function enqueueReplaceState() {}, enqueueSetState: function enqueueSetState() {} };function v(a, b, d) {
    this.props = a;this.context = b;this.refs = p;this.updater = d || u;
  }v.prototype.isReactComponent = {};v.prototype.setState = function (a, b) {
    "object" !== (typeof a === "undefined" ? "undefined" : _typeof4(a)) && "function" !== typeof a && null != a ? t("85") : void 0;this.updater.enqueueSetState(this, a, b, "setState");
  };v.prototype.forceUpdate = function (a) {
    this.updater.enqueueForceUpdate(this, a, "forceUpdate");
  };
  function w(a, b, d) {
    this.props = a;this.context = b;this.refs = p;this.updater = d || u;
  }function x() {}x.prototype = v.prototype;var y = w.prototype = new x();y.constructor = w;f(y, v.prototype);y.isPureReactComponent = !0;function z(a, b, d) {
    this.props = a;this.context = b;this.refs = p;this.updater = d || u;
  }var A = z.prototype = new x();A.constructor = z;f(A, v.prototype);A.unstable_isAsyncReactComponent = !0;A.render = function () {
    return this.props.children;
  };
  var B = { Component: v, PureComponent: w, AsyncComponent: z },
      C = { current: null },
      D = Object.prototype.hasOwnProperty,
      E = "function" === typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103,
      F = { key: !0, ref: !0, __self: !0, __source: !0 };function G(a, b, d, e, c, g, k) {
    return { $$typeof: E, type: a, key: b, ref: d, props: k, _owner: g };
  }
  G.createElement = function (a, b, d) {
    var e,
        c = {},
        g = null,
        k = null,
        m = null,
        q = null;if (null != b) for (e in void 0 !== b.ref && (k = b.ref), void 0 !== b.key && (g = "" + b.key), m = void 0 === b.__self ? null : b.__self, q = void 0 === b.__source ? null : b.__source, b) {
      D.call(b, e) && !F.hasOwnProperty(e) && (c[e] = b[e]);
    }var l = arguments.length - 2;if (1 === l) c.children = d;else if (1 < l) {
      for (var h = Array(l), n = 0; n < l; n++) {
        h[n] = arguments[n + 2];
      }c.children = h;
    }if (a && a.defaultProps) for (e in l = a.defaultProps, l) {
      void 0 === c[e] && (c[e] = l[e]);
    }return G(a, g, k, m, q, C.current, c);
  };
  G.createFactory = function (a) {
    var b = G.createElement.bind(null, a);b.type = a;return b;
  };G.cloneAndReplaceKey = function (a, b) {
    return G(a.type, b, a.ref, a._self, a._source, a._owner, a.props);
  };
  G.cloneElement = function (a, b, d) {
    var e = f({}, a.props),
        c = a.key,
        g = a.ref,
        k = a._self,
        m = a._source,
        q = a._owner;if (null != b) {
      void 0 !== b.ref && (g = b.ref, q = C.current);void 0 !== b.key && (c = "" + b.key);if (a.type && a.type.defaultProps) var l = a.type.defaultProps;for (h in b) {
        D.call(b, h) && !F.hasOwnProperty(h) && (e[h] = void 0 === b[h] && void 0 !== l ? l[h] : b[h]);
      }
    }var h = arguments.length - 2;if (1 === h) e.children = d;else if (1 < h) {
      l = Array(h);for (var n = 0; n < h; n++) {
        l[n] = arguments[n + 2];
      }e.children = l;
    }return G(a.type, c, g, k, m, q, e);
  };
  G.isValidElement = function (a) {
    return "object" === (typeof a === "undefined" ? "undefined" : _typeof4(a)) && null !== a && a.$$typeof === E;
  };var H = "function" === typeof Symbol && Symbol.iterator,
      I = "function" === typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103;function escape(a) {
    var b = { "\x3d": "\x3d0", ":": "\x3d2" };return "$" + ("" + a).replace(/[=:]/g, function (a) {
      return b[a];
    });
  }var J = /\/+/g,
      K = [];
  function L(a, b, d, e) {
    if (K.length) {
      var c = K.pop();c.result = a;c.keyPrefix = b;c.func = d;c.context = e;c.count = 0;return c;
    }return { result: a, keyPrefix: b, func: d, context: e, count: 0 };
  }function M(a) {
    a.result = null;a.keyPrefix = null;a.func = null;a.context = null;a.count = 0;10 > K.length && K.push(a);
  }
  function N(a, b, d, e) {
    var c = typeof a === "undefined" ? "undefined" : _typeof4(a);if ("undefined" === c || "boolean" === c) a = null;if (null === a || "string" === c || "number" === c || "object" === c && a.$$typeof === I) return d(e, a, "" === b ? "." + O(a, 0) : b), 1;var g = 0;b = "" === b ? "." : b + ":";if (Array.isArray(a)) for (var k = 0; k < a.length; k++) {
      c = a[k];var m = b + O(c, k);g += N(c, m, d, e);
    } else if (m = H && a[H] || a["@@iterator"], "function" === typeof m) for (a = m.call(a), k = 0; !(c = a.next()).done;) {
      c = c.value, m = b + O(c, k++), g += N(c, m, d, e);
    } else "object" === c && (d = "" + a, t("31", "[object Object]" === d ? "object with keys {" + Object.keys(a).join(", ") + "}" : d, ""));return g;
  }function O(a, b) {
    return "object" === (typeof a === "undefined" ? "undefined" : _typeof4(a)) && null !== a && null != a.key ? escape(a.key) : b.toString(36);
  }function P(a, b) {
    a.func.call(a.context, b, a.count++);
  }function Q(a, b, d) {
    var e = a.result,
        c = a.keyPrefix;a = a.func.call(a.context, b, a.count++);Array.isArray(a) ? R(a, e, d, r.thatReturnsArgument) : null != a && (G.isValidElement(a) && (a = G.cloneAndReplaceKey(a, c + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(J, "$\x26/") + "/") + d)), e.push(a));
  }
  function R(a, b, d, e, c) {
    var g = "";null != d && (g = ("" + d).replace(J, "$\x26/") + "/");b = L(b, g, e, c);null == a || N(a, "", Q, b);M(b);
  }var S = { forEach: function forEach(a, b, d) {
      if (null == a) return a;b = L(null, null, b, d);null == a || N(a, "", P, b);M(b);
    }, map: function map(a, b, d) {
      if (null == a) return a;var e = [];R(a, e, null, b, d);return e;
    }, count: function count(a) {
      return null == a ? 0 : N(a, "", r.thatReturnsNull, null);
    }, toArray: function toArray(a) {
      var b = [];R(a, b, null, r.thatReturnsArgument);return b;
    } };
  module.exports = { Children: { map: S.map, forEach: S.forEach, count: S.count, toArray: S.toArray, only: function only(a) {
        G.isValidElement(a) ? void 0 : t("143");return a;
      } }, Component: B.Component, PureComponent: B.PureComponent, unstable_AsyncComponent: B.AsyncComponent, createElement: G.createElement, cloneElement: G.cloneElement, isValidElement: G.isValidElement, createFactory: G.createFactory, version: "16.0.0", __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: C, assign: f } };

  /***/
},
/* 226 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /** @license React v16.0.0
    * react.development.js
    *
    * Copyright (c) 2013-present, Facebook, Inc.
    *
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    */

    if (undefined !== "production") {
      (function () {

        'use strict';

        var objectAssign$1 = __webpack_require__(34);
        var require$$0 = __webpack_require__(44);
        var emptyObject = __webpack_require__(43);
        var invariant = __webpack_require__(15);
        var emptyFunction = __webpack_require__(12);
        var checkPropTypes = __webpack_require__(65);

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule reactProdInvariant
         * 
         */

        {
          var warning = require$$0;
        }

        function warnNoop(publicInstance, callerName) {
          {
            var constructor = publicInstance.constructor;
            warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op.\n\nPlease check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass');
          }
        }

        /**
         * This is the abstract API for an update queue.
         */
        var ReactNoopUpdateQueue = {
          /**
           * Checks whether or not this composite component is mounted.
           * @param {ReactClass} publicInstance The instance we want to test.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */
          isMounted: function isMounted(publicInstance) {
            return false;
          },

          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueForceUpdate: function enqueueForceUpdate(publicInstance, callback, callerName) {
            warnNoop(publicInstance, 'forceUpdate');
          },

          /**
           * Replaces all of the state. Always use this or `setState` to mutate state.
           * You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} completeState Next state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueReplaceState: function enqueueReplaceState(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, 'replaceState');
          },

          /**
           * Sets a subset of the state. This only exists because _pendingState is
           * internal. This provides a merging strategy that is not available to deep
           * properties which is confusing. TODO: Expose pendingState or don't use it
           * during the merge.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} partialState Next partial state to be merged with state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} Name of the calling function in the public API.
           * @internal
           */
          enqueueSetState: function enqueueSetState(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, 'setState');
          }
        };

        var ReactNoopUpdateQueue_1 = ReactNoopUpdateQueue;

        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule lowPriorityWarning
         */

        /**
         * Forked from fbjs/warning:
         * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
         *
         * Only change is we use console.warn instead of console.error,
         * and do nothing when 'console' is not supported.
         * This really simplifies the code.
         * ---
         * Similar to invariant but only logs a warning if the condition is not met.
         * This can be used to log issues in development environments in critical
         * paths. Removing the logging code for production environments will keep the
         * same logic and follow the same code paths.
         */

        var lowPriorityWarning = function lowPriorityWarning() {};

        {
          var printWarning = function printWarning(format) {
            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }

            var argIndex = 0;
            var message = 'Warning: ' + format.replace(/%s/g, function () {
              return args[argIndex++];
            });
            if (typeof console !== 'undefined') {
              console.warn(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };

          lowPriorityWarning = function lowPriorityWarning(condition, format) {
            if (format === undefined) {
              throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
            }
            if (!condition) {
              for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
                args[_key2 - 2] = arguments[_key2];
              }

              printWarning.apply(undefined, [format].concat(args));
            }
          };
        }

        var lowPriorityWarning_1 = lowPriorityWarning;

        /**
         * Base class helpers for the updating state of a component.
         */
        function ReactComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          // We initialize the default updater but the real one gets injected by the
          // renderer.
          this.updater = updater || ReactNoopUpdateQueue_1;
        }

        ReactComponent.prototype.isReactComponent = {};

        /**
         * Sets a subset of the state. Always use this to mutate
         * state. You should treat `this.state` as immutable.
         *
         * There is no guarantee that `this.state` will be immediately updated, so
         * accessing `this.state` after calling this method may return the old value.
         *
         * There is no guarantee that calls to `setState` will run synchronously,
         * as they may eventually be batched together.  You can provide an optional
         * callback that will be executed when the call to setState is actually
         * completed.
         *
         * When a function is provided to setState, it will be called at some point in
         * the future (not synchronously). It will be called with the up to date
         * component arguments (state, props, context). These values can be different
         * from this.* because your function may be called after receiveProps but before
         * shouldComponentUpdate, and this new state, props, and context will not yet be
         * assigned to this.
         *
         * @param {object|function} partialState Next partial state or function to
         *        produce next partial state to be merged with current state.
         * @param {?function} callback Called after state is updated.
         * @final
         * @protected
         */
        ReactComponent.prototype.setState = function (partialState, callback) {
          !((typeof partialState === "undefined" ? "undefined" : _typeof4(partialState)) === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
          this.updater.enqueueSetState(this, partialState, callback, 'setState');
        };

        /**
         * Forces an update. This should only be invoked when it is known with
         * certainty that we are **not** in a DOM transaction.
         *
         * You may want to call this when you know that some deeper aspect of the
         * component's state has changed but `setState` was not called.
         *
         * This will not invoke `shouldComponentUpdate`, but it will invoke
         * `componentWillUpdate` and `componentDidUpdate`.
         *
         * @param {?function} callback Called after update is complete.
         * @final
         * @protected
         */
        ReactComponent.prototype.forceUpdate = function (callback) {
          this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
        };

        /**
         * Deprecated APIs. These APIs used to exist on classic React classes but since
         * we would like to deprecate them, we're not going to move them over to this
         * modern base class. Instead, we define a getter that warns if it's accessed.
         */
        {
          var deprecatedAPIs = {
            isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
            replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
          };
          var defineDeprecationWarning = function defineDeprecationWarning(methodName, info) {
            Object.defineProperty(ReactComponent.prototype, methodName, {
              get: function get() {
                lowPriorityWarning_1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
                return undefined;
              }
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }

        /**
         * Base class helpers for the updating state of a component.
         */
        function ReactPureComponent(props, context, updater) {
          // Duplicated from ReactComponent.
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          // We initialize the default updater but the real one gets injected by the
          // renderer.
          this.updater = updater || ReactNoopUpdateQueue_1;
        }

        function ComponentDummy() {}
        ComponentDummy.prototype = ReactComponent.prototype;
        var pureComponentPrototype = ReactPureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = ReactPureComponent;
        // Avoid an extra prototype jump for these methods.
        objectAssign$1(pureComponentPrototype, ReactComponent.prototype);
        pureComponentPrototype.isPureReactComponent = true;

        function ReactAsyncComponent(props, context, updater) {
          // Duplicated from ReactComponent.
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          // We initialize the default updater but the real one gets injected by the
          // renderer.
          this.updater = updater || ReactNoopUpdateQueue_1;
        }

        var asyncComponentPrototype = ReactAsyncComponent.prototype = new ComponentDummy();
        asyncComponentPrototype.constructor = ReactAsyncComponent;
        // Avoid an extra prototype jump for these methods.
        objectAssign$1(asyncComponentPrototype, ReactComponent.prototype);
        asyncComponentPrototype.unstable_isAsyncReactComponent = true;
        asyncComponentPrototype.render = function () {
          return this.props.children;
        };

        var ReactBaseClasses = {
          Component: ReactComponent,
          PureComponent: ReactPureComponent,
          AsyncComponent: ReactAsyncComponent
        };

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactCurrentOwner
         * 
         */

        /**
         * Keeps track of the current owner.
         *
         * The current owner is the component who should own any components that are
         * currently being constructed.
         */
        var ReactCurrentOwner = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null
        };

        var ReactCurrentOwner_1 = ReactCurrentOwner;

        var hasOwnProperty = Object.prototype.hasOwnProperty;

        {
          var warning$2 = require$$0;
        }

        // The Symbol used to tag the ReactElement type. If there is no native Symbol
        // nor polyfill, then a plain number is used for performance.
        var REACT_ELEMENT_TYPE$1 = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };

        var specialPropKeyWarningShown;
        var specialPropRefWarningShown;

        function hasValidRef(config) {
          {
            if (hasOwnProperty.call(config, 'ref')) {
              var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== undefined;
        }

        function hasValidKey(config) {
          {
            if (hasOwnProperty.call(config, 'key')) {
              var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== undefined;
        }

        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function warnAboutAccessingKey() {
            if (!specialPropKeyWarningShown) {
              specialPropKeyWarningShown = true;
              warning$2(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, 'key', {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }

        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function warnAboutAccessingRef() {
            if (!specialPropRefWarningShown) {
              specialPropRefWarningShown = true;
              warning$2(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, 'ref', {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }

        /**
         * Factory method to create a new React element. This no longer adheres to
         * the class pattern, so do not use new to call it. Also, no instanceof check
         * will work. Instead test $$typeof field against Symbol.for('react.element') to check
         * if something is a React Element.
         *
         * @param {*} type
         * @param {*} key
         * @param {string|object} ref
         * @param {*} self A *temporary* helper to detect places where `this` is
         * different from the `owner` when React.createElement is called, so that we
         * can warn. We want to get rid of owner and replace string `ref`s with arrow
         * functions, and as long as `this` and owner are the same, there will be no
         * change in behavior.
         * @param {*} source An annotation object (added by a transpiler or otherwise)
         * indicating filename, line number, and/or other information.
         * @param {*} owner
         * @param {*} props
         * @internal
         */
        var ReactElement = function ReactElement(type, key, ref, self, source, owner, props) {
          var element = {
            // This tag allow us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE$1,

            // Built-in properties that belong on the element
            type: type,
            key: key,
            ref: ref,
            props: props,

            // Record the component responsible for creating this element.
            _owner: owner
          };

          {
            // The validation flag is currently mutative. We put it on
            // an external backing store so that we can freeze the whole object.
            // This can be replaced with a WeakMap once they are implemented in
            // commonly used development environments.
            element._store = {};

            // To make comparing ReactElements easier for testing purposes, we make
            // the validation flag non-enumerable (where possible, which should
            // include every environment we run tests in), so the test framework
            // ignores it.
            Object.defineProperty(element._store, 'validated', {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            // self and source are DEV only properties.
            Object.defineProperty(element, '_self', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self
            });
            // Two elements created in two different places should be considered
            // equal for testing purposes and therefore we hide it from enumeration.
            Object.defineProperty(element, '_source', {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }

          return element;
        };

        /**
         * Create and return a new ReactElement of the given type.
         * See https://facebook.github.io/react/docs/react-api.html#createelement
         */
        ReactElement.createElement = function (type, config, children) {
          var propName;

          // Reserved names are extracted
          var props = {};

          var key = null;
          var ref = null;
          var self = null;
          var source = null;

          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
            }
            if (hasValidKey(config)) {
              key = '' + config.key;
            }

            self = config.__self === undefined ? null : config.__self;
            source = config.__source === undefined ? null : config.__source;
            // Remaining properties are added to a new props object
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
          }

          // Children can be more than one argument, and those are transferred onto
          // the newly allocated props object.
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }

          // Resolve default props
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === undefined) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE$1) {
                var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
                if (key) {
                  defineKeyPropWarningGetter(props, displayName);
                }
                if (ref) {
                  defineRefPropWarningGetter(props, displayName);
                }
              }
            }
          }
          return ReactElement(type, key, ref, self, source, ReactCurrentOwner_1.current, props);
        };

        /**
         * Return a function that produces ReactElements of a given type.
         * See https://facebook.github.io/react/docs/react-api.html#createfactory
         */
        ReactElement.createFactory = function (type) {
          var factory = ReactElement.createElement.bind(null, type);
          // Expose the type on the factory and the prototype so that it can be
          // easily accessed on elements. E.g. `<Foo />.type === Foo`.
          // This should not be named `constructor` since this may not be the function
          // that created the element, and it may not even be a constructor.
          // Legacy hook TODO: Warn if this is accessed
          factory.type = type;
          return factory;
        };

        ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

          return newElement;
        };

        /**
         * Clone and return a new ReactElement using element as the starting point.
         * See https://facebook.github.io/react/docs/react-api.html#cloneelement
         */
        ReactElement.cloneElement = function (element, config, children) {
          var propName;

          // Original props are copied
          var props = objectAssign$1({}, element.props);

          // Reserved names are extracted
          var key = element.key;
          var ref = element.ref;
          // Self is preserved since the owner is preserved.
          var self = element._self;
          // Source is preserved since cloneElement is unlikely to be targeted by a
          // transpiler, and the original source is probably a better indicator of the
          // true owner.
          var source = element._source;

          // Owner will be preserved, unless ref is overridden
          var owner = element._owner;

          if (config != null) {
            if (hasValidRef(config)) {
              // Silently steal the ref from the parent.
              ref = config.ref;
              owner = ReactCurrentOwner_1.current;
            }
            if (hasValidKey(config)) {
              key = '' + config.key;
            }

            // Remaining properties override existing props
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config) {
              if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === undefined && defaultProps !== undefined) {
                  // Resolve default props
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }

          // Children can be more than one argument, and those are transferred onto
          // the newly allocated props object.
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }

          return ReactElement(element.type, key, ref, self, source, owner, props);
        };

        /**
         * Verifies the object is a ReactElement.
         * See https://facebook.github.io/react/docs/react-api.html#isvalidelement
         * @param {?object} object
         * @return {boolean} True if `object` is a valid component.
         * @final
         */
        ReactElement.isValidElement = function (object) {
          return (typeof object === "undefined" ? "undefined" : _typeof4(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE$1;
        };

        var ReactElement_1 = ReactElement;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactDebugCurrentFrame
         * 
         */

        var ReactDebugCurrentFrame = {};

        {
          // Component that is being worked on
          ReactDebugCurrentFrame.getCurrentStack = null;

          ReactDebugCurrentFrame.getStackAddendum = function () {
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              return impl();
            }
            return null;
          };
        }

        var ReactDebugCurrentFrame_1 = ReactDebugCurrentFrame;

        {
          var warning$1 = require$$0;

          var _require = ReactDebugCurrentFrame_1,
              getStackAddendum = _require.getStackAddendum;
        }

        var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
        // The Symbol used to tag the ReactElement type. If there is no native Symbol
        // nor polyfill, then a plain number is used for performance.
        var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

        var SEPARATOR = '.';
        var SUBSEPARATOR = ':';

        /**
         * Escape and wrap key so it is safe to use as a reactid
         *
         * @param {string} key to be escaped.
         * @return {string} the escaped key.
         */
        function escape(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            '=': '=0',
            ':': '=2'
          };
          var escapedString = ('' + key).replace(escapeRegex, function (match) {
            return escaperLookup[match];
          });

          return '$' + escapedString;
        }

        /**
         * TODO: Test that a single child and an array with one item have the same key
         * pattern.
         */

        var didWarnAboutMaps = false;

        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
        }

        var POOL_SIZE = 10;
        var traverseContextPool = [];
        function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
          if (traverseContextPool.length) {
            var traverseContext = traverseContextPool.pop();
            traverseContext.result = mapResult;
            traverseContext.keyPrefix = keyPrefix;
            traverseContext.func = mapFunction;
            traverseContext.context = mapContext;
            traverseContext.count = 0;
            return traverseContext;
          } else {
            return {
              result: mapResult,
              keyPrefix: keyPrefix,
              func: mapFunction,
              context: mapContext,
              count: 0
            };
          }
        }

        function releaseTraverseContext(traverseContext) {
          traverseContext.result = null;
          traverseContext.keyPrefix = null;
          traverseContext.func = null;
          traverseContext.context = null;
          traverseContext.count = 0;
          if (traverseContextPool.length < POOL_SIZE) {
            traverseContextPool.push(traverseContext);
          }
        }

        /**
         * @param {?*} children Children tree container.
         * @param {!string} nameSoFar Name of the key path so far.
         * @param {!function} callback Callback to invoke with each child found.
         * @param {?*} traverseContext Used to pass information throughout the traversal
         * process.
         * @return {!number} The number of children in this subtree.
         */
        function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
          var type = typeof children === "undefined" ? "undefined" : _typeof4(children);

          if (type === 'undefined' || type === 'boolean') {
            // All of the above are perceived as null.
            children = null;
          }

          if (children === null || type === 'string' || type === 'number' ||
          // The following is inlined from ReactElement. This means we can optimize
          // some checks. React Fiber also inlines this logic for similar purposes.
          type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
            callback(traverseContext, children,
            // If it's the only child, treat the name as if it was wrapped in an array
            // so that it's consistent if the number of children grows.
            nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
            return 1;
          }

          var child;
          var nextName;
          var subtreeCount = 0; // Count of children found in the current subtree.
          var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              child = children[i];
              nextName = nextNamePrefix + getComponentKey(child, i);
              subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
            }
          } else {
            var iteratorFn = ITERATOR_SYMBOL && children[ITERATOR_SYMBOL] || children[FAUX_ITERATOR_SYMBOL];
            if (typeof iteratorFn === 'function') {
              {
                // Warn about using Maps as children
                if (iteratorFn === children.entries) {
                  warning$1(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getStackAddendum());
                  didWarnAboutMaps = true;
                }
              }

              var iterator = iteratorFn.call(children);
              var step;
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getComponentKey(child, ii++);
                subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
              }
            } else if (type === 'object') {
              var addendum = '';
              {
                addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getStackAddendum();
              }
              var childrenString = '' + children;
              invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
            }
          }

          return subtreeCount;
        }

        /**
         * Traverses children that are typically specified as `props.children`, but
         * might also be specified through attributes:
         *
         * - `traverseAllChildren(this.props.children, ...)`
         * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
         *
         * The `traverseContext` is an optional argument that is passed through the
         * entire traversal. It can be used to store accumulations or anything else that
         * the callback might find relevant.
         *
         * @param {?*} children Children tree object.
         * @param {!function} callback To invoke upon traversing each child.
         * @param {?*} traverseContext Context for traversal.
         * @return {!number} The number of children in this subtree.
         */
        function traverseAllChildren(children, callback, traverseContext) {
          if (children == null) {
            return 0;
          }

          return traverseAllChildrenImpl(children, '', callback, traverseContext);
        }

        /**
         * Generate a key string that identifies a component within a set.
         *
         * @param {*} component A component that could contain a manual key.
         * @param {number} index Index that is used if a manual key is not provided.
         * @return {string}
         */
        function getComponentKey(component, index) {
          // Do some typechecking here since we call this blindly. We want to ensure
          // that we don't block potential future ES APIs.
          if ((typeof component === "undefined" ? "undefined" : _typeof4(component)) === 'object' && component !== null && component.key != null) {
            // Explicit key
            return escape(component.key);
          }
          // Implicit key determined by the index in the set
          return index.toString(36);
        }

        function forEachSingleChild(bookKeeping, child, name) {
          var func = bookKeeping.func,
              context = bookKeeping.context;

          func.call(context, child, bookKeeping.count++);
        }

        /**
         * Iterates through children that are typically specified as `props.children`.
         *
         * See https://facebook.github.io/react/docs/react-api.html#react.children.foreach
         *
         * The provided forEachFunc(child, index) will be called for each
         * leaf child.
         *
         * @param {?*} children Children tree container.
         * @param {function(*, int)} forEachFunc
         * @param {*} forEachContext Context for forEachContext.
         */
        function forEachChildren(children, forEachFunc, forEachContext) {
          if (children == null) {
            return children;
          }
          var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
          traverseAllChildren(children, forEachSingleChild, traverseContext);
          releaseTraverseContext(traverseContext);
        }

        function mapSingleChildIntoContext(bookKeeping, child, childKey) {
          var result = bookKeeping.result,
              keyPrefix = bookKeeping.keyPrefix,
              func = bookKeeping.func,
              context = bookKeeping.context;

          var mappedChild = func.call(context, child, bookKeeping.count++);
          if (Array.isArray(mappedChild)) {
            mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
          } else if (mappedChild != null) {
            if (ReactElement_1.isValidElement(mappedChild)) {
              mappedChild = ReactElement_1.cloneAndReplaceKey(mappedChild,
              // Keep both the (mapped) and old keys if they differ, just as
              // traverseAllChildren used to do for objects as children
              keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
            }
            result.push(mappedChild);
          }
        }

        function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
          var escapedPrefix = '';
          if (prefix != null) {
            escapedPrefix = escapeUserProvidedKey(prefix) + '/';
          }
          var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
          traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
          releaseTraverseContext(traverseContext);
        }

        /**
         * Maps children that are typically specified as `props.children`.
         *
         * See https://facebook.github.io/react/docs/react-api.html#react.children.map
         *
         * The provided mapFunction(child, key, index) will be called for each
         * leaf child.
         *
         * @param {?*} children Children tree container.
         * @param {function(*, int)} func The map function.
         * @param {*} context Context for mapFunction.
         * @return {object} Object containing the ordered map of results.
         */
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result = [];
          mapIntoWithKeyPrefixInternal(children, result, null, func, context);
          return result;
        }

        /**
         * Count the number of children that are typically specified as
         * `props.children`.
         *
         * See https://facebook.github.io/react/docs/react-api.html#react.children.count
         *
         * @param {?*} children Children tree container.
         * @return {number} The number of children.
         */
        function countChildren(children, context) {
          return traverseAllChildren(children, emptyFunction.thatReturnsNull, null);
        }

        /**
         * Flatten a children object (typically specified as `props.children`) and
         * return an array with appropriately re-keyed children.
         *
         * See https://facebook.github.io/react/docs/react-api.html#react.children.toarray
         */
        function toArray(children) {
          var result = [];
          mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
          return result;
        }

        var ReactChildren = {
          forEach: forEachChildren,
          map: mapChildren,
          count: countChildren,
          toArray: toArray
        };

        var ReactChildren_1 = ReactChildren;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactVersion
         */

        var ReactVersion = '16.0.0';

        /**
         * Returns the first child in a collection of children and verifies that there
         * is only one child in the collection.
         *
         * See https://facebook.github.io/react/docs/react-api.html#react.children.only
         *
         * The current implementation of this function assumes that a single child gets
         * passed without a wrapper, but the purpose of this helper function is to
         * abstract away the particular structure of children.
         *
         * @param {?object} children Child collection structure.
         * @return {ReactElement} The first and only `ReactElement` contained in the
         * structure.
         */
        function onlyChild(children) {
          !ReactElement_1.isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
          return children;
        }

        var onlyChild_1 = onlyChild;

        /**
         * Copyright (c) 2016-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * 
         * @providesModule describeComponentFrame
         */

        var describeComponentFrame$1 = function describeComponentFrame$1(name, source, ownerName) {
          return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
        };

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule getComponentName
         * 
         */

        function getComponentName$1(instanceOrFiber) {
          if (typeof instanceOrFiber.getName === 'function') {
            // Stack reconciler
            var instance = instanceOrFiber;
            return instance.getName();
          }
          if (typeof instanceOrFiber.tag === 'number') {
            // Fiber reconciler
            var fiber = instanceOrFiber;
            var type = fiber.type;

            if (typeof type === 'string') {
              return type;
            }
            if (typeof type === 'function') {
              return type.displayName || type.name;
            }
          }
          return null;
        }

        var getComponentName_1 = getComponentName$1;

        {
          var checkPropTypes$1 = checkPropTypes;
          var lowPriorityWarning$1 = lowPriorityWarning_1;
          var ReactDebugCurrentFrame$1 = ReactDebugCurrentFrame_1;
          var warning$3 = require$$0;
          var describeComponentFrame = describeComponentFrame$1;
          var getComponentName = getComponentName_1;

          var currentlyValidatingElement = null;

          var getDisplayName = function getDisplayName(element) {
            if (element == null) {
              return '#empty';
            } else if (typeof element === 'string' || typeof element === 'number') {
              return '#text';
            } else if (typeof element.type === 'string') {
              return element.type;
            } else {
              return element.type.displayName || element.type.name || 'Unknown';
            }
          };

          var getStackAddendum$1 = function getStackAddendum$1() {
            var stack = '';
            if (currentlyValidatingElement) {
              var name = getDisplayName(currentlyValidatingElement);
              var owner = currentlyValidatingElement._owner;
              stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner));
            }
            stack += ReactDebugCurrentFrame$1.getStackAddendum() || '';
            return stack;
          };
        }

        var ITERATOR_SYMBOL$1 = typeof Symbol === 'function' && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL$1 = '@@iterator'; // Before Symbol spec.

        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner_1.current) {
            var name = getComponentName(ReactCurrentOwner_1.current);
            if (name) {
              return '\n\nCheck the render method of `' + name + '`.';
            }
          }
          return '';
        }

        function getSourceInfoErrorAddendum(elementProps) {
          if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
            var source = elementProps.__source;
            var fileName = source.fileName.replace(/^.*[\\\/]/, '');
            var lineNumber = source.lineNumber;
            return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
          }
          return '';
        }

        /**
         * Warn if there's no key explicitly set on dynamic arrays of children or
         * object keys are not valid. This allows us to keep track of children between
         * updates.
         */
        var ownerHasKeyUseWarning = {};

        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();

          if (!info) {
            var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = '\n\nCheck the top-level render call using <' + parentName + '>.';
            }
          }
          return info;
        }

        /**
         * Warn if the element doesn't have an explicit key assigned to it.
         * This element is in an array. The array could grow and shrink or be
         * reordered. All children that haven't already been validated are required to
         * have a "key" property assigned to it. Error statuses are cached so a warning
         * will only be shown once.
         *
         * @internal
         * @param {ReactElement} element Element that requires a key.
         * @param {*} parentType element's parent's type.
         */
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;

          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

          // Usually the current owner is the offender, but if it accepts children as a
          // property, it may be the creator of the child that's responsible for
          // assigning it a key.
          var childOwner = '';
          if (element && element._owner && element._owner !== ReactCurrentOwner_1.current) {
            // Give the component that originally created this child.
            childOwner = ' It was passed a child from ' + getComponentName(element._owner) + '.';
          }

          currentlyValidatingElement = element;
          {
            warning$3(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, getStackAddendum$1());
          }
          currentlyValidatingElement = null;
        }

        /**
         * Ensure that every element either is passed in a static location, in an
         * array with an explicit keys property defined, or in an object literal
         * with valid key property.
         *
         * @internal
         * @param {ReactNode} node Statically passed child of any type.
         * @param {*} parentType node's parent's type.
         */
        function validateChildKeys(node, parentType) {
          if ((typeof node === "undefined" ? "undefined" : _typeof4(node)) !== 'object') {
            return;
          }
          if (Array.isArray(node)) {
            for (var i = 0; i < node.length; i++) {
              var child = node[i];
              if (ReactElement_1.isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (ReactElement_1.isValidElement(node)) {
            // This element was passed in a valid location.
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = ITERATOR_SYMBOL$1 && node[ITERATOR_SYMBOL$1] || node[FAUX_ITERATOR_SYMBOL$1];
            if (typeof iteratorFn === 'function') {
              // Entry iterators used to provide implicit keys,
              // but now we print a separate warning for them later.
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (ReactElement_1.isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }

        /**
         * Given an element, validate that its props follow the propTypes definition,
         * provided by the type.
         *
         * @param {ReactElement} element
         */
        function validatePropTypes(element) {
          var componentClass = element.type;
          if (typeof componentClass !== 'function') {
            return;
          }
          var name = componentClass.displayName || componentClass.name;
          var propTypes = componentClass.propTypes;

          if (propTypes) {
            currentlyValidatingElement = element;
            checkPropTypes$1(propTypes, element.props, 'prop', name, getStackAddendum$1);
            currentlyValidatingElement = null;
          }
          if (typeof componentClass.getDefaultProps === 'function') {
            warning$3(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');
          }
        }

        var ReactElementValidator$1 = {
          createElement: function createElement(type, props, children) {
            var validType = typeof type === 'string' || typeof type === 'function';
            // We warn in this case but don't throw. We expect the element creation to
            // succeed and there will likely be errors in render.
            if (!validType) {
              var info = '';
              if (type === undefined || (typeof type === "undefined" ? "undefined" : _typeof4(type)) === 'object' && type !== null && Object.keys(type).length === 0) {
                info += ' You likely forgot to export your component from the file ' + "it's defined in.";
              }

              var sourceInfo = getSourceInfoErrorAddendum(props);
              if (sourceInfo) {
                info += sourceInfo;
              } else {
                info += getDeclarationErrorAddendum();
              }

              info += ReactDebugCurrentFrame$1.getStackAddendum() || '';

              warning$3(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type === "undefined" ? "undefined" : _typeof4(type), info);
            }

            var element = ReactElement_1.createElement.apply(this, arguments);

            // The result can be nullish if a mock or a custom function is used.
            // TODO: Drop this when these are no longer allowed as the type argument.
            if (element == null) {
              return element;
            }

            // Skip key warning if the type isn't valid since our key validation logic
            // doesn't expect a non-string/function type and can throw confusing errors.
            // We don't want exception behavior to differ between dev and prod.
            // (Rendering will throw with a helpful message and as soon as the type is
            // fixed, the key warnings will appear.)
            if (validType) {
              for (var i = 2; i < arguments.length; i++) {
                validateChildKeys(arguments[i], type);
              }
            }

            validatePropTypes(element);

            return element;
          },

          createFactory: function createFactory(type) {
            var validatedFactory = ReactElementValidator$1.createElement.bind(null, type);
            // Legacy hook TODO: Warn if this is accessed
            validatedFactory.type = type;

            {
              Object.defineProperty(validatedFactory, 'type', {
                enumerable: false,
                get: function get() {
                  lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
                  Object.defineProperty(this, 'type', {
                    value: type
                  });
                  return type;
                }
              });
            }

            return validatedFactory;
          },

          cloneElement: function cloneElement(element, props, children) {
            var newElement = ReactElement_1.cloneElement.apply(this, arguments);
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], newElement.type);
            }
            validatePropTypes(newElement);
            return newElement;
          }
        };

        var ReactElementValidator_1 = ReactElementValidator$1;

        {
          var warning$4 = require$$0;
        }

        function isNative(fn) {
          // Based on isNative() from Lodash
          var funcToString = Function.prototype.toString;
          var reIsNative = RegExp('^' + funcToString
          // Take an example native function source for comparison
          .call(Object.prototype.hasOwnProperty)
          // Strip regex characters so we can use it for regex
          .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
          // Remove hasOwnProperty from the template to make it generic
          .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
          try {
            var source = funcToString.call(fn);
            return reIsNative.test(source);
          } catch (err) {
            return false;
          }
        }

        var canUseCollections =
        // Array.from
        typeof Array.from === 'function' &&
        // Map
        typeof Map === 'function' && isNative(Map) &&
        // Map.prototype.keys
        Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
        // Set
        typeof Set === 'function' && isNative(Set) &&
        // Set.prototype.keys
        Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

        var setItem;
        var getItem;
        var removeItem;
        var getItemIDs;
        var addRoot;
        var removeRoot;
        var getRootIDs;

        if (canUseCollections) {
          var itemMap = new Map();
          var rootIDSet = new Set();

          setItem = function setItem(id, item) {
            itemMap.set(id, item);
          };
          getItem = function getItem(id) {
            return itemMap.get(id);
          };
          removeItem = function removeItem(id) {
            itemMap['delete'](id);
          };
          getItemIDs = function getItemIDs() {
            return Array.from(itemMap.keys());
          };

          addRoot = function addRoot(id) {
            rootIDSet.add(id);
          };
          removeRoot = function removeRoot(id) {
            rootIDSet['delete'](id);
          };
          getRootIDs = function getRootIDs() {
            return Array.from(rootIDSet.keys());
          };
        } else {
          var itemByKey = {};
          var rootByKey = {};

          // Use non-numeric keys to prevent V8 performance issues:
          // https://github.com/facebook/react/pull/7232
          var getKeyFromID = function getKeyFromID(id) {
            return '.' + id;
          };
          var getIDFromKey = function getIDFromKey(key) {
            return parseInt(key.substr(1), 10);
          };

          setItem = function setItem(id, item) {
            var key = getKeyFromID(id);
            itemByKey[key] = item;
          };
          getItem = function getItem(id) {
            var key = getKeyFromID(id);
            return itemByKey[key];
          };
          removeItem = function removeItem(id) {
            var key = getKeyFromID(id);
            delete itemByKey[key];
          };
          getItemIDs = function getItemIDs() {
            return Object.keys(itemByKey).map(getIDFromKey);
          };

          addRoot = function addRoot(id) {
            var key = getKeyFromID(id);
            rootByKey[key] = true;
          };
          removeRoot = function removeRoot(id) {
            var key = getKeyFromID(id);
            delete rootByKey[key];
          };
          getRootIDs = function getRootIDs() {
            return Object.keys(rootByKey).map(getIDFromKey);
          };
        }

        var unmountedIDs = [];

        function purgeDeep(id) {
          var item = getItem(id);
          if (item) {
            var childIDs = item.childIDs;

            removeItem(id);
            childIDs.forEach(purgeDeep);
          }
        }

        function getDisplayName$1(element) {
          if (element == null) {
            return '#empty';
          } else if (typeof element === 'string' || typeof element === 'number') {
            return '#text';
          } else if (typeof element.type === 'string') {
            return element.type;
          } else {
            return element.type.displayName || element.type.name || 'Unknown';
          }
        }

        function describeID(id) {
          var name = ReactComponentTreeHook.getDisplayName(id);
          var element = ReactComponentTreeHook.getElement(id);
          var ownerID = ReactComponentTreeHook.getOwnerID(id);
          var ownerName = void 0;

          if (ownerID) {
            ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
          }
          warning$4(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id);
          return describeComponentFrame$1(name || '', element && element._source, ownerName || '');
        }

        var ReactComponentTreeHook = {
          onSetChildren: function onSetChildren(id, nextChildIDs) {
            var item = getItem(id);
            !item ? invariant(false, 'Item must have been set') : void 0;
            item.childIDs = nextChildIDs;

            for (var i = 0; i < nextChildIDs.length; i++) {
              var nextChildID = nextChildIDs[i];
              var nextChild = getItem(nextChildID);
              !nextChild ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : void 0;
              !(nextChild.childIDs != null || _typeof4(nextChild.element) !== 'object' || nextChild.element == null) ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : void 0;
              !nextChild.isMounted ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : void 0;
              if (nextChild.parentID == null) {
                nextChild.parentID = id;
                // TODO: This shouldn't be necessary but mounting a new root during in
                // componentWillMount currently causes not-yet-mounted components to
                // be purged from our tree data so their parent id is missing.
              }
              !(nextChild.parentID === id) ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : void 0;
            }
          },
          onBeforeMountComponent: function onBeforeMountComponent(id, element, parentID) {
            var item = {
              element: element,
              parentID: parentID,
              text: null,
              childIDs: [],
              isMounted: false,
              updateCount: 0
            };
            setItem(id, item);
          },
          onBeforeUpdateComponent: function onBeforeUpdateComponent(id, element) {
            var item = getItem(id);
            if (!item || !item.isMounted) {
              // We may end up here as a result of setState() in componentWillUnmount().
              // In this case, ignore the element.
              return;
            }
            item.element = element;
          },
          onMountComponent: function onMountComponent(id) {
            var item = getItem(id);
            !item ? invariant(false, 'Item must have been set') : void 0;
            item.isMounted = true;
            var isRoot = item.parentID === 0;
            if (isRoot) {
              addRoot(id);
            }
          },
          onUpdateComponent: function onUpdateComponent(id) {
            var item = getItem(id);
            if (!item || !item.isMounted) {
              // We may end up here as a result of setState() in componentWillUnmount().
              // In this case, ignore the element.
              return;
            }
            item.updateCount++;
          },
          onUnmountComponent: function onUnmountComponent(id) {
            var item = getItem(id);
            if (item) {
              // We need to check if it exists.
              // `item` might not exist if it is inside an error boundary, and a sibling
              // error boundary child threw while mounting. Then this instance never
              // got a chance to mount, but it still gets an unmounting event during
              // the error boundary cleanup.
              item.isMounted = false;
              var isRoot = item.parentID === 0;
              if (isRoot) {
                removeRoot(id);
              }
            }
            unmountedIDs.push(id);
          },
          purgeUnmountedComponents: function purgeUnmountedComponents() {
            if (ReactComponentTreeHook._preventPurging) {
              // Should only be used for testing.
              return;
            }

            for (var i = 0; i < unmountedIDs.length; i++) {
              var id = unmountedIDs[i];
              purgeDeep(id);
            }
            unmountedIDs.length = 0;
          },
          isMounted: function isMounted(id) {
            var item = getItem(id);
            return item ? item.isMounted : false;
          },
          getCurrentStackAddendum: function getCurrentStackAddendum() {
            var info = '';
            var currentOwner = ReactCurrentOwner_1.current;
            if (currentOwner) {
              !(typeof currentOwner.tag !== 'number') ? invariant(false, 'Fiber owners should not show up in Stack stack traces.') : void 0;
              if (typeof currentOwner._debugID === 'number') {
                info += ReactComponentTreeHook.getStackAddendumByID(currentOwner._debugID);
              }
            }
            return info;
          },
          getStackAddendumByID: function getStackAddendumByID(id) {
            var info = '';
            while (id) {
              info += describeID(id);
              id = ReactComponentTreeHook.getParentID(id);
            }
            return info;
          },
          getChildIDs: function getChildIDs(id) {
            var item = getItem(id);
            return item ? item.childIDs : [];
          },
          getDisplayName: function getDisplayName(id) {
            var element = ReactComponentTreeHook.getElement(id);
            if (!element) {
              return null;
            }
            return getDisplayName$1(element);
          },
          getElement: function getElement(id) {
            var item = getItem(id);
            return item ? item.element : null;
          },
          getOwnerID: function getOwnerID(id) {
            var element = ReactComponentTreeHook.getElement(id);
            if (!element || !element._owner) {
              return null;
            }
            return element._owner._debugID;
          },
          getParentID: function getParentID(id) {
            var item = getItem(id);
            return item ? item.parentID : null;
          },
          getSource: function getSource(id) {
            var item = getItem(id);
            var element = item ? item.element : null;
            var source = element != null ? element._source : null;
            return source;
          },
          getText: function getText(id) {
            var element = ReactComponentTreeHook.getElement(id);
            if (typeof element === 'string') {
              return element;
            } else if (typeof element === 'number') {
              return '' + element;
            } else {
              return null;
            }
          },
          getUpdateCount: function getUpdateCount(id) {
            var item = getItem(id);
            return item ? item.updateCount : 0;
          },

          getRootIDs: getRootIDs,
          getRegisteredIDs: getItemIDs
        };

        var ReactComponentTreeHook_1 = ReactComponentTreeHook;

        var createElement = ReactElement_1.createElement;
        var createFactory = ReactElement_1.createFactory;
        var cloneElement = ReactElement_1.cloneElement;

        {
          var ReactElementValidator = ReactElementValidator_1;
          createElement = ReactElementValidator.createElement;
          createFactory = ReactElementValidator.createFactory;
          cloneElement = ReactElementValidator.cloneElement;
        }

        var React = {
          Children: {
            map: ReactChildren_1.map,
            forEach: ReactChildren_1.forEach,
            count: ReactChildren_1.count,
            toArray: ReactChildren_1.toArray,
            only: onlyChild_1
          },

          Component: ReactBaseClasses.Component,
          PureComponent: ReactBaseClasses.PureComponent,
          unstable_AsyncComponent: ReactBaseClasses.AsyncComponent,

          createElement: createElement,
          cloneElement: cloneElement,
          isValidElement: ReactElement_1.isValidElement,

          createFactory: createFactory,

          version: ReactVersion,

          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            ReactCurrentOwner: ReactCurrentOwner_1,
            // Used by renderers to avoid bundling object-assign twice in UMD bundles:
            assign: objectAssign$1
          }
        };

        {
          objectAssign$1(React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, {
            // These should not be included in production.
            ReactComponentTreeHook: ReactComponentTreeHook_1,
            ReactDebugCurrentFrame: ReactDebugCurrentFrame_1
          });
        }

        var ReactEntry = React;

        module.exports = ReactEntry;
      })();
    }

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 227 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {

    function checkDCE() {
      /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
        return;
      }
      if (undefined !== 'production') {
        // This branch is unreachable because this function is only called
        // in production, but the condition is true only in development.
        // Therefore if the branch is still here, dead code elimination wasn't
        // properly applied.
        // Don't change the message. React DevTools relies on it. Also make sure
        // this message doesn't occur elsewhere in this function, or it will cause
        // a false positive.
        throw new Error('^_^');
      }
      try {
        // Verify that the code above has been dead code eliminated (DCE'd).
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
      } catch (err) {
        // DevTools shouldn't crash React, no matter what.
        // We should still report in case we break this code.
        console.error(err);
      }
    }

    if (undefined === 'production') {
      // DCE check should happen before ReactDOM bundle executes so that
      // DevTools can report bad minification during injection.
      checkDCE();
      module.exports = __webpack_require__(228);
    } else {
      module.exports = __webpack_require__(231);
    }

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 228 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /*
   React v16.0.0
   react-dom.production.min.js
  
   Copyright (c) 2013-present, Facebook, Inc.
  
   This source code is licensed under the MIT license found in the
   LICENSE file in the root directory of this source tree.
   Modernizr 3.0.0pre (Custom Build) | MIT
  */

  var aa = __webpack_require__(0);__webpack_require__(15);var l = __webpack_require__(67),
      n = __webpack_require__(34),
      ba = __webpack_require__(123),
      ca = __webpack_require__(12),
      da = __webpack_require__(43),
      ea = __webpack_require__(124),
      fa = __webpack_require__(125),
      ha = __webpack_require__(126),
      ia = __webpack_require__(127);
  function w(a) {
    for (var b = arguments.length - 1, c = "Minified React error #" + a + "; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\x3d" + a, d = 0; d < b; d++) {
      c += "\x26args[]\x3d" + encodeURIComponent(arguments[d + 1]);
    }b = Error(c + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.");b.name = "Invariant Violation";b.framesToPop = 1;throw b;
  }aa ? void 0 : w("227");
  function ja(a) {
    switch (a) {case "svg":
        return "http://www.w3.org/2000/svg";case "math":
        return "http://www.w3.org/1998/Math/MathML";default:
        return "http://www.w3.org/1999/xhtml";}
  }
  var ka = { Namespaces: { html: "http://www.w3.org/1999/xhtml", mathml: "http://www.w3.org/1998/Math/MathML", svg: "http://www.w3.org/2000/svg" }, getIntrinsicNamespace: ja, getChildNamespace: function getChildNamespace(a, b) {
      return null == a || "http://www.w3.org/1999/xhtml" === a ? ja(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
    } },
      la = null,
      oa = {};
  function pa() {
    if (la) for (var a in oa) {
      var b = oa[a],
          c = la.indexOf(a);-1 < c ? void 0 : w("96", a);if (!qa.plugins[c]) {
        b.extractEvents ? void 0 : w("97", a);qa.plugins[c] = b;c = b.eventTypes;for (var d in c) {
          var e = void 0;var f = c[d],
              g = b,
              h = d;qa.eventNameDispatchConfigs.hasOwnProperty(h) ? w("99", h) : void 0;qa.eventNameDispatchConfigs[h] = f;var k = f.phasedRegistrationNames;if (k) {
            for (e in k) {
              k.hasOwnProperty(e) && ra(k[e], g, h);
            }e = !0;
          } else f.registrationName ? (ra(f.registrationName, g, h), e = !0) : e = !1;e ? void 0 : w("98", d, a);
        }
      }
    }
  }
  function ra(a, b, c) {
    qa.registrationNameModules[a] ? w("100", a) : void 0;qa.registrationNameModules[a] = b;qa.registrationNameDependencies[a] = b.eventTypes[c].dependencies;
  }
  var qa = { plugins: [], eventNameDispatchConfigs: {}, registrationNameModules: {}, registrationNameDependencies: {}, possibleRegistrationNames: null, injectEventPluginOrder: function injectEventPluginOrder(a) {
      la ? w("101") : void 0;la = Array.prototype.slice.call(a);pa();
    }, injectEventPluginsByName: function injectEventPluginsByName(a) {
      var b = !1,
          c;for (c in a) {
        if (a.hasOwnProperty(c)) {
          var d = a[c];oa.hasOwnProperty(c) && oa[c] === d || (oa[c] ? w("102", c) : void 0, oa[c] = d, b = !0);
        }
      }b && pa();
    } },
      sa = qa,
      ta = { children: !0, dangerouslySetInnerHTML: !0, autoFocus: !0, defaultValue: !0, defaultChecked: !0,
    innerHTML: !0, suppressContentEditableWarning: !0, style: !0 };function ua(a, b) {
    return (a & b) === b;
  }
  var wa = { MUST_USE_PROPERTY: 1, HAS_BOOLEAN_VALUE: 4, HAS_NUMERIC_VALUE: 8, HAS_POSITIVE_NUMERIC_VALUE: 24, HAS_OVERLOADED_BOOLEAN_VALUE: 32, HAS_STRING_BOOLEAN_VALUE: 64, injectDOMPropertyConfig: function injectDOMPropertyConfig(a) {
      var b = wa,
          c = a.Properties || {},
          d = a.DOMAttributeNamespaces || {},
          e = a.DOMAttributeNames || {};a = a.DOMMutationMethods || {};for (var f in c) {
        xa.properties.hasOwnProperty(f) ? w("48", f) : void 0;var g = f.toLowerCase(),
            h = c[f];g = { attributeName: g, attributeNamespace: null, propertyName: f, mutationMethod: null, mustUseProperty: ua(h, b.MUST_USE_PROPERTY),
          hasBooleanValue: ua(h, b.HAS_BOOLEAN_VALUE), hasNumericValue: ua(h, b.HAS_NUMERIC_VALUE), hasPositiveNumericValue: ua(h, b.HAS_POSITIVE_NUMERIC_VALUE), hasOverloadedBooleanValue: ua(h, b.HAS_OVERLOADED_BOOLEAN_VALUE), hasStringBooleanValue: ua(h, b.HAS_STRING_BOOLEAN_VALUE) };1 >= g.hasBooleanValue + g.hasNumericValue + g.hasOverloadedBooleanValue ? void 0 : w("50", f);e.hasOwnProperty(f) && (g.attributeName = e[f]);d.hasOwnProperty(f) && (g.attributeNamespace = d[f]);a.hasOwnProperty(f) && (g.mutationMethod = a[f]);xa.properties[f] = g;
      }
    } },
      xa = { ID_ATTRIBUTE_NAME: "data-reactid", ROOT_ATTRIBUTE_NAME: "data-reactroot", ATTRIBUTE_NAME_START_CHAR: ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", ATTRIBUTE_NAME_CHAR: ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040",
    properties: {}, shouldSetAttribute: function shouldSetAttribute(a, b) {
      if (xa.isReservedProp(a) || !("o" !== a[0] && "O" !== a[0] || "n" !== a[1] && "N" !== a[1])) return !1;if (null === b) return !0;switch (typeof b === "undefined" ? "undefined" : _typeof4(b)) {case "boolean":
          return xa.shouldAttributeAcceptBooleanValue(a);case "undefined":case "number":case "string":case "object":
          return !0;default:
          return !1;}
    }, getPropertyInfo: function getPropertyInfo(a) {
      return xa.properties.hasOwnProperty(a) ? xa.properties[a] : null;
    }, shouldAttributeAcceptBooleanValue: function shouldAttributeAcceptBooleanValue(a) {
      if (xa.isReservedProp(a)) return !0;var b = xa.getPropertyInfo(a);
      if (b) return b.hasBooleanValue || b.hasStringBooleanValue || b.hasOverloadedBooleanValue;a = a.toLowerCase().slice(0, 5);return "data-" === a || "aria-" === a;
    }, isReservedProp: function isReservedProp(a) {
      return ta.hasOwnProperty(a);
    }, injection: wa },
      A = xa,
      E = { IndeterminateComponent: 0, FunctionalComponent: 1, ClassComponent: 2, HostRoot: 3, HostPortal: 4, HostComponent: 5, HostText: 6, CoroutineComponent: 7, CoroutineHandlerPhase: 8, YieldComponent: 9, Fragment: 10 },
      F = { ELEMENT_NODE: 1, TEXT_NODE: 3, COMMENT_NODE: 8, DOCUMENT_NODE: 9, DOCUMENT_FRAGMENT_NODE: 11 },
      ya = E.HostComponent,
      za = E.HostText,
      Aa = F.ELEMENT_NODE,
      Ba = F.COMMENT_NODE,
      Ea = A.ID_ATTRIBUTE_NAME,
      Fa = { hasCachedChildNodes: 1 },
      Ga = Math.random().toString(36).slice(2),
      Ha = "__reactInternalInstance$" + Ga,
      Ia = "__reactEventHandlers$" + Ga;function La(a) {
    for (var b; b = a._renderedComponent;) {
      a = b;
    }return a;
  }function Ma(a, b) {
    a = La(a);a._hostNode = b;b[Ha] = a;
  }
  function Na(a, b) {
    if (!(a._flags & Fa.hasCachedChildNodes)) {
      var c = a._renderedChildren;b = b.firstChild;var d;a: for (d in c) {
        if (c.hasOwnProperty(d)) {
          var e = c[d],
              f = La(e)._domID;if (0 !== f) {
            for (; null !== b; b = b.nextSibling) {
              var g = b,
                  h = f;if (g.nodeType === Aa && g.getAttribute(Ea) === "" + h || g.nodeType === Ba && g.nodeValue === " react-text: " + h + " " || g.nodeType === Ba && g.nodeValue === " react-empty: " + h + " ") {
                Ma(e, b);continue a;
              }
            }w("32", f);
          }
        }
      }a._flags |= Fa.hasCachedChildNodes;
    }
  }
  function Oa(a) {
    if (a[Ha]) return a[Ha];for (var b = []; !a[Ha];) {
      if (b.push(a), a.parentNode) a = a.parentNode;else return null;
    }var c = a[Ha];if (c.tag === ya || c.tag === za) return c;for (; a && (c = a[Ha]); a = b.pop()) {
      var d = c;b.length && Na(c, a);
    }return d;
  }
  var G = { getClosestInstanceFromNode: Oa, getInstanceFromNode: function getInstanceFromNode(a) {
      var b = a[Ha];if (b) return b.tag === ya || b.tag === za ? b : b._hostNode === a ? b : null;b = Oa(a);return null != b && b._hostNode === a ? b : null;
    }, getNodeFromInstance: function getNodeFromInstance(a) {
      if (a.tag === ya || a.tag === za) return a.stateNode;void 0 === a._hostNode ? w("33") : void 0;if (a._hostNode) return a._hostNode;for (var b = []; !a._hostNode;) {
        b.push(a), a._hostParent ? void 0 : w("34"), a = a._hostParent;
      }for (; b.length; a = b.pop()) {
        Na(a, a._hostNode);
      }return a._hostNode;
    }, precacheChildNodes: Na,
    precacheNode: Ma, uncacheNode: function uncacheNode(a) {
      var b = a._hostNode;b && (delete b[Ha], a._hostNode = null);
    }, precacheFiberNode: function precacheFiberNode(a, b) {
      b[Ha] = a;
    }, getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(a) {
      return a[Ia] || null;
    }, updateFiberProps: function updateFiberProps(a, b) {
      a[Ia] = b;
    } },
      Pa = { remove: function remove(a) {
      a._reactInternalFiber = void 0;
    }, get: function get(a) {
      return a._reactInternalFiber;
    }, has: function has(a) {
      return void 0 !== a._reactInternalFiber;
    }, set: function set(a, b) {
      a._reactInternalFiber = b;
    } },
      Qa = { ReactCurrentOwner: aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner };
  function Ra(a) {
    if ("function" === typeof a.getName) return a.getName();if ("number" === typeof a.tag) {
      a = a.type;if ("string" === typeof a) return a;if ("function" === typeof a) return a.displayName || a.name;
    }return null;
  }var J = { NoEffect: 0, PerformedWork: 1, Placement: 2, Update: 4, PlacementAndUpdate: 6, Deletion: 8, ContentReset: 16, Callback: 32, Err: 64, Ref: 128 },
      Sa = E.HostComponent,
      Ta = E.HostRoot,
      Ua = E.HostPortal,
      Va = E.HostText,
      Wa = J.NoEffect,
      Xa = J.Placement;
  function Za(a) {
    var b = a;if (a.alternate) for (; b["return"];) {
      b = b["return"];
    } else {
      if ((b.effectTag & Xa) !== Wa) return 1;for (; b["return"];) {
        if (b = b["return"], (b.effectTag & Xa) !== Wa) return 1;
      }
    }return b.tag === Ta ? 2 : 3;
  }function $a(a) {
    2 !== Za(a) ? w("188") : void 0;
  }
  function ab(a) {
    var b = a.alternate;if (!b) return b = Za(a), 3 === b ? w("188") : void 0, 1 === b ? null : a;for (var c = a, d = b;;) {
      var e = c["return"],
          f = e ? e.alternate : null;if (!e || !f) break;if (e.child === f.child) {
        for (var g = e.child; g;) {
          if (g === c) return $a(e), a;if (g === d) return $a(e), b;g = g.sibling;
        }w("188");
      }if (c["return"] !== d["return"]) c = e, d = f;else {
        g = !1;for (var h = e.child; h;) {
          if (h === c) {
            g = !0;c = e;d = f;break;
          }if (h === d) {
            g = !0;d = e;c = f;break;
          }h = h.sibling;
        }if (!g) {
          for (h = f.child; h;) {
            if (h === c) {
              g = !0;c = f;d = e;break;
            }if (h === d) {
              g = !0;d = f;c = e;break;
            }h = h.sibling;
          }g ? void 0 : w("189");
        }
      }c.alternate !== d ? w("190") : void 0;
    }c.tag !== Ta ? w("188") : void 0;return c.stateNode.current === c ? a : b;
  }
  var bb = { isFiberMounted: function isFiberMounted(a) {
      return 2 === Za(a);
    }, isMounted: function isMounted(a) {
      return (a = Pa.get(a)) ? 2 === Za(a) : !1;
    }, findCurrentFiberUsingSlowPath: ab, findCurrentHostFiber: function findCurrentHostFiber(a) {
      a = ab(a);if (!a) return null;for (var b = a;;) {
        if (b.tag === Sa || b.tag === Va) return b;if (b.child) b.child["return"] = b, b = b.child;else {
          if (b === a) break;for (; !b.sibling;) {
            if (!b["return"] || b["return"] === a) return null;b = b["return"];
          }b.sibling["return"] = b["return"];b = b.sibling;
        }
      }return null;
    }, findCurrentHostFiberWithNoPortals: function findCurrentHostFiberWithNoPortals(a) {
      a = ab(a);
      if (!a) return null;for (var b = a;;) {
        if (b.tag === Sa || b.tag === Va) return b;if (b.child && b.tag !== Ua) b.child["return"] = b, b = b.child;else {
          if (b === a) break;for (; !b.sibling;) {
            if (!b["return"] || b["return"] === a) return null;b = b["return"];
          }b.sibling["return"] = b["return"];b = b.sibling;
        }
      }return null;
    } },
      K = { _caughtError: null, _hasCaughtError: !1, _rethrowError: null, _hasRethrowError: !1, injection: { injectErrorUtils: function injectErrorUtils(a) {
        "function" !== typeof a.invokeGuardedCallback ? w("197") : void 0;cb = a.invokeGuardedCallback;
      } }, invokeGuardedCallback: function invokeGuardedCallback(a, b, c, d, e, f, g, h, k) {
      cb.apply(K, arguments);
    }, invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(a, b, c, d, e, f, g, h, k) {
      K.invokeGuardedCallback.apply(this, arguments);if (K.hasCaughtError()) {
        var p = K.clearCaughtError();K._hasRethrowError || (K._hasRethrowError = !0, K._rethrowError = p);
      }
    }, rethrowCaughtError: function rethrowCaughtError() {
      return db.apply(K, arguments);
    }, hasCaughtError: function hasCaughtError() {
      return K._hasCaughtError;
    }, clearCaughtError: function clearCaughtError() {
      if (K._hasCaughtError) {
        var a = K._caughtError;K._caughtError = null;K._hasCaughtError = !1;return a;
      }w("198");
    } };
  function cb(a, b, c, d, e, f, g, h, k) {
    K._hasCaughtError = !1;K._caughtError = null;var p = Array.prototype.slice.call(arguments, 3);try {
      b.apply(c, p);
    } catch (x) {
      K._caughtError = x, K._hasCaughtError = !0;
    }
  }function db() {
    if (K._hasRethrowError) {
      var a = K._rethrowError;K._rethrowError = null;K._hasRethrowError = !1;throw a;
    }
  }var eb = K,
      fb;function gb(a, b, c, d) {
    b = a.type || "unknown-event";a.currentTarget = hb.getNodeFromInstance(d);eb.invokeGuardedCallbackAndCatchFirstError(b, c, void 0, a);a.currentTarget = null;
  }
  var hb = { isEndish: function isEndish(a) {
      return "topMouseUp" === a || "topTouchEnd" === a || "topTouchCancel" === a;
    }, isMoveish: function isMoveish(a) {
      return "topMouseMove" === a || "topTouchMove" === a;
    }, isStartish: function isStartish(a) {
      return "topMouseDown" === a || "topTouchStart" === a;
    }, executeDirectDispatch: function executeDirectDispatch(a) {
      var b = a._dispatchListeners,
          c = a._dispatchInstances;Array.isArray(b) ? w("103") : void 0;a.currentTarget = b ? hb.getNodeFromInstance(c) : null;b = b ? b(a) : null;a.currentTarget = null;a._dispatchListeners = null;a._dispatchInstances = null;return b;
    }, executeDispatchesInOrder: function executeDispatchesInOrder(a, b) {
      var c = a._dispatchListeners,
          d = a._dispatchInstances;if (Array.isArray(c)) for (var e = 0; e < c.length && !a.isPropagationStopped(); e++) {
        gb(a, b, c[e], d[e]);
      } else c && gb(a, b, c, d);a._dispatchListeners = null;a._dispatchInstances = null;
    }, executeDispatchesInOrderStopAtTrue: function executeDispatchesInOrderStopAtTrue(a) {
      a: {
        var b = a._dispatchListeners;var c = a._dispatchInstances;if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {
          if (b[d](a, c[d])) {
            b = c[d];break a;
          }
        } else if (b && b(a, c)) {
          b = c;break a;
        }b = null;
      }a._dispatchInstances = null;a._dispatchListeners = null;return b;
    }, hasDispatches: function hasDispatches(a) {
      return !!a._dispatchListeners;
    }, getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(a) {
      return fb.getFiberCurrentPropsFromNode(a);
    }, getInstanceFromNode: function getInstanceFromNode(a) {
      return fb.getInstanceFromNode(a);
    }, getNodeFromInstance: function getNodeFromInstance(a) {
      return fb.getNodeFromInstance(a);
    }, injection: { injectComponentTree: function injectComponentTree(a) {
        fb = a;
      } } },
      ib = hb,
      jb = null,
      kb = null,
      lb = null;
  function mb(a) {
    if (a = ib.getInstanceFromNode(a)) if ("number" === typeof a.tag) {
      jb && "function" === typeof jb.restoreControlledState ? void 0 : w("194");var b = ib.getFiberCurrentPropsFromNode(a.stateNode);jb.restoreControlledState(a.stateNode, a.type, b);
    } else "function" !== typeof a.restoreControlledState ? w("195") : void 0, a.restoreControlledState();
  }
  var nb = { injection: { injectFiberControlledHostComponent: function injectFiberControlledHostComponent(a) {
        jb = a;
      } }, enqueueStateRestore: function enqueueStateRestore(a) {
      kb ? lb ? lb.push(a) : lb = [a] : kb = a;
    }, restoreStateIfNeeded: function restoreStateIfNeeded() {
      if (kb) {
        var a = kb,
            b = lb;lb = kb = null;mb(a);if (b) for (a = 0; a < b.length; a++) {
          mb(b[a]);
        }
      }
    } };function ob(a, b, c, d, e, f) {
    return a(b, c, d, e, f);
  }function pb(a, b) {
    return a(b);
  }function qb(a, b) {
    return pb(a, b);
  }
  var rb = !1,
      sb = { batchedUpdates: function batchedUpdates(a, b) {
      if (rb) return ob(qb, a, b);rb = !0;try {
        return ob(qb, a, b);
      } finally {
        rb = !1, nb.restoreStateIfNeeded();
      }
    }, injection: { injectStackBatchedUpdates: function injectStackBatchedUpdates(a) {
        ob = a;
      }, injectFiberBatchedUpdates: function injectFiberBatchedUpdates(a) {
        pb = a;
      } } },
      tb = F.TEXT_NODE;function ub(a) {
    a = a.target || a.srcElement || window;a.correspondingUseElement && (a = a.correspondingUseElement);return a.nodeType === tb ? a.parentNode : a;
  }var vb = E.HostRoot,
      wb = [];
  function xb(a) {
    var b = a.targetInst;do {
      if (!b) {
        a.ancestors.push(b);break;
      }var c = b;if ("number" === typeof c.tag) {
        for (; c["return"];) {
          c = c["return"];
        }c = c.tag !== vb ? null : c.stateNode.containerInfo;
      } else {
        for (; c._hostParent;) {
          c = c._hostParent;
        }c = G.getNodeFromInstance(c).parentNode;
      }if (!c) break;a.ancestors.push(b);b = G.getClosestInstanceFromNode(c);
    } while (b);for (c = 0; c < a.ancestors.length; c++) {
      b = a.ancestors[c], yb._handleTopLevel(a.topLevelType, b, a.nativeEvent, ub(a.nativeEvent));
    }
  }
  var yb = { _enabled: !0, _handleTopLevel: null, setHandleTopLevel: function setHandleTopLevel(a) {
      yb._handleTopLevel = a;
    }, setEnabled: function setEnabled(a) {
      yb._enabled = !!a;
    }, isEnabled: function isEnabled() {
      return yb._enabled;
    }, trapBubbledEvent: function trapBubbledEvent(a, b, c) {
      return c ? ba.listen(c, b, yb.dispatchEvent.bind(null, a)) : null;
    }, trapCapturedEvent: function trapCapturedEvent(a, b, c) {
      return c ? ba.capture(c, b, yb.dispatchEvent.bind(null, a)) : null;
    }, dispatchEvent: function dispatchEvent(a, b) {
      if (yb._enabled) {
        var c = ub(b);c = G.getClosestInstanceFromNode(c);null === c || "number" !== typeof c.tag || bb.isFiberMounted(c) || (c = null);if (wb.length) {
          var d = wb.pop();d.topLevelType = a;d.nativeEvent = b;d.targetInst = c;a = d;
        } else a = { topLevelType: a, nativeEvent: b, targetInst: c, ancestors: [] };try {
          sb.batchedUpdates(xb, a);
        } finally {
          a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > wb.length && wb.push(a);
        }
      }
    } },
      L = yb;function Cb(a, b) {
    null == b ? w("30") : void 0;if (null == a) return b;if (Array.isArray(a)) {
      if (Array.isArray(b)) return a.push.apply(a, b), a;a.push(b);return a;
    }return Array.isArray(b) ? [a].concat(b) : [a, b];
  }
  function Db(a, b, c) {
    Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
  }var Eb = null;function Fb(a, b) {
    a && (ib.executeDispatchesInOrder(a, b), a.isPersistent() || a.constructor.release(a));
  }function Gb(a) {
    return Fb(a, !0);
  }function Hb(a) {
    return Fb(a, !1);
  }
  function Ib(a, b, c) {
    switch (a) {case "onClick":case "onClickCapture":case "onDoubleClick":case "onDoubleClickCapture":case "onMouseDown":case "onMouseDownCapture":case "onMouseMove":case "onMouseMoveCapture":case "onMouseUp":case "onMouseUpCapture":
        return !(!c.disabled || "button" !== b && "input" !== b && "select" !== b && "textarea" !== b);default:
        return !1;}
  }
  var Jb = { injection: { injectEventPluginOrder: sa.injectEventPluginOrder, injectEventPluginsByName: sa.injectEventPluginsByName }, getListener: function getListener(a, b) {
      if ("number" === typeof a.tag) {
        var c = a.stateNode;if (!c) return null;var d = ib.getFiberCurrentPropsFromNode(c);if (!d) return null;c = d[b];if (Ib(b, a.type, d)) return null;
      } else {
        d = a._currentElement;if ("string" === typeof d || "number" === typeof d || !a._rootNodeID) return null;a = d.props;c = a[b];if (Ib(b, d.type, a)) return null;
      }c && "function" !== typeof c ? w("231", b, typeof c === "undefined" ? "undefined" : _typeof4(c)) : void 0;
      return c;
    }, extractEvents: function extractEvents(a, b, c, d) {
      for (var e, f = sa.plugins, g = 0; g < f.length; g++) {
        var h = f[g];h && (h = h.extractEvents(a, b, c, d)) && (e = Cb(e, h));
      }return e;
    }, enqueueEvents: function enqueueEvents(a) {
      a && (Eb = Cb(Eb, a));
    }, processEventQueue: function processEventQueue(a) {
      var b = Eb;Eb = null;a ? Db(b, Gb) : Db(b, Hb);Eb ? w("95") : void 0;eb.rethrowCaughtError();
    } },
      Kb;l.canUseDOM && (Kb = document.implementation && document.implementation.hasFeature && !0 !== document.implementation.hasFeature("", ""));
  function Lb(a, b) {
    if (!l.canUseDOM || b && !("addEventListener" in document)) return !1;b = "on" + a;var c = b in document;c || (c = document.createElement("div"), c.setAttribute(b, "return;"), c = "function" === typeof c[b]);!c && Kb && "wheel" === a && (c = document.implementation.hasFeature("Events.wheel", "3.0"));return c;
  }function Mb(a, b) {
    var c = {};c[a.toLowerCase()] = b.toLowerCase();c["Webkit" + a] = "webkit" + b;c["Moz" + a] = "moz" + b;c["ms" + a] = "MS" + b;c["O" + a] = "o" + b.toLowerCase();return c;
  }
  var Nb = { animationend: Mb("Animation", "AnimationEnd"), animationiteration: Mb("Animation", "AnimationIteration"), animationstart: Mb("Animation", "AnimationStart"), transitionend: Mb("Transition", "TransitionEnd") },
      Ob = {},
      Pb = {};l.canUseDOM && (Pb = document.createElement("div").style, "AnimationEvent" in window || (delete Nb.animationend.animation, delete Nb.animationiteration.animation, delete Nb.animationstart.animation), "TransitionEvent" in window || delete Nb.transitionend.transition);
  function Qb(a) {
    if (Ob[a]) return Ob[a];if (!Nb[a]) return a;var b = Nb[a],
        c;for (c in b) {
      if (b.hasOwnProperty(c) && c in Pb) return Ob[a] = b[c];
    }return "";
  }
  var Rb = { topAbort: "abort", topAnimationEnd: Qb("animationend") || "animationend", topAnimationIteration: Qb("animationiteration") || "animationiteration", topAnimationStart: Qb("animationstart") || "animationstart", topBlur: "blur", topCancel: "cancel", topCanPlay: "canplay", topCanPlayThrough: "canplaythrough", topChange: "change", topClick: "click", topClose: "close", topCompositionEnd: "compositionend", topCompositionStart: "compositionstart", topCompositionUpdate: "compositionupdate", topContextMenu: "contextmenu", topCopy: "copy",
    topCut: "cut", topDoubleClick: "dblclick", topDrag: "drag", topDragEnd: "dragend", topDragEnter: "dragenter", topDragExit: "dragexit", topDragLeave: "dragleave", topDragOver: "dragover", topDragStart: "dragstart", topDrop: "drop", topDurationChange: "durationchange", topEmptied: "emptied", topEncrypted: "encrypted", topEnded: "ended", topError: "error", topFocus: "focus", topInput: "input", topKeyDown: "keydown", topKeyPress: "keypress", topKeyUp: "keyup", topLoadedData: "loadeddata", topLoad: "load", topLoadedMetadata: "loadedmetadata", topLoadStart: "loadstart",
    topMouseDown: "mousedown", topMouseMove: "mousemove", topMouseOut: "mouseout", topMouseOver: "mouseover", topMouseUp: "mouseup", topPaste: "paste", topPause: "pause", topPlay: "play", topPlaying: "playing", topProgress: "progress", topRateChange: "ratechange", topScroll: "scroll", topSeeked: "seeked", topSeeking: "seeking", topSelectionChange: "selectionchange", topStalled: "stalled", topSuspend: "suspend", topTextInput: "textInput", topTimeUpdate: "timeupdate", topToggle: "toggle", topTouchCancel: "touchcancel", topTouchEnd: "touchend", topTouchMove: "touchmove",
    topTouchStart: "touchstart", topTransitionEnd: Qb("transitionend") || "transitionend", topVolumeChange: "volumechange", topWaiting: "waiting", topWheel: "wheel" },
      Sb = {},
      Tb = 0,
      Ub = "_reactListenersID" + ("" + Math.random()).slice(2);function Vb(a) {
    Object.prototype.hasOwnProperty.call(a, Ub) || (a[Ub] = Tb++, Sb[a[Ub]] = {});return Sb[a[Ub]];
  }
  var M = n({}, { handleTopLevel: function handleTopLevel(a, b, c, d) {
      a = Jb.extractEvents(a, b, c, d);Jb.enqueueEvents(a);Jb.processEventQueue(!1);
    } }, { setEnabled: function setEnabled(a) {
      L && L.setEnabled(a);
    }, isEnabled: function isEnabled() {
      return !(!L || !L.isEnabled());
    }, listenTo: function listenTo(a, b) {
      var c = Vb(b);a = sa.registrationNameDependencies[a];for (var d = 0; d < a.length; d++) {
        var e = a[d];c.hasOwnProperty(e) && c[e] || ("topWheel" === e ? Lb("wheel") ? L.trapBubbledEvent("topWheel", "wheel", b) : Lb("mousewheel") ? L.trapBubbledEvent("topWheel", "mousewheel", b) : L.trapBubbledEvent("topWheel", "DOMMouseScroll", b) : "topScroll" === e ? L.trapCapturedEvent("topScroll", "scroll", b) : "topFocus" === e || "topBlur" === e ? (L.trapCapturedEvent("topFocus", "focus", b), L.trapCapturedEvent("topBlur", "blur", b), c.topBlur = !0, c.topFocus = !0) : "topCancel" === e ? (Lb("cancel", !0) && L.trapCapturedEvent("topCancel", "cancel", b), c.topCancel = !0) : "topClose" === e ? (Lb("close", !0) && L.trapCapturedEvent("topClose", "close", b), c.topClose = !0) : Rb.hasOwnProperty(e) && L.trapBubbledEvent(e, Rb[e], b), c[e] = !0);
      }
    }, isListeningToAllDependencies: function isListeningToAllDependencies(a, b) {
      b = Vb(b);a = sa.registrationNameDependencies[a];for (var c = 0; c < a.length; c++) {
        var d = a[c];if (!b.hasOwnProperty(d) || !b[d]) return !1;
      }return !0;
    }, trapBubbledEvent: function trapBubbledEvent(a, b, c) {
      return L.trapBubbledEvent(a, b, c);
    }, trapCapturedEvent: function trapCapturedEvent(a, b, c) {
      return L.trapCapturedEvent(a, b, c);
    } }),
      Wb = { animationIterationCount: !0, borderImageOutset: !0, borderImageSlice: !0, borderImageWidth: !0, boxFlex: !0, boxFlexGroup: !0, boxOrdinalGroup: !0, columnCount: !0, columns: !0, flex: !0, flexGrow: !0, flexPositive: !0, flexShrink: !0, flexNegative: !0,
    flexOrder: !0, gridRow: !0, gridRowEnd: !0, gridRowSpan: !0, gridRowStart: !0, gridColumn: !0, gridColumnEnd: !0, gridColumnSpan: !0, gridColumnStart: !0, fontWeight: !0, lineClamp: !0, lineHeight: !0, opacity: !0, order: !0, orphans: !0, tabSize: !0, widows: !0, zIndex: !0, zoom: !0, fillOpacity: !0, floodOpacity: !0, stopOpacity: !0, strokeDasharray: !0, strokeDashoffset: !0, strokeMiterlimit: !0, strokeOpacity: !0, strokeWidth: !0 },
      Xb = ["Webkit", "ms", "Moz", "O"];
  Object.keys(Wb).forEach(function (a) {
    Xb.forEach(function (b) {
      b = b + a.charAt(0).toUpperCase() + a.substring(1);Wb[b] = Wb[a];
    });
  });
  var Yb = { isUnitlessNumber: Wb, shorthandPropertyExpansions: { background: { backgroundAttachment: !0, backgroundColor: !0, backgroundImage: !0, backgroundPositionX: !0, backgroundPositionY: !0, backgroundRepeat: !0 }, backgroundPosition: { backgroundPositionX: !0, backgroundPositionY: !0 }, border: { borderWidth: !0, borderStyle: !0, borderColor: !0 }, borderBottom: { borderBottomWidth: !0, borderBottomStyle: !0, borderBottomColor: !0 }, borderLeft: { borderLeftWidth: !0, borderLeftStyle: !0, borderLeftColor: !0 }, borderRight: { borderRightWidth: !0, borderRightStyle: !0,
        borderRightColor: !0 }, borderTop: { borderTopWidth: !0, borderTopStyle: !0, borderTopColor: !0 }, font: { fontStyle: !0, fontVariant: !0, fontWeight: !0, fontSize: !0, lineHeight: !0, fontFamily: !0 }, outline: { outlineWidth: !0, outlineStyle: !0, outlineColor: !0 } } },
      Zb = Yb.isUnitlessNumber,
      $b = !1;if (l.canUseDOM) {
    var ac = document.createElement("div").style;try {
      ac.font = "";
    } catch (a) {
      $b = !0;
    }
  }
  var bc = { createDangerousStringForStyles: function createDangerousStringForStyles() {}, setValueForStyles: function setValueForStyles(a, b) {
      a = a.style;for (var c in b) {
        if (b.hasOwnProperty(c)) {
          var d = 0 === c.indexOf("--");var e = c;var f = b[c];e = null == f || "boolean" === typeof f || "" === f ? "" : d || "number" !== typeof f || 0 === f || Zb.hasOwnProperty(e) && Zb[e] ? ("" + f).trim() : f + "px";"float" === c && (c = "cssFloat");if (d) a.setProperty(c, e);else if (e) a[c] = e;else if (d = $b && Yb.shorthandPropertyExpansions[c]) for (var g in d) {
            a[g] = "";
          } else a[c] = "";
        }
      }
    } },
      cc = new RegExp("^[" + A.ATTRIBUTE_NAME_START_CHAR + "][" + A.ATTRIBUTE_NAME_CHAR + "]*$"),
      dc = {},
      ec = {};function fc(a) {
    if (ec.hasOwnProperty(a)) return !0;if (dc.hasOwnProperty(a)) return !1;if (cc.test(a)) return ec[a] = !0;dc[a] = !0;return !1;
  }
  var gc = { setAttributeForID: function setAttributeForID(a, b) {
      a.setAttribute(A.ID_ATTRIBUTE_NAME, b);
    }, setAttributeForRoot: function setAttributeForRoot(a) {
      a.setAttribute(A.ROOT_ATTRIBUTE_NAME, "");
    }, getValueForProperty: function getValueForProperty() {}, getValueForAttribute: function getValueForAttribute() {}, setValueForProperty: function setValueForProperty(a, b, c) {
      var d = A.getPropertyInfo(b);if (d && A.shouldSetAttribute(b, c)) {
        var e = d.mutationMethod;e ? e(a, c) : null == c || d.hasBooleanValue && !c || d.hasNumericValue && isNaN(c) || d.hasPositiveNumericValue && 1 > c || d.hasOverloadedBooleanValue && !1 === c ? gc.deleteValueForProperty(a, b) : d.mustUseProperty ? a[d.propertyName] = c : (b = d.attributeName, (e = d.attributeNamespace) ? a.setAttributeNS(e, b, "" + c) : d.hasBooleanValue || d.hasOverloadedBooleanValue && !0 === c ? a.setAttribute(b, "") : a.setAttribute(b, "" + c));
      } else gc.setValueForAttribute(a, b, A.shouldSetAttribute(b, c) ? c : null);
    }, setValueForAttribute: function setValueForAttribute(a, b, c) {
      fc(b) && (null == c ? a.removeAttribute(b) : a.setAttribute(b, "" + c));
    }, deleteValueForAttribute: function deleteValueForAttribute(a, b) {
      a.removeAttribute(b);
    }, deleteValueForProperty: function deleteValueForProperty(a, b) {
      var c = A.getPropertyInfo(b);
      c ? (b = c.mutationMethod) ? b(a, void 0) : c.mustUseProperty ? a[c.propertyName] = c.hasBooleanValue ? !1 : "" : a.removeAttribute(c.attributeName) : a.removeAttribute(b);
    } },
      hc = gc,
      ic = Qa.ReactDebugCurrentFrame;function jc() {
    return null;
  }
  var kc = { current: null, phase: null, resetCurrentFiber: function resetCurrentFiber() {
      ic.getCurrentStack = null;kc.current = null;kc.phase = null;
    }, setCurrentFiber: function setCurrentFiber(a, b) {
      ic.getCurrentStack = jc;kc.current = a;kc.phase = b;
    }, getCurrentFiberOwnerName: function getCurrentFiberOwnerName() {
      return null;
    }, getCurrentFiberStackAddendum: jc },
      lc = kc,
      mc = { getHostProps: function getHostProps(a, b) {
      var c = b.value,
          d = b.checked;return n({ type: void 0, step: void 0, min: void 0, max: void 0 }, b, { defaultChecked: void 0, defaultValue: void 0, value: null != c ? c : a._wrapperState.initialValue, checked: null != d ? d : a._wrapperState.initialChecked });
    }, initWrapperState: function initWrapperState(a, b) {
      var c = b.defaultValue;a._wrapperState = { initialChecked: null != b.checked ? b.checked : b.defaultChecked, initialValue: null != b.value ? b.value : c, controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value };
    }, updateWrapper: function updateWrapper(a, b) {
      var c = b.checked;null != c && hc.setValueForProperty(a, "checked", c || !1);c = b.value;if (null != c) {
        if (0 === c && "" === a.value) a.value = "0";else if ("number" === b.type) {
          if (b = parseFloat(a.value) || 0, c != b || c == b && a.value != c) a.value = "" + c;
        } else a.value !== "" + c && (a.value = "" + c);
      } else null == b.value && null != b.defaultValue && a.defaultValue !== "" + b.defaultValue && (a.defaultValue = "" + b.defaultValue), null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
    }, postMountWrapper: function postMountWrapper(a, b) {
      switch (b.type) {case "submit":case "reset":
          break;case "color":case "date":case "datetime":case "datetime-local":case "month":case "time":case "week":
          a.value = "";a.value = a.defaultValue;break;default:
          a.value = a.value;}b = a.name;"" !== b && (a.name = "");a.defaultChecked = !a.defaultChecked;a.defaultChecked = !a.defaultChecked;"" !== b && (a.name = b);
    }, restoreControlledState: function restoreControlledState(a, b) {
      mc.updateWrapper(a, b);var c = b.name;if ("radio" === b.type && null != c) {
        for (b = a; b.parentNode;) {
          b = b.parentNode;
        }c = b.querySelectorAll("input[name\x3d" + JSON.stringify("" + c) + '][type\x3d"radio"]');for (b = 0; b < c.length; b++) {
          var d = c[b];if (d !== a && d.form === a.form) {
            var e = G.getFiberCurrentPropsFromNode(d);e ? void 0 : w("90");mc.updateWrapper(d, e);
          }
        }
      }
    } },
      qc = mc;
  function rc(a) {
    var b = "";aa.Children.forEach(a, function (a) {
      null == a || "string" !== typeof a && "number" !== typeof a || (b += a);
    });return b;
  }var sc = { validateProps: function validateProps() {}, postMountWrapper: function postMountWrapper(a, b) {
      null != b.value && a.setAttribute("value", b.value);
    }, getHostProps: function getHostProps(a, b) {
      a = n({ children: void 0 }, b);if (b = rc(b.children)) a.children = b;return a;
    } };
  function tc(a, b, c) {
    a = a.options;if (b) {
      b = {};for (var d = 0; d < c.length; d++) {
        b["$" + c[d]] = !0;
      }for (c = 0; c < a.length; c++) {
        d = b.hasOwnProperty("$" + a[c].value), a[c].selected !== d && (a[c].selected = d);
      }
    } else {
      c = "" + c;b = null;for (d = 0; d < a.length; d++) {
        if (a[d].value === c) {
          a[d].selected = !0;return;
        }null !== b || a[d].disabled || (b = a[d]);
      }null !== b && (b.selected = !0);
    }
  }
  var uc = { getHostProps: function getHostProps(a, b) {
      return n({}, b, { value: void 0 });
    }, initWrapperState: function initWrapperState(a, b) {
      var c = b.value;a._wrapperState = { initialValue: null != c ? c : b.defaultValue, wasMultiple: !!b.multiple };
    }, postMountWrapper: function postMountWrapper(a, b) {
      a.multiple = !!b.multiple;var c = b.value;null != c ? tc(a, !!b.multiple, c) : null != b.defaultValue && tc(a, !!b.multiple, b.defaultValue);
    }, postUpdateWrapper: function postUpdateWrapper(a, b) {
      a._wrapperState.initialValue = void 0;var c = a._wrapperState.wasMultiple;a._wrapperState.wasMultiple = !!b.multiple;var d = b.value;
      null != d ? tc(a, !!b.multiple, d) : c !== !!b.multiple && (null != b.defaultValue ? tc(a, !!b.multiple, b.defaultValue) : tc(a, !!b.multiple, b.multiple ? [] : ""));
    }, restoreControlledState: function restoreControlledState(a, b) {
      var c = b.value;null != c && tc(a, !!b.multiple, c);
    } },
      vc = { getHostProps: function getHostProps(a, b) {
      null != b.dangerouslySetInnerHTML ? w("91") : void 0;return n({}, b, { value: void 0, defaultValue: void 0, children: "" + a._wrapperState.initialValue });
    }, initWrapperState: function initWrapperState(a, b) {
      var c = b.value,
          d = c;null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? w("92") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : w("93"), b = b[0]), c = "" + b), null == c && (c = ""), d = c);a._wrapperState = { initialValue: "" + d };
    }, updateWrapper: function updateWrapper(a, b) {
      var c = b.value;null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && (a.defaultValue = c));null != b.defaultValue && (a.defaultValue = b.defaultValue);
    }, postMountWrapper: function postMountWrapper(a) {
      var b = a.textContent;b === a._wrapperState.initialValue && (a.value = b);
    }, restoreControlledState: function restoreControlledState(a, b) {
      vc.updateWrapper(a, b);
    } },
      wc = vc,
      xc = n({ menuitem: !0 }, { area: !0,
    base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });function yc(a, b) {
    b && (xc[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? w("137", a, "") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? w("60") : void 0, "object" === _typeof4(b.dangerouslySetInnerHTML) && "__html" in b.dangerouslySetInnerHTML ? void 0 : w("61")), null != b.style && "object" !== _typeof4(b.style) ? w("62", "") : void 0);
  }
  function zc(a) {
    var b = a.type;return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
  }
  function Ac(a) {
    var b = zc(a) ? "checked" : "value",
        c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
        d = "" + a[b];if (!a.hasOwnProperty(b) && "function" === typeof c.get && "function" === typeof c.set) return Object.defineProperty(a, b, { enumerable: c.enumerable, configurable: !0, get: function get() {
        return c.get.call(this);
      }, set: function set(a) {
        d = "" + a;c.set.call(this, a);
      } }), { getValue: function getValue() {
        return d;
      }, setValue: function setValue(a) {
        d = "" + a;
      }, stopTracking: function stopTracking() {
        a._valueTracker = null;delete a[b];
      } };
  }
  var Bc = { _getTrackerFromNode: function _getTrackerFromNode(a) {
      return a._valueTracker;
    }, track: function track(a) {
      a._valueTracker || (a._valueTracker = Ac(a));
    }, updateValueIfChanged: function updateValueIfChanged(a) {
      if (!a) return !1;var b = a._valueTracker;if (!b) return !0;var c = b.getValue();var d = "";a && (d = zc(a) ? a.checked ? "true" : "false" : a.value);a = d;return a !== c ? (b.setValue(a), !0) : !1;
    }, stopTracking: function stopTracking(a) {
      (a = a._valueTracker) && a.stopTracking();
    } };
  function Cc(a, b) {
    if (-1 === a.indexOf("-")) return "string" === typeof b.is;switch (a) {case "annotation-xml":case "color-profile":case "font-face":case "font-face-src":case "font-face-uri":case "font-face-format":case "font-face-name":case "missing-glyph":
        return !1;default:
        return !0;}
  }
  var Dc = ka.Namespaces,
      Ec,
      Fc = function (a) {
    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {
      MSApp.execUnsafeLocalFunction(function () {
        return a(b, c, d, e);
      });
    } : a;
  }(function (a, b) {
    if (a.namespaceURI !== Dc.svg || "innerHTML" in a) a.innerHTML = b;else for (Ec = Ec || document.createElement("div"), Ec.innerHTML = "\x3csvg\x3e" + b + "\x3c/svg\x3e", b = Ec.firstChild; b.firstChild;) {
      a.appendChild(b.firstChild);
    }
  }),
      Gc = /["'&<>]/,
      Hc = F.TEXT_NODE;
  function Ic(a, b) {
    if (b) {
      var c = a.firstChild;if (c && c === a.lastChild && c.nodeType === Hc) {
        c.nodeValue = b;return;
      }
    }a.textContent = b;
  }
  l.canUseDOM && ("textContent" in document.documentElement || (Ic = function Ic(a, b) {
    if (a.nodeType === Hc) a.nodeValue = b;else {
      if ("boolean" === typeof b || "number" === typeof b) b = "" + b;else {
        b = "" + b;var c = Gc.exec(b);if (c) {
          var d = "",
              e,
              f = 0;for (e = c.index; e < b.length; e++) {
            switch (b.charCodeAt(e)) {case 34:
                c = "\x26quot;";break;case 38:
                c = "\x26amp;";break;case 39:
                c = "\x26#x27;";break;case 60:
                c = "\x26lt;";break;case 62:
                c = "\x26gt;";break;default:
                continue;}f !== e && (d += b.substring(f, e));f = e + 1;d += c;
          }b = f !== e ? d + b.substring(f, e) : d;
        }
      }Fc(a, b);
    }
  }));
  var Jc = Ic,
      Kc = lc.getCurrentFiberOwnerName,
      Lc = F.DOCUMENT_NODE,
      Mc = F.DOCUMENT_FRAGMENT_NODE,
      Nc = M.listenTo,
      Oc = sa.registrationNameModules,
      Pc = ka.Namespaces.html,
      Qc = ka.getIntrinsicNamespace;function Rc(a, b) {
    Nc(b, a.nodeType === Lc || a.nodeType === Mc ? a : a.ownerDocument);
  }
  var Sc = { topAbort: "abort", topCanPlay: "canplay", topCanPlayThrough: "canplaythrough", topDurationChange: "durationchange", topEmptied: "emptied", topEncrypted: "encrypted", topEnded: "ended", topError: "error", topLoadedData: "loadeddata", topLoadedMetadata: "loadedmetadata", topLoadStart: "loadstart", topPause: "pause", topPlay: "play", topPlaying: "playing", topProgress: "progress", topRateChange: "ratechange", topSeeked: "seeked", topSeeking: "seeking", topStalled: "stalled", topSuspend: "suspend", topTimeUpdate: "timeupdate", topVolumeChange: "volumechange",
    topWaiting: "waiting" },
      N = { createElement: function createElement(a, b, c, d) {
      c = c.nodeType === Lc ? c : c.ownerDocument;d === Pc && (d = Qc(a));d === Pc ? "script" === a ? (a = c.createElement("div"), a.innerHTML = "\x3cscript\x3e\x3c/script\x3e", a = a.removeChild(a.firstChild)) : a = "string" === typeof b.is ? c.createElement(a, { is: b.is }) : c.createElement(a) : a = c.createElementNS(d, a);return a;
    }, createTextNode: function createTextNode(a, b) {
      return (b.nodeType === Lc ? b : b.ownerDocument).createTextNode(a);
    }, setInitialProperties: function setInitialProperties(a, b, c, d) {
      var e = Cc(b, c);switch (b) {case "iframe":case "object":
          M.trapBubbledEvent("topLoad", "load", a);var f = c;break;case "video":case "audio":
          for (f in Sc) {
            Sc.hasOwnProperty(f) && M.trapBubbledEvent(f, Sc[f], a);
          }f = c;break;case "source":
          M.trapBubbledEvent("topError", "error", a);f = c;break;case "img":case "image":
          M.trapBubbledEvent("topError", "error", a);M.trapBubbledEvent("topLoad", "load", a);f = c;break;case "form":
          M.trapBubbledEvent("topReset", "reset", a);M.trapBubbledEvent("topSubmit", "submit", a);f = c;break;case "details":
          M.trapBubbledEvent("topToggle", "toggle", a);f = c;break;case "input":
          qc.initWrapperState(a, c);f = qc.getHostProps(a, c);M.trapBubbledEvent("topInvalid", "invalid", a);Rc(d, "onChange");break;case "option":
          sc.validateProps(a, c);f = sc.getHostProps(a, c);break;case "select":
          uc.initWrapperState(a, c);f = uc.getHostProps(a, c);M.trapBubbledEvent("topInvalid", "invalid", a);Rc(d, "onChange");break;case "textarea":
          wc.initWrapperState(a, c);f = wc.getHostProps(a, c);M.trapBubbledEvent("topInvalid", "invalid", a);Rc(d, "onChange");break;default:
          f = c;}yc(b, f, Kc);var g = f,
          h;for (h in g) {
        if (g.hasOwnProperty(h)) {
          var k = g[h];"style" === h ? bc.setValueForStyles(a, k) : "dangerouslySetInnerHTML" === h ? (k = k ? k.__html : void 0, null != k && Fc(a, k)) : "children" === h ? "string" === typeof k ? Jc(a, k) : "number" === typeof k && Jc(a, "" + k) : "suppressContentEditableWarning" !== h && (Oc.hasOwnProperty(h) ? null != k && Rc(d, h) : e ? hc.setValueForAttribute(a, h, k) : null != k && hc.setValueForProperty(a, h, k));
        }
      }switch (b) {case "input":
          Bc.track(a);qc.postMountWrapper(a, c);break;case "textarea":
          Bc.track(a);wc.postMountWrapper(a, c);break;case "option":
          sc.postMountWrapper(a, c);break;case "select":
          uc.postMountWrapper(a, c);break;default:
          "function" === typeof f.onClick && (a.onclick = ca);}
    }, diffProperties: function diffProperties(a, b, c, d, e) {
      var f = null;switch (b) {case "input":
          c = qc.getHostProps(a, c);d = qc.getHostProps(a, d);f = [];break;case "option":
          c = sc.getHostProps(a, c);d = sc.getHostProps(a, d);f = [];break;case "select":
          c = uc.getHostProps(a, c);d = uc.getHostProps(a, d);f = [];break;case "textarea":
          c = wc.getHostProps(a, c);d = wc.getHostProps(a, d);f = [];break;default:
          "function" !== typeof c.onClick && "function" === typeof d.onClick && (a.onclick = ca);}yc(b, d, Kc);
      var g, h;a = null;for (g in c) {
        if (!d.hasOwnProperty(g) && c.hasOwnProperty(g) && null != c[g]) if ("style" === g) for (h in b = c[g], b) {
          b.hasOwnProperty(h) && (a || (a = {}), a[h] = "");
        } else "dangerouslySetInnerHTML" !== g && "children" !== g && "suppressContentEditableWarning" !== g && (Oc.hasOwnProperty(g) ? f || (f = []) : (f = f || []).push(g, null));
      }for (g in d) {
        var k = d[g];b = null != c ? c[g] : void 0;if (d.hasOwnProperty(g) && k !== b && (null != k || null != b)) if ("style" === g) {
          if (b) {
            for (h in b) {
              !b.hasOwnProperty(h) || k && k.hasOwnProperty(h) || (a || (a = {}), a[h] = "");
            }for (h in k) {
              k.hasOwnProperty(h) && b[h] !== k[h] && (a || (a = {}), a[h] = k[h]);
            }
          } else a || (f || (f = []), f.push(g, a)), a = k;
        } else "dangerouslySetInnerHTML" === g ? (k = k ? k.__html : void 0, b = b ? b.__html : void 0, null != k && b !== k && (f = f || []).push(g, "" + k)) : "children" === g ? b === k || "string" !== typeof k && "number" !== typeof k || (f = f || []).push(g, "" + k) : "suppressContentEditableWarning" !== g && (Oc.hasOwnProperty(g) ? (null != k && Rc(e, g), f || b === k || (f = [])) : (f = f || []).push(g, k));
      }a && (f = f || []).push("style", a);return f;
    }, updateProperties: function updateProperties(a, b, c, d, e) {
      Cc(c, d);d = Cc(c, e);for (var f = 0; f < b.length; f += 2) {
        var g = b[f],
            h = b[f + 1];"style" === g ? bc.setValueForStyles(a, h) : "dangerouslySetInnerHTML" === g ? Fc(a, h) : "children" === g ? Jc(a, h) : d ? null != h ? hc.setValueForAttribute(a, g, h) : hc.deleteValueForAttribute(a, g) : null != h ? hc.setValueForProperty(a, g, h) : hc.deleteValueForProperty(a, g);
      }switch (c) {case "input":
          qc.updateWrapper(a, e);Bc.updateValueIfChanged(a);break;case "textarea":
          wc.updateWrapper(a, e);break;case "select":
          uc.postUpdateWrapper(a, e);}
    }, diffHydratedProperties: function diffHydratedProperties(a, b, c, d, e) {
      switch (b) {case "iframe":case "object":
          M.trapBubbledEvent("topLoad", "load", a);break;case "video":case "audio":
          for (var f in Sc) {
            Sc.hasOwnProperty(f) && M.trapBubbledEvent(f, Sc[f], a);
          }break;case "source":
          M.trapBubbledEvent("topError", "error", a);break;case "img":case "image":
          M.trapBubbledEvent("topError", "error", a);M.trapBubbledEvent("topLoad", "load", a);break;case "form":
          M.trapBubbledEvent("topReset", "reset", a);M.trapBubbledEvent("topSubmit", "submit", a);break;case "details":
          M.trapBubbledEvent("topToggle", "toggle", a);break;case "input":
          qc.initWrapperState(a, c);M.trapBubbledEvent("topInvalid", "invalid", a);Rc(e, "onChange");break;case "option":
          sc.validateProps(a, c);break;case "select":
          uc.initWrapperState(a, c);M.trapBubbledEvent("topInvalid", "invalid", a);Rc(e, "onChange");break;case "textarea":
          wc.initWrapperState(a, c), M.trapBubbledEvent("topInvalid", "invalid", a), Rc(e, "onChange");}yc(b, c, Kc);d = null;for (var g in c) {
        c.hasOwnProperty(g) && (f = c[g], "children" === g ? "string" === typeof f ? a.textContent !== f && (d = ["children", f]) : "number" === typeof f && a.textContent !== "" + f && (d = ["children", "" + f]) : Oc.hasOwnProperty(g) && null != f && Rc(e, g));
      }switch (b) {case "input":
          Bc.track(a);qc.postMountWrapper(a, c);break;case "textarea":
          Bc.track(a);wc.postMountWrapper(a, c);break;case "select":case "option":
          break;default:
          "function" === typeof c.onClick && (a.onclick = ca);}return d;
    }, diffHydratedText: function diffHydratedText(a, b) {
      return a.nodeValue !== b;
    }, warnForDeletedHydratableElement: function warnForDeletedHydratableElement() {}, warnForDeletedHydratableText: function warnForDeletedHydratableText() {}, warnForInsertedHydratedElement: function warnForInsertedHydratedElement() {}, warnForInsertedHydratedText: function warnForInsertedHydratedText() {}, restoreControlledState: function restoreControlledState(a, b, c) {
      switch (b) {case "input":
          qc.restoreControlledState(a, c);break;case "textarea":
          wc.restoreControlledState(a, c);break;case "select":
          uc.restoreControlledState(a, c);}
    } },
      Tc = void 0;
  if (l.canUseDOM) {
    if ("function" !== typeof requestIdleCallback) {
      var Uc = null,
          Vc = null,
          Wc = !1,
          Xc = !1,
          Yc = 0,
          Zc = 33,
          $c = 33,
          ad = { timeRemaining: "object" === (typeof performance === "undefined" ? "undefined" : _typeof4(performance)) && "function" === typeof performance.now ? function () {
          return Yc - performance.now();
        } : function () {
          return Yc - Date.now();
        } },
          bd = "__reactIdleCallback$" + Math.random().toString(36).slice(2);window.addEventListener("message", function (a) {
        a.source === window && a.data === bd && (Wc = !1, a = Vc, Vc = null, null !== a && a(ad));
      }, !1);var cd = function cd(a) {
        Xc = !1;var b = a - Yc + $c;b < $c && Zc < $c ? (8 > b && (b = 8), $c = b < Zc ? Zc : b) : Zc = b;Yc = a + $c;Wc || (Wc = !0, window.postMessage(bd, "*"));b = Uc;Uc = null;null !== b && b(a);
      };Tc = function Tc(a) {
        Vc = a;Xc || (Xc = !0, requestAnimationFrame(cd));return 0;
      };
    } else Tc = requestIdleCallback;
  } else Tc = function Tc(a) {
    setTimeout(function () {
      a({ timeRemaining: function timeRemaining() {
          return Infinity;
        } });
    });return 0;
  };
  var dd = { rIC: Tc },
      ed = { enableAsyncSubtreeAPI: !0 },
      Q = { NoWork: 0, SynchronousPriority: 1, TaskPriority: 2, HighPriority: 3, LowPriority: 4, OffscreenPriority: 5 },
      fd = J.Callback,
      gd = Q.NoWork,
      hd = Q.SynchronousPriority,
      id = Q.TaskPriority,
      jd = E.ClassComponent,
      kd = E.HostRoot,
      md = void 0,
      nd = void 0;function od(a, b) {
    return a !== id && a !== hd || b !== id && b !== hd ? a === gd && b !== gd ? -255 : a !== gd && b === gd ? 255 : a - b : 0;
  }function pd() {
    return { first: null, last: null, hasForceUpdate: !1, callbackList: null };
  }
  function qd(a, b, c, d) {
    null !== c ? c.next = b : (b.next = a.first, a.first = b);null !== d ? b.next = d : a.last = b;
  }function rd(a, b) {
    b = b.priorityLevel;var c = null;if (null !== a.last && 0 >= od(a.last.priorityLevel, b)) c = a.last;else for (a = a.first; null !== a && 0 >= od(a.priorityLevel, b);) {
      c = a, a = a.next;
    }return c;
  }
  function sd(a, b) {
    var c = a.alternate,
        d = a.updateQueue;null === d && (d = a.updateQueue = pd());null !== c ? (a = c.updateQueue, null === a && (a = c.updateQueue = pd())) : a = null;md = d;nd = a !== d ? a : null;var e = md;c = nd;var f = rd(e, b),
        g = null !== f ? f.next : e.first;if (null === c) return qd(e, b, f, g), null;d = rd(c, b);a = null !== d ? d.next : c.first;qd(e, b, f, g);if (g === a && null !== g || f === d && null !== f) return null === d && (c.first = b), null === a && (c.last = null), null;b = { priorityLevel: b.priorityLevel, partialState: b.partialState, callback: b.callback, isReplace: b.isReplace,
      isForced: b.isForced, isTopLevelUnmount: b.isTopLevelUnmount, next: null };qd(c, b, d, a);return b;
  }function td(a, b, c, d) {
    a = a.partialState;return "function" === typeof a ? a.call(b, c, d) : a;
  }
  var ud = { addUpdate: function addUpdate(a, b, c, d) {
      sd(a, { priorityLevel: d, partialState: b, callback: c, isReplace: !1, isForced: !1, isTopLevelUnmount: !1, next: null });
    }, addReplaceUpdate: function addReplaceUpdate(a, b, c, d) {
      sd(a, { priorityLevel: d, partialState: b, callback: c, isReplace: !0, isForced: !1, isTopLevelUnmount: !1, next: null });
    }, addForceUpdate: function addForceUpdate(a, b, c) {
      sd(a, { priorityLevel: c, partialState: null, callback: b, isReplace: !1, isForced: !0, isTopLevelUnmount: !1, next: null });
    }, getUpdatePriority: function getUpdatePriority(a) {
      var b = a.updateQueue;return null === b || a.tag !== jd && a.tag !== kd ? gd : null !== b.first ? b.first.priorityLevel : gd;
    }, addTopLevelUpdate: function addTopLevelUpdate(a, b, c, d) {
      var e = null === b.element;b = { priorityLevel: d, partialState: b, callback: c, isReplace: !1, isForced: !1, isTopLevelUnmount: e, next: null };a = sd(a, b);e && (e = md, c = nd, null !== e && null !== b.next && (b.next = null, e.last = b), null !== c && null !== a && null !== a.next && (a.next = null, c.last = b));
    }, beginUpdateQueue: function beginUpdateQueue(a, b, c, d, e, f, g) {
      null !== a && a.updateQueue === c && (c = b.updateQueue = { first: c.first, last: c.last, callbackList: null, hasForceUpdate: !1 });
      a = c.callbackList;for (var h = c.hasForceUpdate, k = !0, p = c.first; null !== p && 0 >= od(p.priorityLevel, g);) {
        c.first = p.next;null === c.first && (c.last = null);var x;if (p.isReplace) e = td(p, d, e, f), k = !0;else if (x = td(p, d, e, f)) e = k ? n({}, e, x) : n(e, x), k = !1;p.isForced && (h = !0);null === p.callback || p.isTopLevelUnmount && null !== p.next || (a = null !== a ? a : [], a.push(p.callback), b.effectTag |= fd);p = p.next;
      }c.callbackList = a;c.hasForceUpdate = h;null !== c.first || null !== a || h || (b.updateQueue = null);return e;
    }, commitCallbacks: function commitCallbacks(a, b, c) {
      a = b.callbackList;
      if (null !== a) for (b.callbackList = null, b = 0; b < a.length; b++) {
        var d = a[b];"function" !== typeof d ? w("191", d) : void 0;d.call(c);
      }
    } },
      vd = [],
      wd = -1,
      xd = { createCursor: function createCursor(a) {
      return { current: a };
    }, isEmpty: function isEmpty() {
      return -1 === wd;
    }, pop: function pop(a) {
      0 > wd || (a.current = vd[wd], vd[wd] = null, wd--);
    }, push: function push(a, b) {
      wd++;vd[wd] = a.current;a.current = b;
    }, reset: function reset() {
      for (; -1 < wd;) {
        vd[wd] = null, wd--;
      }
    } },
      yd = bb.isFiberMounted,
      zd = E.ClassComponent,
      Ad = E.HostRoot,
      Bd = xd.createCursor,
      Cd = xd.pop,
      Dd = xd.push,
      Ed = Bd(da),
      Fd = Bd(!1),
      Ld = da;
  function Md(a, b, c) {
    a = a.stateNode;a.__reactInternalMemoizedUnmaskedChildContext = b;a.__reactInternalMemoizedMaskedChildContext = c;
  }function Nd(a) {
    return a.tag === zd && null != a.type.childContextTypes;
  }function Od(a, b) {
    var c = a.stateNode,
        d = a.type.childContextTypes;if ("function" !== typeof c.getChildContext) return b;c = c.getChildContext();for (var e in c) {
      e in d ? void 0 : w("108", Ra(a) || "Unknown", e);
    }return n({}, b, c);
  }
  var R = { getUnmaskedContext: function getUnmaskedContext(a) {
      return Nd(a) ? Ld : Ed.current;
    }, cacheContext: Md, getMaskedContext: function getMaskedContext(a, b) {
      var c = a.type.contextTypes;if (!c) return da;var d = a.stateNode;if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;var e = {},
          f;for (f in c) {
        e[f] = b[f];
      }d && Md(a, b, e);return e;
    }, hasContextChanged: function hasContextChanged() {
      return Fd.current;
    }, isContextConsumer: function isContextConsumer(a) {
      return a.tag === zd && null != a.type.contextTypes;
    }, isContextProvider: Nd, popContextProvider: function popContextProvider(a) {
      Nd(a) && (Cd(Fd, a), Cd(Ed, a));
    }, popTopLevelContextObject: function popTopLevelContextObject(a) {
      Cd(Fd, a);Cd(Ed, a);
    }, pushTopLevelContextObject: function pushTopLevelContextObject(a, b, c) {
      null != Ed.cursor ? w("168") : void 0;Dd(Ed, b, a);Dd(Fd, c, a);
    }, processChildContext: Od, pushContextProvider: function pushContextProvider(a) {
      if (!Nd(a)) return !1;var b = a.stateNode;b = b && b.__reactInternalMemoizedMergedChildContext || da;Ld = Ed.current;Dd(Ed, b, a);Dd(Fd, Fd.current, a);return !0;
    }, invalidateContextProvider: function invalidateContextProvider(a, b) {
      var c = a.stateNode;c ? void 0 : w("169");if (b) {
        var d = Od(a, Ld, !0);c.__reactInternalMemoizedMergedChildContext = d;Cd(Fd, a);Cd(Ed, a);Dd(Ed, d, a);
      } else Cd(Fd, a);Dd(Fd, b, a);
    }, resetContext: function resetContext() {
      Ld = da;Ed.current = da;Fd.current = !1;
    }, findCurrentUnmaskedContext: function findCurrentUnmaskedContext(a) {
      for (yd(a) && a.tag === zd ? void 0 : w("170"); a.tag !== Ad;) {
        if (Nd(a)) return a.stateNode.__reactInternalMemoizedMergedChildContext;(a = a["return"]) ? void 0 : w("171");
      }return a.stateNode.context;
    } },
      Pd = { NoContext: 0, AsyncUpdates: 1 },
      Qd = E.IndeterminateComponent,
      Rd = E.ClassComponent,
      Sd = E.HostRoot,
      Td = E.HostComponent,
      Ud = E.HostText,
      Vd = E.HostPortal,
      Wd = E.CoroutineComponent,
      Xd = E.YieldComponent,
      Yd = E.Fragment,
      Zd = Q.NoWork,
      $d = Pd.NoContext,
      ae = J.NoEffect;function be(a, b, c) {
    this.tag = a;this.key = b;this.stateNode = this.type = null;this.sibling = this.child = this["return"] = null;this.index = 0;this.memoizedState = this.updateQueue = this.memoizedProps = this.pendingProps = this.ref = null;this.internalContextTag = c;this.effectTag = ae;this.lastEffect = this.firstEffect = this.nextEffect = null;this.pendingWorkPriority = Zd;this.alternate = null;
  }
  function ce(a, b, c) {
    var d = void 0;"function" === typeof a ? (d = a.prototype && a.prototype.isReactComponent ? new be(Rd, b, c) : new be(Qd, b, c), d.type = a) : "string" === typeof a ? (d = new be(Td, b, c), d.type = a) : "object" === (typeof a === "undefined" ? "undefined" : _typeof4(a)) && null !== a && "number" === typeof a.tag ? d = a : w("130", null == a ? a : typeof a === "undefined" ? "undefined" : _typeof4(a), "");return d;
  }
  var de = { createWorkInProgress: function createWorkInProgress(a, b) {
      var c = a.alternate;null === c ? (c = new be(a.tag, a.key, a.internalContextTag), c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.effectTag = ae, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);c.pendingWorkPriority = b;c.child = a.child;c.memoizedProps = a.memoizedProps;c.memoizedState = a.memoizedState;c.updateQueue = a.updateQueue;c.sibling = a.sibling;c.index = a.index;c.ref = a.ref;return c;
    }, createHostRootFiber: function createHostRootFiber() {
      return new be(Sd, null, $d);
    },
    createFiberFromElement: function createFiberFromElement(a, b, c) {
      b = ce(a.type, a.key, b, null);b.pendingProps = a.props;b.pendingWorkPriority = c;return b;
    }, createFiberFromFragment: function createFiberFromFragment(a, b, c) {
      b = new be(Yd, null, b);b.pendingProps = a;b.pendingWorkPriority = c;return b;
    }, createFiberFromText: function createFiberFromText(a, b, c) {
      b = new be(Ud, null, b);b.pendingProps = a;b.pendingWorkPriority = c;return b;
    }, createFiberFromElementType: ce, createFiberFromHostInstanceForDeletion: function createFiberFromHostInstanceForDeletion() {
      var a = new be(Td, null, $d);a.type = "DELETED";return a;
    }, createFiberFromCoroutine: function createFiberFromCoroutine(a, b, c) {
      b = new be(Wd, a.key, b);b.type = a.handler;b.pendingProps = a;b.pendingWorkPriority = c;return b;
    }, createFiberFromYield: function createFiberFromYield(a, b) {
      return new be(Xd, null, b);
    }, createFiberFromPortal: function createFiberFromPortal(a, b, c) {
      b = new be(Vd, a.key, b);b.pendingProps = a.children || [];b.pendingWorkPriority = c;b.stateNode = { containerInfo: a.containerInfo, implementation: a.implementation };return b;
    }, largerPriority: function largerPriority(a, b) {
      return a !== Zd && (b === Zd || b > a) ? a : b;
    } },
      ee = de.createHostRootFiber,
      fe = E.IndeterminateComponent,
      ge = E.FunctionalComponent,
      he = E.ClassComponent,
      ie = E.HostComponent,
      je,
      ke;"function" === typeof Symbol && Symbol["for"] ? (je = Symbol["for"]("react.coroutine"), ke = Symbol["for"]("react.yield")) : (je = 60104, ke = 60105);
  var le = { createCoroutine: function createCoroutine(a, b, c) {
      var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;return { $$typeof: je, key: null == d ? null : "" + d, children: a, handler: b, props: c };
    }, createYield: function createYield(a) {
      return { $$typeof: ke, value: a };
    }, isCoroutine: function isCoroutine(a) {
      return "object" === (typeof a === "undefined" ? "undefined" : _typeof4(a)) && null !== a && a.$$typeof === je;
    }, isYield: function isYield(a) {
      return "object" === (typeof a === "undefined" ? "undefined" : _typeof4(a)) && null !== a && a.$$typeof === ke;
    }, REACT_YIELD_TYPE: ke, REACT_COROUTINE_TYPE: je },
      me = "function" === typeof Symbol && Symbol["for"] && Symbol["for"]("react.portal") || 60106,
      ne = { createPortal: function createPortal(a, b, c) {
      var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;return { $$typeof: me, key: null == d ? null : "" + d, children: a, containerInfo: b, implementation: c };
    }, isPortal: function isPortal(a) {
      return "object" === (typeof a === "undefined" ? "undefined" : _typeof4(a)) && null !== a && a.$$typeof === me;
    }, REACT_PORTAL_TYPE: me },
      oe = le.REACT_COROUTINE_TYPE,
      pe = le.REACT_YIELD_TYPE,
      qe = ne.REACT_PORTAL_TYPE,
      re = de.createWorkInProgress,
      se = de.createFiberFromElement,
      te = de.createFiberFromFragment,
      ue = de.createFiberFromText,
      ve = de.createFiberFromCoroutine,
      we = de.createFiberFromYield,
      xe = de.createFiberFromPortal,
      ye = Array.isArray,
      ze = E.FunctionalComponent,
      Ae = E.ClassComponent,
      Be = E.HostText,
      Ce = E.HostPortal,
      De = E.CoroutineComponent,
      Ee = E.YieldComponent,
      Fe = E.Fragment,
      Ge = J.NoEffect,
      He = J.Placement,
      Ie = J.Deletion,
      Je = "function" === typeof Symbol && Symbol.iterator,
      Ke = "function" === typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103;
  function Le(a) {
    if (null === a || "undefined" === typeof a) return null;a = Je && a[Je] || a["@@iterator"];return "function" === typeof a ? a : null;
  }
  function Me(a, b) {
    var c = b.ref;if (null !== c && "function" !== typeof c) {
      if (b._owner) {
        b = b._owner;var d = void 0;b && ("number" === typeof b.tag ? (b.tag !== Ae ? w("110") : void 0, d = b.stateNode) : d = b.getPublicInstance());d ? void 0 : w("147", c);var e = "" + c;if (null !== a && null !== a.ref && a.ref._stringRef === e) return a.ref;a = function a(_a) {
          var b = d.refs === da ? d.refs = {} : d.refs;null === _a ? delete b[e] : b[e] = _a;
        };a._stringRef = e;return a;
      }"string" !== typeof c ? w("148") : void 0;b._owner ? void 0 : w("149", c);
    }return c;
  }
  function Ne(a, b) {
    "textarea" !== a.type && w("31", "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b, "");
  }
  function Oe(a, b) {
    function c(c, d) {
      if (b) {
        if (!a) {
          if (null === d.alternate) return;d = d.alternate;
        }var m = c.lastEffect;null !== m ? (m.nextEffect = d, c.lastEffect = d) : c.firstEffect = c.lastEffect = d;d.nextEffect = null;d.effectTag = Ie;
      }
    }function d(a, d) {
      if (!b) return null;for (; null !== d;) {
        c(a, d), d = d.sibling;
      }return null;
    }function e(a, b) {
      for (a = new Map(); null !== b;) {
        null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;
      }return a;
    }function f(b, c) {
      if (a) return b = re(b, c), b.index = 0, b.sibling = null, b;b.pendingWorkPriority = c;b.effectTag = Ge;
      b.index = 0;b.sibling = null;return b;
    }function g(a, c, d) {
      a.index = d;if (!b) return c;d = a.alternate;if (null !== d) return d = d.index, d < c ? (a.effectTag = He, c) : d;a.effectTag = He;return c;
    }function h(a) {
      b && null === a.alternate && (a.effectTag = He);return a;
    }function k(a, b, c, d) {
      if (null === b || b.tag !== Be) return c = ue(c, a.internalContextTag, d), c["return"] = a, c;b = f(b, d);b.pendingProps = c;b["return"] = a;return b;
    }function p(a, b, c, d) {
      if (null === b || b.type !== c.type) return d = se(c, a.internalContextTag, d), d.ref = Me(b, c), d["return"] = a, d;d = f(b, d);d.ref = Me(b, c);d.pendingProps = c.props;d["return"] = a;return d;
    }function x(a, b, c, d) {
      if (null === b || b.tag !== De) return c = ve(c, a.internalContextTag, d), c["return"] = a, c;b = f(b, d);b.pendingProps = c;b["return"] = a;return b;
    }function S(a, b, c, d) {
      if (null === b || b.tag !== Ee) return b = we(c, a.internalContextTag, d), b.type = c.value, b["return"] = a, b;b = f(b, d);b.type = c.value;b["return"] = a;return b;
    }function D(a, b, c, d) {
      if (null === b || b.tag !== Ce || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return c = xe(c, a.internalContextTag, d), c["return"] = a, c;b = f(b, d);b.pendingProps = c.children || [];b["return"] = a;return b;
    }function y(a, b, c, d) {
      if (null === b || b.tag !== Fe) return c = te(c, a.internalContextTag, d), c["return"] = a, c;b = f(b, d);b.pendingProps = c;b["return"] = a;return b;
    }function B(a, b, c) {
      if ("string" === typeof b || "number" === typeof b) return b = ue("" + b, a.internalContextTag, c), b["return"] = a, b;if ("object" === (typeof b === "undefined" ? "undefined" : _typeof4(b)) && null !== b) {
        switch (b.$$typeof) {case Ke:
            return c = se(b, a.internalContextTag, c), c.ref = Me(null, b), c["return"] = a, c;case oe:
            return b = ve(b, a.internalContextTag, c), b["return"] = a, b;case pe:
            return c = we(b, a.internalContextTag, c), c.type = b.value, c["return"] = a, c;case qe:
            return b = xe(b, a.internalContextTag, c), b["return"] = a, b;}if (ye(b) || Le(b)) return b = te(b, a.internalContextTag, c), b["return"] = a, b;Ne(a, b);
      }return null;
    }function H(a, b, c, d) {
      var e = null !== b ? b.key : null;if ("string" === typeof c || "number" === typeof c) return null !== e ? null : k(a, b, "" + c, d);if ("object" === (typeof c === "undefined" ? "undefined" : _typeof4(c)) && null !== c) {
        switch (c.$$typeof) {case Ke:
            return c.key === e ? p(a, b, c, d) : null;case oe:
            return c.key === e ? x(a, b, c, d) : null;case pe:
            return null === e ? S(a, b, c, d) : null;case qe:
            return c.key === e ? D(a, b, c, d) : null;}if (ye(c) || Le(c)) return null !== e ? null : y(a, b, c, d);Ne(a, c);
      }return null;
    }function C(a, b, c, d, e) {
      if ("string" === typeof d || "number" === typeof d) return a = a.get(c) || null, k(b, a, "" + d, e);if ("object" === (typeof d === "undefined" ? "undefined" : _typeof4(d)) && null !== d) {
        switch (d.$$typeof) {case Ke:
            return a = a.get(null === d.key ? c : d.key) || null, p(b, a, d, e);case oe:
            return a = a.get(null === d.key ? c : d.key) || null, x(b, a, d, e);case pe:
            return a = a.get(c) || null, S(b, a, d, e);case qe:
            return a = a.get(null === d.key ? c : d.key) || null, D(b, a, d, e);}if (ye(d) || Le(d)) return a = a.get(c) || null, y(b, a, d, e);Ne(b, d);
      }return null;
    }function Ca(a, f, h, k) {
      for (var m = null, t = null, q = f, r = f = 0, p = null; null !== q && r < h.length; r++) {
        q.index > r ? (p = q, q = null) : p = q.sibling;var v = H(a, q, h[r], k);if (null === v) {
          null === q && (q = p);break;
        }b && q && null === v.alternate && c(a, q);f = g(v, f, r);null === t ? m = v : t.sibling = v;t = v;q = p;
      }if (r === h.length) return d(a, q), m;if (null === q) {
        for (; r < h.length; r++) {
          if (q = B(a, h[r], k)) f = g(q, f, r), null === t ? m = q : t.sibling = q, t = q;
        }return m;
      }for (q = e(a, q); r < h.length; r++) {
        if (p = C(q, a, r, h[r], k)) {
          if (b && null !== p.alternate) q["delete"](null === p.key ? r : p.key);f = g(p, f, r);null === t ? m = p : t.sibling = p;t = p;
        }
      }b && q.forEach(function (b) {
        return c(a, b);
      });return m;
    }function r(a, f, h, r) {
      var m = Le(h);"function" !== typeof m ? w("150") : void 0;h = m.call(h);null == h ? w("151") : void 0;for (var t = m = null, q = f, k = f = 0, p = null, v = h.next(); null !== q && !v.done; k++, v = h.next()) {
        q.index > k ? (p = q, q = null) : p = q.sibling;var V = H(a, q, v.value, r);if (null === V) {
          q || (q = p);break;
        }b && q && null === V.alternate && c(a, q);f = g(V, f, k);null === t ? m = V : t.sibling = V;t = V;q = p;
      }if (v.done) return d(a, q), m;if (null === q) {
        for (; !v.done; k++, v = h.next()) {
          v = B(a, v.value, r), null !== v && (f = g(v, f, k), null === t ? m = v : t.sibling = v, t = v);
        }return m;
      }for (q = e(a, q); !v.done; k++, v = h.next()) {
        if (v = C(q, a, k, v.value, r), null !== v) {
          if (b && null !== v.alternate) q["delete"](null === v.key ? k : v.key);f = g(v, f, k);null === t ? m = v : t.sibling = v;t = v;
        }
      }b && q.forEach(function (b) {
        return c(a, b);
      });return m;
    }return function (a, b, e, g) {
      var m = "object" === (typeof e === "undefined" ? "undefined" : _typeof4(e)) && null !== e;if (m) switch (e.$$typeof) {case Ke:
          a: {
            var C = e.key;for (m = b; null !== m;) {
              if (m.key === C) {
                if (m.type === e.type) {
                  d(a, m.sibling);b = f(m, g);b.ref = Me(m, e);b.pendingProps = e.props;b["return"] = a;a = b;break a;
                } else {
                  d(a, m);break;
                }
              } else c(a, m);m = m.sibling;
            }g = se(e, a.internalContextTag, g);g.ref = Me(b, e);g["return"] = a;a = g;
          }return h(a);case oe:
          a: {
            for (m = e.key; null !== b;) {
              if (b.key === m) {
                if (b.tag === De) {
                  d(a, b.sibling);b = f(b, g);b.pendingProps = e;b["return"] = a;a = b;break a;
                } else {
                  d(a, b);break;
                }
              } else c(a, b);b = b.sibling;
            }e = ve(e, a.internalContextTag, g);e["return"] = a;a = e;
          }return h(a);case pe:
          a: {
            if (null !== b) if (b.tag === Ee) {
              d(a, b.sibling);b = f(b, g);b.type = e.value;b["return"] = a;a = b;break a;
            } else d(a, b);b = we(e, a.internalContextTag, g);b.type = e.value;b["return"] = a;a = b;
          }return h(a);case qe:
          a: {
            for (m = e.key; null !== b;) {
              if (b.key === m) {
                if (b.tag === Ce && b.stateNode.containerInfo === e.containerInfo && b.stateNode.implementation === e.implementation) {
                  d(a, b.sibling);b = f(b, g);b.pendingProps = e.children || [];b["return"] = a;a = b;break a;
                } else {
                  d(a, b);break;
                }
              } else c(a, b);b = b.sibling;
            }e = xe(e, a.internalContextTag, g);e["return"] = a;a = e;
          }return h(a);}if ("string" === typeof e || "number" === typeof e) return e = "" + e, null !== b && b.tag === Be ? (d(a, b.sibling), b = f(b, g), b.pendingProps = e, b["return"] = a, a = b) : (d(a, b), e = ue(e, a.internalContextTag, g), e["return"] = a, a = e), h(a);if (ye(e)) return Ca(a, b, e, g);if (Le(e)) return r(a, b, e, g);m && Ne(a, e);if ("undefined" === typeof e) switch (a.tag) {case Ae:case ze:
          e = a.type, w("152", e.displayName || e.name || "Component");}return d(a, b);
    };
  }
  var Pe = Oe(!0, !0),
      Qe = Oe(!1, !0),
      Re = Oe(!1, !1),
      Se = { reconcileChildFibers: Pe, reconcileChildFibersInPlace: Qe, mountChildFibersInPlace: Re, cloneChildFibers: function cloneChildFibers(a, b) {
      null !== a && b.child !== a.child ? w("153") : void 0;if (null !== b.child) {
        a = b.child;var c = re(a, a.pendingWorkPriority);c.pendingProps = a.pendingProps;b.child = c;for (c["return"] = b; null !== a.sibling;) {
          a = a.sibling, c = c.sibling = re(a, a.pendingWorkPriority), c.pendingProps = a.pendingProps, c["return"] = b;
        }c.sibling = null;
      }
    } },
      Te = J.Update,
      Ue = Pd.AsyncUpdates,
      Ve = R.cacheContext,
      We = R.getMaskedContext,
      Xe = R.getUnmaskedContext,
      Ye = R.isContextConsumer,
      Ze = ud.addUpdate,
      $e = ud.addReplaceUpdate,
      af = ud.addForceUpdate,
      bf = ud.beginUpdateQueue,
      cf = R.hasContextChanged,
      df = bb.isMounted;
  function ef(a, b, c, d) {
    function e(a, b) {
      b.updater = f;a.stateNode = b;Pa.set(b, a);
    }var f = { isMounted: df, enqueueSetState: function enqueueSetState(c, d, e) {
        c = Pa.get(c);var f = b(c, !1);Ze(c, d, void 0 === e ? null : e, f);a(c, f);
      }, enqueueReplaceState: function enqueueReplaceState(c, d, e) {
        c = Pa.get(c);var f = b(c, !1);$e(c, d, void 0 === e ? null : e, f);a(c, f);
      }, enqueueForceUpdate: function enqueueForceUpdate(c, d) {
        c = Pa.get(c);var e = b(c, !1);af(c, void 0 === d ? null : d, e);a(c, e);
      } };return { adoptClassInstance: e, constructClassInstance: function constructClassInstance(a, b) {
        var c = a.type,
            d = Xe(a),
            f = Ye(a),
            g = f ? We(a, d) : da;b = new c(b, g);
        e(a, b);f && Ve(a, d, g);return b;
      }, mountClassInstance: function mountClassInstance(a, b) {
        var c = a.alternate,
            d = a.stateNode,
            e = d.state || null,
            g = a.pendingProps;g ? void 0 : w("158");var h = Xe(a);d.props = g;d.state = e;d.refs = da;d.context = We(a, h);ed.enableAsyncSubtreeAPI && null != a.type && null != a.type.prototype && !0 === a.type.prototype.unstable_isAsyncReactComponent && (a.internalContextTag |= Ue);"function" === typeof d.componentWillMount && (h = d.state, d.componentWillMount(), h !== d.state && f.enqueueReplaceState(d, d.state, null), h = a.updateQueue, null !== h && (d.state = bf(c, a, h, d, e, g, b)));"function" === typeof d.componentDidMount && (a.effectTag |= Te);
      }, updateClassInstance: function updateClassInstance(a, b, e) {
        var g = b.stateNode;g.props = b.memoizedProps;g.state = b.memoizedState;var h = b.memoizedProps,
            k = b.pendingProps;k || (k = h, null == k ? w("159") : void 0);var D = g.context,
            y = Xe(b);y = We(b, y);"function" !== typeof g.componentWillReceiveProps || h === k && D === y || (D = g.state, g.componentWillReceiveProps(k, y), g.state !== D && f.enqueueReplaceState(g, g.state, null));D = b.memoizedState;e = null !== b.updateQueue ? bf(a, b, b.updateQueue, g, D, k, e) : D;if (!(h !== k || D !== e || cf() || null !== b.updateQueue && b.updateQueue.hasForceUpdate)) return "function" !== typeof g.componentDidUpdate || h === a.memoizedProps && D === a.memoizedState || (b.effectTag |= Te), !1;var B = k;if (null === h || null !== b.updateQueue && b.updateQueue.hasForceUpdate) B = !0;else {
          var H = b.stateNode,
              C = b.type;B = "function" === typeof H.shouldComponentUpdate ? H.shouldComponentUpdate(B, e, y) : C.prototype && C.prototype.isPureReactComponent ? !ea(h, B) || !ea(D, e) : !0;
        }B ? ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(k, e, y), "function" === typeof g.componentDidUpdate && (b.effectTag |= Te)) : ("function" !== typeof g.componentDidUpdate || h === a.memoizedProps && D === a.memoizedState || (b.effectTag |= Te), c(b, k), d(b, e));g.props = k;g.state = e;g.context = y;return B;
      } };
  }
  var ff = Se.mountChildFibersInPlace,
      gf = Se.reconcileChildFibers,
      hf = Se.reconcileChildFibersInPlace,
      jf = Se.cloneChildFibers,
      kf = ud.beginUpdateQueue,
      lf = R.getMaskedContext,
      mf = R.getUnmaskedContext,
      nf = R.hasContextChanged,
      of = R.pushContextProvider,
      pf = R.pushTopLevelContextObject,
      qf = R.invalidateContextProvider,
      rf = E.IndeterminateComponent,
      sf = E.FunctionalComponent,
      tf = E.ClassComponent,
      uf = E.HostRoot,
      wf = E.HostComponent,
      xf = E.HostText,
      yf = E.HostPortal,
      zf = E.CoroutineComponent,
      Af = E.CoroutineHandlerPhase,
      Bf = E.YieldComponent,
      Cf = E.Fragment,
      Df = Q.NoWork,
      Ef = Q.OffscreenPriority,
      Ff = J.PerformedWork,
      Gf = J.Placement,
      Hf = J.ContentReset,
      If = J.Err,
      Jf = J.Ref,
      Kf = Qa.ReactCurrentOwner;
  function Lf(a, b, c, d, e) {
    function f(a, b, c) {
      g(a, b, c, b.pendingWorkPriority);
    }function g(a, b, c, d) {
      b.child = null === a ? ff(b, b.child, c, d) : a.child === b.child ? gf(b, b.child, c, d) : hf(b, b.child, c, d);
    }function h(a, b) {
      var c = b.ref;null === c || a && a.ref === c || (b.effectTag |= Jf);
    }function k(a, b, c, d) {
      h(a, b);if (!c) return d && qf(b, !1), x(a, b);c = b.stateNode;Kf.current = b;var e = c.render();b.effectTag |= Ff;f(a, b, e);b.memoizedState = c.state;b.memoizedProps = c.props;d && qf(b, !0);return b.child;
    }function p(a) {
      var b = a.stateNode;b.pendingContext ? pf(a, b.pendingContext, b.pendingContext !== b.context) : b.context && pf(a, b.context, !1);C(a, b.containerInfo);
    }function x(a, b) {
      jf(a, b);return b.child;
    }function S(a, b) {
      switch (b.tag) {case uf:
          p(b);break;case tf:
          of(b);break;case yf:
          C(b, b.stateNode.containerInfo);}return null;
    }var D = a.shouldSetTextContent,
        y = a.useSyncScheduling,
        B = a.shouldDeprioritizeSubtree,
        H = b.pushHostContext,
        C = b.pushHostContainer,
        Ca = c.enterHydrationState,
        r = c.resetHydrationState,
        m = c.tryToClaimNextHydratableInstance;a = ef(d, e, function (a, b) {
      a.memoizedProps = b;
    }, function (a, b) {
      a.memoizedState = b;
    });var t = a.adoptClassInstance,
        v = a.constructClassInstance,
        V = a.mountClassInstance,
        ld = a.updateClassInstance;return { beginWork: function beginWork(a, b, c) {
        if (b.pendingWorkPriority === Df || b.pendingWorkPriority > c) return S(a, b);switch (b.tag) {case rf:
            null !== a ? w("155") : void 0;var d = b.type,
                e = b.pendingProps,
                g = mf(b);g = lf(b, g);d = d(e, g);b.effectTag |= Ff;"object" === (typeof d === "undefined" ? "undefined" : _typeof4(d)) && null !== d && "function" === typeof d.render ? (b.tag = tf, e = of(b), t(b, d), V(b, c), b = k(a, b, !0, e)) : (b.tag = sf, f(a, b, d), b.memoizedProps = e, b = b.child);return b;case sf:
            a: {
              e = b.type;c = b.pendingProps;d = b.memoizedProps;if (nf()) null === c && (c = d);else if (null === c || d === c) {
                b = x(a, b);break a;
              }d = mf(b);d = lf(b, d);e = e(c, d);b.effectTag |= Ff;f(a, b, e);b.memoizedProps = c;b = b.child;
            }return b;case tf:
            return e = of(b), d = void 0, null === a ? b.stateNode ? w("153") : (v(b, b.pendingProps), V(b, c), d = !0) : d = ld(a, b, c), k(a, b, d, e);case uf:
            return p(b), d = b.updateQueue, null !== d ? (e = b.memoizedState, d = kf(a, b, d, null, e, null, c), e === d ? (r(), b = x(a, b)) : (e = d.element, null !== a && null !== a.child || !Ca(b) ? (r(), f(a, b, e)) : (b.effectTag |= Gf, b.child = ff(b, b.child, e, c)), b.memoizedState = d, b = b.child)) : (r(), b = x(a, b)), b;case wf:
            H(b);null === a && m(b);e = b.type;var q = b.memoizedProps;d = b.pendingProps;null === d && (d = q, null === d ? w("154") : void 0);g = null !== a ? a.memoizedProps : null;nf() || null !== d && q !== d ? (q = d.children, D(e, d) ? q = null : g && D(e, g) && (b.effectTag |= Hf), h(a, b), c !== Ef && !y && B(e, d) ? (b.pendingWorkPriority = Ef, b = null) : (f(a, b, q), b.memoizedProps = d, b = b.child)) : b = x(a, b);return b;case xf:
            return null === a && m(b), a = b.pendingProps, null === a && (a = b.memoizedProps), b.memoizedProps = a, null;case Af:
            b.tag = zf;case zf:
            c = b.pendingProps;if (nf()) null === c && (c = a && a.memoizedProps, null === c ? w("154") : void 0);else if (null === c || b.memoizedProps === c) c = b.memoizedProps;e = c.children;d = b.pendingWorkPriority;b.stateNode = null === a ? ff(b, b.stateNode, e, d) : a.child === b.child ? gf(b, b.stateNode, e, d) : hf(b, b.stateNode, e, d);b.memoizedProps = c;return b.stateNode;case Bf:
            return null;case yf:
            a: {
              C(b, b.stateNode.containerInfo);c = b.pendingWorkPriority;e = b.pendingProps;if (nf()) null === e && (e = a && a.memoizedProps, null == e ? w("154") : void 0);else if (null === e || b.memoizedProps === e) {
                b = x(a, b);break a;
              }null === a ? b.child = hf(b, b.child, e, c) : f(a, b, e);b.memoizedProps = e;b = b.child;
            }return b;case Cf:
            a: {
              c = b.pendingProps;if (nf()) null === c && (c = b.memoizedProps);else if (null === c || b.memoizedProps === c) {
                b = x(a, b);break a;
              }f(a, b, c);b.memoizedProps = c;b = b.child;
            }return b;default:
            w("156");}
      }, beginFailedWork: function beginFailedWork(a, b, c) {
        switch (b.tag) {case tf:
            of(b);break;case uf:
            p(b);break;default:
            w("157");}b.effectTag |= If;null === a ? b.child = null : b.child !== a.child && (b.child = a.child);if (b.pendingWorkPriority === Df || b.pendingWorkPriority > c) return S(a, b);b.firstEffect = null;b.lastEffect = null;g(a, b, null, c);b.tag === tf && (a = b.stateNode, b.memoizedProps = a.props, b.memoizedState = a.state);return b.child;
      } };
  }
  var Mf = Se.reconcileChildFibers,
      Nf = R.popContextProvider,
      Of = R.popTopLevelContextObject,
      Pf = E.IndeterminateComponent,
      Qf = E.FunctionalComponent,
      Rf = E.ClassComponent,
      Sf = E.HostRoot,
      Tf = E.HostComponent,
      Uf = E.HostText,
      Vf = E.HostPortal,
      Wf = E.CoroutineComponent,
      Xf = E.CoroutineHandlerPhase,
      Yf = E.YieldComponent,
      Zf = E.Fragment,
      ag = J.Placement,
      bg = J.Ref,
      cg = J.Update,
      dg = Q.OffscreenPriority;
  function eg(a, b, c) {
    var d = a.createInstance,
        e = a.createTextInstance,
        f = a.appendInitialChild,
        g = a.finalizeInitialChildren,
        h = a.prepareUpdate,
        k = b.getRootHostContainer,
        p = b.popHostContext,
        x = b.getHostContext,
        S = b.popHostContainer,
        D = c.prepareToHydrateHostInstance,
        y = c.prepareToHydrateHostTextInstance,
        B = c.popHydrationState;return { completeWork: function completeWork(a, b, c) {
        var r = b.pendingProps;if (null === r) r = b.memoizedProps;else if (b.pendingWorkPriority !== dg || c === dg) b.pendingProps = null;switch (b.tag) {case Qf:
            return null;case Rf:
            return Nf(b), null;case Sf:
            S(b);Of(b);r = b.stateNode;r.pendingContext && (r.context = r.pendingContext, r.pendingContext = null);if (null === a || null === a.child) B(b), b.effectTag &= ~ag;return null;case Tf:
            p(b);c = k();var m = b.type;if (null !== a && null != b.stateNode) {
              var t = a.memoizedProps,
                  C = b.stateNode,
                  V = x();r = h(C, m, t, r, c, V);if (b.updateQueue = r) b.effectTag |= cg;a.ref !== b.ref && (b.effectTag |= bg);
            } else {
              if (!r) return null === b.stateNode ? w("166") : void 0, null;a = x();if (B(b)) D(b, c, a) && (b.effectTag |= cg);else {
                a = d(m, r, c, a, b);a: for (t = b.child; null !== t;) {
                  if (t.tag === Tf || t.tag === Uf) f(a, t.stateNode);else if (t.tag !== Vf && null !== t.child) {
                    t = t.child;continue;
                  }if (t === b) break a;for (; null === t.sibling;) {
                    if (null === t["return"] || t["return"] === b) break a;t = t["return"];
                  }t = t.sibling;
                }g(a, m, r, c) && (b.effectTag |= cg);b.stateNode = a;
              }null !== b.ref && (b.effectTag |= bg);
            }return null;case Uf:
            if (a && null != b.stateNode) a.memoizedProps !== r && (b.effectTag |= cg);else {
              if ("string" !== typeof r) return null === b.stateNode ? w("166") : void 0, null;a = k();c = x();B(b) ? y(b) && (b.effectTag |= cg) : b.stateNode = e(r, a, c, b);
            }return null;case Wf:
            (r = b.memoizedProps) ? void 0 : w("165");b.tag = Xf;c = [];a: for ((m = b.stateNode) && (m["return"] = b); null !== m;) {
              if (m.tag === Tf || m.tag === Uf || m.tag === Vf) w("164");else if (m.tag === Yf) c.push(m.type);else if (null !== m.child) {
                m.child["return"] = m;m = m.child;continue;
              }for (; null === m.sibling;) {
                if (null === m["return"] || m["return"] === b) break a;m = m["return"];
              }m.sibling["return"] = m["return"];m = m.sibling;
            }m = r.handler;r = m(r.props, c);b.child = Mf(b, null !== a ? a.child : null, r, b.pendingWorkPriority);return b.child;
          case Xf:
            return b.tag = Wf, null;case Yf:
            return null;case Zf:
            return null;case Vf:
            return b.effectTag |= cg, S(b), null;case Pf:
            w("167");default:
            w("156");}
      } };
  }var fg = null,
      gg = null;function hg(a) {
    return function (b) {
      try {
        return a(b);
      } catch (c) {}
    };
  }
  var ig = { injectInternals: function injectInternals(a) {
      if ("undefined" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;if (!b.supportsFiber) return !0;try {
        var c = b.inject(a);fg = hg(function (a) {
          return b.onCommitFiberRoot(c, a);
        });gg = hg(function (a) {
          return b.onCommitFiberUnmount(c, a);
        });
      } catch (d) {}return !0;
    }, onCommitRoot: function onCommitRoot(a) {
      "function" === typeof fg && fg(a);
    }, onCommitUnmount: function onCommitUnmount(a) {
      "function" === typeof gg && gg(a);
    } },
      jg = E.ClassComponent,
      kg = E.HostRoot,
      lg = E.HostComponent,
      mg = E.HostText,
      ng = E.HostPortal,
      og = E.CoroutineComponent,
      pg = ud.commitCallbacks,
      qg = ig.onCommitUnmount,
      rg = J.Placement,
      sg = J.Update,
      tg = J.Callback,
      ug = J.ContentReset;
  function vg(a, b) {
    function c(a) {
      var c = a.ref;if (null !== c) try {
        c(null);
      } catch (t) {
        b(a, t);
      }
    }function d(a) {
      return a.tag === lg || a.tag === kg || a.tag === ng;
    }function e(a) {
      for (var b = a;;) {
        if (g(b), null !== b.child && b.tag !== ng) b.child["return"] = b, b = b.child;else {
          if (b === a) break;for (; null === b.sibling;) {
            if (null === b["return"] || b["return"] === a) return;b = b["return"];
          }b.sibling["return"] = b["return"];b = b.sibling;
        }
      }
    }function f(a) {
      for (var b = a, c = !1, d = void 0, f = void 0;;) {
        if (!c) {
          c = b["return"];a: for (;;) {
            null === c ? w("160") : void 0;switch (c.tag) {case lg:
                d = c.stateNode;f = !1;break a;case kg:
                d = c.stateNode.containerInfo;f = !0;break a;case ng:
                d = c.stateNode.containerInfo;f = !0;break a;}c = c["return"];
          }c = !0;
        }if (b.tag === lg || b.tag === mg) e(b), f ? C(d, b.stateNode) : H(d, b.stateNode);else if (b.tag === ng ? d = b.stateNode.containerInfo : g(b), null !== b.child) {
          b.child["return"] = b;b = b.child;continue;
        }if (b === a) break;for (; null === b.sibling;) {
          if (null === b["return"] || b["return"] === a) return;b = b["return"];b.tag === ng && (c = !1);
        }b.sibling["return"] = b["return"];b = b.sibling;
      }
    }function g(a) {
      "function" === typeof qg && qg(a);switch (a.tag) {case jg:
          c(a);var d = a.stateNode;if ("function" === typeof d.componentWillUnmount) try {
            d.props = a.memoizedProps, d.state = a.memoizedState, d.componentWillUnmount();
          } catch (t) {
            b(a, t);
          }break;case lg:
          c(a);break;case og:
          e(a.stateNode);break;case ng:
          f(a);}
    }var h = a.commitMount,
        k = a.commitUpdate,
        p = a.resetTextContent,
        x = a.commitTextUpdate,
        S = a.appendChild,
        D = a.appendChildToContainer,
        y = a.insertBefore,
        B = a.insertInContainerBefore,
        H = a.removeChild,
        C = a.removeChildFromContainer,
        Ca = a.getPublicInstance;
    return { commitPlacement: function commitPlacement(a) {
        a: {
          for (var b = a["return"]; null !== b;) {
            if (d(b)) {
              var c = b;break a;
            }b = b["return"];
          }w("160");c = void 0;
        }var e = b = void 0;switch (c.tag) {case lg:
            b = c.stateNode;e = !1;break;case kg:
            b = c.stateNode.containerInfo;e = !0;break;case ng:
            b = c.stateNode.containerInfo;e = !0;break;default:
            w("161");}c.effectTag & ug && (p(b), c.effectTag &= ~ug);a: b: for (c = a;;) {
          for (; null === c.sibling;) {
            if (null === c["return"] || d(c["return"])) {
              c = null;break a;
            }c = c["return"];
          }c.sibling["return"] = c["return"];for (c = c.sibling; c.tag !== lg && c.tag !== mg;) {
            if (c.effectTag & rg) continue b;if (null === c.child || c.tag === ng) continue b;else c.child["return"] = c, c = c.child;
          }if (!(c.effectTag & rg)) {
            c = c.stateNode;break a;
          }
        }for (var f = a;;) {
          if (f.tag === lg || f.tag === mg) c ? e ? B(b, f.stateNode, c) : y(b, f.stateNode, c) : e ? D(b, f.stateNode) : S(b, f.stateNode);else if (f.tag !== ng && null !== f.child) {
            f.child["return"] = f;f = f.child;continue;
          }if (f === a) break;for (; null === f.sibling;) {
            if (null === f["return"] || f["return"] === a) return;f = f["return"];
          }f.sibling["return"] = f["return"];f = f.sibling;
        }
      },
      commitDeletion: function commitDeletion(a) {
        f(a);a["return"] = null;a.child = null;a.alternate && (a.alternate.child = null, a.alternate["return"] = null);
      }, commitWork: function commitWork(a, b) {
        switch (b.tag) {case jg:
            break;case lg:
            var c = b.stateNode;if (null != c) {
              var d = b.memoizedProps;a = null !== a ? a.memoizedProps : d;var e = b.type,
                  f = b.updateQueue;b.updateQueue = null;null !== f && k(c, f, e, a, d, b);
            }break;case mg:
            null === b.stateNode ? w("162") : void 0;c = b.memoizedProps;x(b.stateNode, null !== a ? a.memoizedProps : c, c);break;case kg:
            break;case ng:
            break;default:
            w("163");}
      },
      commitLifeCycles: function commitLifeCycles(a, b) {
        switch (b.tag) {case jg:
            var c = b.stateNode;if (b.effectTag & sg) if (null === a) c.props = b.memoizedProps, c.state = b.memoizedState, c.componentDidMount();else {
              var d = a.memoizedProps;a = a.memoizedState;c.props = b.memoizedProps;c.state = b.memoizedState;c.componentDidUpdate(d, a);
            }b.effectTag & tg && null !== b.updateQueue && pg(b, b.updateQueue, c);break;case kg:
            a = b.updateQueue;null !== a && pg(b, a, b.child && b.child.stateNode);break;case lg:
            c = b.stateNode;null === a && b.effectTag & sg && h(c, b.type, b.memoizedProps, b);break;case mg:
            break;case ng:
            break;default:
            w("163");}
      }, commitAttachRef: function commitAttachRef(a) {
        var b = a.ref;if (null !== b) {
          var c = a.stateNode;switch (a.tag) {case lg:
              b(Ca(c));break;default:
              b(c);}
        }
      }, commitDetachRef: function commitDetachRef(a) {
        a = a.ref;null !== a && a(null);
      } };
  }var wg = xd.createCursor,
      xg = xd.pop,
      yg = xd.push,
      zg = {};
  function Ag(a) {
    function b(a) {
      a === zg ? w("174") : void 0;return a;
    }var c = a.getChildHostContext,
        d = a.getRootHostContext,
        e = wg(zg),
        f = wg(zg),
        g = wg(zg);return { getHostContext: function getHostContext() {
        return b(e.current);
      }, getRootHostContainer: function getRootHostContainer() {
        return b(g.current);
      }, popHostContainer: function popHostContainer(a) {
        xg(e, a);xg(f, a);xg(g, a);
      }, popHostContext: function popHostContext(a) {
        f.current === a && (xg(e, a), xg(f, a));
      }, pushHostContainer: function pushHostContainer(a, b) {
        yg(g, b, a);b = d(b);yg(f, a, a);yg(e, b, a);
      }, pushHostContext: function pushHostContext(a) {
        var d = b(g.current),
            h = b(e.current);d = c(h, a.type, d);h !== d && (yg(f, a, a), yg(e, d, a));
      }, resetHostContainer: function resetHostContainer() {
        e.current = zg;g.current = zg;
      } };
  }var Bg = E.HostComponent,
      Cg = E.HostText,
      Dg = E.HostRoot,
      Eg = J.Deletion,
      Fg = J.Placement,
      Gg = de.createFiberFromHostInstanceForDeletion;
  function Hg(a) {
    function b(a, b) {
      var c = Gg();c.stateNode = b;c["return"] = a;c.effectTag = Eg;null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
    }function c(a, b) {
      switch (a.tag) {case Bg:
          return f(b, a.type, a.pendingProps);case Cg:
          return g(b, a.pendingProps);default:
          return !1;}
    }function d(a) {
      for (a = a["return"]; null !== a && a.tag !== Bg && a.tag !== Dg;) {
        a = a["return"];
      }y = a;
    }var e = a.shouldSetTextContent,
        f = a.canHydrateInstance,
        g = a.canHydrateTextInstance,
        h = a.getNextHydratableSibling,
        k = a.getFirstHydratableChild,
        p = a.hydrateInstance,
        x = a.hydrateTextInstance,
        S = a.didNotHydrateInstance,
        D = a.didNotFindHydratableInstance;a = a.didNotFindHydratableTextInstance;if (!(f && g && h && k && p && x && S && D && a)) return { enterHydrationState: function enterHydrationState() {
        return !1;
      }, resetHydrationState: function resetHydrationState() {}, tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {}, prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {
        w("175");
      }, prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {
        w("176");
      }, popHydrationState: function popHydrationState() {
        return !1;
      } };var y = null,
        B = null,
        H = !1;return { enterHydrationState: function enterHydrationState(a) {
        B = k(a.stateNode.containerInfo);y = a;return H = !0;
      }, resetHydrationState: function resetHydrationState() {
        B = y = null;H = !1;
      }, tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance(a) {
        if (H) {
          var d = B;if (d) {
            if (!c(a, d)) {
              d = h(d);if (!d || !c(a, d)) {
                a.effectTag |= Fg;H = !1;y = a;return;
              }b(y, B);
            }a.stateNode = d;y = a;B = k(d);
          } else a.effectTag |= Fg, H = !1, y = a;
        }
      }, prepareToHydrateHostInstance: function prepareToHydrateHostInstance(a, b, c) {
        b = p(a.stateNode, a.type, a.memoizedProps, b, c, a);a.updateQueue = b;return null !== b ? !0 : !1;
      }, prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance(a) {
        return x(a.stateNode, a.memoizedProps, a);
      },
      popHydrationState: function popHydrationState(a) {
        if (a !== y) return !1;if (!H) return d(a), H = !0, !1;var c = a.type;if (a.tag !== Bg || "head" !== c && "body" !== c && !e(c, a.memoizedProps)) for (c = B; c;) {
          b(a, c), c = h(c);
        }d(a);B = y ? h(a.stateNode) : null;return !0;
      } };
  }
  var Ig = R.popContextProvider,
      Jg = xd.reset,
      Kg = Qa.ReactCurrentOwner,
      Lg = de.createWorkInProgress,
      Mg = de.largerPriority,
      Ng = ig.onCommitRoot,
      T = Q.NoWork,
      Og = Q.SynchronousPriority,
      U = Q.TaskPriority,
      Pg = Q.HighPriority,
      Qg = Q.LowPriority,
      Rg = Q.OffscreenPriority,
      Sg = Pd.AsyncUpdates,
      Tg = J.PerformedWork,
      Ug = J.Placement,
      Vg = J.Update,
      Wg = J.PlacementAndUpdate,
      Xg = J.Deletion,
      Yg = J.ContentReset,
      Zg = J.Callback,
      $g = J.Err,
      ah = J.Ref,
      bh = E.HostRoot,
      ch = E.HostComponent,
      dh = E.HostPortal,
      eh = E.ClassComponent,
      fh = ud.getUpdatePriority,
      gh = R.resetContext;
  function hh(a) {
    function b() {
      for (; null !== ma && ma.current.pendingWorkPriority === T;) {
        ma.isScheduled = !1;var a = ma.nextScheduledRoot;ma.nextScheduledRoot = null;if (ma === zb) return zb = ma = null, z = T, null;ma = a;
      }a = ma;for (var b = null, c = T; null !== a;) {
        a.current.pendingWorkPriority !== T && (c === T || c > a.current.pendingWorkPriority) && (c = a.current.pendingWorkPriority, b = a), a = a.nextScheduledRoot;
      }null !== b ? (z = c, Jg(), gh(), t(), I = Lg(b.current, c), b !== nc && (oc = 0, nc = b)) : (z = T, nc = I = null);
    }function c(c) {
      Hd = !0;na = null;var d = c.stateNode;d.current === c ? w("177") : void 0;z !== Og && z !== U || oc++;Kg.current = null;if (c.effectTag > Tg) {
        if (null !== c.lastEffect) {
          c.lastEffect.nextEffect = c;var e = c.firstEffect;
        } else e = c;
      } else e = c.firstEffect;Ui();for (u = e; null !== u;) {
        var f = !1,
            g = void 0;try {
          for (; null !== u;) {
            var h = u.effectTag;h & Yg && a.resetTextContent(u.stateNode);if (h & ah) {
              var k = u.alternate;null !== k && Ph(k);
            }switch (h & ~(Zg | $g | Yg | ah | Tg)) {case Ug:
                q(u);u.effectTag &= ~Ug;break;case Wg:
                q(u);u.effectTag &= ~Ug;vf(u.alternate, u);break;case Vg:
                vf(u.alternate, u);break;case Xg:
                Id = !0, Mh(u), Id = !1;}u = u.nextEffect;
          }
        } catch (Jd) {
          f = !0, g = Jd;
        }f && (null === u ? w("178") : void 0, x(u, g), null !== u && (u = u.nextEffect));
      }Vi();d.current = c;for (u = e; null !== u;) {
        d = !1;e = void 0;try {
          for (; null !== u;) {
            var Gd = u.effectTag;Gd & (Vg | Zg) && Nh(u.alternate, u);Gd & ah && Oh(u);if (Gd & $g) switch (f = u, g = void 0, null !== P && (g = P.get(f), P["delete"](f), null == g && null !== f.alternate && (f = f.alternate, g = P.get(f), P["delete"](f))), null == g ? w("184") : void 0, f.tag) {case eh:
                f.stateNode.componentDidCatch(g.error, { componentStack: g.componentStack });break;case bh:
                null === Ja && (Ja = g.error);break;default:
                w("157");}var m = u.nextEffect;u.nextEffect = null;u = m;
          }
        } catch (Jd) {
          d = !0, e = Jd;
        }d && (null === u ? w("178") : void 0, x(u, e), null !== u && (u = u.nextEffect));
      }Hd = !1;"function" === typeof Ng && Ng(c.stateNode);va && (va.forEach(H), va = null);b();
    }function d(a) {
      for (;;) {
        var b = Lh(a.alternate, a, z),
            c = a["return"],
            d = a.sibling;var e = a;if (!(e.pendingWorkPriority !== T && e.pendingWorkPriority > z)) {
          for (var f = fh(e), g = e.child; null !== g;) {
            f = Mg(f, g.pendingWorkPriority), g = g.sibling;
          }e.pendingWorkPriority = f;
        }if (null !== b) return b;
        null !== c && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), a.effectTag > Tg && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));if (null !== d) return d;if (null !== c) a = c;else {
          na = a;break;
        }
      }return null;
    }function e(a) {
      var b = V(a.alternate, a, z);null === b && (b = d(a));Kg.current = null;return b;
    }function f(a) {
      var b = ld(a.alternate, a, z);null === b && (b = d(a));Kg.current = null;return b;
    }
    function g(a) {
      p(Rg, a);
    }function h() {
      if (null !== P && 0 < P.size && z === U) for (; null !== I;) {
        var a = I;I = null !== P && (P.has(a) || null !== a.alternate && P.has(a.alternate)) ? f(I) : e(I);if (null === I && (null === na ? w("179") : void 0, O = U, c(na), O = z, null === P || 0 === P.size || z !== U)) break;
      }
    }function k(a, d) {
      null !== na ? (O = U, c(na), h()) : null === I && b();if (!(z === T || z > a)) {
        O = z;a: do {
          if (z <= U) for (; null !== I && !(I = e(I), null === I && (null === na ? w("179") : void 0, O = U, c(na), O = z, h(), z === T || z > a || z > U));) {} else if (null !== d) for (; null !== I && !Ab;) {
            if (1 < d.timeRemaining()) {
              if (I = e(I), null === I) if (null === na ? w("179") : void 0, 1 < d.timeRemaining()) {
                if (O = U, c(na), O = z, h(), z === T || z > a || z < Pg) break;
              } else Ab = !0;
            } else Ab = !0;
          }switch (z) {case Og:case U:
              if (z <= a) continue a;break a;case Pg:case Qg:case Rg:
              if (null === d) break a;if (!Ab && z <= a) continue a;break a;case T:
              break a;default:
              w("181");}
        } while (1);
      }
    }function p(a, b) {
      Da ? w("182") : void 0;Da = !0;var c = O,
          d = !1,
          e = null;try {
        k(a, b);
      } catch (Kd) {
        d = !0, e = Kd;
      }for (; d;) {
        if (Ya) {
          Ja = e;break;
        }var h = I;if (null === h) Ya = !0;else {
          var p = x(h, e);null === p ? w("183") : void 0;if (!Ya) {
            try {
              d = p;e = a;p = b;for (var q = d; null !== h;) {
                switch (h.tag) {case eh:
                    Ig(h);break;case ch:
                    m(h);break;case bh:
                    r(h);break;case dh:
                    r(h);}if (h === q || h.alternate === q) break;h = h["return"];
              }I = f(d);k(e, p);
            } catch (Kd) {
              d = !0;e = Kd;continue;
            }break;
          }
        }
      }O = c;null !== b && (Bb = !1);z > U && !Bb && ($f(g), Bb = !0);a = Ja;Ya = Ab = Da = !1;nc = Ka = P = Ja = null;oc = 0;if (null !== a) throw a;
    }function x(a, b) {
      var c = Kg.current = null,
          d = !1,
          e = !1,
          f = null;if (a.tag === bh) c = a, S(a) && (Ya = !0);else for (var g = a["return"]; null !== g && null === c;) {
        g.tag === eh ? "function" === typeof g.stateNode.componentDidCatch && (d = !0, f = Ra(g), c = g, e = !0) : g.tag === bh && (c = g);if (S(g)) {
          if (Id || null !== va && (va.has(g) || null !== g.alternate && va.has(g.alternate))) return null;c = null;e = !1;
        }g = g["return"];
      }if (null !== c) {
        null === Ka && (Ka = new Set());Ka.add(c);var h = "";g = a;do {
          a: switch (g.tag) {case fe:case ge:case he:case ie:
              var k = g._debugOwner,
                  m = g._debugSource;var p = Ra(g);var q = null;k && (q = Ra(k));k = m;p = "\n    in " + (p || "Unknown") + (k ? " (at " + k.fileName.replace(/^.*[\\\/]/, "") + ":" + k.lineNumber + ")" : q ? " (created by " + q + ")" : "");break a;default:
              p = "";}h += p;g = g["return"];
        } while (g);
        g = h;a = Ra(a);null === P && (P = new Map());b = { componentName: a, componentStack: g, error: b, errorBoundary: d ? c.stateNode : null, errorBoundaryFound: d, errorBoundaryName: f, willRetry: e };P.set(c, b);try {
          console.error(b.error);
        } catch (Wi) {
          console.error(Wi);
        }Hd ? (null === va && (va = new Set()), va.add(c)) : H(c);return c;
      }null === Ja && (Ja = b);return null;
    }function S(a) {
      return null !== Ka && (Ka.has(a) || null !== a.alternate && Ka.has(a.alternate));
    }function D(a, b) {
      return y(a, b, !1);
    }function y(a, b) {
      oc > Xi && (Ya = !0, w("185"));!Da && b <= z && (I = null);for (var c = !0; null !== a && c;) {
        c = !1;if (a.pendingWorkPriority === T || a.pendingWorkPriority > b) c = !0, a.pendingWorkPriority = b;null !== a.alternate && (a.alternate.pendingWorkPriority === T || a.alternate.pendingWorkPriority > b) && (c = !0, a.alternate.pendingWorkPriority = b);if (null === a["return"]) if (a.tag === bh) {
          var d = a.stateNode;b === T || d.isScheduled || (d.isScheduled = !0, zb ? zb.nextScheduledRoot = d : ma = d, zb = d);if (!Da) switch (b) {case Og:
              pc ? p(Og, null) : p(U, null);break;case U:
              W ? void 0 : w("186");break;default:
              Bb || ($f(g), Bb = !0);}
        } else break;a = a["return"];
      }
    }
    function B(a, b) {
      var c = O;c === T && (c = !Yi || a.internalContextTag & Sg || b ? Qg : Og);return c === Og && (Da || W) ? U : c;
    }function H(a) {
      y(a, U, !0);
    }var C = Ag(a),
        Ca = Hg(a),
        r = C.popHostContainer,
        m = C.popHostContext,
        t = C.resetHostContainer,
        v = Lf(a, C, Ca, D, B),
        V = v.beginWork,
        ld = v.beginFailedWork,
        Lh = eg(a, C, Ca).completeWork;C = vg(a, x);var q = C.commitPlacement,
        Mh = C.commitDeletion,
        vf = C.commitWork,
        Nh = C.commitLifeCycles,
        Oh = C.commitAttachRef,
        Ph = C.commitDetachRef,
        $f = a.scheduleDeferredCallback,
        Yi = a.useSyncScheduling,
        Ui = a.prepareForCommit,
        Vi = a.resetAfterCommit,
        O = T,
        Da = !1,
        Ab = !1,
        W = !1,
        pc = !1,
        I = null,
        z = T,
        u = null,
        na = null,
        ma = null,
        zb = null,
        Bb = !1,
        P = null,
        Ka = null,
        va = null,
        Ja = null,
        Ya = !1,
        Hd = !1,
        Id = !1,
        Xi = 1E3,
        oc = 0,
        nc = null;return { scheduleUpdate: D, getPriorityContext: B, batchedUpdates: function batchedUpdates(a, b) {
        var c = W;W = !0;try {
          return a(b);
        } finally {
          W = c, Da || W || p(U, null);
        }
      }, unbatchedUpdates: function unbatchedUpdates(a) {
        var b = pc,
            c = W;pc = W;W = !1;try {
          return a();
        } finally {
          W = c, pc = b;
        }
      }, flushSync: function flushSync(a) {
        var b = W,
            c = O;W = !0;O = Og;try {
          return a();
        } finally {
          W = b, O = c, Da ? w("187") : void 0, p(U, null);
        }
      }, deferredUpdates: function deferredUpdates(a) {
        var b = O;O = Qg;try {
          return a();
        } finally {
          O = b;
        }
      } };
  }function ih() {
    w("196");
  }function jh(a) {
    if (!a) return da;a = Pa.get(a);return "number" === typeof a.tag ? ih(a) : a._processChildContext(a._context);
  }jh._injectFiber = function (a) {
    ih = a;
  };var kh = ud.addTopLevelUpdate,
      lh = R.findCurrentUnmaskedContext,
      mh = R.isContextProvider,
      nh = R.processChildContext,
      oh = E.HostComponent,
      ph = bb.findCurrentHostFiber,
      qh = bb.findCurrentHostFiberWithNoPortals;jh._injectFiber(function (a) {
    var b = lh(a);return mh(a) ? nh(a, b, !1) : b;
  });var rh = F.TEXT_NODE;
  function sh(a) {
    for (; a && a.firstChild;) {
      a = a.firstChild;
    }return a;
  }function th(a, b) {
    var c = sh(a);a = 0;for (var d; c;) {
      if (c.nodeType === rh) {
        d = a + c.textContent.length;if (a <= b && d >= b) return { node: c, offset: b - a };a = d;
      }a: {
        for (; c;) {
          if (c.nextSibling) {
            c = c.nextSibling;break a;
          }c = c.parentNode;
        }c = void 0;
      }c = sh(c);
    }
  }var uh = null;function vh() {
    !uh && l.canUseDOM && (uh = "textContent" in document.documentElement ? "textContent" : "innerText");return uh;
  }
  var wh = { getOffsets: function getOffsets(a) {
      var b = window.getSelection && window.getSelection();if (!b || 0 === b.rangeCount) return null;var c = b.anchorNode,
          d = b.anchorOffset,
          e = b.focusNode,
          f = b.focusOffset,
          g = b.getRangeAt(0);try {
        g.startContainer.nodeType, g.endContainer.nodeType;
      } catch (k) {
        return null;
      }b = b.anchorNode === b.focusNode && b.anchorOffset === b.focusOffset ? 0 : g.toString().length;var h = g.cloneRange();h.selectNodeContents(a);h.setEnd(g.startContainer, g.startOffset);a = h.startContainer === h.endContainer && h.startOffset === h.endOffset ? 0 : h.toString().length;g = a + b;b = document.createRange();b.setStart(c, d);b.setEnd(e, f);c = b.collapsed;return { start: c ? g : a, end: c ? a : g };
    }, setOffsets: function setOffsets(a, b) {
      if (window.getSelection) {
        var c = window.getSelection(),
            d = a[vh()].length,
            e = Math.min(b.start, d);b = void 0 === b.end ? e : Math.min(b.end, d);!c.extend && e > b && (d = b, b = e, e = d);d = th(a, e);a = th(a, b);if (d && a) {
          var f = document.createRange();f.setStart(d.node, d.offset);c.removeAllRanges();e > b ? (c.addRange(f), c.extend(a.node, a.offset)) : (f.setEnd(a.node, a.offset), c.addRange(f));
        }
      }
    } },
      xh = F.ELEMENT_NODE,
      yh = { hasSelectionCapabilities: function hasSelectionCapabilities(a) {
      var b = a && a.nodeName && a.nodeName.toLowerCase();return b && ("input" === b && "text" === a.type || "textarea" === b || "true" === a.contentEditable);
    }, getSelectionInformation: function getSelectionInformation() {
      var a = ia();return { focusedElem: a, selectionRange: yh.hasSelectionCapabilities(a) ? yh.getSelection(a) : null };
    }, restoreSelection: function restoreSelection(a) {
      var b = ia(),
          c = a.focusedElem;a = a.selectionRange;if (b !== c && fa(document.documentElement, c)) {
        yh.hasSelectionCapabilities(c) && yh.setSelection(c, a);b = [];for (a = c; a = a.parentNode;) {
          a.nodeType === xh && b.push({ element: a, left: a.scrollLeft, top: a.scrollTop });
        }ha(c);for (c = 0; c < b.length; c++) {
          a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;
        }
      }
    }, getSelection: function getSelection(a) {
      return ("selectionStart" in a ? { start: a.selectionStart, end: a.selectionEnd } : wh.getOffsets(a)) || { start: 0, end: 0 };
    }, setSelection: function setSelection(a, b) {
      var c = b.start,
          d = b.end;void 0 === d && (d = c);"selectionStart" in a ? (a.selectionStart = c, a.selectionEnd = Math.min(d, a.value.length)) : wh.setOffsets(a, b);
    } },
      zh = yh,
      Ah = F.ELEMENT_NODE;function Bh() {
    w("211");
  }function Ch() {
    w("212");
  }function Dh(a) {
    if (null == a) return null;if (a.nodeType === Ah) return a;var b = Pa.get(a);if (b) return "number" === typeof b.tag ? Bh(b) : Ch(b);"function" === typeof a.render ? w("188") : w("213", Object.keys(a));
  }Dh._injectFiber = function (a) {
    Bh = a;
  };Dh._injectStack = function (a) {
    Ch = a;
  };var Eh = E.HostComponent;function Fh(a) {
    if (void 0 !== a._hostParent) return a._hostParent;if ("number" === typeof a.tag) {
      do {
        a = a["return"];
      } while (a && a.tag !== Eh);if (a) return a;
    }return null;
  }
  function Gh(a, b) {
    for (var c = 0, d = a; d; d = Fh(d)) {
      c++;
    }d = 0;for (var e = b; e; e = Fh(e)) {
      d++;
    }for (; 0 < c - d;) {
      a = Fh(a), c--;
    }for (; 0 < d - c;) {
      b = Fh(b), d--;
    }for (; c--;) {
      if (a === b || a === b.alternate) return a;a = Fh(a);b = Fh(b);
    }return null;
  }
  var Hh = { isAncestor: function isAncestor(a, b) {
      for (; b;) {
        if (a === b || a === b.alternate) return !0;b = Fh(b);
      }return !1;
    }, getLowestCommonAncestor: Gh, getParentInstance: function getParentInstance(a) {
      return Fh(a);
    }, traverseTwoPhase: function traverseTwoPhase(a, b, c) {
      for (var d = []; a;) {
        d.push(a), a = Fh(a);
      }for (a = d.length; 0 < a--;) {
        b(d[a], "captured", c);
      }for (a = 0; a < d.length; a++) {
        b(d[a], "bubbled", c);
      }
    }, traverseEnterLeave: function traverseEnterLeave(a, b, c, d, e) {
      for (var f = a && b ? Gh(a, b) : null, g = []; a && a !== f;) {
        g.push(a), a = Fh(a);
      }for (a = []; b && b !== f;) {
        a.push(b), b = Fh(b);
      }for (b = 0; b < g.length; b++) {
        c(g[b], "bubbled", d);
      }for (b = a.length; 0 < b--;) {
        c(a[b], "captured", e);
      }
    } },
      Ih = Jb.getListener;function Jh(a, b, c) {
    if (b = Ih(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = Cb(c._dispatchListeners, b), c._dispatchInstances = Cb(c._dispatchInstances, a);
  }function Kh(a) {
    a && a.dispatchConfig.phasedRegistrationNames && Hh.traverseTwoPhase(a._targetInst, Jh, a);
  }function Qh(a) {
    if (a && a.dispatchConfig.phasedRegistrationNames) {
      var b = a._targetInst;b = b ? Hh.getParentInstance(b) : null;Hh.traverseTwoPhase(b, Jh, a);
    }
  }
  function Rh(a, b, c) {
    a && c && c.dispatchConfig.registrationName && (b = Ih(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = Cb(c._dispatchListeners, b), c._dispatchInstances = Cb(c._dispatchInstances, a));
  }function Sh(a) {
    a && a.dispatchConfig.registrationName && Rh(a._targetInst, null, a);
  }
  var Th = { accumulateTwoPhaseDispatches: function accumulateTwoPhaseDispatches(a) {
      Db(a, Kh);
    }, accumulateTwoPhaseDispatchesSkipTarget: function accumulateTwoPhaseDispatchesSkipTarget(a) {
      Db(a, Qh);
    }, accumulateDirectDispatches: function accumulateDirectDispatches(a) {
      Db(a, Sh);
    }, accumulateEnterLeaveDispatches: function accumulateEnterLeaveDispatches(a, b, c, d) {
      Hh.traverseEnterLeave(c, d, Rh, a, b);
    } },
      X = { _root: null, _startText: null, _fallbackText: null },
      Uh = { initialize: function initialize(a) {
      X._root = a;X._startText = Uh.getText();return !0;
    }, reset: function reset() {
      X._root = null;X._startText = null;X._fallbackText = null;
    }, getData: function getData() {
      if (X._fallbackText) return X._fallbackText;
      var a,
          b = X._startText,
          c = b.length,
          d,
          e = Uh.getText(),
          f = e.length;for (a = 0; a < c && b[a] === e[a]; a++) {}var g = c - a;for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {}X._fallbackText = e.slice(a, 1 < d ? 1 - d : void 0);return X._fallbackText;
    }, getText: function getText() {
      return "value" in X._root ? X._root.value : X._root[vh()];
    } },
      Vh = Uh,
      Wh = "dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),
      Xh = { type: null, target: null, currentTarget: ca.thatReturnsNull, eventPhase: null, bubbles: null,
    cancelable: null, timeStamp: function timeStamp(a) {
      return a.timeStamp || Date.now();
    }, defaultPrevented: null, isTrusted: null };
  function Y(a, b, c, d) {
    this.dispatchConfig = a;this._targetInst = b;this.nativeEvent = c;a = this.constructor.Interface;for (var e in a) {
      a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : "target" === e ? this.target = d : this[e] = c[e]);
    }this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? ca.thatReturnsTrue : ca.thatReturnsFalse;this.isPropagationStopped = ca.thatReturnsFalse;return this;
  }
  n(Y.prototype, { preventDefault: function preventDefault() {
      this.defaultPrevented = !0;var a = this.nativeEvent;a && (a.preventDefault ? a.preventDefault() : "unknown" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = ca.thatReturnsTrue);
    }, stopPropagation: function stopPropagation() {
      var a = this.nativeEvent;a && (a.stopPropagation ? a.stopPropagation() : "unknown" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = ca.thatReturnsTrue);
    }, persist: function persist() {
      this.isPersistent = ca.thatReturnsTrue;
    }, isPersistent: ca.thatReturnsFalse,
    destructor: function destructor() {
      var a = this.constructor.Interface,
          b;for (b in a) {
        this[b] = null;
      }for (a = 0; a < Wh.length; a++) {
        this[Wh[a]] = null;
      }
    } });Y.Interface = Xh;Y.augmentClass = function (a, b) {
    function c() {}c.prototype = this.prototype;var d = new c();n(d, a.prototype);a.prototype = d;a.prototype.constructor = a;a.Interface = n({}, this.Interface, b);a.augmentClass = this.augmentClass;Yh(a);
  };Yh(Y);function Zh(a, b, c, d) {
    if (this.eventPool.length) {
      var e = this.eventPool.pop();this.call(e, a, b, c, d);return e;
    }return new this(a, b, c, d);
  }
  function $h(a) {
    a instanceof this ? void 0 : w("223");a.destructor();10 > this.eventPool.length && this.eventPool.push(a);
  }function Yh(a) {
    a.eventPool = [];a.getPooled = Zh;a.release = $h;
  }function ai(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Y.augmentClass(ai, { data: null });function bi(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Y.augmentClass(bi, { data: null });var ci = [9, 13, 27, 32],
      di = l.canUseDOM && "CompositionEvent" in window,
      ei = null;l.canUseDOM && "documentMode" in document && (ei = document.documentMode);var fi;
  if (fi = l.canUseDOM && "TextEvent" in window && !ei) {
    var gi = window.opera;fi = !("object" === (typeof gi === "undefined" ? "undefined" : _typeof4(gi)) && "function" === typeof gi.version && 12 >= parseInt(gi.version(), 10));
  }
  var hi = fi,
      ii = l.canUseDOM && (!di || ei && 8 < ei && 11 >= ei),
      ji = String.fromCharCode(32),
      ki = { beforeInput: { phasedRegistrationNames: { bubbled: "onBeforeInput", captured: "onBeforeInputCapture" }, dependencies: ["topCompositionEnd", "topKeyPress", "topTextInput", "topPaste"] }, compositionEnd: { phasedRegistrationNames: { bubbled: "onCompositionEnd", captured: "onCompositionEndCapture" }, dependencies: "topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown".split(" ") }, compositionStart: { phasedRegistrationNames: { bubbled: "onCompositionStart",
        captured: "onCompositionStartCapture" }, dependencies: "topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown".split(" ") }, compositionUpdate: { phasedRegistrationNames: { bubbled: "onCompositionUpdate", captured: "onCompositionUpdateCapture" }, dependencies: "topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown".split(" ") } },
      li = !1;
  function mi(a, b) {
    switch (a) {case "topKeyUp":
        return -1 !== ci.indexOf(b.keyCode);case "topKeyDown":
        return 229 !== b.keyCode;case "topKeyPress":case "topMouseDown":case "topBlur":
        return !0;default:
        return !1;}
  }function ni(a) {
    a = a.detail;return "object" === (typeof a === "undefined" ? "undefined" : _typeof4(a)) && "data" in a ? a.data : null;
  }var oi = !1;function pi(a, b) {
    switch (a) {case "topCompositionEnd":
        return ni(b);case "topKeyPress":
        if (32 !== b.which) return null;li = !0;return ji;case "topTextInput":
        return a = b.data, a === ji && li ? null : a;default:
        return null;}
  }
  function qi(a, b) {
    if (oi) return "topCompositionEnd" === a || !di && mi(a, b) ? (a = Vh.getData(), Vh.reset(), oi = !1, a) : null;switch (a) {case "topPaste":
        return null;case "topKeyPress":
        if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
          if (b.char && 1 < b.char.length) return b.char;if (b.which) return String.fromCharCode(b.which);
        }return null;case "topCompositionEnd":
        return ii ? null : b.data;default:
        return null;}
  }
  var ri = { eventTypes: ki, extractEvents: function extractEvents(a, b, c, d) {
      var e;if (di) b: {
        switch (a) {case "topCompositionStart":
            var f = ki.compositionStart;break b;case "topCompositionEnd":
            f = ki.compositionEnd;break b;case "topCompositionUpdate":
            f = ki.compositionUpdate;break b;}f = void 0;
      } else oi ? mi(a, c) && (f = ki.compositionEnd) : "topKeyDown" === a && 229 === c.keyCode && (f = ki.compositionStart);f ? (ii && (oi || f !== ki.compositionStart ? f === ki.compositionEnd && oi && (e = Vh.getData()) : oi = Vh.initialize(d)), f = ai.getPooled(f, b, c, d), e ? f.data = e : (e = ni(c), null !== e && (f.data = e)), Th.accumulateTwoPhaseDispatches(f), e = f) : e = null;(a = hi ? pi(a, c) : qi(a, c)) ? (b = bi.getPooled(ki.beforeInput, b, c, d), b.data = a, Th.accumulateTwoPhaseDispatches(b)) : b = null;return [e, b];
    } },
      si = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };function ti(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase();return "input" === b ? !!si[a.type] : "textarea" === b ? !0 : !1;
  }
  var ui = { change: { phasedRegistrationNames: { bubbled: "onChange", captured: "onChangeCapture" }, dependencies: "topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange".split(" ") } };function vi(a, b, c) {
    a = Y.getPooled(ui.change, a, b, c);a.type = "change";nb.enqueueStateRestore(c);Th.accumulateTwoPhaseDispatches(a);return a;
  }var wi = null,
      xi = null;function yi(a) {
    Jb.enqueueEvents(a);Jb.processEventQueue(!1);
  }
  function zi(a) {
    var b = G.getNodeFromInstance(a);if (Bc.updateValueIfChanged(b)) return a;
  }function Ai(a, b) {
    if ("topChange" === a) return b;
  }var Bi = !1;l.canUseDOM && (Bi = Lb("input") && (!document.documentMode || 9 < document.documentMode));function Ci() {
    wi && (wi.detachEvent("onpropertychange", Di), xi = wi = null);
  }function Di(a) {
    "value" === a.propertyName && zi(xi) && (a = vi(xi, a, ub(a)), sb.batchedUpdates(yi, a));
  }function Ei(a, b, c) {
    "topFocus" === a ? (Ci(), wi = b, xi = c, wi.attachEvent("onpropertychange", Di)) : "topBlur" === a && Ci();
  }
  function Fi(a) {
    if ("topSelectionChange" === a || "topKeyUp" === a || "topKeyDown" === a) return zi(xi);
  }function Gi(a, b) {
    if ("topClick" === a) return zi(b);
  }function Hi(a, b) {
    if ("topInput" === a || "topChange" === a) return zi(b);
  }
  var Ii = { eventTypes: ui, _isInputEventSupported: Bi, extractEvents: function extractEvents(a, b, c, d) {
      var e = b ? G.getNodeFromInstance(b) : window,
          f = e.nodeName && e.nodeName.toLowerCase();if ("select" === f || "input" === f && "file" === e.type) var g = Ai;else if (ti(e)) {
        if (Bi) g = Hi;else {
          g = Fi;var h = Ei;
        }
      } else f = e.nodeName, !f || "input" !== f.toLowerCase() || "checkbox" !== e.type && "radio" !== e.type || (g = Gi);if (g && (g = g(a, b))) return vi(g, c, d);h && h(a, e, b);"topBlur" === a && null != b && (a = b._wrapperState || e._wrapperState) && a.controlled && "number" === e.type && (a = "" + e.value, e.getAttribute("value") !== a && e.setAttribute("value", a));
    } };function Ji(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Y.augmentClass(Ji, { view: function view(a) {
      if (a.view) return a.view;a = ub(a);return a.window === a ? a : (a = a.ownerDocument) ? a.defaultView || a.parentWindow : window;
    }, detail: function detail(a) {
      return a.detail || 0;
    } });var Ki = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };function Li(a) {
    var b = this.nativeEvent;return b.getModifierState ? b.getModifierState(a) : (a = Ki[a]) ? !!b[a] : !1;
  }function Mi() {
    return Li;
  }
  function Ni(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Ji.augmentClass(Ni, { screenX: null, screenY: null, clientX: null, clientY: null, pageX: null, pageY: null, ctrlKey: null, shiftKey: null, altKey: null, metaKey: null, getModifierState: Mi, button: null, buttons: null, relatedTarget: function relatedTarget(a) {
      return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);
    } });
  var Oi = { mouseEnter: { registrationName: "onMouseEnter", dependencies: ["topMouseOut", "topMouseOver"] }, mouseLeave: { registrationName: "onMouseLeave", dependencies: ["topMouseOut", "topMouseOver"] } },
      Pi = { eventTypes: Oi, extractEvents: function extractEvents(a, b, c, d) {
      if ("topMouseOver" === a && (c.relatedTarget || c.fromElement) || "topMouseOut" !== a && "topMouseOver" !== a) return null;var e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;"topMouseOut" === a ? (a = b, b = (b = c.relatedTarget || c.toElement) ? G.getClosestInstanceFromNode(b) : null) : a = null;if (a === b) return null;var f = null == a ? e : G.getNodeFromInstance(a);e = null == b ? e : G.getNodeFromInstance(b);var g = Ni.getPooled(Oi.mouseLeave, a, c, d);g.type = "mouseleave";g.target = f;g.relatedTarget = e;c = Ni.getPooled(Oi.mouseEnter, b, c, d);c.type = "mouseenter";c.target = e;c.relatedTarget = f;Th.accumulateEnterLeaveDispatches(g, c, a, b);return [g, c];
    } },
      Qi = F.DOCUMENT_NODE,
      Ri = l.canUseDOM && "documentMode" in document && 11 >= document.documentMode,
      Si = { select: { phasedRegistrationNames: { bubbled: "onSelect", captured: "onSelectCapture" },
      dependencies: "topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange".split(" ") } },
      Ti = null,
      Zi = null,
      $i = null,
      aj = !1,
      bj = M.isListeningToAllDependencies;
  function cj(a, b) {
    if (aj || null == Ti || Ti !== ia()) return null;var c = Ti;"selectionStart" in c && zh.hasSelectionCapabilities(c) ? c = { start: c.selectionStart, end: c.selectionEnd } : window.getSelection ? (c = window.getSelection(), c = { anchorNode: c.anchorNode, anchorOffset: c.anchorOffset, focusNode: c.focusNode, focusOffset: c.focusOffset }) : c = void 0;return $i && ea($i, c) ? null : ($i = c, a = Y.getPooled(Si.select, Zi, a, b), a.type = "select", a.target = Ti, Th.accumulateTwoPhaseDispatches(a), a);
  }
  var dj = { eventTypes: Si, extractEvents: function extractEvents(a, b, c, d) {
      var e = d.window === d ? d.document : d.nodeType === Qi ? d : d.ownerDocument;if (!e || !bj("onSelect", e)) return null;e = b ? G.getNodeFromInstance(b) : window;switch (a) {case "topFocus":
          if (ti(e) || "true" === e.contentEditable) Ti = e, Zi = b, $i = null;break;case "topBlur":
          $i = Zi = Ti = null;break;case "topMouseDown":
          aj = !0;break;case "topContextMenu":case "topMouseUp":
          return aj = !1, cj(c, d);case "topSelectionChange":
          if (Ri) break;case "topKeyDown":case "topKeyUp":
          return cj(c, d);}return null;
    } };
  function ej(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Y.augmentClass(ej, { animationName: null, elapsedTime: null, pseudoElement: null });function fj(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Y.augmentClass(fj, { clipboardData: function clipboardData(a) {
      return "clipboardData" in a ? a.clipboardData : window.clipboardData;
    } });function gj(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Ji.augmentClass(gj, { relatedTarget: null });function hj(a) {
    var b = a.keyCode;"charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;return 32 <= a || 13 === a ? a : 0;
  }
  var ij = { Esc: "Escape", Spacebar: " ", Left: "ArrowLeft", Up: "ArrowUp", Right: "ArrowRight", Down: "ArrowDown", Del: "Delete", Win: "OS", Menu: "ContextMenu", Apps: "ContextMenu", Scroll: "ScrollLock", MozPrintableKey: "Unidentified" },
      jj = { 8: "Backspace", 9: "Tab", 12: "Clear", 13: "Enter", 16: "Shift", 17: "Control", 18: "Alt", 19: "Pause", 20: "CapsLock", 27: "Escape", 32: " ", 33: "PageUp", 34: "PageDown", 35: "End", 36: "Home", 37: "ArrowLeft", 38: "ArrowUp", 39: "ArrowRight", 40: "ArrowDown", 45: "Insert", 46: "Delete", 112: "F1", 113: "F2", 114: "F3", 115: "F4",
    116: "F5", 117: "F6", 118: "F7", 119: "F8", 120: "F9", 121: "F10", 122: "F11", 123: "F12", 144: "NumLock", 145: "ScrollLock", 224: "Meta" };function kj(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }
  Ji.augmentClass(kj, { key: function key(a) {
      if (a.key) {
        var b = ij[a.key] || a.key;if ("Unidentified" !== b) return b;
      }return "keypress" === a.type ? (a = hj(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? jj[a.keyCode] || "Unidentified" : "";
    }, location: null, ctrlKey: null, shiftKey: null, altKey: null, metaKey: null, repeat: null, locale: null, getModifierState: Mi, charCode: function charCode(a) {
      return "keypress" === a.type ? hj(a) : 0;
    }, keyCode: function keyCode(a) {
      return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    }, which: function which(a) {
      return "keypress" === a.type ? hj(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    } });function lj(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Ni.augmentClass(lj, { dataTransfer: null });function mj(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Ji.augmentClass(mj, { touches: null, targetTouches: null, changedTouches: null, altKey: null, metaKey: null, ctrlKey: null, shiftKey: null, getModifierState: Mi });function nj(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Y.augmentClass(nj, { propertyName: null, elapsedTime: null, pseudoElement: null });
  function oj(a, b, c, d) {
    return Y.call(this, a, b, c, d);
  }Ni.augmentClass(oj, { deltaX: function deltaX(a) {
      return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    }, deltaY: function deltaY(a) {
      return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    }, deltaZ: null, deltaMode: null });var pj = {},
      qj = {};
  "abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel".split(" ").forEach(function (a) {
    var b = a[0].toUpperCase() + a.slice(1),
        c = "on" + b;b = "top" + b;c = { phasedRegistrationNames: { bubbled: c, captured: c + "Capture" }, dependencies: [b] };pj[a] = c;qj[b] = c;
  });
  var rj = { eventTypes: pj, extractEvents: function extractEvents(a, b, c, d) {
      var e = qj[a];if (!e) return null;switch (a) {case "topAbort":case "topCancel":case "topCanPlay":case "topCanPlayThrough":case "topClose":case "topDurationChange":case "topEmptied":case "topEncrypted":case "topEnded":case "topError":case "topInput":case "topInvalid":case "topLoad":case "topLoadedData":case "topLoadedMetadata":case "topLoadStart":case "topPause":case "topPlay":case "topPlaying":case "topProgress":case "topRateChange":case "topReset":case "topSeeked":case "topSeeking":case "topStalled":case "topSubmit":case "topSuspend":case "topTimeUpdate":case "topToggle":case "topVolumeChange":case "topWaiting":
          var f = Y;
          break;case "topKeyPress":
          if (0 === hj(c)) return null;case "topKeyDown":case "topKeyUp":
          f = kj;break;case "topBlur":case "topFocus":
          f = gj;break;case "topClick":
          if (2 === c.button) return null;case "topDoubleClick":case "topMouseDown":case "topMouseMove":case "topMouseUp":case "topMouseOut":case "topMouseOver":case "topContextMenu":
          f = Ni;break;case "topDrag":case "topDragEnd":case "topDragEnter":case "topDragExit":case "topDragLeave":case "topDragOver":case "topDragStart":case "topDrop":
          f = lj;break;case "topTouchCancel":case "topTouchEnd":case "topTouchMove":case "topTouchStart":
          f = mj;break;case "topAnimationEnd":case "topAnimationIteration":case "topAnimationStart":
          f = ej;break;case "topTransitionEnd":
          f = nj;break;case "topScroll":
          f = Ji;break;case "topWheel":
          f = oj;break;case "topCopy":case "topCut":case "topPaste":
          f = fj;}f ? void 0 : w("86", a);a = f.getPooled(e, b, c, d);Th.accumulateTwoPhaseDispatches(a);return a;
    } };L.setHandleTopLevel(M.handleTopLevel);Jb.injection.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" "));
  ib.injection.injectComponentTree(G);Jb.injection.injectEventPluginsByName({ SimpleEventPlugin: rj, EnterLeaveEventPlugin: Pi, ChangeEventPlugin: Ii, SelectEventPlugin: dj, BeforeInputEventPlugin: ri });
  var sj = A.injection.MUST_USE_PROPERTY,
      Z = A.injection.HAS_BOOLEAN_VALUE,
      tj = A.injection.HAS_NUMERIC_VALUE,
      uj = A.injection.HAS_POSITIVE_NUMERIC_VALUE,
      vj = A.injection.HAS_STRING_BOOLEAN_VALUE,
      wj = { Properties: { allowFullScreen: Z, allowTransparency: vj, async: Z, autoPlay: Z, capture: Z, checked: sj | Z, cols: uj, contentEditable: vj, controls: Z, "default": Z, defer: Z, disabled: Z, download: A.injection.HAS_OVERLOADED_BOOLEAN_VALUE, draggable: vj, formNoValidate: Z, hidden: Z, loop: Z, multiple: sj | Z, muted: sj | Z, noValidate: Z, open: Z, playsInline: Z,
      readOnly: Z, required: Z, reversed: Z, rows: uj, rowSpan: tj, scoped: Z, seamless: Z, selected: sj | Z, size: uj, start: tj, span: uj, spellCheck: vj, style: 0, itemScope: Z, acceptCharset: 0, className: 0, htmlFor: 0, httpEquiv: 0, value: vj }, DOMAttributeNames: { acceptCharset: "accept-charset", className: "class", htmlFor: "for", httpEquiv: "http-equiv" }, DOMMutationMethods: { value: function value(a, b) {
        if (null == b) return a.removeAttribute("value");"number" !== a.type || !1 === a.hasAttribute("value") ? a.setAttribute("value", "" + b) : a.validity && !a.validity.badInput && a.ownerDocument.activeElement !== a && a.setAttribute("value", "" + b);
      } } },
      xj = A.injection.HAS_STRING_BOOLEAN_VALUE,
      yj = { xlink: "http://www.w3.org/1999/xlink", xml: "http://www.w3.org/XML/1998/namespace" },
      zj = { Properties: { autoReverse: xj, externalResourcesRequired: xj, preserveAlpha: xj }, DOMAttributeNames: { autoReverse: "autoReverse", externalResourcesRequired: "externalResourcesRequired", preserveAlpha: "preserveAlpha" }, DOMAttributeNamespaces: { xlinkActuate: yj.xlink, xlinkArcrole: yj.xlink, xlinkHref: yj.xlink, xlinkRole: yj.xlink,
      xlinkShow: yj.xlink, xlinkTitle: yj.xlink, xlinkType: yj.xlink, xmlBase: yj.xml, xmlLang: yj.xml, xmlSpace: yj.xml } },
      Aj = /[\-\:]([a-z])/g;function Bj(a) {
    return a[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space".split(" ").forEach(function (a) {
    var b = a.replace(Aj, Bj);zj.Properties[b] = 0;zj.DOMAttributeNames[b] = a;
  });A.injection.injectDOMPropertyConfig(wj);A.injection.injectDOMPropertyConfig(zj);
  var Cj = ig.injectInternals,
      Dj = F.ELEMENT_NODE,
      Ej = F.TEXT_NODE,
      Fj = F.COMMENT_NODE,
      Gj = F.DOCUMENT_NODE,
      Hj = F.DOCUMENT_FRAGMENT_NODE,
      Ij = A.ROOT_ATTRIBUTE_NAME,
      Jj = ka.getChildNamespace,
      Kj = N.createElement,
      Lj = N.createTextNode,
      Mj = N.setInitialProperties,
      Nj = N.diffProperties,
      Oj = N.updateProperties,
      Pj = N.diffHydratedProperties,
      Qj = N.diffHydratedText,
      Rj = N.warnForDeletedHydratableElement,
      Sj = N.warnForDeletedHydratableText,
      Tj = N.warnForInsertedHydratedElement,
      Uj = N.warnForInsertedHydratedText,
      Vj = G.precacheFiberNode,
      Wj = G.updateFiberProps;
  nb.injection.injectFiberControlledHostComponent(N);Dh._injectFiber(function (a) {
    return Xj.findHostInstance(a);
  });var Yj = null,
      Zj = null;function ak(a) {
    return !(!a || a.nodeType !== Dj && a.nodeType !== Gj && a.nodeType !== Hj && (a.nodeType !== Fj || " react-mount-point-unstable " !== a.nodeValue));
  }function bk(a) {
    a = a ? a.nodeType === Gj ? a.documentElement : a.firstChild : null;return !(!a || a.nodeType !== Dj || !a.hasAttribute(Ij));
  }
  var Xj = function (a) {
    var b = a.getPublicInstance;a = hh(a);var c = a.scheduleUpdate,
        d = a.getPriorityContext;return { createContainer: function createContainer(a) {
        var b = ee();a = { current: b, containerInfo: a, isScheduled: !1, nextScheduledRoot: null, context: null, pendingContext: null };return b.stateNode = a;
      }, updateContainer: function updateContainer(a, b, g, h) {
        var e = b.current;g = jh(g);null === b.context ? b.context = g : b.pendingContext = g;b = h;h = d(e, ed.enableAsyncSubtreeAPI && null != a && null != a.type && null != a.type.prototype && !0 === a.type.prototype.unstable_isAsyncReactComponent);
        a = { element: a };kh(e, a, void 0 === b ? null : b, h);c(e, h);
      }, batchedUpdates: a.batchedUpdates, unbatchedUpdates: a.unbatchedUpdates, deferredUpdates: a.deferredUpdates, flushSync: a.flushSync, getPublicRootInstance: function getPublicRootInstance(a) {
        a = a.current;if (!a.child) return null;switch (a.child.tag) {case oh:
            return b(a.child.stateNode);default:
            return a.child.stateNode;}
      }, findHostInstance: function findHostInstance(a) {
        a = ph(a);return null === a ? null : a.stateNode;
      }, findHostInstanceWithNoPortals: function findHostInstanceWithNoPortals(a) {
        a = qh(a);return null === a ? null : a.stateNode;
      } };
  }({ getRootHostContext: function getRootHostContext(a) {
      if (a.nodeType === Gj) a = (a = a.documentElement) ? a.namespaceURI : Jj(null, "");else {
        var b = a.nodeType === Fj ? a.parentNode : a;a = b.namespaceURI || null;b = b.tagName;a = Jj(a, b);
      }return a;
    }, getChildHostContext: function getChildHostContext(a, b) {
      return Jj(a, b);
    }, getPublicInstance: function getPublicInstance(a) {
      return a;
    }, prepareForCommit: function prepareForCommit() {
      Yj = M.isEnabled();Zj = zh.getSelectionInformation();M.setEnabled(!1);
    }, resetAfterCommit: function resetAfterCommit() {
      zh.restoreSelection(Zj);Zj = null;M.setEnabled(Yj);Yj = null;
    }, createInstance: function createInstance(a, b, c, d, e) {
      a = Kj(a, b, c, d);Vj(e, a);Wj(a, b);return a;
    }, appendInitialChild: function appendInitialChild(a, b) {
      a.appendChild(b);
    }, finalizeInitialChildren: function finalizeInitialChildren(a, b, c, d) {
      Mj(a, b, c, d);a: {
        switch (b) {case "button":case "input":case "select":case "textarea":
            a = !!c.autoFocus;break a;}a = !1;
      }return a;
    }, prepareUpdate: function prepareUpdate(a, b, c, d, e) {
      return Nj(a, b, c, d, e);
    }, commitMount: function commitMount(a) {
      a.focus();
    }, commitUpdate: function commitUpdate(a, b, c, d, e) {
      Wj(a, e);Oj(a, b, c, d, e);
    }, shouldSetTextContent: function shouldSetTextContent(a, b) {
      return "textarea" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === _typeof4(b.dangerouslySetInnerHTML) && null !== b.dangerouslySetInnerHTML && "string" === typeof b.dangerouslySetInnerHTML.__html;
    }, resetTextContent: function resetTextContent(a) {
      a.textContent = "";
    }, shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(a, b) {
      return !!b.hidden;
    }, createTextInstance: function createTextInstance(a, b, c, d) {
      a = Lj(a, b);Vj(d, a);return a;
    }, commitTextUpdate: function commitTextUpdate(a, b, c) {
      a.nodeValue = c;
    }, appendChild: function appendChild(a, b) {
      a.appendChild(b);
    }, appendChildToContainer: function appendChildToContainer(a, b) {
      a.nodeType === Fj ? a.parentNode.insertBefore(b, a) : a.appendChild(b);
    }, insertBefore: function insertBefore(a, b, c) {
      a.insertBefore(b, c);
    }, insertInContainerBefore: function insertInContainerBefore(a, b, c) {
      a.nodeType === Fj ? a.parentNode.insertBefore(b, c) : a.insertBefore(b, c);
    }, removeChild: function removeChild(a, b) {
      a.removeChild(b);
    }, removeChildFromContainer: function removeChildFromContainer(a, b) {
      a.nodeType === Fj ? a.parentNode.removeChild(b) : a.removeChild(b);
    }, canHydrateInstance: function canHydrateInstance(a, b) {
      return a.nodeType === Dj && b === a.nodeName.toLowerCase();
    }, canHydrateTextInstance: function canHydrateTextInstance(a, b) {
      return "" === b ? !1 : a.nodeType === Ej;
    }, getNextHydratableSibling: function getNextHydratableSibling(a) {
      for (a = a.nextSibling; a && a.nodeType !== Dj && a.nodeType !== Ej;) {
        a = a.nextSibling;
      }return a;
    }, getFirstHydratableChild: function getFirstHydratableChild(a) {
      for (a = a.firstChild; a && a.nodeType !== Dj && a.nodeType !== Ej;) {
        a = a.nextSibling;
      }return a;
    }, hydrateInstance: function hydrateInstance(a, b, c, d, e, f) {
      Vj(f, a);Wj(a, c);return Pj(a, b, c, e, d);
    }, hydrateTextInstance: function hydrateTextInstance(a, b, c) {
      Vj(c, a);return Qj(a, b);
    }, didNotHydrateInstance: function didNotHydrateInstance(a, b) {
      1 === b.nodeType ? Rj(a, b) : Sj(a, b);
    }, didNotFindHydratableInstance: function didNotFindHydratableInstance(a, b, c) {
      Tj(a, b, c);
    }, didNotFindHydratableTextInstance: function didNotFindHydratableTextInstance(a, b) {
      Uj(a, b);
    }, scheduleDeferredCallback: dd.rIC, useSyncScheduling: !0 });sb.injection.injectFiberBatchedUpdates(Xj.batchedUpdates);
  function ck(a, b, c, d, e) {
    ak(c) ? void 0 : w("200");var f = c._reactRootContainer;if (f) Xj.updateContainer(b, f, a, e);else {
      if (!d && !bk(c)) for (d = void 0; d = c.lastChild;) {
        c.removeChild(d);
      }var g = Xj.createContainer(c);f = c._reactRootContainer = g;Xj.unbatchedUpdates(function () {
        Xj.updateContainer(b, g, a, e);
      });
    }return Xj.getPublicRootInstance(f);
  }function dk(a, b) {
    var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;ak(b) ? void 0 : w("200");return ne.createPortal(a, b, null, c);
  }
  var ek = { createPortal: dk, hydrate: function hydrate(a, b, c) {
      return ck(null, a, b, !0, c);
    }, render: function render(a, b, c) {
      return ck(null, a, b, !1, c);
    }, unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {
      null != a && Pa.has(a) ? void 0 : w("38");return ck(a, b, c, !1, d);
    }, unmountComponentAtNode: function unmountComponentAtNode(a) {
      ak(a) ? void 0 : w("40");return a._reactRootContainer ? (Xj.unbatchedUpdates(function () {
        ck(null, null, a, !1, function () {
          a._reactRootContainer = null;
        });
      }), !0) : !1;
    }, findDOMNode: Dh, unstable_createPortal: dk, unstable_batchedUpdates: sb.batchedUpdates,
    unstable_deferredUpdates: Xj.deferredUpdates, flushSync: Xj.flushSync, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { EventPluginHub: Jb, EventPluginRegistry: sa, EventPropagators: Th, ReactControlledComponent: nb, ReactDOMComponentTree: G, ReactDOMEventListener: L } };Cj({ findFiberByHostInstance: G.getClosestInstanceFromNode, findHostInstanceByFiber: Xj.findHostInstance, bundleType: 0, version: "16.0.0", rendererPackageName: "react-dom" });module.exports = ek;

  /***/
},
/* 229 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var isNode = __webpack_require__(230);

  /**
   * @param {*} object The object to check.
   * @return {boolean} Whether or not the object is a DOM text node.
   */
  function isTextNode(object) {
    return isNode(object) && object.nodeType == 3;
  }

  module.exports = isTextNode;

  /***/
},
/* 230 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  /**
   * @param {*} object The object to check.
   * @return {boolean} Whether or not the object is a DOM node.
   */

  function isNode(object) {
    var doc = object ? object.ownerDocument || object : document;
    var defaultView = doc.defaultView || window;
    return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : (typeof object === "undefined" ? "undefined" : _typeof4(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
  }

  module.exports = isNode;

  /***/
},
/* 231 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /** @license React v16.0.0
    * react-dom.development.js
    *
    * Copyright (c) 2013-present, Facebook, Inc.
    *
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    */

    if (undefined !== "production") {
      (function () {

        'use strict';

        var react = __webpack_require__(0);
        var invariant = __webpack_require__(15);
        var ExecutionEnvironment = __webpack_require__(67);
        var _assign = __webpack_require__(34);
        var EventListener = __webpack_require__(123);
        var require$$0 = __webpack_require__(44);
        var hyphenateStyleName = __webpack_require__(232);
        var emptyFunction = __webpack_require__(12);
        var camelizeStyleName = __webpack_require__(234);
        var performanceNow = __webpack_require__(236);
        var propTypes = __webpack_require__(2);
        var emptyObject = __webpack_require__(43);
        var checkPropTypes = __webpack_require__(65);
        var shallowEqual = __webpack_require__(124);
        var containsNode = __webpack_require__(125);
        var focusNode = __webpack_require__(126);
        var getActiveElement = __webpack_require__(127);

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule reactProdInvariant
         * 
         */

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule checkReact
         * 
         */

        !react ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule DOMNamespaces
         */

        var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';
        var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
        var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

        var Namespaces = {
          html: HTML_NAMESPACE,
          mathml: MATH_NAMESPACE,
          svg: SVG_NAMESPACE
        };

        // Assumes there is no parent namespace.
        function getIntrinsicNamespace(type) {
          switch (type) {
            case 'svg':
              return SVG_NAMESPACE;
            case 'math':
              return MATH_NAMESPACE;
            default:
              return HTML_NAMESPACE;
          }
        }

        function getChildNamespace$1(parentNamespace, type) {
          if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
            // No (or default) parent namespace: potential entry point.
            return getIntrinsicNamespace(type);
          }
          if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
            // We're leaving SVG.
            return HTML_NAMESPACE;
          }
          // By default, pass namespace below.
          return parentNamespace;
        }

        var Namespaces_1 = Namespaces;
        var getIntrinsicNamespace_1 = getIntrinsicNamespace;
        var getChildNamespace_1 = getChildNamespace$1;

        var DOMNamespaces = {
          Namespaces: Namespaces_1,
          getIntrinsicNamespace: getIntrinsicNamespace_1,
          getChildNamespace: getChildNamespace_1
        };

        /**
         * Injectable ordering of event plugins.
         */
        var eventPluginOrder = null;

        /**
         * Injectable mapping from names to event plugin modules.
         */
        var namesToPlugins = {};

        /**
         * Recomputes the plugin list using the injected plugins and plugin ordering.
         *
         * @private
         */
        function recomputePluginOrdering() {
          if (!eventPluginOrder) {
            // Wait until an `eventPluginOrder` is injected.
            return;
          }
          for (var pluginName in namesToPlugins) {
            var pluginModule = namesToPlugins[pluginName];
            var pluginIndex = eventPluginOrder.indexOf(pluginName);
            !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
            if (EventPluginRegistry.plugins[pluginIndex]) {
              continue;
            }
            !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
            EventPluginRegistry.plugins[pluginIndex] = pluginModule;
            var publishedEvents = pluginModule.eventTypes;
            for (var eventName in publishedEvents) {
              !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
            }
          }
        }

        /**
         * Publishes an event so that it can be dispatched by the supplied plugin.
         *
         * @param {object} dispatchConfig Dispatch configuration for the event.
         * @param {object} PluginModule Plugin publishing the event.
         * @return {boolean} True if the event was successfully published.
         * @private
         */
        function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
          !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
          EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

          var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
          if (phasedRegistrationNames) {
            for (var phaseName in phasedRegistrationNames) {
              if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
                var phasedRegistrationName = phasedRegistrationNames[phaseName];
                publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
              }
            }
            return true;
          } else if (dispatchConfig.registrationName) {
            publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
            return true;
          }
          return false;
        }

        /**
         * Publishes a registration name that is used to identify dispatched events.
         *
         * @param {string} registrationName Registration name to add.
         * @param {object} PluginModule Plugin publishing the event.
         * @private
         */
        function publishRegistrationName(registrationName, pluginModule, eventName) {
          !!EventPluginRegistry.registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
          EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
          EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

          {
            var lowerCasedName = registrationName.toLowerCase();
            EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

            if (registrationName === 'onDoubleClick') {
              EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
            }
          }
        }

        /**
         * Registers plugins so that they can extract and dispatch events.
         *
         * @see {EventPluginHub}
         */
        var EventPluginRegistry = {
          /**
           * Ordered list of injected plugins.
           */
          plugins: [],

          /**
           * Mapping from event name to dispatch config
           */
          eventNameDispatchConfigs: {},

          /**
           * Mapping from registration name to plugin module
           */
          registrationNameModules: {},

          /**
           * Mapping from registration name to event name
           */
          registrationNameDependencies: {},

          /**
           * Mapping from lowercase registration names to the properly cased version,
           * used to warn in the case of missing event handlers. Available
           * only in true.
           * @type {Object}
           */
          possibleRegistrationNames: {},
          // Trust the developer to only use possibleRegistrationNames in true

          /**
           * Injects an ordering of plugins (by plugin name). This allows the ordering
           * to be decoupled from injection of the actual plugins so that ordering is
           * always deterministic regardless of packaging, on-the-fly injection, etc.
           *
           * @param {array} InjectedEventPluginOrder
           * @internal
           * @see {EventPluginHub.injection.injectEventPluginOrder}
           */
          injectEventPluginOrder: function injectEventPluginOrder(injectedEventPluginOrder) {
            !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
            // Clone the ordering so it cannot be dynamically mutated.
            eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
            recomputePluginOrdering();
          },

          /**
           * Injects plugins to be used by `EventPluginHub`. The plugin names must be
           * in the ordering injected by `injectEventPluginOrder`.
           *
           * Plugins can be injected as part of page initialization or on-the-fly.
           *
           * @param {object} injectedNamesToPlugins Map from names to plugin modules.
           * @internal
           * @see {EventPluginHub.injection.injectEventPluginsByName}
           */
          injectEventPluginsByName: function injectEventPluginsByName(injectedNamesToPlugins) {
            var isOrderingDirty = false;
            for (var pluginName in injectedNamesToPlugins) {
              if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
                continue;
              }
              var pluginModule = injectedNamesToPlugins[pluginName];
              if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
                !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
                namesToPlugins[pluginName] = pluginModule;
                isOrderingDirty = true;
              }
            }
            if (isOrderingDirty) {
              recomputePluginOrdering();
            }
          }
        };

        var EventPluginRegistry_1 = EventPluginRegistry;

        // These attributes should be all lowercase to allow for
        // case insensitive checks
        var RESERVED_PROPS = {
          children: true,
          dangerouslySetInnerHTML: true,
          autoFocus: true,
          defaultValue: true,
          defaultChecked: true,
          innerHTML: true,
          suppressContentEditableWarning: true,
          style: true
        };

        function checkMask(value, bitmask) {
          return (value & bitmask) === bitmask;
        }

        var DOMPropertyInjection = {
          /**
           * Mapping from normalized, camelcased property names to a configuration that
           * specifies how the associated DOM property should be accessed or rendered.
           */
          MUST_USE_PROPERTY: 0x1,
          HAS_BOOLEAN_VALUE: 0x4,
          HAS_NUMERIC_VALUE: 0x8,
          HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
          HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,
          HAS_STRING_BOOLEAN_VALUE: 0x40,

          /**
           * Inject some specialized knowledge about the DOM. This takes a config object
           * with the following properties:
           *
           * Properties: object mapping DOM property name to one of the
           * DOMPropertyInjection constants or null. If your attribute isn't in here,
           * it won't get written to the DOM.
           *
           * DOMAttributeNames: object mapping React attribute name to the DOM
           * attribute name. Attribute names not specified use the **lowercase**
           * normalized name.
           *
           * DOMAttributeNamespaces: object mapping React attribute name to the DOM
           * attribute namespace URL. (Attribute names not specified use no namespace.)
           *
           * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
           * Property names not specified use the normalized name.
           *
           * DOMMutationMethods: Properties that require special mutation methods. If
           * `value` is undefined, the mutation method should unset the property.
           *
           * @param {object} domPropertyConfig the config as described above.
           */
          injectDOMPropertyConfig: function injectDOMPropertyConfig(domPropertyConfig) {
            var Injection = DOMPropertyInjection;
            var Properties = domPropertyConfig.Properties || {};
            var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
            var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
            var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

            for (var propName in Properties) {
              !!DOMProperty.properties.hasOwnProperty(propName) ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : void 0;

              var lowerCased = propName.toLowerCase();
              var propConfig = Properties[propName];

              var propertyInfo = {
                attributeName: lowerCased,
                attributeNamespace: null,
                propertyName: propName,
                mutationMethod: null,

                mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
                hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
                hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
                hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
                hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE),
                hasStringBooleanValue: checkMask(propConfig, Injection.HAS_STRING_BOOLEAN_VALUE)
              };
              !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : void 0;

              if (DOMAttributeNames.hasOwnProperty(propName)) {
                var attributeName = DOMAttributeNames[propName];

                propertyInfo.attributeName = attributeName;
              }

              if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
                propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
              }

              if (DOMMutationMethods.hasOwnProperty(propName)) {
                propertyInfo.mutationMethod = DOMMutationMethods[propName];
              }

              // Downcase references to whitelist properties to check for membership
              // without case-sensitivity. This allows the whitelist to pick up
              // `allowfullscreen`, which should be written using the property configuration
              // for `allowFullscreen`
              DOMProperty.properties[propName] = propertyInfo;
            }
          }
        };

        /* eslint-disable max-len */
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        /* eslint-enable max-len */

        /**
         * DOMProperty exports lookup objects that can be used like functions:
         *
         *   > DOMProperty.isValid['id']
         *   true
         *   > DOMProperty.isValid['foobar']
         *   undefined
         *
         * Although this may be confusing, it performs better in general.
         *
         * @see http://jsperf.com/key-exists
         * @see http://jsperf.com/key-missing
         */
        var DOMProperty = {
          ID_ATTRIBUTE_NAME: 'data-reactid',
          ROOT_ATTRIBUTE_NAME: 'data-reactroot',

          ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
          ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040",

          /**
           * Map from property "standard name" to an object with info about how to set
           * the property in the DOM. Each object contains:
           *
           * attributeName:
           *   Used when rendering markup or with `*Attribute()`.
           * attributeNamespace
           * propertyName:
           *   Used on DOM node instances. (This includes properties that mutate due to
           *   external factors.)
           * mutationMethod:
           *   If non-null, used instead of the property or `setAttribute()` after
           *   initial render.
           * mustUseProperty:
           *   Whether the property must be accessed and mutated as an object property.
           * hasBooleanValue:
           *   Whether the property should be removed when set to a falsey value.
           * hasNumericValue:
           *   Whether the property must be numeric or parse as a numeric and should be
           *   removed when set to a falsey value.
           * hasPositiveNumericValue:
           *   Whether the property must be positive numeric or parse as a positive
           *   numeric and should be removed when set to a falsey value.
           * hasOverloadedBooleanValue:
           *   Whether the property can be used as a flag as well as with a value.
           *   Removed when strictly equal to false; present without a value when
           *   strictly equal to true; present with a value otherwise.
           */
          properties: {},

          /**
           * Checks whether a property name is a writeable attribute.
           * @method
           */
          shouldSetAttribute: function shouldSetAttribute(name, value) {
            if (DOMProperty.isReservedProp(name)) {
              return false;
            }
            if ((name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
              return false;
            }
            if (value === null) {
              return true;
            }
            switch (typeof value === "undefined" ? "undefined" : _typeof4(value)) {
              case 'boolean':
                return DOMProperty.shouldAttributeAcceptBooleanValue(name);
              case 'undefined':
              case 'number':
              case 'string':
              case 'object':
                return true;
              default:
                // function, symbol
                return false;
            }
          },

          getPropertyInfo: function getPropertyInfo(name) {
            return DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
          },
          shouldAttributeAcceptBooleanValue: function shouldAttributeAcceptBooleanValue(name) {
            if (DOMProperty.isReservedProp(name)) {
              return true;
            }
            var propertyInfo = DOMProperty.getPropertyInfo(name);
            if (propertyInfo) {
              return propertyInfo.hasBooleanValue || propertyInfo.hasStringBooleanValue || propertyInfo.hasOverloadedBooleanValue;
            }
            var prefix = name.toLowerCase().slice(0, 5);
            return prefix === 'data-' || prefix === 'aria-';
          },

          /**
           * Checks to see if a property name is within the list of properties
           * reserved for internal React operations. These properties should
           * not be set on an HTML element.
           *
           * @private
           * @param {string} name
           * @return {boolean} If the name is within reserved props
           */
          isReservedProp: function isReservedProp(name) {
            return RESERVED_PROPS.hasOwnProperty(name);
          },

          injection: DOMPropertyInjection
        };

        var DOMProperty_1 = DOMProperty;

        /**
         * Copyright (c) 2015-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactDOMComponentFlags
         */

        var ReactDOMComponentFlags = {
          hasCachedChildNodes: 1 << 0
        };

        var ReactDOMComponentFlags_1 = ReactDOMComponentFlags;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactTypeOfWork
         * 
         */

        var ReactTypeOfWork = {
          IndeterminateComponent: 0, // Before we know whether it is functional or class
          FunctionalComponent: 1,
          ClassComponent: 2,
          HostRoot: 3, // Root of a host tree. Could be nested inside another node.
          HostPortal: 4, // A subtree. Could be an entry point to a different renderer.
          HostComponent: 5,
          HostText: 6,
          CoroutineComponent: 7,
          CoroutineHandlerPhase: 8,
          YieldComponent: 9,
          Fragment: 10
        };

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule HTMLNodeType
         */

        /**
         * HTML nodeType values that represent the type of the node
         */

        var HTMLNodeType = {
          ELEMENT_NODE: 1,
          TEXT_NODE: 3,
          COMMENT_NODE: 8,
          DOCUMENT_NODE: 9,
          DOCUMENT_FRAGMENT_NODE: 11
        };

        var HTMLNodeType_1 = HTMLNodeType;

        var HostComponent = ReactTypeOfWork.HostComponent;
        var HostText = ReactTypeOfWork.HostText;

        var ELEMENT_NODE$1 = HTMLNodeType_1.ELEMENT_NODE;
        var COMMENT_NODE$1 = HTMLNodeType_1.COMMENT_NODE;

        var ATTR_NAME = DOMProperty_1.ID_ATTRIBUTE_NAME;
        var Flags = ReactDOMComponentFlags_1;

        var randomKey = Math.random().toString(36).slice(2);

        var internalInstanceKey = '__reactInternalInstance$' + randomKey;

        var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

        /**
         * Check if a given node should be cached.
         */
        function shouldPrecacheNode(node, nodeID) {
          return node.nodeType === ELEMENT_NODE$1 && node.getAttribute(ATTR_NAME) === '' + nodeID || node.nodeType === COMMENT_NODE$1 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === COMMENT_NODE$1 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
        }

        /**
         * Drill down (through composites and empty components) until we get a host or
         * host text component.
         *
         * This is pretty polymorphic but unavoidable with the current structure we have
         * for `_renderedChildren`.
         */
        function getRenderedHostOrTextFromComponent(component) {
          var rendered;
          while (rendered = component._renderedComponent) {
            component = rendered;
          }
          return component;
        }

        /**
         * Populate `_hostNode` on the rendered host/text component with the given
         * DOM node. The passed `inst` can be a composite.
         */
        function precacheNode(inst, node) {
          var hostInst = getRenderedHostOrTextFromComponent(inst);
          hostInst._hostNode = node;
          node[internalInstanceKey] = hostInst;
        }

        function precacheFiberNode$1(hostInst, node) {
          node[internalInstanceKey] = hostInst;
        }

        function uncacheNode(inst) {
          var node = inst._hostNode;
          if (node) {
            delete node[internalInstanceKey];
            inst._hostNode = null;
          }
        }

        /**
         * Populate `_hostNode` on each child of `inst`, assuming that the children
         * match up with the DOM (element) children of `node`.
         *
         * We cache entire levels at once to avoid an n^2 problem where we access the
         * children of a node sequentially and have to walk from the start to our target
         * node every time.
         *
         * Since we update `_renderedChildren` and the actual DOM at (slightly)
         * different times, we could race here and see a newer `_renderedChildren` than
         * the DOM nodes we see. To avoid this, ReactMultiChild calls
         * `prepareToManageChildren` before we change `_renderedChildren`, at which
         * time the container's child nodes are always cached (until it unmounts).
         */
        function precacheChildNodes(inst, node) {
          if (inst._flags & Flags.hasCachedChildNodes) {
            return;
          }
          var children = inst._renderedChildren;
          var childNode = node.firstChild;
          outer: for (var name in children) {
            if (!children.hasOwnProperty(name)) {
              continue;
            }
            var childInst = children[name];
            var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
            if (childID === 0) {
              // We're currently unmounting this child in ReactMultiChild; skip it.
              continue;
            }
            // We assume the child nodes are in the same order as the child instances.
            for (; childNode !== null; childNode = childNode.nextSibling) {
              if (shouldPrecacheNode(childNode, childID)) {
                precacheNode(childInst, childNode);
                continue outer;
              }
            }
            // We reached the end of the DOM children without finding an ID match.
            invariant(false, 'Unable to find element with ID %s.', childID);
          }
          inst._flags |= Flags.hasCachedChildNodes;
        }

        /**
         * Given a DOM node, return the closest ReactDOMComponent or
         * ReactDOMTextComponent instance ancestor.
         */
        function getClosestInstanceFromNode(node) {
          if (node[internalInstanceKey]) {
            return node[internalInstanceKey];
          }

          // Walk up the tree until we find an ancestor whose instance we have cached.
          var parents = [];
          while (!node[internalInstanceKey]) {
            parents.push(node);
            if (node.parentNode) {
              node = node.parentNode;
            } else {
              // Top of the tree. This node must not be part of a React tree (or is
              // unmounted, potentially).
              return null;
            }
          }

          var closest;
          var inst = node[internalInstanceKey];
          if (inst.tag === HostComponent || inst.tag === HostText) {
            // In Fiber, this will always be the deepest root.
            return inst;
          }
          for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
            closest = inst;
            if (parents.length) {
              precacheChildNodes(inst, node);
            }
          }

          return closest;
        }

        /**
         * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
         * instance, or null if the node was not rendered by this React.
         */
        function getInstanceFromNode(node) {
          var inst = node[internalInstanceKey];
          if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText) {
              return inst;
            } else if (inst._hostNode === node) {
              return inst;
            } else {
              return null;
            }
          }
          inst = getClosestInstanceFromNode(node);
          if (inst != null && inst._hostNode === node) {
            return inst;
          } else {
            return null;
          }
        }

        /**
         * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
         * DOM node.
         */
        function getNodeFromInstance(inst) {
          if (inst.tag === HostComponent || inst.tag === HostText) {
            // In Fiber this, is just the state node right now. We assume it will be
            // a host component or host text.
            return inst.stateNode;
          }

          // Without this first invariant, passing a non-DOM-component triggers the next
          // invariant for a missing parent, which is super confusing.
          !(inst._hostNode !== undefined) ? invariant(false, 'getNodeFromInstance: Invalid argument.') : void 0;

          if (inst._hostNode) {
            return inst._hostNode;
          }

          // Walk up the tree until we find an ancestor whose DOM node we have cached.
          var parents = [];
          while (!inst._hostNode) {
            parents.push(inst);
            !inst._hostParent ? invariant(false, 'React DOM tree root should always have a node reference.') : void 0;
            inst = inst._hostParent;
          }

          // Now parents contains each ancestor that does *not* have a cached native
          // node, and `inst` is the deepest ancestor that does.
          for (; parents.length; inst = parents.pop()) {
            precacheChildNodes(inst, inst._hostNode);
          }

          return inst._hostNode;
        }

        function getFiberCurrentPropsFromNode(node) {
          return node[internalEventHandlersKey] || null;
        }

        function updateFiberProps$1(node, props) {
          node[internalEventHandlersKey] = props;
        }

        var ReactDOMComponentTree = {
          getClosestInstanceFromNode: getClosestInstanceFromNode,
          getInstanceFromNode: getInstanceFromNode,
          getNodeFromInstance: getNodeFromInstance,
          precacheChildNodes: precacheChildNodes,
          precacheNode: precacheNode,
          uncacheNode: uncacheNode,
          precacheFiberNode: precacheFiberNode$1,
          getFiberCurrentPropsFromNode: getFiberCurrentPropsFromNode,
          updateFiberProps: updateFiberProps$1
        };

        var ReactDOMComponentTree_1 = ReactDOMComponentTree;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactInstanceMap
         */

        /**
         * `ReactInstanceMap` maintains a mapping from a public facing stateful
         * instance (key) and the internal representation (value). This allows public
         * methods to accept the user facing instance as an argument and map them back
         * to internal methods.
         */

        // TODO: Replace this with ES6: var ReactInstanceMap = new Map();

        var ReactInstanceMap = {
          /**
           * This API should be called `delete` but we'd have to make sure to always
           * transform these to strings for IE support. When this transform is fully
           * supported we can rename it.
           */
          remove: function remove(key) {
            key._reactInternalFiber = undefined;
          },

          get: function get(key) {
            return key._reactInternalFiber;
          },

          has: function has(key) {
            return key._reactInternalFiber !== undefined;
          },

          set: function set(key, value) {
            key._reactInternalFiber = value;
          }
        };

        var ReactInstanceMap_1 = ReactInstanceMap;

        var ReactInternals = react.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

        var ReactGlobalSharedState = {
          ReactCurrentOwner: ReactInternals.ReactCurrentOwner
        };

        {
          _assign(ReactGlobalSharedState, {
            ReactComponentTreeHook: ReactInternals.ReactComponentTreeHook,
            ReactDebugCurrentFrame: ReactInternals.ReactDebugCurrentFrame
          });
        }

        var ReactGlobalSharedState_1 = ReactGlobalSharedState;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule getComponentName
         * 
         */

        function getComponentName(instanceOrFiber) {
          if (typeof instanceOrFiber.getName === 'function') {
            // Stack reconciler
            var instance = instanceOrFiber;
            return instance.getName();
          }
          if (typeof instanceOrFiber.tag === 'number') {
            // Fiber reconciler
            var fiber = instanceOrFiber;
            var type = fiber.type;

            if (typeof type === 'string') {
              return type;
            }
            if (typeof type === 'function') {
              return type.displayName || type.name;
            }
          }
          return null;
        }

        var getComponentName_1 = getComponentName;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactTypeOfSideEffect
         * 
         */

        var ReactTypeOfSideEffect = {
          // Don't change these two values:
          NoEffect: 0, //           0b00000000
          PerformedWork: 1, //      0b00000001
          // You can change the rest (and add more).
          Placement: 2, //          0b00000010
          Update: 4, //             0b00000100
          PlacementAndUpdate: 6, // 0b00000110
          Deletion: 8, //           0b00001000
          ContentReset: 16, //      0b00010000
          Callback: 32, //          0b00100000
          Err: 64, //               0b01000000
          Ref: 128 };

        var ReactCurrentOwner = ReactGlobalSharedState_1.ReactCurrentOwner;

        {
          var warning$1 = require$$0;
        }

        var ClassComponent = ReactTypeOfWork.ClassComponent;
        var HostComponent$1 = ReactTypeOfWork.HostComponent;
        var HostRoot$1 = ReactTypeOfWork.HostRoot;
        var HostPortal = ReactTypeOfWork.HostPortal;
        var HostText$1 = ReactTypeOfWork.HostText;

        var NoEffect = ReactTypeOfSideEffect.NoEffect;
        var Placement = ReactTypeOfSideEffect.Placement;

        var MOUNTING = 1;
        var MOUNTED = 2;
        var UNMOUNTED = 3;

        function isFiberMountedImpl(fiber) {
          var node = fiber;
          if (!fiber.alternate) {
            // If there is no alternate, this might be a new tree that isn't inserted
            // yet. If it is, then it will have a pending insertion effect on it.
            if ((node.effectTag & Placement) !== NoEffect) {
              return MOUNTING;
            }
            while (node['return']) {
              node = node['return'];
              if ((node.effectTag & Placement) !== NoEffect) {
                return MOUNTING;
              }
            }
          } else {
            while (node['return']) {
              node = node['return'];
            }
          }
          if (node.tag === HostRoot$1) {
            // TODO: Check if this was a nested HostRoot when used with
            // renderContainerIntoSubtree.
            return MOUNTED;
          }
          // If we didn't hit the root, that means that we're in an disconnected tree
          // that has been unmounted.
          return UNMOUNTED;
        }
        var isFiberMounted = function isFiberMounted(fiber) {
          return isFiberMountedImpl(fiber) === MOUNTED;
        };

        var isMounted = function isMounted(component) {
          {
            var owner = ReactCurrentOwner.current;
            if (owner !== null && owner.tag === ClassComponent) {
              var ownerFiber = owner;
              var instance = ownerFiber.stateNode;
              warning$1(instance._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName_1(ownerFiber) || 'A component');
              instance._warnedAboutRefsInRender = true;
            }
          }

          var fiber = ReactInstanceMap_1.get(component);
          if (!fiber) {
            return false;
          }
          return isFiberMountedImpl(fiber) === MOUNTED;
        };

        function assertIsMounted(fiber) {
          !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
        }

        function findCurrentFiberUsingSlowPath(fiber) {
          var alternate = fiber.alternate;
          if (!alternate) {
            // If there is no alternate, then we only need to check if it is mounted.
            var state = isFiberMountedImpl(fiber);
            !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
            if (state === MOUNTING) {
              return null;
            }
            return fiber;
          }
          // If we have two possible branches, we'll walk backwards up to the root
          // to see what path the root points to. On the way we may hit one of the
          // special cases and we'll deal with them.
          var a = fiber;
          var b = alternate;
          while (true) {
            var parentA = a['return'];
            var parentB = parentA ? parentA.alternate : null;
            if (!parentA || !parentB) {
              // We're at the root.
              break;
            }

            // If both copies of the parent fiber point to the same child, we can
            // assume that the child is current. This happens when we bailout on low
            // priority: the bailed out fiber's child reuses the current child.
            if (parentA.child === parentB.child) {
              var child = parentA.child;
              while (child) {
                if (child === a) {
                  // We've determined that A is the current branch.
                  assertIsMounted(parentA);
                  return fiber;
                }
                if (child === b) {
                  // We've determined that B is the current branch.
                  assertIsMounted(parentA);
                  return alternate;
                }
                child = child.sibling;
              }
              // We should never have an alternate for any mounting node. So the only
              // way this could possibly happen is if this was unmounted, if at all.
              invariant(false, 'Unable to find node on an unmounted component.');
            }

            if (a['return'] !== b['return']) {
              // The return pointer of A and the return pointer of B point to different
              // fibers. We assume that return pointers never criss-cross, so A must
              // belong to the child set of A.return, and B must belong to the child
              // set of B.return.
              a = parentA;
              b = parentB;
            } else {
              // The return pointers point to the same fiber. We'll have to use the
              // default, slow path: scan the child sets of each parent alternate to see
              // which child belongs to which set.
              //
              // Search parent A's child set
              var didFindChild = false;
              var _child = parentA.child;
              while (_child) {
                if (_child === a) {
                  didFindChild = true;
                  a = parentA;
                  b = parentB;
                  break;
                }
                if (_child === b) {
                  didFindChild = true;
                  b = parentA;
                  a = parentB;
                  break;
                }
                _child = _child.sibling;
              }
              if (!didFindChild) {
                // Search parent B's child set
                _child = parentB.child;
                while (_child) {
                  if (_child === a) {
                    didFindChild = true;
                    a = parentB;
                    b = parentA;
                    break;
                  }
                  if (_child === b) {
                    didFindChild = true;
                    b = parentB;
                    a = parentA;
                    break;
                  }
                  _child = _child.sibling;
                }
                !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
              }
            }

            !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          }
          // If the root is not a host container, we're in a disconnected tree. I.e.
          // unmounted.
          !(a.tag === HostRoot$1) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
          if (a.stateNode.current === a) {
            // We've determined that A is the current branch.
            return fiber;
          }
          // Otherwise B has to be current branch.
          return alternate;
        }
        var findCurrentFiberUsingSlowPath_1 = findCurrentFiberUsingSlowPath;

        var findCurrentHostFiber = function findCurrentHostFiber(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          if (!currentParent) {
            return null;
          }

          // Next we'll drill down this component to find the first HostComponent/Text.
          var node = currentParent;
          while (true) {
            if (node.tag === HostComponent$1 || node.tag === HostText$1) {
              return node;
            } else if (node.child) {
              node.child['return'] = node;
              node = node.child;
              continue;
            }
            if (node === currentParent) {
              return null;
            }
            while (!node.sibling) {
              if (!node['return'] || node['return'] === currentParent) {
                return null;
              }
              node = node['return'];
            }
            node.sibling['return'] = node['return'];
            node = node.sibling;
          }
          // Flow needs the return null here, but ESLint complains about it.
          // eslint-disable-next-line no-unreachable
          return null;
        };

        var findCurrentHostFiberWithNoPortals = function findCurrentHostFiberWithNoPortals(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          if (!currentParent) {
            return null;
          }

          // Next we'll drill down this component to find the first HostComponent/Text.
          var node = currentParent;
          while (true) {
            if (node.tag === HostComponent$1 || node.tag === HostText$1) {
              return node;
            } else if (node.child && node.tag !== HostPortal) {
              node.child['return'] = node;
              node = node.child;
              continue;
            }
            if (node === currentParent) {
              return null;
            }
            while (!node.sibling) {
              if (!node['return'] || node['return'] === currentParent) {
                return null;
              }
              node = node['return'];
            }
            node.sibling['return'] = node['return'];
            node = node.sibling;
          }
          // Flow needs the return null here, but ESLint complains about it.
          // eslint-disable-next-line no-unreachable
          return null;
        };

        var ReactFiberTreeReflection = {
          isFiberMounted: isFiberMounted,
          isMounted: isMounted,
          findCurrentFiberUsingSlowPath: findCurrentFiberUsingSlowPath_1,
          findCurrentHostFiber: findCurrentHostFiber,
          findCurrentHostFiberWithNoPortals: findCurrentHostFiberWithNoPortals
        };

        var ReactErrorUtils = {
          // Used by Fiber to simulate a try-catch.
          _caughtError: null,
          _hasCaughtError: false,

          // Used by event system to capture/rethrow the first error.
          _rethrowError: null,
          _hasRethrowError: false,

          injection: {
            injectErrorUtils: function injectErrorUtils(injectedErrorUtils) {
              !(typeof injectedErrorUtils.invokeGuardedCallback === 'function') ? invariant(false, 'Injected invokeGuardedCallback() must be a function.') : void 0;
              _invokeGuardedCallback = injectedErrorUtils.invokeGuardedCallback;
            }
          },

          /**
           * Call a function while guarding against errors that happens within it.
           * Returns an error if it throws, otherwise null.
           *
           * In production, this is implemented using a try-catch. The reason we don't
           * use a try-catch directly is so that we can swap out a different
           * implementation in DEV mode.
           *
           * @param {String} name of the guard to use for logging or debugging
           * @param {Function} func The function to invoke
           * @param {*} context The context to use when calling the function
           * @param {...*} args Arguments for function
           */
          invokeGuardedCallback: function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
            _invokeGuardedCallback.apply(ReactErrorUtils, arguments);
          },

          /**
           * Same as invokeGuardedCallback, but instead of returning an error, it stores
           * it in a global so it can be rethrown by `rethrowCaughtError` later.
           * TODO: See if _caughtError and _rethrowError can be unified.
           *
           * @param {String} name of the guard to use for logging or debugging
           * @param {Function} func The function to invoke
           * @param {*} context The context to use when calling the function
           * @param {...*} args Arguments for function
           */
          invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
            ReactErrorUtils.invokeGuardedCallback.apply(this, arguments);
            if (ReactErrorUtils.hasCaughtError()) {
              var error = ReactErrorUtils.clearCaughtError();
              if (!ReactErrorUtils._hasRethrowError) {
                ReactErrorUtils._hasRethrowError = true;
                ReactErrorUtils._rethrowError = error;
              }
            }
          },

          /**
           * During execution of guarded functions we will capture the first error which
           * we will rethrow to be handled by the top level error handler.
           */
          rethrowCaughtError: function rethrowCaughtError() {
            return _rethrowCaughtError.apply(ReactErrorUtils, arguments);
          },

          hasCaughtError: function hasCaughtError() {
            return ReactErrorUtils._hasCaughtError;
          },

          clearCaughtError: function clearCaughtError() {
            if (ReactErrorUtils._hasCaughtError) {
              var error = ReactErrorUtils._caughtError;
              ReactErrorUtils._caughtError = null;
              ReactErrorUtils._hasCaughtError = false;
              return error;
            } else {
              invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
            }
          }
        };

        var _invokeGuardedCallback = function _invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
          ReactErrorUtils._hasCaughtError = false;
          ReactErrorUtils._caughtError = null;
          var funcArgs = Array.prototype.slice.call(arguments, 3);
          try {
            func.apply(context, funcArgs);
          } catch (error) {
            ReactErrorUtils._caughtError = error;
            ReactErrorUtils._hasCaughtError = true;
          }
        };

        {
          // In DEV mode, we swap out invokeGuardedCallback for a special version
          // that plays more nicely with the browser's DevTools. The idea is to preserve
          // "Pause on exceptions" behavior. Because React wraps all user-provided
          // functions in invokeGuardedCallback, and the production version of
          // invokeGuardedCallback uses a try-catch, all user exceptions are treated
          // like caught exceptions, and the DevTools won't pause unless the developer
          // takes the extra step of enabling pause on caught exceptions. This is
          // untintuitive, though, because even though React has caught the error, from
          // the developer's perspective, the error is uncaught.
          //
          // To preserve the expected "Pause on exceptions" behavior, we don't use a
          // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
          // DOM node, and call the user-provided callback from inside an event handler
          // for that fake event. If the callback throws, the error is "captured" using
          // a global event handler. But because the error happens in a different
          // event loop context, it does not interrupt the normal program flow.
          // Effectively, this gives us try-catch behavior without actually using
          // try-catch. Neat!

          // Check that the browser supports the APIs we need to implement our special
          // DEV version of invokeGuardedCallback
          if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
            var fakeNode = document.createElement('react');

            var invokeGuardedCallbackDev = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
              // Keeps track of whether the user-provided callback threw an error. We
              // set this to true at the beginning, then set it to false right after
              // calling the function. If the function errors, `didError` will never be
              // set to false. This strategy works even if the browser is flaky and
              // fails to call our global error handler, because it doesn't rely on
              // the error event at all.
              var didError = true;

              // Create an event handler for our fake event. We will synchronously
              // dispatch our fake event using `dispatchEvent`. Inside the handler, we
              // call the user-provided callback.
              var funcArgs = Array.prototype.slice.call(arguments, 3);
              function callCallback() {
                // We immediately remove the callback from event listeners so that
                // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
                // nested call would trigger the fake event handlers of any call higher
                // in the stack.
                fakeNode.removeEventListener(evtType, callCallback, false);
                func.apply(context, funcArgs);
                didError = false;
              }

              // Create a global error event handler. We use this to capture the value
              // that was thrown. It's possible that this error handler will fire more
              // than once; for example, if non-React code also calls `dispatchEvent`
              // and a handler for that event throws. We should be resilient to most of
              // those cases. Even if our error event handler fires more than once, the
              // last error event is always used. If the callback actually does error,
              // we know that the last error event is the correct one, because it's not
              // possible for anything else to have happened in between our callback
              // erroring and the code that follows the `dispatchEvent` call below. If
              // the callback doesn't error, but the error event was fired, we know to
              // ignore it because `didError` will be false, as described above.
              var error = void 0;
              // Use this to track whether the error event is ever called.
              var didSetError = false;
              var isCrossOriginError = false;

              function onError(event) {
                error = event.error;
                didSetError = true;
                if (error === null && event.colno === 0 && event.lineno === 0) {
                  isCrossOriginError = true;
                }
              }

              // Create a fake event type.
              var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

              // Attach our event handlers
              window.addEventListener('error', onError);
              fakeNode.addEventListener(evtType, callCallback, false);

              // Synchronously dispatch our fake event. If the user-provided function
              // errors, it will trigger our global error handler.
              var evt = document.createEvent('Event');
              evt.initEvent(evtType, false, false);
              fakeNode.dispatchEvent(evt);

              if (didError) {
                if (!didSetError) {
                  // The callback errored, but the error event never fired.
                  error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
                } else if (isCrossOriginError) {
                  error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
                }
                ReactErrorUtils._hasCaughtError = true;
                ReactErrorUtils._caughtError = error;
              } else {
                ReactErrorUtils._hasCaughtError = false;
                ReactErrorUtils._caughtError = null;
              }

              // Remove our event listeners
              window.removeEventListener('error', onError);
            };

            _invokeGuardedCallback = invokeGuardedCallbackDev;
          }
        }

        var _rethrowCaughtError = function _rethrowCaughtError() {
          if (ReactErrorUtils._hasRethrowError) {
            var error = ReactErrorUtils._rethrowError;
            ReactErrorUtils._rethrowError = null;
            ReactErrorUtils._hasRethrowError = false;
            throw error;
          }
        };

        var ReactErrorUtils_1 = ReactErrorUtils;

        {
          var warning$2 = require$$0;
        }

        /**
         * Injected dependencies:
         */

        /**
         * - `ComponentTree`: [required] Module that can convert between React instances
         *   and actual node references.
         */
        var ComponentTree;
        var injection = {
          injectComponentTree: function injectComponentTree(Injected) {
            ComponentTree = Injected;
            {
              warning$2(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.');
            }
          }
        };

        function isEndish(topLevelType) {
          return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
        }

        function isMoveish(topLevelType) {
          return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
        }
        function isStartish(topLevelType) {
          return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
        }

        var validateEventDispatches;
        {
          validateEventDispatches = function validateEventDispatches(event) {
            var dispatchListeners = event._dispatchListeners;
            var dispatchInstances = event._dispatchInstances;

            var listenersIsArr = Array.isArray(dispatchListeners);
            var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

            var instancesIsArr = Array.isArray(dispatchInstances);
            var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

            warning$2(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.');
          };
        }

        /**
         * Dispatch the event to the listener.
         * @param {SyntheticEvent} event SyntheticEvent to handle
         * @param {boolean} simulated If the event is simulated (changes exn behavior)
         * @param {function} listener Application-level callback
         * @param {*} inst Internal component instance
         */
        function executeDispatch(event, simulated, listener, inst) {
          var type = event.type || 'unknown-event';
          event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
          ReactErrorUtils_1.invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
          event.currentTarget = null;
        }

        /**
         * Standard/simple iteration through an event's collected dispatches.
         */
        function executeDispatchesInOrder(event, simulated) {
          var dispatchListeners = event._dispatchListeners;
          var dispatchInstances = event._dispatchInstances;
          {
            validateEventDispatches(event);
          }
          if (Array.isArray(dispatchListeners)) {
            for (var i = 0; i < dispatchListeners.length; i++) {
              if (event.isPropagationStopped()) {
                break;
              }
              // Listeners and Instances are two parallel arrays that are always in sync.
              executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
            }
          } else if (dispatchListeners) {
            executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
          }
          event._dispatchListeners = null;
          event._dispatchInstances = null;
        }

        /**
         * Standard/simple iteration through an event's collected dispatches, but stops
         * at the first dispatch execution returning true, and returns that id.
         *
         * @return {?string} id of the first dispatch execution who's listener returns
         * true, or null if no listener returned true.
         */
        function executeDispatchesInOrderStopAtTrueImpl(event) {
          var dispatchListeners = event._dispatchListeners;
          var dispatchInstances = event._dispatchInstances;
          {
            validateEventDispatches(event);
          }
          if (Array.isArray(dispatchListeners)) {
            for (var i = 0; i < dispatchListeners.length; i++) {
              if (event.isPropagationStopped()) {
                break;
              }
              // Listeners and Instances are two parallel arrays that are always in sync.
              if (dispatchListeners[i](event, dispatchInstances[i])) {
                return dispatchInstances[i];
              }
            }
          } else if (dispatchListeners) {
            if (dispatchListeners(event, dispatchInstances)) {
              return dispatchInstances;
            }
          }
          return null;
        }

        /**
         * @see executeDispatchesInOrderStopAtTrueImpl
         */
        function executeDispatchesInOrderStopAtTrue(event) {
          var ret = executeDispatchesInOrderStopAtTrueImpl(event);
          event._dispatchInstances = null;
          event._dispatchListeners = null;
          return ret;
        }

        /**
         * Execution of a "direct" dispatch - there must be at most one dispatch
         * accumulated on the event or it is considered an error. It doesn't really make
         * sense for an event with multiple dispatches (bubbled) to keep track of the
         * return values at each dispatch execution, but it does tend to make sense when
         * dealing with "direct" dispatches.
         *
         * @return {*} The return value of executing the single dispatch.
         */
        function executeDirectDispatch(event) {
          {
            validateEventDispatches(event);
          }
          var dispatchListener = event._dispatchListeners;
          var dispatchInstance = event._dispatchInstances;
          !!Array.isArray(dispatchListener) ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : void 0;
          event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
          var res = dispatchListener ? dispatchListener(event) : null;
          event.currentTarget = null;
          event._dispatchListeners = null;
          event._dispatchInstances = null;
          return res;
        }

        /**
         * @param {SyntheticEvent} event
         * @return {boolean} True iff number of dispatches accumulated is greater than 0.
         */
        function hasDispatches(event) {
          return !!event._dispatchListeners;
        }

        /**
         * General utilities that are useful in creating custom Event Plugins.
         */
        var EventPluginUtils = {
          isEndish: isEndish,
          isMoveish: isMoveish,
          isStartish: isStartish,

          executeDirectDispatch: executeDirectDispatch,
          executeDispatchesInOrder: executeDispatchesInOrder,
          executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
          hasDispatches: hasDispatches,

          getFiberCurrentPropsFromNode: function getFiberCurrentPropsFromNode(node) {
            return ComponentTree.getFiberCurrentPropsFromNode(node);
          },
          getInstanceFromNode: function getInstanceFromNode(node) {
            return ComponentTree.getInstanceFromNode(node);
          },
          getNodeFromInstance: function getNodeFromInstance(node) {
            return ComponentTree.getNodeFromInstance(node);
          },

          injection: injection
        };

        var EventPluginUtils_1 = EventPluginUtils;

        // Use to restore controlled state after a change event has fired.

        var fiberHostComponent = null;

        var ReactControlledComponentInjection = {
          injectFiberControlledHostComponent: function injectFiberControlledHostComponent(hostComponentImpl) {
            // The fiber implementation doesn't use dynamic dispatch so we need to
            // inject the implementation.
            fiberHostComponent = hostComponentImpl;
          }
        };

        var restoreTarget = null;
        var restoreQueue = null;

        function restoreStateOfTarget(target) {
          // We perform this translation at the end of the event loop so that we
          // always receive the correct fiber here
          var internalInstance = EventPluginUtils_1.getInstanceFromNode(target);
          if (!internalInstance) {
            // Unmounted
            return;
          }
          if (typeof internalInstance.tag === 'number') {
            !(fiberHostComponent && typeof fiberHostComponent.restoreControlledState === 'function') ? invariant(false, 'Fiber needs to be injected to handle a fiber target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(internalInstance.stateNode);
            fiberHostComponent.restoreControlledState(internalInstance.stateNode, internalInstance.type, props);
            return;
          }
          !(typeof internalInstance.restoreControlledState === 'function') ? invariant(false, 'The internal instance must be a React host component. This error is likely caused by a bug in React. Please file an issue.') : void 0;
          // If it is not a Fiber, we can just use dynamic dispatch.
          internalInstance.restoreControlledState();
        }

        var ReactControlledComponent = {
          injection: ReactControlledComponentInjection,

          enqueueStateRestore: function enqueueStateRestore(target) {
            if (restoreTarget) {
              if (restoreQueue) {
                restoreQueue.push(target);
              } else {
                restoreQueue = [target];
              }
            } else {
              restoreTarget = target;
            }
          },
          restoreStateIfNeeded: function restoreStateIfNeeded() {
            if (!restoreTarget) {
              return;
            }
            var target = restoreTarget;
            var queuedTargets = restoreQueue;
            restoreTarget = null;
            restoreQueue = null;

            restoreStateOfTarget(target);
            if (queuedTargets) {
              for (var i = 0; i < queuedTargets.length; i++) {
                restoreStateOfTarget(queuedTargets[i]);
              }
            }
          }
        };

        var ReactControlledComponent_1 = ReactControlledComponent;

        // Used as a way to call batchedUpdates when we don't know if we're in a Fiber
        // or Stack context. Such as when we're dispatching events or if third party
        // libraries need to call batchedUpdates. Eventually, this API will go away when
        // everything is batched by default. We'll then have a similar API to opt-out of
        // scheduled work and instead do synchronous work.

        // Defaults
        var stackBatchedUpdates = function stackBatchedUpdates(fn, a, b, c, d, e) {
          return fn(a, b, c, d, e);
        };
        var fiberBatchedUpdates = function fiberBatchedUpdates(fn, bookkeeping) {
          return fn(bookkeeping);
        };

        function performFiberBatchedUpdates(fn, bookkeeping) {
          // If we have Fiber loaded, we need to wrap this in a batching call so that
          // Fiber can apply its default priority for this call.
          return fiberBatchedUpdates(fn, bookkeeping);
        }
        function batchedUpdates(fn, bookkeeping) {
          // We first perform work with the stack batching strategy, by passing our
          // indirection to it.
          return stackBatchedUpdates(performFiberBatchedUpdates, fn, bookkeeping);
        }

        var isNestingBatched = false;
        function batchedUpdatesWithControlledComponents(fn, bookkeeping) {
          if (isNestingBatched) {
            // If we are currently inside another batch, we need to wait until it
            // fully completes before restoring state. Therefore, we add the target to
            // a queue of work.
            return batchedUpdates(fn, bookkeeping);
          }
          isNestingBatched = true;
          try {
            return batchedUpdates(fn, bookkeeping);
          } finally {
            // Here we wait until all updates have propagated, which is important
            // when using controlled components within layers:
            // https://github.com/facebook/react/issues/1698
            // Then we restore state of any controlled component.
            isNestingBatched = false;
            ReactControlledComponent_1.restoreStateIfNeeded();
          }
        }

        var ReactGenericBatchingInjection = {
          injectStackBatchedUpdates: function injectStackBatchedUpdates(_batchedUpdates) {
            stackBatchedUpdates = _batchedUpdates;
          },
          injectFiberBatchedUpdates: function injectFiberBatchedUpdates(_batchedUpdates) {
            fiberBatchedUpdates = _batchedUpdates;
          }
        };

        var ReactGenericBatching = {
          batchedUpdates: batchedUpdatesWithControlledComponents,
          injection: ReactGenericBatchingInjection
        };

        var ReactGenericBatching_1 = ReactGenericBatching;

        var TEXT_NODE$1 = HTMLNodeType_1.TEXT_NODE;

        /**
         * Gets the target node from a native browser event by accounting for
         * inconsistencies in browser DOM APIs.
         *
         * @param {object} nativeEvent Native browser event.
         * @return {DOMEventTarget} Target node.
         */

        function getEventTarget(nativeEvent) {
          var target = nativeEvent.target || nativeEvent.srcElement || window;

          // Normalize SVG <use> element events #4963
          if (target.correspondingUseElement) {
            target = target.correspondingUseElement;
          }

          // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
          // @see http://www.quirksmode.org/js/events_properties.html
          return target.nodeType === TEXT_NODE$1 ? target.parentNode : target;
        }

        var getEventTarget_1 = getEventTarget;

        var HostRoot = ReactTypeOfWork.HostRoot;

        var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
        var callbackBookkeepingPool = [];

        /**
         * Find the deepest React component completely containing the root of the
         * passed-in instance (for use when entire React trees are nested within each
         * other). If React trees are not nested, returns null.
         */
        function findRootContainerNode(inst) {
          // TODO: It may be a good idea to cache this to prevent unnecessary DOM
          // traversal, but caching is difficult to do correctly without using a
          // mutation observer to listen for all DOM changes.
          if (typeof inst.tag === 'number') {
            while (inst['return']) {
              inst = inst['return'];
            }
            if (inst.tag !== HostRoot) {
              // This can happen if we're in a detached tree.
              return null;
            }
            return inst.stateNode.containerInfo;
          } else {
            while (inst._hostParent) {
              inst = inst._hostParent;
            }
            var rootNode = ReactDOMComponentTree_1.getNodeFromInstance(inst);
            return rootNode.parentNode;
          }
        }

        // Used to store ancestor hierarchy in top level callback
        function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
          if (callbackBookkeepingPool.length) {
            var instance = callbackBookkeepingPool.pop();
            instance.topLevelType = topLevelType;
            instance.nativeEvent = nativeEvent;
            instance.targetInst = targetInst;
            return instance;
          }
          return {
            topLevelType: topLevelType,
            nativeEvent: nativeEvent,
            targetInst: targetInst,
            ancestors: []
          };
        }

        function releaseTopLevelCallbackBookKeeping(instance) {
          instance.topLevelType = null;
          instance.nativeEvent = null;
          instance.targetInst = null;
          instance.ancestors.length = 0;
          if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
            callbackBookkeepingPool.push(instance);
          }
        }

        function handleTopLevelImpl(bookKeeping) {
          var targetInst = bookKeeping.targetInst;

          // Loop through the hierarchy, in case there's any nested components.
          // It's important that we build the array of ancestors before calling any
          // event handlers, because event handlers can modify the DOM, leading to
          // inconsistencies with ReactMount's node cache. See #1105.
          var ancestor = targetInst;
          do {
            if (!ancestor) {
              bookKeeping.ancestors.push(ancestor);
              break;
            }
            var root = findRootContainerNode(ancestor);
            if (!root) {
              break;
            }
            bookKeeping.ancestors.push(ancestor);
            ancestor = ReactDOMComponentTree_1.getClosestInstanceFromNode(root);
          } while (ancestor);

          for (var i = 0; i < bookKeeping.ancestors.length; i++) {
            targetInst = bookKeeping.ancestors[i];
            ReactDOMEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget_1(bookKeeping.nativeEvent));
          }
        }

        var ReactDOMEventListener = {
          _enabled: true,
          _handleTopLevel: null,

          setHandleTopLevel: function setHandleTopLevel(handleTopLevel) {
            ReactDOMEventListener._handleTopLevel = handleTopLevel;
          },

          setEnabled: function setEnabled(enabled) {
            ReactDOMEventListener._enabled = !!enabled;
          },

          isEnabled: function isEnabled() {
            return ReactDOMEventListener._enabled;
          },

          /**
           * Traps top-level events by using event bubbling.
           *
           * @param {string} topLevelType Record from `BrowserEventConstants`.
           * @param {string} handlerBaseName Event name (e.g. "click").
           * @param {object} element Element on which to attach listener.
           * @return {?object} An object with a remove function which will forcefully
           *                  remove the listener.
           * @internal
           */
          trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, element) {
            if (!element) {
              return null;
            }
            return EventListener.listen(element, handlerBaseName, ReactDOMEventListener.dispatchEvent.bind(null, topLevelType));
          },

          /**
           * Traps a top-level event by using event capturing.
           *
           * @param {string} topLevelType Record from `BrowserEventConstants`.
           * @param {string} handlerBaseName Event name (e.g. "click").
           * @param {object} element Element on which to attach listener.
           * @return {?object} An object with a remove function which will forcefully
           *                  remove the listener.
           * @internal
           */
          trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, element) {
            if (!element) {
              return null;
            }
            return EventListener.capture(element, handlerBaseName, ReactDOMEventListener.dispatchEvent.bind(null, topLevelType));
          },

          dispatchEvent: function dispatchEvent(topLevelType, nativeEvent) {
            if (!ReactDOMEventListener._enabled) {
              return;
            }

            var nativeEventTarget = getEventTarget_1(nativeEvent);
            var targetInst = ReactDOMComponentTree_1.getClosestInstanceFromNode(nativeEventTarget);
            if (targetInst !== null && typeof targetInst.tag === 'number' && !ReactFiberTreeReflection.isFiberMounted(targetInst)) {
              // If we get an event (ex: img onload) before committing that
              // component's mount, ignore it for now (that is, treat it as if it was an
              // event on a non-React tree). We might also consider queueing events and
              // dispatching them after the mount.
              targetInst = null;
            }

            var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

            try {
              // Event queue being processed in the same cycle allows
              // `preventDefault`.
              ReactGenericBatching_1.batchedUpdates(handleTopLevelImpl, bookKeeping);
            } finally {
              releaseTopLevelCallbackBookKeeping(bookKeeping);
            }
          }
        };

        var ReactDOMEventListener_1 = ReactDOMEventListener;

        /**
         * Accumulates items that must not be null or undefined into the first one. This
         * is used to conserve memory by avoiding array allocations, and thus sacrifices
         * API cleanness. Since `current` can be null before being passed in and not
         * null after this function, make sure to assign it back to `current`:
         *
         * `a = accumulateInto(a, b);`
         *
         * This API should be sparingly used. Try `accumulate` for something cleaner.
         *
         * @return {*|array<*>} An accumulation of items.
         */

        function accumulateInto(current, next) {
          !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

          if (current == null) {
            return next;
          }

          // Both are not empty. Warning: Never call x.concat(y) when you are not
          // certain that x is an Array (x could be a string with concat method).
          if (Array.isArray(current)) {
            if (Array.isArray(next)) {
              current.push.apply(current, next);
              return current;
            }
            current.push(next);
            return current;
          }

          if (Array.isArray(next)) {
            // A bit too dangerous to mutate `next`.
            return [current].concat(next);
          }

          return [current, next];
        }

        var accumulateInto_1 = accumulateInto;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule forEachAccumulated
         * 
         */

        /**
         * @param {array} arr an "accumulation" of items which is either an Array or
         * a single item. Useful when paired with the `accumulate` module. This is a
         * simple utility that allows us to reason about a collection of items, but
         * handling the case when there is exactly one item (and we do not need to
         * allocate an array).
         * @param {function} cb Callback invoked with each element or a collection.
         * @param {?} [scope] Scope used as `this` in a callback.
         */

        function forEachAccumulated(arr, cb, scope) {
          if (Array.isArray(arr)) {
            arr.forEach(cb, scope);
          } else if (arr) {
            cb.call(scope, arr);
          }
        }

        var forEachAccumulated_1 = forEachAccumulated;

        /**
         * Internal queue of events that have accumulated their dispatches and are
         * waiting to have their dispatches executed.
         */
        var eventQueue = null;

        /**
         * Dispatches an event and releases it back into the pool, unless persistent.
         *
         * @param {?object} event Synthetic event to be dispatched.
         * @param {boolean} simulated If the event is simulated (changes exn behavior)
         * @private
         */
        var executeDispatchesAndRelease = function executeDispatchesAndRelease(event, simulated) {
          if (event) {
            EventPluginUtils_1.executeDispatchesInOrder(event, simulated);

            if (!event.isPersistent()) {
              event.constructor.release(event);
            }
          }
        };
        var executeDispatchesAndReleaseSimulated = function executeDispatchesAndReleaseSimulated(e) {
          return executeDispatchesAndRelease(e, true);
        };
        var executeDispatchesAndReleaseTopLevel = function executeDispatchesAndReleaseTopLevel(e) {
          return executeDispatchesAndRelease(e, false);
        };

        function isInteractive(tag) {
          return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
        }

        function shouldPreventMouseEvent(name, type, props) {
          switch (name) {
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
              return !!(props.disabled && isInteractive(type));
            default:
              return false;
          }
        }

        /**
         * This is a unified interface for event plugins to be installed and configured.
         *
         * Event plugins can implement the following properties:
         *
         *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
         *     Required. When a top-level event is fired, this method is expected to
         *     extract synthetic events that will in turn be queued and dispatched.
         *
         *   `eventTypes` {object}
         *     Optional, plugins that fire events must publish a mapping of registration
         *     names that are used to register listeners. Values of this mapping must
         *     be objects that contain `registrationName` or `phasedRegistrationNames`.
         *
         *   `executeDispatch` {function(object, function, string)}
         *     Optional, allows plugins to override how an event gets dispatched. By
         *     default, the listener is simply invoked.
         *
         * Each plugin that is injected into `EventsPluginHub` is immediately operable.
         *
         * @public
         */
        var EventPluginHub = {
          /**
           * Methods for injecting dependencies.
           */
          injection: {
            /**
             * @param {array} InjectedEventPluginOrder
             * @public
             */
            injectEventPluginOrder: EventPluginRegistry_1.injectEventPluginOrder,

            /**
             * @param {object} injectedNamesToPlugins Map from names to plugin modules.
             */
            injectEventPluginsByName: EventPluginRegistry_1.injectEventPluginsByName
          },

          /**
           * @param {object} inst The instance, which is the source of events.
           * @param {string} registrationName Name of listener (e.g. `onClick`).
           * @return {?function} The stored callback.
           */
          getListener: function getListener(inst, registrationName) {
            var listener;

            // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
            // live here; needs to be moved to a better place soon
            if (typeof inst.tag === 'number') {
              var stateNode = inst.stateNode;
              if (!stateNode) {
                // Work in progress (ex: onload events in incremental mode).
                return null;
              }
              var props = EventPluginUtils_1.getFiberCurrentPropsFromNode(stateNode);
              if (!props) {
                // Work in progress.
                return null;
              }
              listener = props[registrationName];
              if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
                return null;
              }
            } else {
              var currentElement = inst._currentElement;
              if (typeof currentElement === 'string' || typeof currentElement === 'number') {
                // Text node, let it bubble through.
                return null;
              }
              if (!inst._rootNodeID) {
                // If the instance is already unmounted, we have no listeners.
                return null;
              }
              var _props = currentElement.props;
              listener = _props[registrationName];
              if (shouldPreventMouseEvent(registrationName, currentElement.type, _props)) {
                return null;
              }
            }

            !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener === "undefined" ? "undefined" : _typeof4(listener)) : void 0;
            return listener;
          },

          /**
           * Allows registered plugins an opportunity to extract events from top-level
           * native browser events.
           *
           * @return {*} An accumulation of synthetic events.
           * @internal
           */
          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var events;
            var plugins = EventPluginRegistry_1.plugins;
            for (var i = 0; i < plugins.length; i++) {
              // Not every plugin in the ordering may be loaded at runtime.
              var possiblePlugin = plugins[i];
              if (possiblePlugin) {
                var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
                if (extractedEvents) {
                  events = accumulateInto_1(events, extractedEvents);
                }
              }
            }
            return events;
          },

          /**
           * Enqueues a synthetic event that should be dispatched when
           * `processEventQueue` is invoked.
           *
           * @param {*} events An accumulation of synthetic events.
           * @internal
           */
          enqueueEvents: function enqueueEvents(events) {
            if (events) {
              eventQueue = accumulateInto_1(eventQueue, events);
            }
          },

          /**
           * Dispatches all synthetic events on the event queue.
           *
           * @internal
           */
          processEventQueue: function processEventQueue(simulated) {
            // Set `eventQueue` to null before processing it so that we can tell if more
            // events get enqueued while processing.
            var processingEventQueue = eventQueue;
            eventQueue = null;
            if (simulated) {
              forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseSimulated);
            } else {
              forEachAccumulated_1(processingEventQueue, executeDispatchesAndReleaseTopLevel);
            }
            !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
            // This would be a good time to rethrow if any of the event handlers threw.
            ReactErrorUtils_1.rethrowCaughtError();
          }
        };

        var EventPluginHub_1 = EventPluginHub;

        function runEventQueueInBatch(events) {
          EventPluginHub_1.enqueueEvents(events);
          EventPluginHub_1.processEventQueue(false);
        }

        var ReactEventEmitterMixin = {
          /**
           * Streams a fired top-level event to `EventPluginHub` where plugins have the
           * opportunity to create `ReactEvent`s to be dispatched.
           */
          handleTopLevel: function handleTopLevel(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var events = EventPluginHub_1.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
            runEventQueueInBatch(events);
          }
        };

        var ReactEventEmitterMixin_1 = ReactEventEmitterMixin;

        var useHasFeature;
        if (ExecutionEnvironment.canUseDOM) {
          useHasFeature = document.implementation && document.implementation.hasFeature &&
          // always returns true in newer browsers as per the standard.
          // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
          document.implementation.hasFeature('', '') !== true;
        }

        /**
         * Checks if an event is supported in the current execution environment.
         *
         * NOTE: This will not work correctly for non-generic events such as `change`,
         * `reset`, `load`, `error`, and `select`.
         *
         * Borrows from Modernizr.
         *
         * @param {string} eventNameSuffix Event name, e.g. "click".
         * @param {?boolean} capture Check if the capture phase is supported.
         * @return {boolean} True if the event is supported.
         * @internal
         * @license Modernizr 3.0.0pre (Custom Build) | MIT
         */
        function isEventSupported(eventNameSuffix, capture) {
          if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
            return false;
          }

          var eventName = 'on' + eventNameSuffix;
          var isSupported = eventName in document;

          if (!isSupported) {
            var element = document.createElement('div');
            element.setAttribute(eventName, 'return;');
            isSupported = typeof element[eventName] === 'function';
          }

          if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
            // This is the only way to test support for the `wheel` event in IE9+.
            isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
          }

          return isSupported;
        }

        var isEventSupported_1 = isEventSupported;

        /**
         * Generate a mapping of standard vendor prefixes using the defined style property and event name.
         *
         * @param {string} styleProp
         * @param {string} eventName
         * @returns {object}
         */
        function makePrefixMap(styleProp, eventName) {
          var prefixes = {};

          prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
          prefixes['Webkit' + styleProp] = 'webkit' + eventName;
          prefixes['Moz' + styleProp] = 'moz' + eventName;
          prefixes['ms' + styleProp] = 'MS' + eventName;
          prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

          return prefixes;
        }

        /**
         * A list of event names to a configurable list of vendor prefixes.
         */
        var vendorPrefixes = {
          animationend: makePrefixMap('Animation', 'AnimationEnd'),
          animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
          animationstart: makePrefixMap('Animation', 'AnimationStart'),
          transitionend: makePrefixMap('Transition', 'TransitionEnd')
        };

        /**
         * Event names that have already been detected and prefixed (if applicable).
         */
        var prefixedEventNames = {};

        /**
         * Element to check for prefixes on.
         */
        var style = {};

        /**
         * Bootstrap if a DOM exists.
         */
        if (ExecutionEnvironment.canUseDOM) {
          style = document.createElement('div').style;

          // On some platforms, in particular some releases of Android 4.x,
          // the un-prefixed "animation" and "transition" properties are defined on the
          // style object but the events that fire will still be prefixed, so we need
          // to check if the un-prefixed events are usable, and if not remove them from the map.
          if (!('AnimationEvent' in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
          }

          // Same as above
          if (!('TransitionEvent' in window)) {
            delete vendorPrefixes.transitionend.transition;
          }
        }

        /**
         * Attempts to determine the correct vendor prefixed event name.
         *
         * @param {string} eventName
         * @returns {string}
         */
        function getVendorPrefixedEventName(eventName) {
          if (prefixedEventNames[eventName]) {
            return prefixedEventNames[eventName];
          } else if (!vendorPrefixes[eventName]) {
            return eventName;
          }

          var prefixMap = vendorPrefixes[eventName];

          for (var styleProp in prefixMap) {
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
              return prefixedEventNames[eventName] = prefixMap[styleProp];
            }
          }

          return '';
        }

        var getVendorPrefixedEventName_1 = getVendorPrefixedEventName;

        /**
         * Types of raw signals from the browser caught at the top level.
         *
         * For events like 'submit' which don't consistently bubble (which we
         * trap at a lower node than `document`), binding at `document` would
         * cause duplicate events so we don't include them here.
         */
        var topLevelTypes$1 = {
          topAbort: 'abort',
          topAnimationEnd: getVendorPrefixedEventName_1('animationend') || 'animationend',
          topAnimationIteration: getVendorPrefixedEventName_1('animationiteration') || 'animationiteration',
          topAnimationStart: getVendorPrefixedEventName_1('animationstart') || 'animationstart',
          topBlur: 'blur',
          topCancel: 'cancel',
          topCanPlay: 'canplay',
          topCanPlayThrough: 'canplaythrough',
          topChange: 'change',
          topClick: 'click',
          topClose: 'close',
          topCompositionEnd: 'compositionend',
          topCompositionStart: 'compositionstart',
          topCompositionUpdate: 'compositionupdate',
          topContextMenu: 'contextmenu',
          topCopy: 'copy',
          topCut: 'cut',
          topDoubleClick: 'dblclick',
          topDrag: 'drag',
          topDragEnd: 'dragend',
          topDragEnter: 'dragenter',
          topDragExit: 'dragexit',
          topDragLeave: 'dragleave',
          topDragOver: 'dragover',
          topDragStart: 'dragstart',
          topDrop: 'drop',
          topDurationChange: 'durationchange',
          topEmptied: 'emptied',
          topEncrypted: 'encrypted',
          topEnded: 'ended',
          topError: 'error',
          topFocus: 'focus',
          topInput: 'input',
          topKeyDown: 'keydown',
          topKeyPress: 'keypress',
          topKeyUp: 'keyup',
          topLoadedData: 'loadeddata',
          topLoad: 'load',
          topLoadedMetadata: 'loadedmetadata',
          topLoadStart: 'loadstart',
          topMouseDown: 'mousedown',
          topMouseMove: 'mousemove',
          topMouseOut: 'mouseout',
          topMouseOver: 'mouseover',
          topMouseUp: 'mouseup',
          topPaste: 'paste',
          topPause: 'pause',
          topPlay: 'play',
          topPlaying: 'playing',
          topProgress: 'progress',
          topRateChange: 'ratechange',
          topScroll: 'scroll',
          topSeeked: 'seeked',
          topSeeking: 'seeking',
          topSelectionChange: 'selectionchange',
          topStalled: 'stalled',
          topSuspend: 'suspend',
          topTextInput: 'textInput',
          topTimeUpdate: 'timeupdate',
          topToggle: 'toggle',
          topTouchCancel: 'touchcancel',
          topTouchEnd: 'touchend',
          topTouchMove: 'touchmove',
          topTouchStart: 'touchstart',
          topTransitionEnd: getVendorPrefixedEventName_1('transitionend') || 'transitionend',
          topVolumeChange: 'volumechange',
          topWaiting: 'waiting',
          topWheel: 'wheel'
        };

        var BrowserEventConstants = {
          topLevelTypes: topLevelTypes$1
        };

        var BrowserEventConstants_1 = BrowserEventConstants;

        var topLevelTypes = BrowserEventConstants_1.topLevelTypes;

        /**
         * Summary of `ReactBrowserEventEmitter` event handling:
         *
         *  - Top-level delegation is used to trap most native browser events. This
         *    may only occur in the main thread and is the responsibility of
         *    ReactDOMEventListener, which is injected and can therefore support
         *    pluggable event sources. This is the only work that occurs in the main
         *    thread.
         *
         *  - We normalize and de-duplicate events to account for browser quirks. This
         *    may be done in the worker thread.
         *
         *  - Forward these native events (with the associated top-level type used to
         *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
         *    to extract any synthetic events.
         *
         *  - The `EventPluginHub` will then process each event by annotating them with
         *    "dispatches", a sequence of listeners and IDs that care about that event.
         *
         *  - The `EventPluginHub` then dispatches the events.
         *
         * Overview of React and the event system:
         *
         * +------------+    .
         * |    DOM     |    .
         * +------------+    .
         *       |           .
         *       v           .
         * +------------+    .
         * | ReactEvent |    .
         * |  Listener  |    .
         * +------------+    .                         +-----------+
         *       |           .               +--------+|SimpleEvent|
         *       |           .               |         |Plugin     |
         * +-----|------+    .               v         +-----------+
         * |     |      |    .    +--------------+                    +------------+
         * |     +-----------.--->|EventPluginHub|                    |    Event   |
         * |            |    .    |              |     +-----------+  | Propagators|
         * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
         * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
         * |            |    .    |              |     +-----------+  |  utilities |
         * |     +-----------.--->|              |                    +------------+
         * |     |      |    .    +--------------+
         * +-----|------+    .                ^        +-----------+
         *       |           .                |        |Enter/Leave|
         *       +           .                +-------+|Plugin     |
         * +-------------+   .                         +-----------+
         * | application |   .
         * |-------------|   .
         * |             |   .
         * |             |   .
         * +-------------+   .
         *                   .
         *    React Core     .  General Purpose Event Plugin System
         */

        var alreadyListeningTo = {};
        var reactTopListenersCounter = 0;

        /**
         * To ensure no conflicts with other potential React instances on the page
         */
        var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

        function getListeningForDocument(mountAt) {
          // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
          // directly.
          if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
            mountAt[topListenersIDKey] = reactTopListenersCounter++;
            alreadyListeningTo[mountAt[topListenersIDKey]] = {};
          }
          return alreadyListeningTo[mountAt[topListenersIDKey]];
        }

        var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin_1, {
          /**
           * Sets whether or not any created callbacks should be enabled.
           *
           * @param {boolean} enabled True if callbacks should be enabled.
           */
          setEnabled: function setEnabled(enabled) {
            if (ReactDOMEventListener_1) {
              ReactDOMEventListener_1.setEnabled(enabled);
            }
          },

          /**
           * @return {boolean} True if callbacks are enabled.
           */
          isEnabled: function isEnabled() {
            return !!(ReactDOMEventListener_1 && ReactDOMEventListener_1.isEnabled());
          },

          /**
           * We listen for bubbled touch events on the document object.
           *
           * Firefox v8.01 (and possibly others) exhibited strange behavior when
           * mounting `onmousemove` events at some node that was not the document
           * element. The symptoms were that if your mouse is not moving over something
           * contained within that mount point (for example on the background) the
           * top-level listeners for `onmousemove` won't be called. However, if you
           * register the `mousemove` on the document object, then it will of course
           * catch all `mousemove`s. This along with iOS quirks, justifies restricting
           * top-level listeners to the document object only, at least for these
           * movement types of events and possibly all events.
           *
           * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
           *
           * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
           * they bubble to document.
           *
           * @param {string} registrationName Name of listener (e.g. `onClick`).
           * @param {object} contentDocumentHandle Document which owns the container
           */
          listenTo: function listenTo(registrationName, contentDocumentHandle) {
            var mountAt = contentDocumentHandle;
            var isListening = getListeningForDocument(mountAt);
            var dependencies = EventPluginRegistry_1.registrationNameDependencies[registrationName];

            for (var i = 0; i < dependencies.length; i++) {
              var dependency = dependencies[i];
              if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
                if (dependency === 'topWheel') {
                  if (isEventSupported_1('wheel')) {
                    ReactDOMEventListener_1.trapBubbledEvent('topWheel', 'wheel', mountAt);
                  } else if (isEventSupported_1('mousewheel')) {
                    ReactDOMEventListener_1.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
                  } else {
                    // Firefox needs to capture a different mouse scroll event.
                    // @see http://www.quirksmode.org/dom/events/tests/scroll.html
                    ReactDOMEventListener_1.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
                  }
                } else if (dependency === 'topScroll') {
                  ReactDOMEventListener_1.trapCapturedEvent('topScroll', 'scroll', mountAt);
                } else if (dependency === 'topFocus' || dependency === 'topBlur') {
                  ReactDOMEventListener_1.trapCapturedEvent('topFocus', 'focus', mountAt);
                  ReactDOMEventListener_1.trapCapturedEvent('topBlur', 'blur', mountAt);

                  // to make sure blur and focus event listeners are only attached once
                  isListening.topBlur = true;
                  isListening.topFocus = true;
                } else if (dependency === 'topCancel') {
                  if (isEventSupported_1('cancel', true)) {
                    ReactDOMEventListener_1.trapCapturedEvent('topCancel', 'cancel', mountAt);
                  }
                  isListening.topCancel = true;
                } else if (dependency === 'topClose') {
                  if (isEventSupported_1('close', true)) {
                    ReactDOMEventListener_1.trapCapturedEvent('topClose', 'close', mountAt);
                  }
                  isListening.topClose = true;
                } else if (topLevelTypes.hasOwnProperty(dependency)) {
                  ReactDOMEventListener_1.trapBubbledEvent(dependency, topLevelTypes[dependency], mountAt);
                }

                isListening[dependency] = true;
              }
            }
          },

          isListeningToAllDependencies: function isListeningToAllDependencies(registrationName, mountAt) {
            var isListening = getListeningForDocument(mountAt);
            var dependencies = EventPluginRegistry_1.registrationNameDependencies[registrationName];
            for (var i = 0; i < dependencies.length; i++) {
              var dependency = dependencies[i];
              if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
                return false;
              }
            }
            return true;
          },

          trapBubbledEvent: function trapBubbledEvent(topLevelType, handlerBaseName, handle) {
            return ReactDOMEventListener_1.trapBubbledEvent(topLevelType, handlerBaseName, handle);
          },

          trapCapturedEvent: function trapCapturedEvent(topLevelType, handlerBaseName, handle) {
            return ReactDOMEventListener_1.trapCapturedEvent(topLevelType, handlerBaseName, handle);
          }
        });

        var ReactBrowserEventEmitter_1 = ReactBrowserEventEmitter;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactDOMFeatureFlags
         */

        var ReactDOMFeatureFlags = {
          fiberAsyncScheduling: false,
          useFiber: true
        };

        var ReactDOMFeatureFlags_1 = ReactDOMFeatureFlags;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule CSSProperty
         */

        /**
         * CSS properties which accept numbers but are not in units of "px".
         */

        var isUnitlessNumber = {
          animationIterationCount: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,

          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };

        /**
         * @param {string} prefix vendor-specific prefix, eg: Webkit
         * @param {string} key style name, eg: transitionDuration
         * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
         * WebkitTransitionDuration
         */
        function prefixKey(prefix, key) {
          return prefix + key.charAt(0).toUpperCase() + key.substring(1);
        }

        /**
         * Support style names that may come passed in prefixed by adding permutations
         * of vendor prefixes.
         */
        var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

        // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
        // infinite loop, because it iterates over the newly added props too.
        Object.keys(isUnitlessNumber).forEach(function (prop) {
          prefixes.forEach(function (prefix) {
            isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
          });
        });

        /**
         * Most style properties can be unset by doing .style[prop] = '' but IE8
         * doesn't like doing that with shorthand properties so for the properties that
         * IE8 breaks on, which are listed here, we instead unset each of the
         * individual properties. See http://bugs.jquery.com/ticket/12385.
         * The 4-value 'clock' properties like margin, padding, border-width seem to
         * behave without any problems. Curiously, list-style works too without any
         * special prodding.
         */
        var shorthandPropertyExpansions = {
          background: {
            backgroundAttachment: true,
            backgroundColor: true,
            backgroundImage: true,
            backgroundPositionX: true,
            backgroundPositionY: true,
            backgroundRepeat: true
          },
          backgroundPosition: {
            backgroundPositionX: true,
            backgroundPositionY: true
          },
          border: {
            borderWidth: true,
            borderStyle: true,
            borderColor: true
          },
          borderBottom: {
            borderBottomWidth: true,
            borderBottomStyle: true,
            borderBottomColor: true
          },
          borderLeft: {
            borderLeftWidth: true,
            borderLeftStyle: true,
            borderLeftColor: true
          },
          borderRight: {
            borderRightWidth: true,
            borderRightStyle: true,
            borderRightColor: true
          },
          borderTop: {
            borderTopWidth: true,
            borderTopStyle: true,
            borderTopColor: true
          },
          font: {
            fontStyle: true,
            fontVariant: true,
            fontWeight: true,
            fontSize: true,
            lineHeight: true,
            fontFamily: true
          },
          outline: {
            outlineWidth: true,
            outlineStyle: true,
            outlineColor: true
          }
        };

        var CSSProperty = {
          isUnitlessNumber: isUnitlessNumber,
          shorthandPropertyExpansions: shorthandPropertyExpansions
        };

        var CSSProperty_1 = CSSProperty;

        var isUnitlessNumber$1 = CSSProperty_1.isUnitlessNumber;

        /**
         * Convert a value into the proper css writable value. The style name `name`
         * should be logical (no hyphens), as specified
         * in `CSSProperty.isUnitlessNumber`.
         *
         * @param {string} name CSS property name such as `topMargin`.
         * @param {*} value CSS property value such as `10px`.
         * @return {string} Normalized style value with dimensions applied.
         */
        function dangerousStyleValue(name, value, isCustomProperty) {
          // Note that we've removed escapeTextForBrowser() calls here since the
          // whole string will be escaped when the attribute is injected into
          // the markup. If you provide unsafe user data here they can inject
          // arbitrary CSS which may be problematic (I couldn't repro this):
          // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
          // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
          // This is not an XSS hole but instead a potential CSS injection issue
          // which has lead to a greater discussion about how we're going to
          // trust URLs moving forward. See #2115901

          var isEmpty = value == null || typeof value === 'boolean' || value === '';
          if (isEmpty) {
            return '';
          }

          if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber$1.hasOwnProperty(name) && isUnitlessNumber$1[name])) {
            return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
          }

          return ('' + value).trim();
        }

        var dangerousStyleValue_1 = dangerousStyleValue;

        /**
         * Copyright (c) 2016-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * 
         * @providesModule describeComponentFrame
         */

        var describeComponentFrame = function describeComponentFrame(name, source, ownerName) {
          return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
        };

        var IndeterminateComponent = ReactTypeOfWork.IndeterminateComponent;
        var FunctionalComponent = ReactTypeOfWork.FunctionalComponent;
        var ClassComponent$1 = ReactTypeOfWork.ClassComponent;
        var HostComponent$2 = ReactTypeOfWork.HostComponent;

        function describeFiber(fiber) {
          switch (fiber.tag) {
            case IndeterminateComponent:
            case FunctionalComponent:
            case ClassComponent$1:
            case HostComponent$2:
              var owner = fiber._debugOwner;
              var source = fiber._debugSource;
              var name = getComponentName_1(fiber);
              var ownerName = null;
              if (owner) {
                ownerName = getComponentName_1(owner);
              }
              return describeComponentFrame(name, source, ownerName);
            default:
              return '';
          }
        }

        // This function can only be called with a work-in-progress fiber and
        // only during begin or complete phase. Do not call it under any other
        // circumstances.
        function getStackAddendumByWorkInProgressFiber$1(workInProgress) {
          var info = '';
          var node = workInProgress;
          do {
            info += describeFiber(node);
            // Otherwise this return pointer might point to the wrong tree:
            node = node['return'];
          } while (node);
          return info;
        }

        var ReactFiberComponentTreeHook = {
          getStackAddendumByWorkInProgressFiber: getStackAddendumByWorkInProgressFiber$1
        };

        var ReactDebugCurrentFrame = ReactGlobalSharedState_1.ReactDebugCurrentFrame;

        {
          var getComponentName$3 = getComponentName_1;

          var _require2$2 = ReactFiberComponentTreeHook,
              getStackAddendumByWorkInProgressFiber = _require2$2.getStackAddendumByWorkInProgressFiber;
        }

        function getCurrentFiberOwnerName$2() {
          {
            var fiber = ReactDebugCurrentFiber.current;
            if (fiber === null) {
              return null;
            }
            if (fiber._debugOwner != null) {
              return getComponentName$3(fiber._debugOwner);
            }
          }
          return null;
        }

        function getCurrentFiberStackAddendum$1() {
          {
            var fiber = ReactDebugCurrentFiber.current;
            if (fiber === null) {
              return null;
            }
            // Safe because if current fiber exists, we are reconciling,
            // and it is guaranteed to be the work-in-progress version.
            return getStackAddendumByWorkInProgressFiber(fiber);
          }
          return null;
        }

        function resetCurrentFiber() {
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFiber.current = null;
          ReactDebugCurrentFiber.phase = null;
        }

        function setCurrentFiber(fiber, phase) {
          ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackAddendum$1;
          ReactDebugCurrentFiber.current = fiber;
          ReactDebugCurrentFiber.phase = phase;
        }

        var ReactDebugCurrentFiber = {
          current: null,
          phase: null,
          resetCurrentFiber: resetCurrentFiber,
          setCurrentFiber: setCurrentFiber,
          getCurrentFiberOwnerName: getCurrentFiberOwnerName$2,
          getCurrentFiberStackAddendum: getCurrentFiberStackAddendum$1
        };

        var ReactDebugCurrentFiber_1 = ReactDebugCurrentFiber;

        var warnValidStyle$1 = emptyFunction;

        {
          var camelizeStyleName$1 = camelizeStyleName;
          var getComponentName$2 = getComponentName_1;
          var warning$4 = require$$0;

          var _require$3 = ReactDebugCurrentFiber_1,
              getCurrentFiberOwnerName$1 = _require$3.getCurrentFiberOwnerName;

          // 'msTransform' is correct, but the other prefixes should be capitalized


          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

          // style values shouldn't contain a semicolon
          var badStyleValueWithSemicolonPattern = /;\s*$/;

          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;

          var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }

            warnedStyleNames[name] = true;
            warning$4(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName$1(name), checkRenderMessage(owner));
          };

          var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }

            warnedStyleNames[name] = true;
            warning$4(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner));
          };

          var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }

            warnedStyleValues[value] = true;
            warning$4(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, ''));
          };

          var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {
            if (warnedForNaNValue) {
              return;
            }

            warnedForNaNValue = true;
            warning$4(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner));
          };

          var warnStyleValueIsInfinity = function warnStyleValueIsInfinity(name, value, owner) {
            if (warnedForInfinityValue) {
              return;
            }

            warnedForInfinityValue = true;
            warning$4(false, '`Infinity` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner));
          };

          var checkRenderMessage = function checkRenderMessage(owner) {
            var ownerName;
            if (owner != null) {
              // Stack passes the owner manually all the way to CSSPropertyOperations.
              ownerName = getComponentName$2(owner);
            } else {
              // Fiber doesn't pass it but uses ReactDebugCurrentFiber to track it.
              // It is only enabled in development and tracks host components too.
              ownerName = getCurrentFiberOwnerName$1();
              // TODO: also report the stack.
            }
            if (ownerName) {
              return '\n\nCheck the render method of `' + ownerName + '`.';
            }
            return '';
          };

          warnValidStyle$1 = function warnValidStyle$1(name, value, component) {
            var owner;
            if (component) {
              // TODO: this only works with Stack. Seems like we need to add unit tests?
              owner = component._currentElement._owner;
            }
            if (name.indexOf('-') > -1) {
              warnHyphenatedStyleName(name, owner);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name, owner);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value, owner);
            }

            if (typeof value === 'number') {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value, owner);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value, owner);
              }
            }
          };
        }

        var warnValidStyle_1 = warnValidStyle$1;

        {
          var hyphenateStyleName$1 = hyphenateStyleName;
          var warnValidStyle = warnValidStyle_1;
        }

        var hasShorthandPropertyBug = false;
        if (ExecutionEnvironment.canUseDOM) {
          var tempStyle = document.createElement('div').style;
          try {
            // IE8 throws "Invalid argument." if resetting shorthand style properties.
            tempStyle.font = '';
          } catch (e) {
            hasShorthandPropertyBug = true;
          }
        }

        /**
         * Operations for dealing with CSS properties.
         */
        var CSSPropertyOperations = {
          /**
           * This creates a string that is expected to be equivalent to the style
           * attribute generated by server-side rendering. It by-passes warnings and
           * security checks so it's not safe to use this value for anything other than
           * comparison. It is only used in DEV for SSR validation.
           */
          createDangerousStringForStyles: function createDangerousStringForStyles(styles) {
            {
              var serialized = '';
              var delimiter = '';
              for (var styleName in styles) {
                if (!styles.hasOwnProperty(styleName)) {
                  continue;
                }
                var styleValue = styles[styleName];
                if (styleValue != null) {
                  var isCustomProperty = styleName.indexOf('--') === 0;
                  serialized += delimiter + hyphenateStyleName$1(styleName) + ':';
                  serialized += dangerousStyleValue_1(styleName, styleValue, isCustomProperty);

                  delimiter = ';';
                }
              }
              return serialized || null;
            }
          },

          /**
           * Sets the value for multiple styles on a node.  If a value is specified as
           * '' (empty string), the corresponding style property will be unset.
           *
           * @param {DOMElement} node
           * @param {object} styles
           * @param {ReactDOMComponent} component
           */
          setValueForStyles: function setValueForStyles(node, styles, component) {
            var style = node.style;
            for (var styleName in styles) {
              if (!styles.hasOwnProperty(styleName)) {
                continue;
              }
              var isCustomProperty = styleName.indexOf('--') === 0;
              {
                if (!isCustomProperty) {
                  warnValidStyle(styleName, styles[styleName], component);
                }
              }
              var styleValue = dangerousStyleValue_1(styleName, styles[styleName], isCustomProperty);
              if (styleName === 'float') {
                styleName = 'cssFloat';
              }
              if (isCustomProperty) {
                style.setProperty(styleName, styleValue);
              } else if (styleValue) {
                style[styleName] = styleValue;
              } else {
                var expansion = hasShorthandPropertyBug && CSSProperty_1.shorthandPropertyExpansions[styleName];
                if (expansion) {
                  // Shorthand property that IE8 won't like unsetting, so unset each
                  // component to placate it
                  for (var individualStyleName in expansion) {
                    style[individualStyleName] = '';
                  }
                } else {
                  style[styleName] = '';
                }
              }
            }
          }
        };

        var CSSPropertyOperations_1 = CSSPropertyOperations;

        var ReactInvalidSetStateWarningHook = {};

        {
          var warning$7 = require$$0;
          var processingChildContext = false;

          var warnInvalidSetState = function warnInvalidSetState() {
            warning$7(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()');
          };

          ReactInvalidSetStateWarningHook = {
            onBeginProcessingChildContext: function onBeginProcessingChildContext() {
              processingChildContext = true;
            },
            onEndProcessingChildContext: function onEndProcessingChildContext() {
              processingChildContext = false;
            },
            onSetState: function onSetState() {
              warnInvalidSetState();
            }
          };
        }

        var ReactInvalidSetStateWarningHook_1 = ReactInvalidSetStateWarningHook;

        /**
         * Copyright (c) 2016-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactHostOperationHistoryHook
         * 
         */

        // Trust the developer to only use this with a true check
        var ReactHostOperationHistoryHook = null;

        {
          var history = [];

          ReactHostOperationHistoryHook = {
            onHostOperation: function onHostOperation(operation) {
              history.push(operation);
            },
            clearHistory: function clearHistory() {
              if (ReactHostOperationHistoryHook._preventClearing) {
                // Should only be used for tests.
                return;
              }

              history = [];
            },
            getHistory: function getHistory() {
              return history;
            }
          };
        }

        var ReactHostOperationHistoryHook_1 = ReactHostOperationHistoryHook;

        var ReactComponentTreeHook = ReactGlobalSharedState_1.ReactComponentTreeHook;

        {
          var warning$6 = require$$0;
        }

        // Trust the developer to only use this with a true check
        var ReactDebugTool$1 = null;

        {
          var hooks = [];
          var didHookThrowForEvent = {};

          var callHook = function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
            try {
              fn.call(context, arg1, arg2, arg3, arg4, arg5);
            } catch (e) {
              warning$6(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack);
              didHookThrowForEvent[event] = true;
            }
          };

          var emitEvent = function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
            for (var i = 0; i < hooks.length; i++) {
              var hook = hooks[i];
              var fn = hook[event];
              if (fn) {
                callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
              }
            }
          };

          var _isProfiling = false;
          var flushHistory = [];
          var lifeCycleTimerStack = [];
          var currentFlushNesting = 0;
          var currentFlushMeasurements = [];
          var currentFlushStartTime = 0;
          var currentTimerDebugID = null;
          var currentTimerStartTime = 0;
          var currentTimerNestedFlushDuration = 0;
          var currentTimerType = null;

          var lifeCycleTimerHasWarned = false;

          var clearHistory = function clearHistory() {
            ReactComponentTreeHook.purgeUnmountedComponents();
            ReactHostOperationHistoryHook_1.clearHistory();
          };

          var getTreeSnapshot = function getTreeSnapshot(registeredIDs) {
            return registeredIDs.reduce(function (tree, id) {
              var ownerID = ReactComponentTreeHook.getOwnerID(id);
              var parentID = ReactComponentTreeHook.getParentID(id);
              tree[id] = {
                displayName: ReactComponentTreeHook.getDisplayName(id),
                text: ReactComponentTreeHook.getText(id),
                updateCount: ReactComponentTreeHook.getUpdateCount(id),
                childIDs: ReactComponentTreeHook.getChildIDs(id),
                // Text nodes don't have owners but this is close enough.
                ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
                parentID: parentID
              };
              return tree;
            }, {});
          };

          var resetMeasurements = function resetMeasurements() {
            var previousStartTime = currentFlushStartTime;
            var previousMeasurements = currentFlushMeasurements;
            var previousOperations = ReactHostOperationHistoryHook_1.getHistory();

            if (currentFlushNesting === 0) {
              currentFlushStartTime = 0;
              currentFlushMeasurements = [];
              clearHistory();
              return;
            }

            if (previousMeasurements.length || previousOperations.length) {
              var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
              flushHistory.push({
                duration: performanceNow() - previousStartTime,
                measurements: previousMeasurements || [],
                operations: previousOperations || [],
                treeSnapshot: getTreeSnapshot(registeredIDs)
              });
            }

            clearHistory();
            currentFlushStartTime = performanceNow();
            currentFlushMeasurements = [];
          };

          var checkDebugID = function checkDebugID(debugID) {
            var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

            if (allowRoot && debugID === 0) {
              return;
            }
            if (!debugID) {
              warning$6(false, 'ReactDebugTool: debugID may not be empty.');
            }
          };

          var beginLifeCycleTimer = function beginLifeCycleTimer(debugID, timerType) {
            if (currentFlushNesting === 0) {
              return;
            }
            if (currentTimerType && !lifeCycleTimerHasWarned) {
              warning$6(false, 'There is an internal error in the React performance measurement code.' + '\n\nDid not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another');
              lifeCycleTimerHasWarned = true;
            }
            currentTimerStartTime = performanceNow();
            currentTimerNestedFlushDuration = 0;
            currentTimerDebugID = debugID;
            currentTimerType = timerType;
          };

          var endLifeCycleTimer = function endLifeCycleTimer(debugID, timerType) {
            if (currentFlushNesting === 0) {
              return;
            }
            if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
              warning$6(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another');
              lifeCycleTimerHasWarned = true;
            }
            if (_isProfiling) {
              currentFlushMeasurements.push({
                timerType: timerType,
                instanceID: debugID,
                duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
              });
            }
            currentTimerStartTime = 0;
            currentTimerNestedFlushDuration = 0;
            currentTimerDebugID = null;
            currentTimerType = null;
          };

          var pauseCurrentLifeCycleTimer = function pauseCurrentLifeCycleTimer() {
            var currentTimer = {
              startTime: currentTimerStartTime,
              nestedFlushStartTime: performanceNow(),
              debugID: currentTimerDebugID,
              timerType: currentTimerType
            };
            lifeCycleTimerStack.push(currentTimer);
            currentTimerStartTime = 0;
            currentTimerNestedFlushDuration = 0;
            currentTimerDebugID = null;
            currentTimerType = null;
          };

          var resumeCurrentLifeCycleTimer = function resumeCurrentLifeCycleTimer() {
            var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
                startTime = _lifeCycleTimerStack$.startTime,
                nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
                debugID = _lifeCycleTimerStack$.debugID,
                timerType = _lifeCycleTimerStack$.timerType;

            var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
            currentTimerStartTime = startTime;
            currentTimerNestedFlushDuration += nestedFlushDuration;
            currentTimerDebugID = debugID;
            currentTimerType = timerType;
          };

          var lastMarkTimeStamp = 0;
          var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

          var shouldMark = function shouldMark(debugID) {
            if (!_isProfiling || !canUsePerformanceMeasure) {
              return false;
            }
            var element = ReactComponentTreeHook.getElement(debugID);
            if (element == null || (typeof element === "undefined" ? "undefined" : _typeof4(element)) !== 'object') {
              return false;
            }
            var isHostElement = typeof element.type === 'string';
            if (isHostElement) {
              return false;
            }
            return true;
          };

          var markBegin = function markBegin(debugID, markType) {
            if (!shouldMark(debugID)) {
              return;
            }

            var markName = debugID + '::' + markType;
            lastMarkTimeStamp = performanceNow();
            performance.mark(markName);
          };

          var markEnd = function markEnd(debugID, markType) {
            if (!shouldMark(debugID)) {
              return;
            }

            var markName = debugID + '::' + markType;
            var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

            // Chrome has an issue of dropping markers recorded too fast:
            // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
            // To work around this, we will not report very small measurements.
            // I determined the magic number by tweaking it back and forth.
            // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
            // When the bug is fixed, we can `measure()` unconditionally if we want to.
            var timeStamp = performanceNow();
            if (timeStamp - lastMarkTimeStamp > 0.1) {
              var measurementName = displayName + ' [' + markType + ']';
              performance.measure(measurementName, markName);
            }

            performance.clearMarks(markName);
            if (measurementName) {
              performance.clearMeasures(measurementName);
            }
          };

          ReactDebugTool$1 = {
            addHook: function addHook(hook) {
              hooks.push(hook);
            },
            removeHook: function removeHook(hook) {
              for (var i = 0; i < hooks.length; i++) {
                if (hooks[i] === hook) {
                  hooks.splice(i, 1);
                  i--;
                }
              }
            },
            isProfiling: function isProfiling() {
              return _isProfiling;
            },
            beginProfiling: function beginProfiling() {
              if (_isProfiling) {
                return;
              }

              _isProfiling = true;
              flushHistory.length = 0;
              resetMeasurements();
              ReactDebugTool$1.addHook(ReactHostOperationHistoryHook_1);
            },
            endProfiling: function endProfiling() {
              if (!_isProfiling) {
                return;
              }

              _isProfiling = false;
              resetMeasurements();
              ReactDebugTool$1.removeHook(ReactHostOperationHistoryHook_1);
            },
            getFlushHistory: function getFlushHistory() {
              return flushHistory;
            },
            onBeginFlush: function onBeginFlush() {
              currentFlushNesting++;
              resetMeasurements();
              pauseCurrentLifeCycleTimer();
              emitEvent('onBeginFlush');
            },
            onEndFlush: function onEndFlush() {
              resetMeasurements();
              currentFlushNesting--;
              resumeCurrentLifeCycleTimer();
              emitEvent('onEndFlush');
            },
            onBeginLifeCycleTimer: function onBeginLifeCycleTimer(debugID, timerType) {
              checkDebugID(debugID);
              emitEvent('onBeginLifeCycleTimer', debugID, timerType);
              markBegin(debugID, timerType);
              beginLifeCycleTimer(debugID, timerType);
            },
            onEndLifeCycleTimer: function onEndLifeCycleTimer(debugID, timerType) {
              checkDebugID(debugID);
              endLifeCycleTimer(debugID, timerType);
              markEnd(debugID, timerType);
              emitEvent('onEndLifeCycleTimer', debugID, timerType);
            },
            onBeginProcessingChildContext: function onBeginProcessingChildContext() {
              emitEvent('onBeginProcessingChildContext');
            },
            onEndProcessingChildContext: function onEndProcessingChildContext() {
              emitEvent('onEndProcessingChildContext');
            },
            onHostOperation: function onHostOperation(operation) {
              checkDebugID(operation.instanceID);
              emitEvent('onHostOperation', operation);
            },
            onSetState: function onSetState() {
              emitEvent('onSetState');
            },
            onSetChildren: function onSetChildren(debugID, childDebugIDs) {
              checkDebugID(debugID);
              childDebugIDs.forEach(checkDebugID);
              emitEvent('onSetChildren', debugID, childDebugIDs);
            },
            onBeforeMountComponent: function onBeforeMountComponent(debugID, element, parentDebugID) {
              checkDebugID(debugID);
              checkDebugID(parentDebugID, true);
              emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
              markBegin(debugID, 'mount');
            },
            onMountComponent: function onMountComponent(debugID) {
              checkDebugID(debugID);
              markEnd(debugID, 'mount');
              emitEvent('onMountComponent', debugID);
            },
            onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
              checkDebugID(debugID);
              emitEvent('onBeforeUpdateComponent', debugID, element);
              markBegin(debugID, 'update');
            },
            onUpdateComponent: function onUpdateComponent(debugID) {
              checkDebugID(debugID);
              markEnd(debugID, 'update');
              emitEvent('onUpdateComponent', debugID);
            },
            onBeforeUnmountComponent: function onBeforeUnmountComponent(debugID) {
              checkDebugID(debugID);
              emitEvent('onBeforeUnmountComponent', debugID);
              markBegin(debugID, 'unmount');
            },
            onUnmountComponent: function onUnmountComponent(debugID) {
              checkDebugID(debugID);
              markEnd(debugID, 'unmount');
              emitEvent('onUnmountComponent', debugID);
            },
            onTestEvent: function onTestEvent() {
              emitEvent('onTestEvent');
            }
          };

          ReactDebugTool$1.addHook(ReactInvalidSetStateWarningHook_1);
          ReactDebugTool$1.addHook(ReactComponentTreeHook);
          var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
          if (/[?&]react_perf\b/.test(url)) {
            ReactDebugTool$1.beginProfiling();
          }
        }

        var ReactDebugTool_1 = ReactDebugTool$1;

        // Trust the developer to only use ReactInstrumentation with a true check

        var debugTool = null;

        {
          var ReactDebugTool = ReactDebugTool_1;
          debugTool = ReactDebugTool;
        }

        var ReactInstrumentation = { debugTool: debugTool };

        {
          var warning$5 = require$$0;
        }

        // isAttributeNameSafe() is currently duplicated in DOMMarkupOperations.
        // TODO: Find a better place for this.
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty_1.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty_1.ATTRIBUTE_NAME_CHAR + ']*$');
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
            return true;
          }
          if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            warning$5(false, 'Invalid attribute name: `%s`', attributeName);
          }
          return false;
        }

        // shouldIgnoreValue() is currently duplicated in DOMMarkupOperations.
        // TODO: Find a better place for this.
        function shouldIgnoreValue(propertyInfo, value) {
          return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
        }

        /**
         * Operations for dealing with DOM properties.
         */
        var DOMPropertyOperations = {
          setAttributeForID: function setAttributeForID(node, id) {
            node.setAttribute(DOMProperty_1.ID_ATTRIBUTE_NAME, id);
          },

          setAttributeForRoot: function setAttributeForRoot(node) {
            node.setAttribute(DOMProperty_1.ROOT_ATTRIBUTE_NAME, '');
          },

          /**
           * Get the value for a property on a node. Only used in DEV for SSR validation.
           * The "expected" argument is used as a hint of what the expected value is.
           * Some properties have multiple equivalent values.
           */
          getValueForProperty: function getValueForProperty(node, name, expected) {
            {
              var propertyInfo = DOMProperty_1.getPropertyInfo(name);
              if (propertyInfo) {
                var mutationMethod = propertyInfo.mutationMethod;
                if (mutationMethod || propertyInfo.mustUseProperty) {
                  return node[propertyInfo.propertyName];
                } else {
                  var attributeName = propertyInfo.attributeName;

                  var stringValue = null;

                  if (propertyInfo.hasOverloadedBooleanValue) {
                    if (node.hasAttribute(attributeName)) {
                      var value = node.getAttribute(attributeName);
                      if (value === '') {
                        return true;
                      }
                      if (shouldIgnoreValue(propertyInfo, expected)) {
                        return value;
                      }
                      if (value === '' + expected) {
                        return expected;
                      }
                      return value;
                    }
                  } else if (node.hasAttribute(attributeName)) {
                    if (shouldIgnoreValue(propertyInfo, expected)) {
                      // We had an attribute but shouldn't have had one, so read it
                      // for the error message.
                      return node.getAttribute(attributeName);
                    }
                    if (propertyInfo.hasBooleanValue) {
                      // If this was a boolean, it doesn't matter what the value is
                      // the fact that we have it is the same as the expected.
                      return expected;
                    }
                    // Even if this property uses a namespace we use getAttribute
                    // because we assume its namespaced name is the same as our config.
                    // To use getAttributeNS we need the local name which we don't have
                    // in our config atm.
                    stringValue = node.getAttribute(attributeName);
                  }

                  if (shouldIgnoreValue(propertyInfo, expected)) {
                    return stringValue === null ? expected : stringValue;
                  } else if (stringValue === '' + expected) {
                    return expected;
                  } else {
                    return stringValue;
                  }
                }
              }
            }
          },

          /**
           * Get the value for a attribute on a node. Only used in DEV for SSR validation.
           * The third argument is used as a hint of what the expected value is. Some
           * attributes have multiple equivalent values.
           */
          getValueForAttribute: function getValueForAttribute(node, name, expected) {
            {
              if (!isAttributeNameSafe(name)) {
                return;
              }
              if (!node.hasAttribute(name)) {
                return expected === undefined ? undefined : null;
              }
              var value = node.getAttribute(name);
              if (value === '' + expected) {
                return expected;
              }
              return value;
            }
          },

          /**
           * Sets the value for a property on a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           * @param {*} value
           */
          setValueForProperty: function setValueForProperty(node, name, value) {
            var propertyInfo = DOMProperty_1.getPropertyInfo(name);

            if (propertyInfo && DOMProperty_1.shouldSetAttribute(name, value)) {
              var mutationMethod = propertyInfo.mutationMethod;
              if (mutationMethod) {
                mutationMethod(node, value);
              } else if (shouldIgnoreValue(propertyInfo, value)) {
                DOMPropertyOperations.deleteValueForProperty(node, name);
                return;
              } else if (propertyInfo.mustUseProperty) {
                // Contrary to `setAttribute`, object properties are properly
                // `toString`ed by IE8/9.
                node[propertyInfo.propertyName] = value;
              } else {
                var attributeName = propertyInfo.attributeName;
                var namespace = propertyInfo.attributeNamespace;
                // `setAttribute` with objects becomes only `[object]` in IE8/9,
                // ('' + value) makes it output the correct toString()-value.
                if (namespace) {
                  node.setAttributeNS(namespace, attributeName, '' + value);
                } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
                  node.setAttribute(attributeName, '');
                } else {
                  node.setAttribute(attributeName, '' + value);
                }
              }
            } else {
              DOMPropertyOperations.setValueForAttribute(node, name, DOMProperty_1.shouldSetAttribute(name, value) ? value : null);
              return;
            }

            {
              var payload = {};
              payload[name] = value;
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: ReactDOMComponentTree_1.getInstanceFromNode(node)._debugID,
                type: 'update attribute',
                payload: payload
              });
            }
          },

          setValueForAttribute: function setValueForAttribute(node, name, value) {
            if (!isAttributeNameSafe(name)) {
              return;
            }
            if (value == null) {
              node.removeAttribute(name);
            } else {
              node.setAttribute(name, '' + value);
            }

            {
              var payload = {};
              payload[name] = value;
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: ReactDOMComponentTree_1.getInstanceFromNode(node)._debugID,
                type: 'update attribute',
                payload: payload
              });
            }
          },

          /**
           * Deletes an attributes from a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           */
          deleteValueForAttribute: function deleteValueForAttribute(node, name) {
            node.removeAttribute(name);
            {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: ReactDOMComponentTree_1.getInstanceFromNode(node)._debugID,
                type: 'remove attribute',
                payload: name
              });
            }
          },

          /**
           * Deletes the value for a property on a node.
           *
           * @param {DOMElement} node
           * @param {string} name
           */
          deleteValueForProperty: function deleteValueForProperty(node, name) {
            var propertyInfo = DOMProperty_1.getPropertyInfo(name);
            if (propertyInfo) {
              var mutationMethod = propertyInfo.mutationMethod;
              if (mutationMethod) {
                mutationMethod(node, undefined);
              } else if (propertyInfo.mustUseProperty) {
                var propName = propertyInfo.propertyName;
                if (propertyInfo.hasBooleanValue) {
                  node[propName] = false;
                } else {
                  node[propName] = '';
                }
              } else {
                node.removeAttribute(propertyInfo.attributeName);
              }
            } else {
              node.removeAttribute(name);
            }

            {
              ReactInstrumentation.debugTool.onHostOperation({
                instanceID: ReactDOMComponentTree_1.getInstanceFromNode(node)._debugID,
                type: 'remove attribute',
                payload: name
              });
            }
          }
        };

        var DOMPropertyOperations_1 = DOMPropertyOperations;

        var ReactControlledValuePropTypes = {
          checkPropTypes: null
        };

        {
          var warning$9 = require$$0;
          var emptyFunction$2 = emptyFunction;
          var PropTypes = propTypes;
          var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

          ReactControlledValuePropTypes.checkPropTypes = emptyFunction$2;
          var hasReadOnlyValue = {
            button: true,
            checkbox: true,
            image: true,
            hidden: true,
            radio: true,
            reset: true,
            submit: true
          };

          var propTypes$1 = {
            value: function value(props, propName, componentName) {
              if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
                return null;
              }
              return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
            },
            checked: function checked(props, propName, componentName) {
              if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
                return null;
              }
              return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
            },
            onChange: PropTypes.func
          };

          var loggedTypeFailures = {};

          /**
           * Provide a linked `value` attribute for controlled forms. You should not use
           * this outside of the ReactDOM controlled form components.
           */
          ReactControlledValuePropTypes.checkPropTypes = function (tagName, props, getStack) {
            for (var propName in propTypes$1) {
              if (propTypes$1.hasOwnProperty(propName)) {
                var error = propTypes$1[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
              }
              if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                // Only monitor this failure once because there tends to be a lot of the
                // same error.
                loggedTypeFailures[error.message] = true;

                warning$9(false, 'Failed form propType: %s%s', error.message, getStack());
              }
            }
          };
        }

        var ReactControlledValuePropTypes_1 = ReactControlledValuePropTypes;

        var getCurrentFiberOwnerName$3 = ReactDebugCurrentFiber_1.getCurrentFiberOwnerName;

        {
          var _require2$3 = ReactDebugCurrentFiber_1,
              getCurrentFiberStackAddendum$2 = _require2$3.getCurrentFiberStackAddendum;

          var warning$8 = require$$0;
        }

        var didWarnValueDefaultValue = false;
        var didWarnCheckedDefaultChecked = false;
        var didWarnControlledToUncontrolled = false;
        var didWarnUncontrolledToControlled = false;

        function isControlled(props) {
          var usesChecked = props.type === 'checkbox' || props.type === 'radio';
          return usesChecked ? props.checked != null : props.value != null;
        }

        /**
         * Implements an <input> host component that allows setting these optional
         * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
         *
         * If `checked` or `value` are not supplied (or null/undefined), user actions
         * that affect the checked state or value will trigger updates to the element.
         *
         * If they are supplied (and not null/undefined), the rendered element will not
         * trigger updates to the element. Instead, the props must change in order for
         * the rendered element to be updated.
         *
         * The rendered element will be initialized as unchecked (or `defaultChecked`)
         * with an empty value (or `defaultValue`).
         *
         * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
         */
        var ReactDOMInput = {
          getHostProps: function getHostProps(element, props) {
            var node = element;
            var value = props.value;
            var checked = props.checked;

            var hostProps = _assign({
              // Make sure we set .type before any other properties (setting .value
              // before .type means .value is lost in IE11 and below)
              type: undefined,
              // Make sure we set .step before .value (setting .value before .step
              // means .value is rounded on mount, based upon step precision)
              step: undefined,
              // Make sure we set .min & .max before .value (to ensure proper order
              // in corner cases such as min or max deriving from value, e.g. Issue #7170)
              min: undefined,
              max: undefined
            }, props, {
              defaultChecked: undefined,
              defaultValue: undefined,
              value: value != null ? value : node._wrapperState.initialValue,
              checked: checked != null ? checked : node._wrapperState.initialChecked
            });

            return hostProps;
          },

          initWrapperState: function initWrapperState(element, props) {
            {
              ReactControlledValuePropTypes_1.checkPropTypes('input', props, getCurrentFiberStackAddendum$2);

              if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
                warning$8(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName$3() || 'A component', props.type);
                didWarnCheckedDefaultChecked = true;
              }
              if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
                warning$8(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerName$3() || 'A component', props.type);
                didWarnValueDefaultValue = true;
              }
            }

            var defaultValue = props.defaultValue;
            var node = element;
            node._wrapperState = {
              initialChecked: props.checked != null ? props.checked : props.defaultChecked,
              initialValue: props.value != null ? props.value : defaultValue,
              controlled: isControlled(props)
            };
          },

          updateWrapper: function updateWrapper(element, props) {
            var node = element;
            {
              var controlled = isControlled(props);

              if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
                warning$8(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum$2());
                didWarnUncontrolledToControlled = true;
              }
              if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
                warning$8(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components%s', props.type, getCurrentFiberStackAddendum$2());
                didWarnControlledToUncontrolled = true;
              }
            }

            var checked = props.checked;
            if (checked != null) {
              DOMPropertyOperations_1.setValueForProperty(node, 'checked', checked || false);
            }

            var value = props.value;
            if (value != null) {
              if (value === 0 && node.value === '') {
                node.value = '0';
                // Note: IE9 reports a number inputs as 'text', so check props instead.
              } else if (props.type === 'number') {
                // Simulate `input.valueAsNumber`. IE9 does not support it
                var valueAsNumber = parseFloat(node.value) || 0;

                if (
                // eslint-disable-next-line
                value != valueAsNumber ||
                // eslint-disable-next-line
                value == valueAsNumber && node.value != value) {
                  // Cast `value` to a string to ensure the value is set correctly. While
                  // browsers typically do this as necessary, jsdom doesn't.
                  node.value = '' + value;
                }
              } else if (node.value !== '' + value) {
                // Cast `value` to a string to ensure the value is set correctly. While
                // browsers typically do this as necessary, jsdom doesn't.
                node.value = '' + value;
              }
            } else {
              if (props.value == null && props.defaultValue != null) {
                // In Chrome, assigning defaultValue to certain input types triggers input validation.
                // For number inputs, the display value loses trailing decimal points. For email inputs,
                // Chrome raises "The specified value <x> is not a valid email address".
                //
                // Here we check to see if the defaultValue has actually changed, avoiding these problems
                // when the user is inputting text
                //
                // https://github.com/facebook/react/issues/7253
                if (node.defaultValue !== '' + props.defaultValue) {
                  node.defaultValue = '' + props.defaultValue;
                }
              }
              if (props.checked == null && props.defaultChecked != null) {
                node.defaultChecked = !!props.defaultChecked;
              }
            }
          },

          postMountWrapper: function postMountWrapper(element, props) {
            var node = element;

            // Detach value from defaultValue. We won't do anything if we're working on
            // submit or reset inputs as those values & defaultValues are linked. They
            // are not resetable nodes so this operation doesn't matter and actually
            // removes browser-default values (eg "Submit Query") when no value is
            // provided.

            switch (props.type) {
              case 'submit':
              case 'reset':
                break;
              case 'color':
              case 'date':
              case 'datetime':
              case 'datetime-local':
              case 'month':
              case 'time':
              case 'week':
                // This fixes the no-show issue on iOS Safari and Android Chrome:
                // https://github.com/facebook/react/issues/7233
                node.value = '';
                node.value = node.defaultValue;
                break;
              default:
                node.value = node.value;
                break;
            }

            // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
            // this is needed to work around a chrome bug where setting defaultChecked
            // will sometimes influence the value of checked (even after detachment).
            // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
            // We need to temporarily unset name to avoid disrupting radio button groups.
            var name = node.name;
            if (name !== '') {
              node.name = '';
            }
            node.defaultChecked = !node.defaultChecked;
            node.defaultChecked = !node.defaultChecked;
            if (name !== '') {
              node.name = name;
            }
          },

          restoreControlledState: function restoreControlledState(element, props) {
            var node = element;
            ReactDOMInput.updateWrapper(node, props);
            updateNamedCousins(node, props);
          }
        };

        function updateNamedCousins(rootNode, props) {
          var name = props.name;
          if (props.type === 'radio' && name != null) {
            var queryRoot = rootNode;

            while (queryRoot.parentNode) {
              queryRoot = queryRoot.parentNode;
            }

            // If `rootNode.form` was non-null, then we could try `form.elements`,
            // but that sometimes behaves strangely in IE8. We could also try using
            // `form.getElementsByName`, but that will only return direct children
            // and won't include inputs that use the HTML5 `form=` attribute. Since
            // the input might not even be in a form. It might not even be in the
            // document. Let's just use the local `querySelectorAll` to ensure we don't
            // miss anything.
            var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

            for (var i = 0; i < group.length; i++) {
              var otherNode = group[i];
              if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                continue;
              }
              // This will throw if radio buttons rendered by different copies of React
              // and the same name are rendered into the same form (same as #1939).
              // That's probably okay; we don't support it just as we don't support
              // mixing React radio buttons with non-React ones.
              var otherProps = ReactDOMComponentTree_1.getFiberCurrentPropsFromNode(otherNode);
              !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;
              // If this is a controlled radio button group, forcing the input that
              // was previously checked to update will cause it to be come re-checked
              // as appropriate.
              ReactDOMInput.updateWrapper(otherNode, otherProps);
            }
          }
        }

        var ReactDOMFiberInput = ReactDOMInput;

        {
          var warning$10 = require$$0;
        }

        function flattenChildren(children) {
          var content = '';

          // Flatten children and warn if they aren't strings or numbers;
          // invalid types are ignored.
          // We can silently skip them because invalid DOM nesting warning
          // catches these cases in Fiber.
          react.Children.forEach(children, function (child) {
            if (child == null) {
              return;
            }
            if (typeof child === 'string' || typeof child === 'number') {
              content += child;
            }
          });

          return content;
        }

        /**
         * Implements an <option> host component that warns when `selected` is set.
         */
        var ReactDOMOption = {
          validateProps: function validateProps(element, props) {
            // TODO (yungsters): Remove support for `selected` in <option>.
            {
              warning$10(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
            }
          },

          postMountWrapper: function postMountWrapper(element, props) {
            // value="" should make a value attribute (#6219)
            if (props.value != null) {
              element.setAttribute('value', props.value);
            }
          },

          getHostProps: function getHostProps(element, props) {
            var hostProps = _assign({ children: undefined }, props);

            var content = flattenChildren(props.children);

            if (content) {
              hostProps.children = content;
            }

            return hostProps;
          }
        };

        var ReactDOMFiberOption = ReactDOMOption;

        var getCurrentFiberOwnerName$4 = ReactDebugCurrentFiber_1.getCurrentFiberOwnerName;

        {
          var didWarnValueDefaultValue$1 = false;
          var warning$11 = require$$0;

          var _require2$4 = ReactDebugCurrentFiber_1,
              getCurrentFiberStackAddendum$3 = _require2$4.getCurrentFiberStackAddendum;
        }

        function getDeclarationErrorAddendum() {
          var ownerName = getCurrentFiberOwnerName$4();
          if (ownerName) {
            return '\n\nCheck the render method of `' + ownerName + '`.';
          }
          return '';
        }

        var valuePropNames = ['value', 'defaultValue'];

        /**
         * Validation function for `value` and `defaultValue`.
         */
        function checkSelectPropTypes(props) {
          ReactControlledValuePropTypes_1.checkPropTypes('select', props, getCurrentFiberStackAddendum$3);

          for (var i = 0; i < valuePropNames.length; i++) {
            var propName = valuePropNames[i];
            if (props[propName] == null) {
              continue;
            }
            var isArray = Array.isArray(props[propName]);
            if (props.multiple && !isArray) {
              warning$11(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
            } else if (!props.multiple && isArray) {
              warning$11(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
            }
          }
        }

        function updateOptions(node, multiple, propValue) {
          var options = node.options;

          if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for (var i = 0; i < selectedValues.length; i++) {
              // Prefix to avoid chaos with special keys.
              selectedValue['$' + selectedValues[i]] = true;
            }
            for (var _i = 0; _i < options.length; _i++) {
              var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
              if (options[_i].selected !== selected) {
                options[_i].selected = selected;
              }
            }
          } else {
            // Do not set `select.value` as exact behavior isn't consistent across all
            // browsers for all cases.
            var _selectedValue = '' + propValue;
            var defaultSelected = null;
            for (var _i2 = 0; _i2 < options.length; _i2++) {
              if (options[_i2].value === _selectedValue) {
                options[_i2].selected = true;
                return;
              }
              if (defaultSelected === null && !options[_i2].disabled) {
                defaultSelected = options[_i2];
              }
            }
            if (defaultSelected !== null) {
              defaultSelected.selected = true;
            }
          }
        }

        /**
         * Implements a <select> host component that allows optionally setting the
         * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
         * stringable. If `multiple` is true, the prop must be an array of stringables.
         *
         * If `value` is not supplied (or null/undefined), user actions that change the
         * selected option will trigger updates to the rendered options.
         *
         * If it is supplied (and not null/undefined), the rendered options will not
         * update in response to user actions. Instead, the `value` prop must change in
         * order for the rendered options to update.
         *
         * If `defaultValue` is provided, any options with the supplied values will be
         * selected.
         */
        var ReactDOMSelect = {
          getHostProps: function getHostProps(element, props) {
            return _assign({}, props, {
              value: undefined
            });
          },

          initWrapperState: function initWrapperState(element, props) {
            var node = element;
            {
              checkSelectPropTypes(props);
            }

            var value = props.value;
            node._wrapperState = {
              initialValue: value != null ? value : props.defaultValue,
              wasMultiple: !!props.multiple
            };

            {
              if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
                warning$11(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
                didWarnValueDefaultValue$1 = true;
              }
            }
          },

          postMountWrapper: function postMountWrapper(element, props) {
            var node = element;
            node.multiple = !!props.multiple;
            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value);
            } else if (props.defaultValue != null) {
              updateOptions(node, !!props.multiple, props.defaultValue);
            }
          },

          postUpdateWrapper: function postUpdateWrapper(element, props) {
            var node = element;
            // After the initial mount, we control selected-ness manually so don't pass
            // this value down
            node._wrapperState.initialValue = undefined;

            var wasMultiple = node._wrapperState.wasMultiple;
            node._wrapperState.wasMultiple = !!props.multiple;

            var value = props.value;
            if (value != null) {
              updateOptions(node, !!props.multiple, value);
            } else if (wasMultiple !== !!props.multiple) {
              // For simplicity, reapply `defaultValue` if `multiple` is toggled.
              if (props.defaultValue != null) {
                updateOptions(node, !!props.multiple, props.defaultValue);
              } else {
                // Revert the select back to its default unselected state.
                updateOptions(node, !!props.multiple, props.multiple ? [] : '');
              }
            }
          },

          restoreControlledState: function restoreControlledState(element, props) {
            var node = element;
            var value = props.value;

            if (value != null) {
              updateOptions(node, !!props.multiple, value);
            }
          }
        };

        var ReactDOMFiberSelect = ReactDOMSelect;

        {
          var warning$12 = require$$0;

          var _require$4 = ReactDebugCurrentFiber_1,
              getCurrentFiberStackAddendum$4 = _require$4.getCurrentFiberStackAddendum;
        }

        var didWarnValDefaultVal = false;

        /**
         * Implements a <textarea> host component that allows setting `value`, and
         * `defaultValue`. This differs from the traditional DOM API because value is
         * usually set as PCDATA children.
         *
         * If `value` is not supplied (or null/undefined), user actions that affect the
         * value will trigger updates to the element.
         *
         * If `value` is supplied (and not null/undefined), the rendered element will
         * not trigger updates to the element. Instead, the `value` prop must change in
         * order for the rendered element to be updated.
         *
         * The rendered element will be initialized with an empty value, the prop
         * `defaultValue` if specified, or the children content (deprecated).
         */
        var ReactDOMTextarea = {
          getHostProps: function getHostProps(element, props) {
            var node = element;
            !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

            // Always set children to the same thing. In IE9, the selection range will
            // get reset if `textContent` is mutated.  We could add a check in setTextContent
            // to only set the value if/when the value differs from the node value (which would
            // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
            // solution. The value can be a boolean or object so that's why it's forced
            // to be a string.
            var hostProps = _assign({}, props, {
              value: undefined,
              defaultValue: undefined,
              children: '' + node._wrapperState.initialValue
            });

            return hostProps;
          },

          initWrapperState: function initWrapperState(element, props) {
            var node = element;
            {
              ReactControlledValuePropTypes_1.checkPropTypes('textarea', props, getCurrentFiberStackAddendum$4);
              if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
                warning$12(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
                didWarnValDefaultVal = true;
              }
            }

            var value = props.value;
            var initialValue = value;

            // Only bother fetching default value if we're going to use it
            if (value == null) {
              var defaultValue = props.defaultValue;
              // TODO (yungsters): Remove support for children content in <textarea>.
              var children = props.children;
              if (children != null) {
                {
                  warning$12(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
                }
                !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
                if (Array.isArray(children)) {
                  !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
                  children = children[0];
                }

                defaultValue = '' + children;
              }
              if (defaultValue == null) {
                defaultValue = '';
              }
              initialValue = defaultValue;
            }

            node._wrapperState = {
              initialValue: '' + initialValue
            };
          },

          updateWrapper: function updateWrapper(element, props) {
            var node = element;
            var value = props.value;
            if (value != null) {
              // Cast `value` to a string to ensure the value is set correctly. While
              // browsers typically do this as necessary, jsdom doesn't.
              var newValue = '' + value;

              // To avoid side effects (such as losing text selection), only set value if changed
              if (newValue !== node.value) {
                node.value = newValue;
              }
              if (props.defaultValue == null) {
                node.defaultValue = newValue;
              }
            }
            if (props.defaultValue != null) {
              node.defaultValue = props.defaultValue;
            }
          },

          postMountWrapper: function postMountWrapper(element, props) {
            var node = element;
            // This is in postMount because we need access to the DOM node, which is not
            // available until after the component has mounted.
            var textContent = node.textContent;

            // Only set node.value if textContent is equal to the expected
            // initial value. In IE10/IE11 there is a bug where the placeholder attribute
            // will populate textContent as well.
            // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
            if (textContent === node._wrapperState.initialValue) {
              node.value = textContent;
            }
          },

          restoreControlledState: function restoreControlledState(element, props) {
            // DOM component is still mounted; update
            ReactDOMTextarea.updateWrapper(element, props);
          }
        };

        var ReactDOMFiberTextarea = ReactDOMTextarea;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule omittedCloseTags
         */

        // For HTML, certain tags should omit their close tag. We keep a whitelist for
        // those special-case tags.

        var omittedCloseTags = {
          area: true,
          base: true,
          br: true,
          col: true,
          embed: true,
          hr: true,
          img: true,
          input: true,
          keygen: true,
          link: true,
          meta: true,
          param: true,
          source: true,
          track: true,
          wbr: true
        };

        var omittedCloseTags_1 = omittedCloseTags;

        // For HTML, certain tags cannot have children. This has the same purpose as
        // `omittedCloseTags` except that `menuitem` should still have its closing tag.

        var voidElementTags = _assign({
          menuitem: true
        }, omittedCloseTags_1);

        var voidElementTags_1 = voidElementTags;

        {
          var warning$13 = require$$0;
        }

        var HTML$1 = '__html';

        function getDeclarationErrorAddendum$1(getCurrentOwnerName) {
          {
            var ownerName = getCurrentOwnerName();
            if (ownerName) {
              // TODO: also report the stack.
              return '\n\nThis DOM node was rendered by `' + ownerName + '`.';
            }
          }
          return '';
        }

        function assertValidProps(tag, props, getCurrentOwnerName) {
          if (!props) {
            return;
          }
          // Note the use of `==` which checks for null or undefined.
          if (voidElementTags_1[tag]) {
            !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, getDeclarationErrorAddendum$1(getCurrentOwnerName)) : void 0;
          }
          if (props.dangerouslySetInnerHTML != null) {
            !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
            !(_typeof4(props.dangerouslySetInnerHTML) === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
          }
          {
            warning$13(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.');
          }
          !(props.style == null || _typeof4(props.style) === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum$1(getCurrentOwnerName)) : void 0;
        }

        var assertValidProps_1 = assertValidProps;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule inputValueTracking
         * 
         */

        function isCheckable(elem) {
          var type = elem.type;
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
        }

        function getTracker(node) {
          return node._valueTracker;
        }

        function detachTracker(node) {
          node._valueTracker = null;
        }

        function getValueFromNode(node) {
          var value = '';
          if (!node) {
            return value;
          }

          if (isCheckable(node)) {
            value = node.checked ? 'true' : 'false';
          } else {
            value = node.value;
          }

          return value;
        }

        function trackValueOnNode(node) {
          var valueField = isCheckable(node) ? 'checked' : 'value';
          var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

          var currentValue = '' + node[valueField];

          // if someone has already defined a value or Safari, then bail
          // and don't track value will cause over reporting of changes,
          // but it's better then a hard failure
          // (needed for certain tests that spyOn input values and Safari)
          if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
            return;
          }

          Object.defineProperty(node, valueField, {
            enumerable: descriptor.enumerable,
            configurable: true,
            get: function get() {
              return descriptor.get.call(this);
            },
            set: function set(value) {
              currentValue = '' + value;
              descriptor.set.call(this, value);
            }
          });

          var tracker = {
            getValue: function getValue() {
              return currentValue;
            },
            setValue: function setValue(value) {
              currentValue = '' + value;
            },
            stopTracking: function stopTracking() {
              detachTracker(node);
              delete node[valueField];
            }
          };
          return tracker;
        }

        var inputValueTracking = {
          // exposed for testing
          _getTrackerFromNode: getTracker,

          track: function track(node) {
            if (getTracker(node)) {
              return;
            }

            // TODO: Once it's just Fiber we can move this to node._wrapperState
            node._valueTracker = trackValueOnNode(node);
          },
          updateValueIfChanged: function updateValueIfChanged(node) {
            if (!node) {
              return false;
            }

            var tracker = getTracker(node);
            // if there is no tracker at this point it's unlikely
            // that trying again will succeed
            if (!tracker) {
              return true;
            }

            var lastValue = tracker.getValue();
            var nextValue = getValueFromNode(node);
            if (nextValue !== lastValue) {
              tracker.setValue(nextValue);
              return true;
            }
            return false;
          },
          stopTracking: function stopTracking(node) {
            var tracker = getTracker(node);
            if (tracker) {
              tracker.stopTracking();
            }
          }
        };

        var inputValueTracking_1 = inputValueTracking;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule isCustomComponent
         * 
         */

        function isCustomComponent(tagName, props) {
          if (tagName.indexOf('-') === -1) {
            return typeof props.is === 'string';
          }
          switch (tagName) {
            // These are reserved SVG and MathML elements.
            // We don't mind this whitelist too much because we expect it to never grow.
            // The alternative is to track the namespace in a few places which is convoluted.
            // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
              return false;
            default:
              return true;
          }
        }

        var isCustomComponent_1 = isCustomComponent;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule createMicrosoftUnsafeLocalFunction
         */

        /* globals MSApp */

        /**
         * Create a function which has 'unsafe' privileges (required by windows8 apps)
         */

        var createMicrosoftUnsafeLocalFunction = function createMicrosoftUnsafeLocalFunction(func) {
          if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
            return function (arg0, arg1, arg2, arg3) {
              MSApp.execUnsafeLocalFunction(function () {
                return func(arg0, arg1, arg2, arg3);
              });
            };
          } else {
            return func;
          }
        };

        var createMicrosoftUnsafeLocalFunction_1 = createMicrosoftUnsafeLocalFunction;

        var Namespaces$1 = DOMNamespaces.Namespaces;

        // SVG temp container for IE lacking innerHTML
        var reusableSVGContainer;

        /**
         * Set the innerHTML property of a node
         *
         * @param {DOMElement} node
         * @param {string} html
         * @internal
         */
        var setInnerHTML = createMicrosoftUnsafeLocalFunction_1(function (node, html) {
          // IE does not have innerHTML for SVG nodes, so instead we inject the
          // new markup in a temp node and then move the child nodes across into
          // the target node
          if (node.namespaceURI === Namespaces$1.svg && !('innerHTML' in node)) {
            reusableSVGContainer = reusableSVGContainer || document.createElement('div');
            reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
            var svgNode = reusableSVGContainer.firstChild;
            while (svgNode.firstChild) {
              node.appendChild(svgNode.firstChild);
            }
          } else {
            node.innerHTML = html;
          }
        });

        var setInnerHTML_1 = setInnerHTML;

        /**
         * Copyright (c) 2016-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * Based on the escape-html library, which is used under the MIT License below:
         *
         * Copyright (c) 2012-2013 TJ Holowaychuk
         * Copyright (c) 2015 Andreas Lubbe
         * Copyright (c) 2015 Tiancheng "Timothy" Gu
         *
         * Permission is hereby granted, free of charge, to any person obtaining
         * a copy of this software and associated documentation files (the
         * 'Software'), to deal in the Software without restriction, including
         * without limitation the rights to use, copy, modify, merge, publish,
         * distribute, sublicense, and/or sell copies of the Software, and to
         * permit persons to whom the Software is furnished to do so, subject to
         * the following conditions:
         *
         * The above copyright notice and this permission notice shall be
         * included in all copies or substantial portions of the Software.
         *
         * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
         * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
         * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
         * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
         * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
         * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
         * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
         *
         * @providesModule escapeTextContentForBrowser
         */

        // code copied and modified from escape-html
        /**
         * Module variables.
         * @private
         */

        var matchHtmlRegExp = /["'&<>]/;

        /**
         * Escape special characters in the given string of html.
         *
         * @param  {string} string The string to escape for inserting into HTML
         * @return {string}
         * @public
         */

        function escapeHtml(string) {
          var str = '' + string;
          var match = matchHtmlRegExp.exec(str);

          if (!match) {
            return str;
          }

          var escape;
          var html = '';
          var index = 0;
          var lastIndex = 0;

          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                // "
                escape = '&quot;';
                break;
              case 38:
                // &
                escape = '&amp;';
                break;
              case 39:
                // '
                escape = '&#x27;'; // modified from escape-html; used to be '&#39'
                break;
              case 60:
                // <
                escape = '&lt;';
                break;
              case 62:
                // >
                escape = '&gt;';
                break;
              default:
                continue;
            }

            if (lastIndex !== index) {
              html += str.substring(lastIndex, index);
            }

            lastIndex = index + 1;
            html += escape;
          }

          return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
        }
        // end code copied and modified from escape-html

        /**
         * Escapes text to prevent scripting attacks.
         *
         * @param {*} text Text value to escape.
         * @return {string} An escaped string.
         */
        function escapeTextContentForBrowser(text) {
          if (typeof text === 'boolean' || typeof text === 'number') {
            // this shortcircuit helps perf for types that we know will never have
            // special characters, especially given that this function is used often
            // for numeric dom ids.
            return '' + text;
          }
          return escapeHtml(text);
        }

        var escapeTextContentForBrowser_1 = escapeTextContentForBrowser;

        var TEXT_NODE$2 = HTMLNodeType_1.TEXT_NODE;

        /**
         * Set the textContent property of a node, ensuring that whitespace is preserved
         * even in IE8. innerText is a poor substitute for textContent and, among many
         * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
         * as it should.
         *
         * @param {DOMElement} node
         * @param {string} text
         * @internal
         */

        var setTextContent = function setTextContent(node, text) {
          if (text) {
            var firstChild = node.firstChild;

            if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE$2) {
              firstChild.nodeValue = text;
              return;
            }
          }
          node.textContent = text;
        };

        if (ExecutionEnvironment.canUseDOM) {
          if (!('textContent' in document.documentElement)) {
            setTextContent = function setTextContent(node, text) {
              if (node.nodeType === TEXT_NODE$2) {
                node.nodeValue = text;
                return;
              }
              setInnerHTML_1(node, escapeTextContentForBrowser_1(text));
            };
          }
        }

        var setTextContent_1 = setTextContent;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule validAriaProperties
         */

        var ariaProperties = {
          'aria-current': 0, // state
          'aria-details': 0,
          'aria-disabled': 0, // state
          'aria-hidden': 0, // state
          'aria-invalid': 0, // state
          'aria-keyshortcuts': 0,
          'aria-label': 0,
          'aria-roledescription': 0,
          // Widget Attributes
          'aria-autocomplete': 0,
          'aria-checked': 0,
          'aria-expanded': 0,
          'aria-haspopup': 0,
          'aria-level': 0,
          'aria-modal': 0,
          'aria-multiline': 0,
          'aria-multiselectable': 0,
          'aria-orientation': 0,
          'aria-placeholder': 0,
          'aria-pressed': 0,
          'aria-readonly': 0,
          'aria-required': 0,
          'aria-selected': 0,
          'aria-sort': 0,
          'aria-valuemax': 0,
          'aria-valuemin': 0,
          'aria-valuenow': 0,
          'aria-valuetext': 0,
          // Live Region Attributes
          'aria-atomic': 0,
          'aria-busy': 0,
          'aria-live': 0,
          'aria-relevant': 0,
          // Drag-and-Drop Attributes
          'aria-dropeffect': 0,
          'aria-grabbed': 0,
          // Relationship Attributes
          'aria-activedescendant': 0,
          'aria-colcount': 0,
          'aria-colindex': 0,
          'aria-colspan': 0,
          'aria-controls': 0,
          'aria-describedby': 0,
          'aria-errormessage': 0,
          'aria-flowto': 0,
          'aria-labelledby': 0,
          'aria-owns': 0,
          'aria-posinset': 0,
          'aria-rowcount': 0,
          'aria-rowindex': 0,
          'aria-rowspan': 0,
          'aria-setsize': 0
        };

        var validAriaProperties$1 = ariaProperties;

        var warnedProperties = {};
        var rARIA = new RegExp('^(aria)-[' + DOMProperty_1.ATTRIBUTE_NAME_CHAR + ']*$');
        var rARIACamel = new RegExp('^(aria)[A-Z][' + DOMProperty_1.ATTRIBUTE_NAME_CHAR + ']*$');

        var hasOwnProperty = Object.prototype.hasOwnProperty;

        {
          var warning$14 = require$$0;

          var _require$5 = ReactGlobalSharedState_1,
              ReactComponentTreeHook$1 = _require$5.ReactComponentTreeHook,
              ReactDebugCurrentFrame$1 = _require$5.ReactDebugCurrentFrame;

          var getStackAddendumByID = ReactComponentTreeHook$1.getStackAddendumByID;

          var validAriaProperties = validAriaProperties$1;
        }

        function getStackAddendum(debugID) {
          if (debugID != null) {
            // This can only happen on Stack
            return getStackAddendumByID(debugID);
          } else {
            // This can only happen on Fiber / Server
            var stack = ReactDebugCurrentFrame$1.getStackAddendum();
            return stack != null ? stack : '';
          }
        }

        function validateProperty(tagName, name, debugID) {
          if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
            return true;
          }

          if (rARIACamel.test(name)) {
            var ariaName = 'aria-' + name.slice(4).toLowerCase();
            var correctName = validAriaProperties.hasOwnProperty(ariaName) ? ariaName : null;

            // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (correctName == null) {
              warning$14(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.%s', name, getStackAddendum(debugID));
              warnedProperties[name] = true;
              return true;
            }
            // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== correctName) {
              warning$14(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?%s', name, correctName, getStackAddendum(debugID));
              warnedProperties[name] = true;
              return true;
            }
          }

          if (rARIA.test(name)) {
            var lowerCasedName = name.toLowerCase();
            var standardName = validAriaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

            // If this is an aria-* attribute, but is not listed in the known DOM
            // DOM properties, then it is an invalid aria-* attribute.
            if (standardName == null) {
              warnedProperties[name] = true;
              return false;
            }
            // aria-* attributes should be lowercase; suggest the lowercase version.
            if (name !== standardName) {
              warning$14(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum(debugID));
              warnedProperties[name] = true;
              return true;
            }
          }

          return true;
        }

        function warnInvalidARIAProps(type, props, debugID) {
          var invalidProps = [];

          for (var key in props) {
            var isValid = validateProperty(type, key, debugID);
            if (!isValid) {
              invalidProps.push(key);
            }
          }

          var unknownPropString = invalidProps.map(function (prop) {
            return '`' + prop + '`';
          }).join(', ');

          if (invalidProps.length === 1) {
            warning$14(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum(debugID));
          } else if (invalidProps.length > 1) {
            warning$14(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, type, getStackAddendum(debugID));
          }
        }

        function validateProperties(type, props, debugID /* Stack only */) {
          if (isCustomComponent_1(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props, debugID);
        }

        var ReactDOMInvalidARIAHook$1 = {
          // Fiber
          validateProperties: validateProperties,
          // Stack
          onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
            if (true && element != null && typeof element.type === 'string') {
              validateProperties(element.type, element.props, debugID);
            }
          },
          onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
            if (true && element != null && typeof element.type === 'string') {
              validateProperties(element.type, element.props, debugID);
            }
          }
        };

        var ReactDOMInvalidARIAHook_1 = ReactDOMInvalidARIAHook$1;

        {
          var warning$15 = require$$0;

          var _require$6 = ReactGlobalSharedState_1,
              ReactComponentTreeHook$2 = _require$6.ReactComponentTreeHook,
              ReactDebugCurrentFrame$2 = _require$6.ReactDebugCurrentFrame;

          var getStackAddendumByID$1 = ReactComponentTreeHook$2.getStackAddendumByID;
        }

        var didWarnValueNull = false;

        function getStackAddendum$1(debugID) {
          if (debugID != null) {
            // This can only happen on Stack
            return getStackAddendumByID$1(debugID);
          } else {
            // This can only happen on Fiber / Server
            var stack = ReactDebugCurrentFrame$2.getStackAddendum();
            return stack != null ? stack : '';
          }
        }

        function validateProperties$1(type, props, debugID /* Stack only */) {
          if (type !== 'input' && type !== 'textarea' && type !== 'select') {
            return;
          }
          if (props != null && props.value === null && !didWarnValueNull) {
            warning$15(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', type, getStackAddendum$1(debugID));

            didWarnValueNull = true;
          }
        }

        var ReactDOMNullInputValuePropHook$1 = {
          // Fiber
          validateProperties: validateProperties$1,
          // Stack
          onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
            if (true && element != null && typeof element.type === 'string') {
              validateProperties$1(element.type, element.props, debugID);
            }
          },
          onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
            if (true && element != null && typeof element.type === 'string') {
              validateProperties$1(element.type, element.props, debugID);
            }
          }
        };

        var ReactDOMNullInputValuePropHook_1 = ReactDOMNullInputValuePropHook$1;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule possibleStandardNames
         */

        // When adding attributes to the HTML or SVG whitelist, be sure to
        // also add them to this module to ensure casing and incorrect name
        // warnings.
        var possibleStandardNames$1 = {
          // HTML
          accept: 'accept',
          acceptcharset: 'acceptCharset',
          'accept-charset': 'acceptCharset',
          accesskey: 'accessKey',
          action: 'action',
          allowfullscreen: 'allowFullScreen',
          allowtransparency: 'allowTransparency',
          alt: 'alt',
          as: 'as',
          async: 'async',
          autocapitalize: 'autoCapitalize',
          autocomplete: 'autoComplete',
          autocorrect: 'autoCorrect',
          autofocus: 'autoFocus',
          autoplay: 'autoPlay',
          autosave: 'autoSave',
          capture: 'capture',
          cellpadding: 'cellPadding',
          cellspacing: 'cellSpacing',
          challenge: 'challenge',
          charset: 'charSet',
          checked: 'checked',
          children: 'children',
          cite: 'cite',
          'class': 'className',
          classid: 'classID',
          classname: 'className',
          cols: 'cols',
          colspan: 'colSpan',
          content: 'content',
          contenteditable: 'contentEditable',
          contextmenu: 'contextMenu',
          controls: 'controls',
          controlslist: 'controlsList',
          coords: 'coords',
          crossorigin: 'crossOrigin',
          dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
          data: 'data',
          datetime: 'dateTime',
          'default': 'default',
          defaultchecked: 'defaultChecked',
          defaultvalue: 'defaultValue',
          defer: 'defer',
          dir: 'dir',
          disabled: 'disabled',
          download: 'download',
          draggable: 'draggable',
          enctype: 'encType',
          'for': 'htmlFor',
          form: 'form',
          formmethod: 'formMethod',
          formaction: 'formAction',
          formenctype: 'formEncType',
          formnovalidate: 'formNoValidate',
          formtarget: 'formTarget',
          frameborder: 'frameBorder',
          headers: 'headers',
          height: 'height',
          hidden: 'hidden',
          high: 'high',
          href: 'href',
          hreflang: 'hrefLang',
          htmlfor: 'htmlFor',
          httpequiv: 'httpEquiv',
          'http-equiv': 'httpEquiv',
          icon: 'icon',
          id: 'id',
          innerhtml: 'innerHTML',
          inputmode: 'inputMode',
          integrity: 'integrity',
          is: 'is',
          itemid: 'itemID',
          itemprop: 'itemProp',
          itemref: 'itemRef',
          itemscope: 'itemScope',
          itemtype: 'itemType',
          keyparams: 'keyParams',
          keytype: 'keyType',
          kind: 'kind',
          label: 'label',
          lang: 'lang',
          list: 'list',
          loop: 'loop',
          low: 'low',
          manifest: 'manifest',
          marginwidth: 'marginWidth',
          marginheight: 'marginHeight',
          max: 'max',
          maxlength: 'maxLength',
          media: 'media',
          mediagroup: 'mediaGroup',
          method: 'method',
          min: 'min',
          minlength: 'minLength',
          multiple: 'multiple',
          muted: 'muted',
          name: 'name',
          nonce: 'nonce',
          novalidate: 'noValidate',
          open: 'open',
          optimum: 'optimum',
          pattern: 'pattern',
          placeholder: 'placeholder',
          playsinline: 'playsInline',
          poster: 'poster',
          preload: 'preload',
          profile: 'profile',
          radiogroup: 'radioGroup',
          readonly: 'readOnly',
          referrerpolicy: 'referrerPolicy',
          rel: 'rel',
          required: 'required',
          reversed: 'reversed',
          role: 'role',
          rows: 'rows',
          rowspan: 'rowSpan',
          sandbox: 'sandbox',
          scope: 'scope',
          scoped: 'scoped',
          scrolling: 'scrolling',
          seamless: 'seamless',
          selected: 'selected',
          shape: 'shape',
          size: 'size',
          sizes: 'sizes',
          span: 'span',
          spellcheck: 'spellCheck',
          src: 'src',
          srcdoc: 'srcDoc',
          srclang: 'srcLang',
          srcset: 'srcSet',
          start: 'start',
          step: 'step',
          style: 'style',
          summary: 'summary',
          tabindex: 'tabIndex',
          target: 'target',
          title: 'title',
          type: 'type',
          usemap: 'useMap',
          value: 'value',
          width: 'width',
          wmode: 'wmode',
          wrap: 'wrap',

          // SVG
          about: 'about',
          accentheight: 'accentHeight',
          'accent-height': 'accentHeight',
          accumulate: 'accumulate',
          additive: 'additive',
          alignmentbaseline: 'alignmentBaseline',
          'alignment-baseline': 'alignmentBaseline',
          allowreorder: 'allowReorder',
          alphabetic: 'alphabetic',
          amplitude: 'amplitude',
          arabicform: 'arabicForm',
          'arabic-form': 'arabicForm',
          ascent: 'ascent',
          attributename: 'attributeName',
          attributetype: 'attributeType',
          autoreverse: 'autoReverse',
          azimuth: 'azimuth',
          basefrequency: 'baseFrequency',
          baselineshift: 'baselineShift',
          'baseline-shift': 'baselineShift',
          baseprofile: 'baseProfile',
          bbox: 'bbox',
          begin: 'begin',
          bias: 'bias',
          by: 'by',
          calcmode: 'calcMode',
          capheight: 'capHeight',
          'cap-height': 'capHeight',
          clip: 'clip',
          clippath: 'clipPath',
          'clip-path': 'clipPath',
          clippathunits: 'clipPathUnits',
          cliprule: 'clipRule',
          'clip-rule': 'clipRule',
          color: 'color',
          colorinterpolation: 'colorInterpolation',
          'color-interpolation': 'colorInterpolation',
          colorinterpolationfilters: 'colorInterpolationFilters',
          'color-interpolation-filters': 'colorInterpolationFilters',
          colorprofile: 'colorProfile',
          'color-profile': 'colorProfile',
          colorrendering: 'colorRendering',
          'color-rendering': 'colorRendering',
          contentscripttype: 'contentScriptType',
          contentstyletype: 'contentStyleType',
          cursor: 'cursor',
          cx: 'cx',
          cy: 'cy',
          d: 'd',
          datatype: 'datatype',
          decelerate: 'decelerate',
          descent: 'descent',
          diffuseconstant: 'diffuseConstant',
          direction: 'direction',
          display: 'display',
          divisor: 'divisor',
          dominantbaseline: 'dominantBaseline',
          'dominant-baseline': 'dominantBaseline',
          dur: 'dur',
          dx: 'dx',
          dy: 'dy',
          edgemode: 'edgeMode',
          elevation: 'elevation',
          enablebackground: 'enableBackground',
          'enable-background': 'enableBackground',
          end: 'end',
          exponent: 'exponent',
          externalresourcesrequired: 'externalResourcesRequired',
          fill: 'fill',
          fillopacity: 'fillOpacity',
          'fill-opacity': 'fillOpacity',
          fillrule: 'fillRule',
          'fill-rule': 'fillRule',
          filter: 'filter',
          filterres: 'filterRes',
          filterunits: 'filterUnits',
          floodopacity: 'floodOpacity',
          'flood-opacity': 'floodOpacity',
          floodcolor: 'floodColor',
          'flood-color': 'floodColor',
          focusable: 'focusable',
          fontfamily: 'fontFamily',
          'font-family': 'fontFamily',
          fontsize: 'fontSize',
          'font-size': 'fontSize',
          fontsizeadjust: 'fontSizeAdjust',
          'font-size-adjust': 'fontSizeAdjust',
          fontstretch: 'fontStretch',
          'font-stretch': 'fontStretch',
          fontstyle: 'fontStyle',
          'font-style': 'fontStyle',
          fontvariant: 'fontVariant',
          'font-variant': 'fontVariant',
          fontweight: 'fontWeight',
          'font-weight': 'fontWeight',
          format: 'format',
          from: 'from',
          fx: 'fx',
          fy: 'fy',
          g1: 'g1',
          g2: 'g2',
          glyphname: 'glyphName',
          'glyph-name': 'glyphName',
          glyphorientationhorizontal: 'glyphOrientationHorizontal',
          'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
          glyphorientationvertical: 'glyphOrientationVertical',
          'glyph-orientation-vertical': 'glyphOrientationVertical',
          glyphref: 'glyphRef',
          gradienttransform: 'gradientTransform',
          gradientunits: 'gradientUnits',
          hanging: 'hanging',
          horizadvx: 'horizAdvX',
          'horiz-adv-x': 'horizAdvX',
          horizoriginx: 'horizOriginX',
          'horiz-origin-x': 'horizOriginX',
          ideographic: 'ideographic',
          imagerendering: 'imageRendering',
          'image-rendering': 'imageRendering',
          in2: 'in2',
          'in': 'in',
          inlist: 'inlist',
          intercept: 'intercept',
          k1: 'k1',
          k2: 'k2',
          k3: 'k3',
          k4: 'k4',
          k: 'k',
          kernelmatrix: 'kernelMatrix',
          kernelunitlength: 'kernelUnitLength',
          kerning: 'kerning',
          keypoints: 'keyPoints',
          keysplines: 'keySplines',
          keytimes: 'keyTimes',
          lengthadjust: 'lengthAdjust',
          letterspacing: 'letterSpacing',
          'letter-spacing': 'letterSpacing',
          lightingcolor: 'lightingColor',
          'lighting-color': 'lightingColor',
          limitingconeangle: 'limitingConeAngle',
          local: 'local',
          markerend: 'markerEnd',
          'marker-end': 'markerEnd',
          markerheight: 'markerHeight',
          markermid: 'markerMid',
          'marker-mid': 'markerMid',
          markerstart: 'markerStart',
          'marker-start': 'markerStart',
          markerunits: 'markerUnits',
          markerwidth: 'markerWidth',
          mask: 'mask',
          maskcontentunits: 'maskContentUnits',
          maskunits: 'maskUnits',
          mathematical: 'mathematical',
          mode: 'mode',
          numoctaves: 'numOctaves',
          offset: 'offset',
          opacity: 'opacity',
          operator: 'operator',
          order: 'order',
          orient: 'orient',
          orientation: 'orientation',
          origin: 'origin',
          overflow: 'overflow',
          overlineposition: 'overlinePosition',
          'overline-position': 'overlinePosition',
          overlinethickness: 'overlineThickness',
          'overline-thickness': 'overlineThickness',
          paintorder: 'paintOrder',
          'paint-order': 'paintOrder',
          panose1: 'panose1',
          'panose-1': 'panose1',
          pathlength: 'pathLength',
          patterncontentunits: 'patternContentUnits',
          patterntransform: 'patternTransform',
          patternunits: 'patternUnits',
          pointerevents: 'pointerEvents',
          'pointer-events': 'pointerEvents',
          points: 'points',
          pointsatx: 'pointsAtX',
          pointsaty: 'pointsAtY',
          pointsatz: 'pointsAtZ',
          prefix: 'prefix',
          preservealpha: 'preserveAlpha',
          preserveaspectratio: 'preserveAspectRatio',
          primitiveunits: 'primitiveUnits',
          property: 'property',
          r: 'r',
          radius: 'radius',
          refx: 'refX',
          refy: 'refY',
          renderingintent: 'renderingIntent',
          'rendering-intent': 'renderingIntent',
          repeatcount: 'repeatCount',
          repeatdur: 'repeatDur',
          requiredextensions: 'requiredExtensions',
          requiredfeatures: 'requiredFeatures',
          resource: 'resource',
          restart: 'restart',
          result: 'result',
          results: 'results',
          rotate: 'rotate',
          rx: 'rx',
          ry: 'ry',
          scale: 'scale',
          security: 'security',
          seed: 'seed',
          shaperendering: 'shapeRendering',
          'shape-rendering': 'shapeRendering',
          slope: 'slope',
          spacing: 'spacing',
          specularconstant: 'specularConstant',
          specularexponent: 'specularExponent',
          speed: 'speed',
          spreadmethod: 'spreadMethod',
          startoffset: 'startOffset',
          stddeviation: 'stdDeviation',
          stemh: 'stemh',
          stemv: 'stemv',
          stitchtiles: 'stitchTiles',
          stopcolor: 'stopColor',
          'stop-color': 'stopColor',
          stopopacity: 'stopOpacity',
          'stop-opacity': 'stopOpacity',
          strikethroughposition: 'strikethroughPosition',
          'strikethrough-position': 'strikethroughPosition',
          strikethroughthickness: 'strikethroughThickness',
          'strikethrough-thickness': 'strikethroughThickness',
          string: 'string',
          stroke: 'stroke',
          strokedasharray: 'strokeDasharray',
          'stroke-dasharray': 'strokeDasharray',
          strokedashoffset: 'strokeDashoffset',
          'stroke-dashoffset': 'strokeDashoffset',
          strokelinecap: 'strokeLinecap',
          'stroke-linecap': 'strokeLinecap',
          strokelinejoin: 'strokeLinejoin',
          'stroke-linejoin': 'strokeLinejoin',
          strokemiterlimit: 'strokeMiterlimit',
          'stroke-miterlimit': 'strokeMiterlimit',
          strokewidth: 'strokeWidth',
          'stroke-width': 'strokeWidth',
          strokeopacity: 'strokeOpacity',
          'stroke-opacity': 'strokeOpacity',
          suppresscontenteditablewarning: 'suppressContentEditableWarning',
          surfacescale: 'surfaceScale',
          systemlanguage: 'systemLanguage',
          tablevalues: 'tableValues',
          targetx: 'targetX',
          targety: 'targetY',
          textanchor: 'textAnchor',
          'text-anchor': 'textAnchor',
          textdecoration: 'textDecoration',
          'text-decoration': 'textDecoration',
          textlength: 'textLength',
          textrendering: 'textRendering',
          'text-rendering': 'textRendering',
          to: 'to',
          transform: 'transform',
          'typeof': 'typeof',
          u1: 'u1',
          u2: 'u2',
          underlineposition: 'underlinePosition',
          'underline-position': 'underlinePosition',
          underlinethickness: 'underlineThickness',
          'underline-thickness': 'underlineThickness',
          unicode: 'unicode',
          unicodebidi: 'unicodeBidi',
          'unicode-bidi': 'unicodeBidi',
          unicoderange: 'unicodeRange',
          'unicode-range': 'unicodeRange',
          unitsperem: 'unitsPerEm',
          'units-per-em': 'unitsPerEm',
          unselectable: 'unselectable',
          valphabetic: 'vAlphabetic',
          'v-alphabetic': 'vAlphabetic',
          values: 'values',
          vectoreffect: 'vectorEffect',
          'vector-effect': 'vectorEffect',
          version: 'version',
          vertadvy: 'vertAdvY',
          'vert-adv-y': 'vertAdvY',
          vertoriginx: 'vertOriginX',
          'vert-origin-x': 'vertOriginX',
          vertoriginy: 'vertOriginY',
          'vert-origin-y': 'vertOriginY',
          vhanging: 'vHanging',
          'v-hanging': 'vHanging',
          videographic: 'vIdeographic',
          'v-ideographic': 'vIdeographic',
          viewbox: 'viewBox',
          viewtarget: 'viewTarget',
          visibility: 'visibility',
          vmathematical: 'vMathematical',
          'v-mathematical': 'vMathematical',
          vocab: 'vocab',
          widths: 'widths',
          wordspacing: 'wordSpacing',
          'word-spacing': 'wordSpacing',
          writingmode: 'writingMode',
          'writing-mode': 'writingMode',
          x1: 'x1',
          x2: 'x2',
          x: 'x',
          xchannelselector: 'xChannelSelector',
          xheight: 'xHeight',
          'x-height': 'xHeight',
          xlinkactuate: 'xlinkActuate',
          'xlink:actuate': 'xlinkActuate',
          xlinkarcrole: 'xlinkArcrole',
          'xlink:arcrole': 'xlinkArcrole',
          xlinkhref: 'xlinkHref',
          'xlink:href': 'xlinkHref',
          xlinkrole: 'xlinkRole',
          'xlink:role': 'xlinkRole',
          xlinkshow: 'xlinkShow',
          'xlink:show': 'xlinkShow',
          xlinktitle: 'xlinkTitle',
          'xlink:title': 'xlinkTitle',
          xlinktype: 'xlinkType',
          'xlink:type': 'xlinkType',
          xmlbase: 'xmlBase',
          'xml:base': 'xmlBase',
          xmllang: 'xmlLang',
          'xml:lang': 'xmlLang',
          xmlns: 'xmlns',
          'xml:space': 'xmlSpace',
          xmlnsxlink: 'xmlnsXlink',
          'xmlns:xlink': 'xmlnsXlink',
          xmlspace: 'xmlSpace',
          y1: 'y1',
          y2: 'y2',
          y: 'y',
          ychannelselector: 'yChannelSelector',
          z: 'z',
          zoomandpan: 'zoomAndPan'
        };

        var possibleStandardNames_1 = possibleStandardNames$1;

        {
          var warning$16 = require$$0;

          var _require$7 = ReactGlobalSharedState_1,
              ReactComponentTreeHook$3 = _require$7.ReactComponentTreeHook,
              ReactDebugCurrentFrame$3 = _require$7.ReactDebugCurrentFrame;

          var getStackAddendumByID$2 = ReactComponentTreeHook$3.getStackAddendumByID;
        }

        function getStackAddendum$2(debugID) {
          if (debugID != null) {
            // This can only happen on Stack
            return getStackAddendumByID$2(debugID);
          } else {
            // This can only happen on Fiber / Server
            var stack = ReactDebugCurrentFrame$3.getStackAddendum();
            return stack != null ? stack : '';
          }
        }

        {
          var warnedProperties$1 = {};
          var hasOwnProperty$1 = Object.prototype.hasOwnProperty;
          var EVENT_NAME_REGEX = /^on[A-Z]/;
          var rARIA$1 = new RegExp('^(aria)-[' + DOMProperty_1.ATTRIBUTE_NAME_CHAR + ']*$');
          var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + DOMProperty_1.ATTRIBUTE_NAME_CHAR + ']*$');
          var possibleStandardNames = possibleStandardNames_1;

          var validateProperty$1 = function validateProperty$1(tagName, name, value, debugID) {
            if (hasOwnProperty$1.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }

            if (EventPluginRegistry_1.registrationNameModules.hasOwnProperty(name)) {
              return true;
            }

            if (EventPluginRegistry_1.plugins.length === 0 && EVENT_NAME_REGEX.test(name)) {
              // If no event plugins have been injected, we might be in a server environment.
              // Don't check events in this case.
              return true;
            }

            var lowerCasedName = name.toLowerCase();
            var registrationName = EventPluginRegistry_1.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry_1.possibleRegistrationNames[lowerCasedName] : null;

            if (registrationName != null) {
              warning$16(false, 'Invalid event handler property `%s`. Did you mean `%s`?%s', name, registrationName, getStackAddendum$2(debugID));
              warnedProperties$1[name] = true;
              return true;
            }

            if (lowerCasedName.indexOf('on') === 0) {
              warning$16(false, 'Unknown event handler property `%s`. It will be ignored.%s', name, getStackAddendum$2(debugID));
              warnedProperties$1[name] = true;
              return true;
            }

            // Let the ARIA attribute hook validate ARIA attributes
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }

            if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
              warning$16(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
              warnedProperties$1[name] = true;
              return true;
            }

            if (lowerCasedName === 'innerhtml') {
              warning$16(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
              warnedProperties$1[name] = true;
              return true;
            }

            if (lowerCasedName === 'aria') {
              warning$16(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
              warnedProperties$1[name] = true;
              return true;
            }

            if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
              warning$16(false, 'Received a `%s` for string attribute `is`. If this is expected, cast ' + 'the value to a string.%s', typeof value === "undefined" ? "undefined" : _typeof4(value), getStackAddendum$2(debugID));
              warnedProperties$1[name] = true;
              return true;
            }

            if (typeof value === 'number' && isNaN(value)) {
              warning$16(false, 'Received NaN for numeric attribute `%s`. If this is expected, cast ' + 'the value to a string.%s', name, getStackAddendum$2(debugID));
              warnedProperties$1[name] = true;
              return true;
            }

            var isReserved = DOMProperty_1.isReservedProp(name);

            // Known attributes should match the casing specified in the property config.
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                warning$16(false, 'Invalid DOM property `%s`. Did you mean `%s`?%s', name, standardName, getStackAddendum$2(debugID));
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved && name !== lowerCasedName) {
              // Unknown attributes should have lowercase casing since that's how they
              // will be cased anyway with server rendering.
              warning$16(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.%s', name, lowerCasedName, getStackAddendum$2(debugID));
              warnedProperties$1[name] = true;
              return true;
            }

            if (typeof value === 'boolean') {
              warning$16(DOMProperty_1.shouldAttributeAcceptBooleanValue(name), 'Received `%s` for non-boolean attribute `%s`. If this is expected, cast ' + 'the value to a string.%s', value, name, getStackAddendum$2(debugID));
              warnedProperties$1[name] = true;
              return true;
            }

            // Now that we've validated casing, do not validate
            // data types for reserved props
            if (isReserved) {
              return true;
            }

            // Warn when a known attribute is a bad type
            if (!DOMProperty_1.shouldSetAttribute(name, value)) {
              warnedProperties$1[name] = true;
              return false;
            }

            return true;
          };
        }

        var warnUnknownProperties = function warnUnknownProperties(type, props, debugID) {
          var unknownProps = [];
          for (var key in props) {
            var isValid = validateProperty$1(type, key, props[key], debugID);
            if (!isValid) {
              unknownProps.push(key);
            }
          }

          var unknownPropString = unknownProps.map(function (prop) {
            return '`' + prop + '`';
          }).join(', ');
          if (unknownProps.length === 1) {
            warning$16(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2(debugID));
          } else if (unknownProps.length > 1) {
            warning$16(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior%s', unknownPropString, type, getStackAddendum$2(debugID));
          }
        };

        function validateProperties$2(type, props, debugID /* Stack only */) {
          if (isCustomComponent_1(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, debugID);
        }

        var ReactDOMUnknownPropertyHook$1 = {
          // Fiber
          validateProperties: validateProperties$2,
          // Stack
          onBeforeMountComponent: function onBeforeMountComponent(debugID, element) {
            if (true && element != null && typeof element.type === 'string') {
              validateProperties$2(element.type, element.props, debugID);
            }
          },
          onBeforeUpdateComponent: function onBeforeUpdateComponent(debugID, element) {
            if (true && element != null && typeof element.type === 'string') {
              validateProperties$2(element.type, element.props, debugID);
            }
          }
        };

        var ReactDOMUnknownPropertyHook_1 = ReactDOMUnknownPropertyHook$1;

        var getCurrentFiberOwnerName = ReactDebugCurrentFiber_1.getCurrentFiberOwnerName;

        var DOCUMENT_NODE$1 = HTMLNodeType_1.DOCUMENT_NODE;
        var DOCUMENT_FRAGMENT_NODE$1 = HTMLNodeType_1.DOCUMENT_FRAGMENT_NODE;

        {
          var warning$3 = require$$0;

          var _require3$1 = ReactDebugCurrentFiber_1,
              getCurrentFiberStackAddendum = _require3$1.getCurrentFiberStackAddendum;

          var ReactDOMInvalidARIAHook = ReactDOMInvalidARIAHook_1;
          var ReactDOMNullInputValuePropHook = ReactDOMNullInputValuePropHook_1;
          var ReactDOMUnknownPropertyHook = ReactDOMUnknownPropertyHook_1;
          var validateARIAProperties = ReactDOMInvalidARIAHook.validateProperties;
          var validateInputProperties = ReactDOMNullInputValuePropHook.validateProperties;
          var validateUnknownProperties = ReactDOMUnknownPropertyHook.validateProperties;
        }

        var didWarnInvalidHydration = false;
        var didWarnShadyDOM = false;

        var listenTo = ReactBrowserEventEmitter_1.listenTo;
        var registrationNameModules = EventPluginRegistry_1.registrationNameModules;

        var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
        var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
        var CHILDREN = 'children';
        var STYLE = 'style';
        var HTML = '__html';

        var HTML_NAMESPACE$1 = DOMNamespaces.Namespaces.html;
        var getIntrinsicNamespace$1 = DOMNamespaces.getIntrinsicNamespace;

        {
          var warnedUnknownTags = {
            // Chrome is the only major browser not shipping <time>. But as of July
            // 2017 it intends to ship it due to widespread usage. We intentionally
            // *don't* warn for <time> even if it's unrecognized by Chrome because
            // it soon will be, and many apps have been using it anyway.
            time: true
          };

          var validatePropertiesInDevelopment = function validatePropertiesInDevelopment(type, props) {
            validateARIAProperties(type, props);
            validateInputProperties(type, props);
            validateUnknownProperties(type, props);
          };

          var warnForTextDifference = function warnForTextDifference(serverText, clientText) {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            warning$3(false, 'Text content did not match. Server: "%s" Client: "%s"', serverText, clientText);
          };

          var warnForPropDifference = function warnForPropDifference(propName, serverValue, clientValue) {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            warning$3(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(serverValue), JSON.stringify(clientValue));
          };

          var warnForExtraAttributes = function warnForExtraAttributes(attributeNames) {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            var names = [];
            attributeNames.forEach(function (name) {
              names.push(name);
            });
            warning$3(false, 'Extra attributes from the server: %s', names);
          };

          var warnForInvalidEventListener = function warnForInvalidEventListener(registrationName, listener) {
            warning$3(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.%s', registrationName, typeof listener === "undefined" ? "undefined" : _typeof4(listener), getCurrentFiberStackAddendum());
          };

          var testDocument;
          // Parse the HTML and read it back to normalize the HTML string so that it
          // can be used for comparison.
          var normalizeHTML = function normalizeHTML(parent, html) {
            if (!testDocument) {
              testDocument = document.implementation.createHTMLDocument();
            }
            var testElement = parent.namespaceURI === HTML_NAMESPACE$1 ? testDocument.createElement(parent.tagName) : testDocument.createElementNS(parent.namespaceURI, parent.tagName);
            testElement.innerHTML = html;
            return testElement.innerHTML;
          };
        }

        function ensureListeningTo(rootContainerElement, registrationName) {
          var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE$1 || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE$1;
          var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
          listenTo(registrationName, doc);
        }

        function getOwnerDocumentFromRootContainer(rootContainerElement) {
          return rootContainerElement.nodeType === DOCUMENT_NODE$1 ? rootContainerElement : rootContainerElement.ownerDocument;
        }

        // There are so many media events, it makes sense to just
        // maintain a list rather than create a `trapBubbledEvent` for each
        var mediaEvents = {
          topAbort: 'abort',
          topCanPlay: 'canplay',
          topCanPlayThrough: 'canplaythrough',
          topDurationChange: 'durationchange',
          topEmptied: 'emptied',
          topEncrypted: 'encrypted',
          topEnded: 'ended',
          topError: 'error',
          topLoadedData: 'loadeddata',
          topLoadedMetadata: 'loadedmetadata',
          topLoadStart: 'loadstart',
          topPause: 'pause',
          topPlay: 'play',
          topPlaying: 'playing',
          topProgress: 'progress',
          topRateChange: 'ratechange',
          topSeeked: 'seeked',
          topSeeking: 'seeking',
          topStalled: 'stalled',
          topSuspend: 'suspend',
          topTimeUpdate: 'timeupdate',
          topVolumeChange: 'volumechange',
          topWaiting: 'waiting'
        };

        function trapClickOnNonInteractiveElement(node) {
          // Mobile Safari does not fire properly bubble click events on
          // non-interactive elements, which means delegated click listeners do not
          // fire. The workaround for this bug involves attaching an empty click
          // listener on the target node.
          // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
          // Just set it using the onclick property so that we don't have to manage any
          // bookkeeping for it. Not sure if we need to clear it when the listener is
          // removed.
          // TODO: Only do this for the relevant Safaris maybe?
          node.onclick = emptyFunction;
        }

        function setInitialDOMProperties(domElement, rootContainerElement, nextProps, isCustomComponentTag) {
          for (var propKey in nextProps) {
            if (!nextProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  // Freeze the next style object so that we can assume it won't be
                  // mutated. We have already warned for this in the past.
                  Object.freeze(nextProp);
                }
              }
              // Relies on `updateStylesByID` not mutating `styleUpdates`.
              CSSPropertyOperations_1.setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML] : undefined;
              if (nextHtml != null) {
                setInnerHTML_1(domElement, nextHtml);
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === 'string') {
                setTextContent_1(domElement, nextProp);
              } else if (typeof nextProp === 'number') {
                setTextContent_1(domElement, '' + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING) {
              // Noop
            } else if (registrationNameModules.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (true && typeof nextProp !== 'function') {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                ensureListeningTo(rootContainerElement, propKey);
              }
            } else if (isCustomComponentTag) {
              DOMPropertyOperations_1.setValueForAttribute(domElement, propKey, nextProp);
            } else if (nextProp != null) {
              // If we're updating to null or undefined, we should remove the property
              // from the DOM node instead of inadvertently setting to a string. This
              // brings us in line with the same behavior we have on initial render.
              DOMPropertyOperations_1.setValueForProperty(domElement, propKey, nextProp);
            }
          }
        }

        function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
          // TODO: Handle wasCustomComponentTag
          for (var i = 0; i < updatePayload.length; i += 2) {
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) {
              CSSPropertyOperations_1.setValueForStyles(domElement, propValue);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              setInnerHTML_1(domElement, propValue);
            } else if (propKey === CHILDREN) {
              setTextContent_1(domElement, propValue);
            } else if (isCustomComponentTag) {
              if (propValue != null) {
                DOMPropertyOperations_1.setValueForAttribute(domElement, propKey, propValue);
              } else {
                DOMPropertyOperations_1.deleteValueForAttribute(domElement, propKey);
              }
            } else if (propValue != null) {
              DOMPropertyOperations_1.setValueForProperty(domElement, propKey, propValue);
            } else {
              // If we're updating to null or undefined, we should remove the property
              // from the DOM node instead of inadvertently setting to a string. This
              // brings us in line with the same behavior we have on initial render.
              DOMPropertyOperations_1.deleteValueForProperty(domElement, propKey);
            }
          }
        }

        var ReactDOMFiberComponent = {
          createElement: function createElement(type, props, rootContainerElement, parentNamespace) {
            // We create tags in the namespace of their parent container, except HTML
            var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
            var domElement;
            var namespaceURI = parentNamespace;
            if (namespaceURI === HTML_NAMESPACE$1) {
              namespaceURI = getIntrinsicNamespace$1(type);
            }
            if (namespaceURI === HTML_NAMESPACE$1) {
              {
                var isCustomComponentTag = isCustomComponent_1(type, props);
                // Should this check be gated by parent namespace? Not sure we want to
                // allow <SVG> or <mATH>.
                warning$3(isCustomComponentTag || type === type.toLowerCase(), '<%s /> is using uppercase HTML. Always use lowercase HTML tags ' + 'in React.', type);
              }

              if (type === 'script') {
                // Create the script via .innerHTML so its "parser-inserted" flag is
                // set to true and it does not execute
                var div = ownerDocument.createElement('div');
                div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
                // This is guaranteed to yield a script element.
                var firstChild = div.firstChild;
                domElement = div.removeChild(firstChild);
              } else if (typeof props.is === 'string') {
                // $FlowIssue `createElement` should be updated for Web Components
                domElement = ownerDocument.createElement(type, { is: props.is });
              } else {
                // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
                // See discussion in https://github.com/facebook/react/pull/6896
                // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
                domElement = ownerDocument.createElement(type);
              }
            } else {
              domElement = ownerDocument.createElementNS(namespaceURI, type);
            }

            {
              if (namespaceURI === HTML_NAMESPACE$1) {
                if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
                  warnedUnknownTags[type] = true;
                  warning$3(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
                }
              }
            }

            return domElement;
          },
          createTextNode: function createTextNode(text, rootContainerElement) {
            return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
          },
          setInitialProperties: function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
            var isCustomComponentTag = isCustomComponent_1(tag, rawProps);
            {
              validatePropertiesInDevelopment(tag, rawProps);
              if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
                warning$3(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName() || 'A component');
                didWarnShadyDOM = true;
              }
            }

            // TODO: Make sure that we check isMounted before firing any of these events.
            var props;
            switch (tag) {
              case 'iframe':
              case 'object':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topLoad', 'load', domElement);
                props = rawProps;
                break;
              case 'video':
              case 'audio':
                // Create listener for each media event
                for (var event in mediaEvents) {
                  if (mediaEvents.hasOwnProperty(event)) {
                    ReactBrowserEventEmitter_1.trapBubbledEvent(event, mediaEvents[event], domElement);
                  }
                }
                props = rawProps;
                break;
              case 'source':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topError', 'error', domElement);
                props = rawProps;
                break;
              case 'img':
              case 'image':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topError', 'error', domElement);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topLoad', 'load', domElement);
                props = rawProps;
                break;
              case 'form':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topReset', 'reset', domElement);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topSubmit', 'submit', domElement);
                props = rawProps;
                break;
              case 'details':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topToggle', 'toggle', domElement);
                props = rawProps;
                break;
              case 'input':
                ReactDOMFiberInput.initWrapperState(domElement, rawProps);
                props = ReactDOMFiberInput.getHostProps(domElement, rawProps);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topInvalid', 'invalid', domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              case 'option':
                ReactDOMFiberOption.validateProps(domElement, rawProps);
                props = ReactDOMFiberOption.getHostProps(domElement, rawProps);
                break;
              case 'select':
                ReactDOMFiberSelect.initWrapperState(domElement, rawProps);
                props = ReactDOMFiberSelect.getHostProps(domElement, rawProps);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topInvalid', 'invalid', domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              case 'textarea':
                ReactDOMFiberTextarea.initWrapperState(domElement, rawProps);
                props = ReactDOMFiberTextarea.getHostProps(domElement, rawProps);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topInvalid', 'invalid', domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              default:
                props = rawProps;
            }

            assertValidProps_1(tag, props, getCurrentFiberOwnerName);

            setInitialDOMProperties(domElement, rootContainerElement, props, isCustomComponentTag);

            switch (tag) {
              case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                inputValueTracking_1.track(domElement);
                ReactDOMFiberInput.postMountWrapper(domElement, rawProps);
                break;
              case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                inputValueTracking_1.track(domElement);
                ReactDOMFiberTextarea.postMountWrapper(domElement, rawProps);
                break;
              case 'option':
                ReactDOMFiberOption.postMountWrapper(domElement, rawProps);
                break;
              case 'select':
                ReactDOMFiberSelect.postMountWrapper(domElement, rawProps);
                break;
              default:
                if (typeof props.onClick === 'function') {
                  // TODO: This cast may not be sound for SVG, MathML or custom elements.
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }
          },

          // Calculate the diff between the two objects.
          diffProperties: function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
            {
              validatePropertiesInDevelopment(tag, nextRawProps);
            }

            var updatePayload = null;

            var lastProps;
            var nextProps;
            switch (tag) {
              case 'input':
                lastProps = ReactDOMFiberInput.getHostProps(domElement, lastRawProps);
                nextProps = ReactDOMFiberInput.getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
              case 'option':
                lastProps = ReactDOMFiberOption.getHostProps(domElement, lastRawProps);
                nextProps = ReactDOMFiberOption.getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
              case 'select':
                lastProps = ReactDOMFiberSelect.getHostProps(domElement, lastRawProps);
                nextProps = ReactDOMFiberSelect.getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
              case 'textarea':
                lastProps = ReactDOMFiberTextarea.getHostProps(domElement, lastRawProps);
                nextProps = ReactDOMFiberTextarea.getHostProps(domElement, nextRawProps);
                updatePayload = [];
                break;
              default:
                lastProps = lastRawProps;
                nextProps = nextRawProps;
                if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
                  // TODO: This cast may not be sound for SVG, MathML or custom elements.
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }

            assertValidProps_1(tag, nextProps, getCurrentFiberOwnerName);

            var propKey;
            var styleName;
            var styleUpdates = null;
            for (propKey in lastProps) {
              if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
                continue;
              }
              if (propKey === STYLE) {
                var lastStyle = lastProps[propKey];
                for (styleName in lastStyle) {
                  if (lastStyle.hasOwnProperty(styleName)) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = '';
                  }
                }
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
                // Noop. This is handled by the clear text mechanism.
              } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING) {
                // Noop
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                // This is a special case. If any listener updates we need to ensure
                // that the "current" fiber pointer gets updated so we need a commit
                // to update this element.
                if (!updatePayload) {
                  updatePayload = [];
                }
              } else {
                // For all other deleted properties we add it to the queue. We use
                // the whitelist in the commit phase instead.
                (updatePayload = updatePayload || []).push(propKey, null);
              }
            }
            for (propKey in nextProps) {
              var nextProp = nextProps[propKey];
              var lastProp = lastProps != null ? lastProps[propKey] : undefined;
              if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
                continue;
              }
              if (propKey === STYLE) {
                {
                  if (nextProp) {
                    // Freeze the next style object so that we can assume it won't be
                    // mutated. We have already warned for this in the past.
                    Object.freeze(nextProp);
                  }
                }
                if (lastProp) {
                  // Unset styles on `lastProp` but not on `nextProp`.
                  for (styleName in lastProp) {
                    if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = '';
                    }
                  }
                  // Update styles that changed since `lastProp`.
                  for (styleName in nextProp) {
                    if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                      if (!styleUpdates) {
                        styleUpdates = {};
                      }
                      styleUpdates[styleName] = nextProp[styleName];
                    }
                  }
                } else {
                  // Relies on `updateStylesByID` not mutating `styleUpdates`.
                  if (!styleUpdates) {
                    if (!updatePayload) {
                      updatePayload = [];
                    }
                    updatePayload.push(propKey, styleUpdates);
                  }
                  styleUpdates = nextProp;
                }
              } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var nextHtml = nextProp ? nextProp[HTML] : undefined;
                var lastHtml = lastProp ? lastProp[HTML] : undefined;
                if (nextHtml != null) {
                  if (lastHtml !== nextHtml) {
                    (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
                  }
                } else {
                  // TODO: It might be too late to clear this if we have children
                  // inserted already.
                }
              } else if (propKey === CHILDREN) {
                if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
                  (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
                }
              } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING) {
                // Noop
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  // We eagerly listen to this even though we haven't committed yet.
                  if (true && typeof nextProp !== 'function') {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  ensureListeningTo(rootContainerElement, propKey);
                }
                if (!updatePayload && lastProp !== nextProp) {
                  // This is a special case. If any listener updates we need to ensure
                  // that the "current" props pointer gets updated so we need a commit
                  // to update this element.
                  updatePayload = [];
                }
              } else {
                // For any other property we always add it to the queue and then we
                // filter it out using the whitelist during the commit.
                (updatePayload = updatePayload || []).push(propKey, nextProp);
              }
            }
            if (styleUpdates) {
              (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
            }
            return updatePayload;
          },

          // Apply the diff.
          updateProperties: function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
            var wasCustomComponentTag = isCustomComponent_1(tag, lastRawProps);
            var isCustomComponentTag = isCustomComponent_1(tag, nextRawProps);
            // Apply the diff.
            updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

            // TODO: Ensure that an update gets scheduled if any of the special props
            // changed.
            switch (tag) {
              case 'input':
                // Update the wrapper around inputs *after* updating props. This has to
                // happen after `updateDOMProperties`. Otherwise HTML5 input validations
                // raise warnings and prevent the new value from being assigned.
                ReactDOMFiberInput.updateWrapper(domElement, nextRawProps);

                // We also check that we haven't missed a value update, such as a
                // Radio group shifting the checked value to another named radio input.
                inputValueTracking_1.updateValueIfChanged(domElement);
                break;
              case 'textarea':
                ReactDOMFiberTextarea.updateWrapper(domElement, nextRawProps);
                break;
              case 'select':
                // <select> value update needs to occur after <option> children
                // reconciliation
                ReactDOMFiberSelect.postUpdateWrapper(domElement, nextRawProps);
                break;
            }
          },
          diffHydratedProperties: function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
            {
              var isCustomComponentTag = isCustomComponent_1(tag, rawProps);
              validatePropertiesInDevelopment(tag, rawProps);
              if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
                warning$3(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerName() || 'A component');
                didWarnShadyDOM = true;
              }
            }

            // TODO: Make sure that we check isMounted before firing any of these events.
            switch (tag) {
              case 'iframe':
              case 'object':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topLoad', 'load', domElement);
                break;
              case 'video':
              case 'audio':
                // Create listener for each media event
                for (var event in mediaEvents) {
                  if (mediaEvents.hasOwnProperty(event)) {
                    ReactBrowserEventEmitter_1.trapBubbledEvent(event, mediaEvents[event], domElement);
                  }
                }
                break;
              case 'source':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topError', 'error', domElement);
                break;
              case 'img':
              case 'image':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topError', 'error', domElement);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topLoad', 'load', domElement);
                break;
              case 'form':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topReset', 'reset', domElement);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topSubmit', 'submit', domElement);
                break;
              case 'details':
                ReactBrowserEventEmitter_1.trapBubbledEvent('topToggle', 'toggle', domElement);
                break;
              case 'input':
                ReactDOMFiberInput.initWrapperState(domElement, rawProps);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topInvalid', 'invalid', domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              case 'option':
                ReactDOMFiberOption.validateProps(domElement, rawProps);
                break;
              case 'select':
                ReactDOMFiberSelect.initWrapperState(domElement, rawProps);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topInvalid', 'invalid', domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
              case 'textarea':
                ReactDOMFiberTextarea.initWrapperState(domElement, rawProps);
                ReactBrowserEventEmitter_1.trapBubbledEvent('topInvalid', 'invalid', domElement);
                // For controlled components we always need to ensure we're listening
                // to onChange. Even if there is no listener.
                ensureListeningTo(rootContainerElement, 'onChange');
                break;
            }

            assertValidProps_1(tag, rawProps, getCurrentFiberOwnerName);

            {
              var extraAttributeNames = new Set();
              var attributes = domElement.attributes;
              for (var i = 0; i < attributes.length; i++) {
                var name = attributes[i].name.toLowerCase();
                switch (name) {
                  // Built-in SSR attribute is whitelisted
                  case 'data-reactroot':
                    break;
                  // Controlled attributes are not validated
                  // TODO: Only ignore them on controlled tags.
                  case 'value':
                    break;
                  case 'checked':
                    break;
                  case 'selected':
                    break;
                  default:
                    // Intentionally use the original name.
                    // See discussion in https://github.com/facebook/react/pull/10676.
                    extraAttributeNames.add(attributes[i].name);
                }
              }
            }

            var updatePayload = null;
            for (var propKey in rawProps) {
              if (!rawProps.hasOwnProperty(propKey)) {
                continue;
              }
              var nextProp = rawProps[propKey];
              if (propKey === CHILDREN) {
                // For text content children we compare against textContent. This
                // might match additional HTML that is hidden when we read it using
                // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
                // satisfies our requirement. Our requirement is not to produce perfect
                // HTML and attributes. Ideally we should preserve structure but it's
                // ok not to if the visible content is still enough to indicate what
                // even listeners these nodes might be wired up to.
                // TODO: Warn if there is more than a single textNode as a child.
                // TODO: Should we use domElement.firstChild.nodeValue to compare?
                if (typeof nextProp === 'string') {
                  if (domElement.textContent !== nextProp) {
                    {
                      warnForTextDifference(domElement.textContent, nextProp);
                    }
                    updatePayload = [CHILDREN, nextProp];
                  }
                } else if (typeof nextProp === 'number') {
                  if (domElement.textContent !== '' + nextProp) {
                    {
                      warnForTextDifference(domElement.textContent, nextProp);
                    }
                    updatePayload = [CHILDREN, '' + nextProp];
                  }
                }
              } else if (registrationNameModules.hasOwnProperty(propKey)) {
                if (nextProp != null) {
                  if (true && typeof nextProp !== 'function') {
                    warnForInvalidEventListener(propKey, nextProp);
                  }
                  ensureListeningTo(rootContainerElement, propKey);
                }
              } else {
                // Validate that the properties correspond to their expected values.
                var serverValue;
                var propertyInfo;
                if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||
                // Controlled attributes are not validated
                // TODO: Only ignore them on controlled tags.
                propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
                  // Noop
                } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                  var rawHtml = nextProp ? nextProp[HTML] || '' : '';
                  var serverHTML = domElement.innerHTML;
                  var expectedHTML = normalizeHTML(domElement, rawHtml);
                  if (expectedHTML !== serverHTML) {
                    warnForPropDifference(propKey, serverHTML, expectedHTML);
                  }
                } else if (propKey === STYLE) {
                  // $FlowFixMe - Should be inferred as not undefined.
                  extraAttributeNames['delete'](propKey);
                  var expectedStyle = CSSPropertyOperations_1.createDangerousStringForStyles(nextProp);
                  serverValue = domElement.getAttribute('style');
                  if (expectedStyle !== serverValue) {
                    warnForPropDifference(propKey, serverValue, expectedStyle);
                  }
                } else if (isCustomComponentTag) {
                  // $FlowFixMe - Should be inferred as not undefined.
                  extraAttributeNames['delete'](propKey.toLowerCase());
                  serverValue = DOMPropertyOperations_1.getValueForAttribute(domElement, propKey, nextProp);

                  if (nextProp !== serverValue) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                } else if (DOMProperty_1.shouldSetAttribute(propKey, nextProp)) {
                  if (propertyInfo = DOMProperty_1.getPropertyInfo(propKey)) {
                    // $FlowFixMe - Should be inferred as not undefined.
                    extraAttributeNames['delete'](propertyInfo.attributeName);
                    serverValue = DOMPropertyOperations_1.getValueForProperty(domElement, propKey, nextProp);
                  } else {
                    var ownNamespace = parentNamespace;
                    if (ownNamespace === HTML_NAMESPACE$1) {
                      ownNamespace = getIntrinsicNamespace$1(tag);
                    }
                    if (ownNamespace === HTML_NAMESPACE$1) {
                      // $FlowFixMe - Should be inferred as not undefined.
                      extraAttributeNames['delete'](propKey.toLowerCase());
                    } else {
                      // $FlowFixMe - Should be inferred as not undefined.
                      extraAttributeNames['delete'](propKey);
                    }
                    serverValue = DOMPropertyOperations_1.getValueForAttribute(domElement, propKey, nextProp);
                  }

                  if (nextProp !== serverValue) {
                    warnForPropDifference(propKey, serverValue, nextProp);
                  }
                }
              }
            }

            {
              // $FlowFixMe - Should be inferred as not undefined.
              if (extraAttributeNames.size > 0) {
                // $FlowFixMe - Should be inferred as not undefined.
                warnForExtraAttributes(extraAttributeNames);
              }
            }

            switch (tag) {
              case 'input':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                inputValueTracking_1.track(domElement);
                ReactDOMFiberInput.postMountWrapper(domElement, rawProps);
                break;
              case 'textarea':
                // TODO: Make sure we check if this is still unmounted or do any clean
                // up necessary since we never stop tracking anymore.
                inputValueTracking_1.track(domElement);
                ReactDOMFiberTextarea.postMountWrapper(domElement, rawProps);
                break;
              case 'select':
              case 'option':
                // For input and textarea we current always set the value property at
                // post mount to force it to diverge from attributes. However, for
                // option and select we don't quite do the same thing and select
                // is not resilient to the DOM state changing so we don't do that here.
                // TODO: Consider not doing this for input and textarea.
                break;
              default:
                if (typeof rawProps.onClick === 'function') {
                  // TODO: This cast may not be sound for SVG, MathML or custom elements.
                  trapClickOnNonInteractiveElement(domElement);
                }
                break;
            }

            return updatePayload;
          },
          diffHydratedText: function diffHydratedText(textNode, text) {
            var isDifferent = textNode.nodeValue !== text;
            {
              if (isDifferent) {
                warnForTextDifference(textNode.nodeValue, text);
              }
            }
            return isDifferent;
          },
          warnForDeletedHydratableElement: function warnForDeletedHydratableElement(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warning$3(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
            }
          },
          warnForDeletedHydratableText: function warnForDeletedHydratableText(parentNode, child) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warning$3(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
            }
          },
          warnForInsertedHydratedElement: function warnForInsertedHydratedElement(parentNode, tag, props) {
            {
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warning$3(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
            }
          },
          warnForInsertedHydratedText: function warnForInsertedHydratedText(parentNode, text) {
            {
              if (text === '') {
                // We expect to insert empty text nodes since they're not represented in
                // the HTML.
                // TODO: Remove this special case if we can just avoid inserting empty
                // text nodes.
                return;
              }
              if (didWarnInvalidHydration) {
                return;
              }
              didWarnInvalidHydration = true;
              warning$3(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
            }
          },
          restoreControlledState: function restoreControlledState(domElement, tag, props) {
            switch (tag) {
              case 'input':
                ReactDOMFiberInput.restoreControlledState(domElement, props);
                return;
              case 'textarea':
                ReactDOMFiberTextarea.restoreControlledState(domElement, props);
                return;
              case 'select':
                ReactDOMFiberSelect.restoreControlledState(domElement, props);
                return;
            }
          }
        };

        var ReactDOMFiberComponent_1 = ReactDOMFiberComponent;

        // This is a built-in polyfill for requestIdleCallback. It works by scheduling
        // a requestAnimationFrame, storing the time for the start of the frame, then
        // scheduling a postMessage which gets scheduled after paint. Within the
        // postMessage handler do as much work as possible until time + frame rate.
        // By separating the idle call into a separate event tick we ensure that
        // layout, paint and other browser work is counted against the available time.
        // The frame rate is dynamically adjusted.


        {
          var warning$17 = require$$0;

          if (ExecutionEnvironment.canUseDOM && typeof requestAnimationFrame !== 'function') {
            warning$17(false, 'React depends on requestAnimationFrame. Make sure that you load a ' + 'polyfill in older browsers. http://fb.me/react-polyfills');
          }
        }

        // TODO: There's no way to cancel, because Fiber doesn't atm.
        var rIC = void 0;

        if (!ExecutionEnvironment.canUseDOM) {
          rIC = function rIC(frameCallback) {
            setTimeout(function () {
              frameCallback({
                timeRemaining: function timeRemaining() {
                  return Infinity;
                }
              });
            });
            return 0;
          };
        } else if (typeof requestIdleCallback !== 'function') {
          // Polyfill requestIdleCallback.

          var scheduledRAFCallback = null;
          var scheduledRICCallback = null;

          var isIdleScheduled = false;
          var isAnimationFrameScheduled = false;

          var frameDeadline = 0;
          // We start out assuming that we run at 30fps but then the heuristic tracking
          // will adjust this value to a faster fps if we get more frequent animation
          // frames.
          var previousFrameTime = 33;
          var activeFrameTime = 33;

          var frameDeadlineObject = {
            timeRemaining: (typeof performance === "undefined" ? "undefined" : _typeof4(performance)) === 'object' && typeof performance.now === 'function' ? function () {
              // We assume that if we have a performance timer that the rAF callback
              // gets a performance timer value. Not sure if this is always true.
              return frameDeadline - performance.now();
            } : function () {
              // As a fallback we use Date.now.
              return frameDeadline - Date.now();
            }
          };

          // We use the postMessage trick to defer idle work until after the repaint.
          var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);
          var idleTick = function idleTick(event) {
            if (event.source !== window || event.data !== messageKey) {
              return;
            }
            isIdleScheduled = false;
            var callback = scheduledRICCallback;
            scheduledRICCallback = null;
            if (callback !== null) {
              callback(frameDeadlineObject);
            }
          };
          // Assumes that we have addEventListener in this environment. Might need
          // something better for old IE.
          window.addEventListener('message', idleTick, false);

          var animationTick = function animationTick(rafTime) {
            isAnimationFrameScheduled = false;
            var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
            if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
              if (nextFrameTime < 8) {
                // Defensive coding. We don't support higher frame rates than 120hz.
                // If we get lower than that, it is probably a bug.
                nextFrameTime = 8;
              }
              // If one frame goes long, then the next one can be short to catch up.
              // If two frames are short in a row, then that's an indication that we
              // actually have a higher frame rate than what we're currently optimizing.
              // We adjust our heuristic dynamically accordingly. For example, if we're
              // running on 120hz display or 90hz VR display.
              // Take the max of the two in case one of them was an anomaly due to
              // missed frame deadlines.
              activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
            } else {
              previousFrameTime = nextFrameTime;
            }
            frameDeadline = rafTime + activeFrameTime;
            if (!isIdleScheduled) {
              isIdleScheduled = true;
              window.postMessage(messageKey, '*');
            }
            var callback = scheduledRAFCallback;
            scheduledRAFCallback = null;
            if (callback !== null) {
              callback(rafTime);
            }
          };

          rIC = function rIC(callback) {
            // This assumes that we only schedule one callback at a time because that's
            // how Fiber uses it.
            scheduledRICCallback = callback;
            if (!isAnimationFrameScheduled) {
              // If rAF didn't already schedule one, we need to schedule a frame.
              // TODO: If this rAF doesn't materialize because the browser throttles, we
              // might want to still have setTimeout trigger rIC as a backup to ensure
              // that we keep performing work.
              isAnimationFrameScheduled = true;
              requestAnimationFrame(animationTick);
            }
            return 0;
          };
        } else {
          rIC = requestIdleCallback;
        }

        var rIC_1 = rIC;

        var ReactDOMFrameScheduling = {
          rIC: rIC_1
        };

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactFeatureFlags
         * 
         */

        var ReactFeatureFlags = {
          enableAsyncSubtreeAPI: true
        };

        var ReactFeatureFlags_1 = ReactFeatureFlags;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactPriorityLevel
         * 
         */

        var ReactPriorityLevel = {
          NoWork: 0, // No work is pending.
          SynchronousPriority: 1, // For controlled text inputs. Synchronous side-effects.
          TaskPriority: 2, // Completes at the end of the current tick.
          HighPriority: 3, // Interaction that needs to complete pretty soon to feel responsive.
          LowPriority: 4, // Data fetching, or result from updating stores.
          OffscreenPriority: 5 };

        var CallbackEffect = ReactTypeOfSideEffect.Callback;

        var NoWork = ReactPriorityLevel.NoWork;
        var SynchronousPriority = ReactPriorityLevel.SynchronousPriority;
        var TaskPriority = ReactPriorityLevel.TaskPriority;

        var ClassComponent$2 = ReactTypeOfWork.ClassComponent;
        var HostRoot$2 = ReactTypeOfWork.HostRoot;

        {
          var warning$19 = require$$0;
        }

        // Callbacks are not validated until invocation


        // Singly linked-list of updates. When an update is scheduled, it is added to
        // the queue of the current fiber and the work-in-progress fiber. The two queues
        // are separate but they share a persistent structure.
        //
        // During reconciliation, updates are removed from the work-in-progress fiber,
        // but they remain on the current fiber. That ensures that if a work-in-progress
        // is aborted, the aborted updates are recovered by cloning from current.
        //
        // The work-in-progress queue is always a subset of the current queue.
        //
        // When the tree is committed, the work-in-progress becomes the current.


        var _queue1 = void 0;
        var _queue2 = void 0;

        function comparePriority(a, b) {
          // When comparing update priorities, treat sync and Task work as equal.
          // TODO: Could we avoid the need for this by always coercing sync priority
          // to Task when scheduling an update?
          if ((a === TaskPriority || a === SynchronousPriority) && (b === TaskPriority || b === SynchronousPriority)) {
            return 0;
          }
          if (a === NoWork && b !== NoWork) {
            return -255;
          }
          if (a !== NoWork && b === NoWork) {
            return 255;
          }
          return a - b;
        }

        function createUpdateQueue() {
          var queue = {
            first: null,
            last: null,
            hasForceUpdate: false,
            callbackList: null
          };
          {
            queue.isProcessing = false;
          }
          return queue;
        }

        function cloneUpdate(update) {
          return {
            priorityLevel: update.priorityLevel,
            partialState: update.partialState,
            callback: update.callback,
            isReplace: update.isReplace,
            isForced: update.isForced,
            isTopLevelUnmount: update.isTopLevelUnmount,
            next: null
          };
        }

        function insertUpdateIntoQueue(queue, update, insertAfter, insertBefore) {
          if (insertAfter !== null) {
            insertAfter.next = update;
          } else {
            // This is the first item in the queue.
            update.next = queue.first;
            queue.first = update;
          }

          if (insertBefore !== null) {
            update.next = insertBefore;
          } else {
            // This is the last item in the queue.
            queue.last = update;
          }
        }

        // Returns the update after which the incoming update should be inserted into
        // the queue, or null if it should be inserted at beginning.
        function findInsertionPosition(queue, update) {
          var priorityLevel = update.priorityLevel;
          var insertAfter = null;
          var insertBefore = null;
          if (queue.last !== null && comparePriority(queue.last.priorityLevel, priorityLevel) <= 0) {
            // Fast path for the common case where the update should be inserted at
            // the end of the queue.
            insertAfter = queue.last;
          } else {
            insertBefore = queue.first;
            while (insertBefore !== null && comparePriority(insertBefore.priorityLevel, priorityLevel) <= 0) {
              insertAfter = insertBefore;
              insertBefore = insertBefore.next;
            }
          }
          return insertAfter;
        }

        function ensureUpdateQueues(fiber) {
          var alternateFiber = fiber.alternate;

          var queue1 = fiber.updateQueue;
          if (queue1 === null) {
            queue1 = fiber.updateQueue = createUpdateQueue();
          }

          var queue2 = void 0;
          if (alternateFiber !== null) {
            queue2 = alternateFiber.updateQueue;
            if (queue2 === null) {
              queue2 = alternateFiber.updateQueue = createUpdateQueue();
            }
          } else {
            queue2 = null;
          }

          _queue1 = queue1;
          // Return null if there is no alternate queue, or if its queue is the same.
          _queue2 = queue2 !== queue1 ? queue2 : null;
        }

        // The work-in-progress queue is a subset of the current queue (if it exists).
        // We need to insert the incoming update into both lists. However, it's possible
        // that the correct position in one list will be different from the position in
        // the other. Consider the following case:
        //
        //     Current:             3-5-6
        //     Work-in-progress:        6
        //
        // Then we receive an update with priority 4 and insert it into each list:
        //
        //     Current:             3-4-5-6
        //     Work-in-progress:        4-6
        //
        // In the current queue, the new update's `next` pointer points to the update
        // with priority 5. But in the work-in-progress queue, the pointer points to the
        // update with priority 6. Because these two queues share the same persistent
        // data structure, this won't do. (This can only happen when the incoming update
        // has higher priority than all the updates in the work-in-progress queue.)
        //
        // To solve this, in the case where the incoming update needs to be inserted
        // into two different positions, we'll make a clone of the update and insert
        // each copy into a separate queue. This forks the list while maintaining a
        // persistent structure, because the update that is added to the work-in-progress
        // is always added to the front of the list.
        //
        // However, if incoming update is inserted into the same position of both lists,
        // we shouldn't make a copy.
        //
        // If the update is cloned, it returns the cloned update.
        function insertUpdate(fiber, update) {
          // We'll have at least one and at most two distinct update queues.
          ensureUpdateQueues(fiber);
          var queue1 = _queue1;
          var queue2 = _queue2;

          // Warn if an update is scheduled from inside an updater function.
          {
            if (queue1.isProcessing || queue2 !== null && queue2.isProcessing) {
              warning$19(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
            }
          }

          // Find the insertion position in the first queue.
          var insertAfter1 = findInsertionPosition(queue1, update);
          var insertBefore1 = insertAfter1 !== null ? insertAfter1.next : queue1.first;

          if (queue2 === null) {
            // If there's no alternate queue, there's nothing else to do but insert.
            insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1);
            return null;
          }

          // If there is an alternate queue, find the insertion position.
          var insertAfter2 = findInsertionPosition(queue2, update);
          var insertBefore2 = insertAfter2 !== null ? insertAfter2.next : queue2.first;

          // Now we can insert into the first queue. This must come after finding both
          // insertion positions because it mutates the list.
          insertUpdateIntoQueue(queue1, update, insertAfter1, insertBefore1);

          // See if the insertion positions are equal. Be careful to only compare
          // non-null values.
          if (insertBefore1 === insertBefore2 && insertBefore1 !== null || insertAfter1 === insertAfter2 && insertAfter1 !== null) {
            // The insertion positions are the same, so when we inserted into the first
            // queue, it also inserted into the alternate. All we need to do is update
            // the alternate queue's `first` and `last` pointers, in case they
            // have changed.
            if (insertAfter2 === null) {
              queue2.first = update;
            }
            if (insertBefore2 === null) {
              queue2.last = null;
            }
            return null;
          } else {
            // The insertion positions are different, so we need to clone the update and
            // insert the clone into the alternate queue.
            var update2 = cloneUpdate(update);
            insertUpdateIntoQueue(queue2, update2, insertAfter2, insertBefore2);
            return update2;
          }
        }

        function addUpdate(fiber, partialState, callback, priorityLevel) {
          var update = {
            priorityLevel: priorityLevel,
            partialState: partialState,
            callback: callback,
            isReplace: false,
            isForced: false,
            isTopLevelUnmount: false,
            next: null
          };
          insertUpdate(fiber, update);
        }
        var addUpdate_1 = addUpdate;

        function addReplaceUpdate(fiber, state, callback, priorityLevel) {
          var update = {
            priorityLevel: priorityLevel,
            partialState: state,
            callback: callback,
            isReplace: true,
            isForced: false,
            isTopLevelUnmount: false,
            next: null
          };
          insertUpdate(fiber, update);
        }
        var addReplaceUpdate_1 = addReplaceUpdate;

        function addForceUpdate(fiber, callback, priorityLevel) {
          var update = {
            priorityLevel: priorityLevel,
            partialState: null,
            callback: callback,
            isReplace: false,
            isForced: true,
            isTopLevelUnmount: false,
            next: null
          };
          insertUpdate(fiber, update);
        }
        var addForceUpdate_1 = addForceUpdate;

        function getUpdatePriority(fiber) {
          var updateQueue = fiber.updateQueue;
          if (updateQueue === null) {
            return NoWork;
          }
          if (fiber.tag !== ClassComponent$2 && fiber.tag !== HostRoot$2) {
            return NoWork;
          }
          return updateQueue.first !== null ? updateQueue.first.priorityLevel : NoWork;
        }
        var getUpdatePriority_1 = getUpdatePriority;

        function addTopLevelUpdate$1(fiber, partialState, callback, priorityLevel) {
          var isTopLevelUnmount = partialState.element === null;

          var update = {
            priorityLevel: priorityLevel,
            partialState: partialState,
            callback: callback,
            isReplace: false,
            isForced: false,
            isTopLevelUnmount: isTopLevelUnmount,
            next: null
          };
          var update2 = insertUpdate(fiber, update);

          if (isTopLevelUnmount) {
            // TODO: Redesign the top-level mount/update/unmount API to avoid this
            // special case.
            var queue1 = _queue1;
            var queue2 = _queue2;

            // Drop all updates that are lower-priority, so that the tree is not
            // remounted. We need to do this for both queues.
            if (queue1 !== null && update.next !== null) {
              update.next = null;
              queue1.last = update;
            }
            if (queue2 !== null && update2 !== null && update2.next !== null) {
              update2.next = null;
              queue2.last = update;
            }
          }
        }
        var addTopLevelUpdate_1 = addTopLevelUpdate$1;

        function getStateFromUpdate(update, instance, prevState, props) {
          var partialState = update.partialState;
          if (typeof partialState === 'function') {
            var updateFn = partialState;
            return updateFn.call(instance, prevState, props);
          } else {
            return partialState;
          }
        }

        function beginUpdateQueue(current, workInProgress, queue, instance, prevState, props, priorityLevel) {
          if (current !== null && current.updateQueue === queue) {
            // We need to create a work-in-progress queue, by cloning the current queue.
            var currentQueue = queue;
            queue = workInProgress.updateQueue = {
              first: currentQueue.first,
              last: currentQueue.last,
              // These fields are no longer valid because they were already committed.
              // Reset them.
              callbackList: null,
              hasForceUpdate: false
            };
          }

          {
            // Set this flag so we can warn if setState is called inside the update
            // function of another setState.
            queue.isProcessing = true;
          }

          // Calculate these using the the existing values as a base.
          var callbackList = queue.callbackList;
          var hasForceUpdate = queue.hasForceUpdate;

          // Applies updates with matching priority to the previous state to create
          // a new state object.
          var state = prevState;
          var dontMutatePrevState = true;
          var update = queue.first;
          while (update !== null && comparePriority(update.priorityLevel, priorityLevel) <= 0) {
            // Remove each update from the queue right before it is processed. That way
            // if setState is called from inside an updater function, the new update
            // will be inserted in the correct position.
            queue.first = update.next;
            if (queue.first === null) {
              queue.last = null;
            }

            var _partialState = void 0;
            if (update.isReplace) {
              state = getStateFromUpdate(update, instance, state, props);
              dontMutatePrevState = true;
            } else {
              _partialState = getStateFromUpdate(update, instance, state, props);
              if (_partialState) {
                if (dontMutatePrevState) {
                  state = _assign({}, state, _partialState);
                } else {
                  state = _assign(state, _partialState);
                }
                dontMutatePrevState = false;
              }
            }
            if (update.isForced) {
              hasForceUpdate = true;
            }
            // Second condition ignores top-level unmount callbacks if they are not the
            // last update in the queue, since a subsequent update will cause a remount.
            if (update.callback !== null && !(update.isTopLevelUnmount && update.next !== null)) {
              callbackList = callbackList !== null ? callbackList : [];
              callbackList.push(update.callback);
              workInProgress.effectTag |= CallbackEffect;
            }
            update = update.next;
          }

          queue.callbackList = callbackList;
          queue.hasForceUpdate = hasForceUpdate;

          if (queue.first === null && callbackList === null && !hasForceUpdate) {
            // The queue is empty and there are no callbacks. We can reset it.
            workInProgress.updateQueue = null;
          }

          {
            // No longer processing.
            queue.isProcessing = false;
          }

          return state;
        }
        var beginUpdateQueue_1 = beginUpdateQueue;

        function commitCallbacks(finishedWork, queue, context) {
          var callbackList = queue.callbackList;
          if (callbackList === null) {
            return;
          }

          // Set the list to null to make sure they don't get called more than once.
          queue.callbackList = null;

          for (var i = 0; i < callbackList.length; i++) {
            var _callback = callbackList[i];
            !(typeof _callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback) : void 0;
            _callback.call(context);
          }
        }
        var commitCallbacks_1 = commitCallbacks;

        var ReactFiberUpdateQueue = {
          addUpdate: addUpdate_1,
          addReplaceUpdate: addReplaceUpdate_1,
          addForceUpdate: addForceUpdate_1,
          getUpdatePriority: getUpdatePriority_1,
          addTopLevelUpdate: addTopLevelUpdate_1,
          beginUpdateQueue: beginUpdateQueue_1,
          commitCallbacks: commitCallbacks_1
        };

        {
          var warning$21 = require$$0;
        }

        var valueStack = [];

        {
          var fiberStack = [];
        }

        var index = -1;

        var createCursor$1 = function createCursor$1(defaultValue) {
          return {
            current: defaultValue
          };
        };

        var isEmpty = function isEmpty() {
          return index === -1;
        };

        var pop$1 = function pop$1(cursor, fiber) {
          if (index < 0) {
            {
              warning$21(false, 'Unexpected pop.');
            }
            return;
          }

          {
            if (fiber !== fiberStack[index]) {
              warning$21(false, 'Unexpected Fiber popped.');
            }
          }

          cursor.current = valueStack[index];

          valueStack[index] = null;

          {
            fiberStack[index] = null;
          }

          index--;
        };

        var push$1 = function push$1(cursor, value, fiber) {
          index++;

          valueStack[index] = cursor.current;

          {
            fiberStack[index] = fiber;
          }

          cursor.current = value;
        };

        var reset = function reset() {
          while (index > -1) {
            valueStack[index] = null;

            {
              fiberStack[index] = null;
            }

            index--;
          }
        };

        var ReactFiberStack = {
          createCursor: createCursor$1,
          isEmpty: isEmpty,
          pop: pop$1,
          push: push$1,
          reset: reset
        };

        // Trust the developer to only use this with a true check
        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactDebugFiberPerf
         * 
         */

        var ReactDebugFiberPerf = null;

        {
          var _require$8 = ReactTypeOfWork,
              HostRoot$4 = _require$8.HostRoot,
              HostComponent$4 = _require$8.HostComponent,
              HostText$2 = _require$8.HostText,
              HostPortal$1 = _require$8.HostPortal,
              YieldComponent = _require$8.YieldComponent,
              Fragment = _require$8.Fragment;

          var getComponentName$5 = getComponentName_1;

          // Prefix measurements so that it's possible to filter them.
          // Longer prefixes are hard to read in DevTools.
          var reactEmoji = "\u269B";
          var warningEmoji = "\u26D4";
          var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

          // Keep track of current fiber so that we know the path to unwind on pause.
          // TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
          var currentFiber = null;
          // If we're in the middle of user code, which fiber and method is it?
          // Reusing `currentFiber` would be confusing for this because user code fiber
          // can change during commit phase too, but we don't need to unwind it (since
          // lifecycles in the commit phase don't resemble a tree).
          var currentPhase = null;
          var currentPhaseFiber = null;
          // Did lifecycle hook schedule an update? This is often a performance problem,
          // so we will keep track of it, and include it in the report.
          // Track commits caused by cascading updates.
          var isCommitting = false;
          var hasScheduledUpdateInCurrentCommit = false;
          var hasScheduledUpdateInCurrentPhase = false;
          var commitCountInCurrentWorkLoop = 0;
          var effectCountInCurrentCommit = 0;
          // During commits, we only show a measurement once per method name
          // to avoid stretch the commit phase with measurement overhead.
          var labelsInCurrentCommit = new Set();

          var formatMarkName = function formatMarkName(markName) {
            return reactEmoji + ' ' + markName;
          };

          var formatLabel = function formatLabel(label, warning) {
            var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';
            var suffix = warning ? ' Warning: ' + warning : '';
            return '' + prefix + label + suffix;
          };

          var beginMark = function beginMark(markName) {
            performance.mark(formatMarkName(markName));
          };

          var clearMark = function clearMark(markName) {
            performance.clearMarks(formatMarkName(markName));
          };

          var endMark = function endMark(label, markName, warning) {
            var formattedMarkName = formatMarkName(markName);
            var formattedLabel = formatLabel(label, warning);
            try {
              performance.measure(formattedLabel, formattedMarkName);
            } catch (err) {}
            // If previous mark was missing for some reason, this will throw.
            // This could only happen if React crashed in an unexpected place earlier.
            // Don't pile on with more errors.

            // Clear marks immediately to avoid growing buffer.
            performance.clearMarks(formattedMarkName);
            performance.clearMeasures(formattedLabel);
          };

          var getFiberMarkName = function getFiberMarkName(label, debugID) {
            return label + ' (#' + debugID + ')';
          };

          var getFiberLabel = function getFiberLabel(componentName, isMounted, phase) {
            if (phase === null) {
              // These are composite component total time measurements.
              return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
            } else {
              // Composite component methods.
              return componentName + '.' + phase;
            }
          };

          var beginFiberMark = function beginFiberMark(fiber, phase) {
            var componentName = getComponentName$5(fiber) || 'Unknown';
            var debugID = fiber._debugID;
            var isMounted = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted, phase);

            if (isCommitting && labelsInCurrentCommit.has(label)) {
              // During the commit phase, we don't show duplicate labels because
              // there is a fixed overhead for every measurement, and we don't
              // want to stretch the commit phase beyond necessary.
              return false;
            }
            labelsInCurrentCommit.add(label);

            var markName = getFiberMarkName(label, debugID);
            beginMark(markName);
            return true;
          };

          var clearFiberMark = function clearFiberMark(fiber, phase) {
            var componentName = getComponentName$5(fiber) || 'Unknown';
            var debugID = fiber._debugID;
            var isMounted = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted, phase);
            var markName = getFiberMarkName(label, debugID);
            clearMark(markName);
          };

          var endFiberMark = function endFiberMark(fiber, phase, warning) {
            var componentName = getComponentName$5(fiber) || 'Unknown';
            var debugID = fiber._debugID;
            var isMounted = fiber.alternate !== null;
            var label = getFiberLabel(componentName, isMounted, phase);
            var markName = getFiberMarkName(label, debugID);
            endMark(label, markName, warning);
          };

          var shouldIgnoreFiber = function shouldIgnoreFiber(fiber) {
            // Host components should be skipped in the timeline.
            // We could check typeof fiber.type, but does this work with RN?
            switch (fiber.tag) {
              case HostRoot$4:
              case HostComponent$4:
              case HostText$2:
              case HostPortal$1:
              case YieldComponent:
              case Fragment:
                return true;
              default:
                return false;
            }
          };

          var clearPendingPhaseMeasurement = function clearPendingPhaseMeasurement() {
            if (currentPhase !== null && currentPhaseFiber !== null) {
              clearFiberMark(currentPhaseFiber, currentPhase);
            }
            currentPhaseFiber = null;
            currentPhase = null;
            hasScheduledUpdateInCurrentPhase = false;
          };

          var pauseTimers = function pauseTimers() {
            // Stops all currently active measurements so that they can be resumed
            // if we continue in a later deferred loop from the same unit of work.
            var fiber = currentFiber;
            while (fiber) {
              if (fiber._debugIsCurrentlyTiming) {
                endFiberMark(fiber, null, null);
              }
              fiber = fiber['return'];
            }
          };

          var resumeTimersRecursively = function resumeTimersRecursively(fiber) {
            if (fiber['return'] !== null) {
              resumeTimersRecursively(fiber['return']);
            }
            if (fiber._debugIsCurrentlyTiming) {
              beginFiberMark(fiber, null);
            }
          };

          var resumeTimers = function resumeTimers() {
            // Resumes all measurements that were active during the last deferred loop.
            if (currentFiber !== null) {
              resumeTimersRecursively(currentFiber);
            }
          };

          ReactDebugFiberPerf = {
            recordEffect: function recordEffect() {
              effectCountInCurrentCommit++;
            },
            recordScheduleUpdate: function recordScheduleUpdate() {
              if (isCommitting) {
                hasScheduledUpdateInCurrentCommit = true;
              }
              if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
                hasScheduledUpdateInCurrentPhase = true;
              }
            },
            startWorkTimer: function startWorkTimer(fiber) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // If we pause, this is the fiber to unwind from.
              currentFiber = fiber;
              if (!beginFiberMark(fiber, null)) {
                return;
              }
              fiber._debugIsCurrentlyTiming = true;
            },
            cancelWorkTimer: function cancelWorkTimer(fiber) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // Remember we shouldn't complete measurement for this fiber.
              // Otherwise flamechart will be deep even for small updates.
              fiber._debugIsCurrentlyTiming = false;
              clearFiberMark(fiber, null);
            },
            stopWorkTimer: function stopWorkTimer(fiber) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // If we pause, its parent is the fiber to unwind from.
              currentFiber = fiber['return'];
              if (!fiber._debugIsCurrentlyTiming) {
                return;
              }
              fiber._debugIsCurrentlyTiming = false;
              endFiberMark(fiber, null, null);
            },
            stopFailedWorkTimer: function stopFailedWorkTimer(fiber) {
              if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
                return;
              }
              // If we pause, its parent is the fiber to unwind from.
              currentFiber = fiber['return'];
              if (!fiber._debugIsCurrentlyTiming) {
                return;
              }
              fiber._debugIsCurrentlyTiming = false;
              var warning = 'An error was thrown inside this error boundary';
              endFiberMark(fiber, null, warning);
            },
            startPhaseTimer: function startPhaseTimer(fiber, phase) {
              if (!supportsUserTiming) {
                return;
              }
              clearPendingPhaseMeasurement();
              if (!beginFiberMark(fiber, phase)) {
                return;
              }
              currentPhaseFiber = fiber;
              currentPhase = phase;
            },
            stopPhaseTimer: function stopPhaseTimer() {
              if (!supportsUserTiming) {
                return;
              }
              if (currentPhase !== null && currentPhaseFiber !== null) {
                var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
                endFiberMark(currentPhaseFiber, currentPhase, warning);
              }
              currentPhase = null;
              currentPhaseFiber = null;
            },
            startWorkLoopTimer: function startWorkLoopTimer() {
              if (!supportsUserTiming) {
                return;
              }
              commitCountInCurrentWorkLoop = 0;
              // This is top level call.
              // Any other measurements are performed within.
              beginMark('(React Tree Reconciliation)');
              // Resume any measurements that were in progress during the last loop.
              resumeTimers();
            },
            stopWorkLoopTimer: function stopWorkLoopTimer() {
              if (!supportsUserTiming) {
                return;
              }
              var warning = commitCountInCurrentWorkLoop > 1 ? 'There were cascading updates' : null;
              commitCountInCurrentWorkLoop = 0;
              // Pause any measurements until the next loop.
              pauseTimers();
              endMark('(React Tree Reconciliation)', '(React Tree Reconciliation)', warning);
            },
            startCommitTimer: function startCommitTimer() {
              if (!supportsUserTiming) {
                return;
              }
              isCommitting = true;
              hasScheduledUpdateInCurrentCommit = false;
              labelsInCurrentCommit.clear();
              beginMark('(Committing Changes)');
            },
            stopCommitTimer: function stopCommitTimer() {
              if (!supportsUserTiming) {
                return;
              }

              var warning = null;
              if (hasScheduledUpdateInCurrentCommit) {
                warning = 'Lifecycle hook scheduled a cascading update';
              } else if (commitCountInCurrentWorkLoop > 0) {
                warning = 'Caused by a cascading update in earlier commit';
              }
              hasScheduledUpdateInCurrentCommit = false;
              commitCountInCurrentWorkLoop++;
              isCommitting = false;
              labelsInCurrentCommit.clear();

              endMark('(Committing Changes)', '(Committing Changes)', warning);
            },
            startCommitHostEffectsTimer: function startCommitHostEffectsTimer() {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark('(Committing Host Effects)');
            },
            stopCommitHostEffectsTimer: function stopCommitHostEffectsTimer() {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
            },
            startCommitLifeCyclesTimer: function startCommitLifeCyclesTimer() {
              if (!supportsUserTiming) {
                return;
              }
              effectCountInCurrentCommit = 0;
              beginMark('(Calling Lifecycle Methods)');
            },
            stopCommitLifeCyclesTimer: function stopCommitLifeCyclesTimer() {
              if (!supportsUserTiming) {
                return;
              }
              var count = effectCountInCurrentCommit;
              effectCountInCurrentCommit = 0;
              endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
            }
          };
        }

        var ReactDebugFiberPerf_1 = ReactDebugFiberPerf;

        var isFiberMounted$1 = ReactFiberTreeReflection.isFiberMounted;

        var ClassComponent$3 = ReactTypeOfWork.ClassComponent;
        var HostRoot$3 = ReactTypeOfWork.HostRoot;

        var createCursor = ReactFiberStack.createCursor;
        var pop = ReactFiberStack.pop;
        var push = ReactFiberStack.push;

        {
          var warning$20 = require$$0;
          var checkPropTypes$1 = checkPropTypes;
          var ReactDebugCurrentFiber$2 = ReactDebugCurrentFiber_1;

          var _require4 = ReactDebugFiberPerf_1,
              startPhaseTimer = _require4.startPhaseTimer,
              stopPhaseTimer = _require4.stopPhaseTimer;

          var warnedAboutMissingGetChildContext = {};
        }

        // A cursor to the current merged context object on the stack.
        var contextStackCursor = createCursor(emptyObject);
        // A cursor to a boolean indicating whether the context has changed.
        var didPerformWorkStackCursor = createCursor(false);
        // Keep track of the previous context object that was on the stack.
        // We use this to get access to the parent context after we have already
        // pushed the next context provider, and now need to merge their contexts.
        var previousContext = emptyObject;

        function getUnmaskedContext(workInProgress) {
          var hasOwnContext = isContextProvider$1(workInProgress);
          if (hasOwnContext) {
            // If the fiber is a context provider itself, when we read its context
            // we have already pushed its own child context on the stack. A context
            // provider should not "see" its own child context. Therefore we read the
            // previous (parent) context instead for a context provider.
            return previousContext;
          }
          return contextStackCursor.current;
        }
        var getUnmaskedContext_1 = getUnmaskedContext;

        function cacheContext(workInProgress, unmaskedContext, maskedContext) {
          var instance = workInProgress.stateNode;
          instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
          instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
        }
        var cacheContext_1 = cacheContext;

        var getMaskedContext = function getMaskedContext(workInProgress, unmaskedContext) {
          var type = workInProgress.type;
          var contextTypes = type.contextTypes;
          if (!contextTypes) {
            return emptyObject;
          }

          // Avoid recreating masked context unless unmasked context has changed.
          // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
          // This may trigger infinite loops if componentWillReceiveProps calls setState.
          var instance = workInProgress.stateNode;
          if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
            return instance.__reactInternalMemoizedMaskedChildContext;
          }

          var context = {};
          for (var key in contextTypes) {
            context[key] = unmaskedContext[key];
          }

          {
            var name = getComponentName_1(workInProgress) || 'Unknown';
            ReactDebugCurrentFiber$2.setCurrentFiber(workInProgress, null);
            checkPropTypes$1(contextTypes, context, 'context', name, ReactDebugCurrentFiber$2.getCurrentFiberStackAddendum);
            ReactDebugCurrentFiber$2.resetCurrentFiber();
          }

          // Cache unmasked context so we can avoid recreating masked context unless necessary.
          // Context is created before the class component is instantiated so check for instance.
          if (instance) {
            cacheContext(workInProgress, unmaskedContext, context);
          }

          return context;
        };

        var hasContextChanged = function hasContextChanged() {
          return didPerformWorkStackCursor.current;
        };

        function isContextConsumer(fiber) {
          return fiber.tag === ClassComponent$3 && fiber.type.contextTypes != null;
        }
        var isContextConsumer_1 = isContextConsumer;

        function isContextProvider$1(fiber) {
          return fiber.tag === ClassComponent$3 && fiber.type.childContextTypes != null;
        }
        var isContextProvider_1 = isContextProvider$1;

        function popContextProvider(fiber) {
          if (!isContextProvider$1(fiber)) {
            return;
          }

          pop(didPerformWorkStackCursor, fiber);
          pop(contextStackCursor, fiber);
        }
        var popContextProvider_1 = popContextProvider;

        var popTopLevelContextObject = function popTopLevelContextObject(fiber) {
          pop(didPerformWorkStackCursor, fiber);
          pop(contextStackCursor, fiber);
        };

        var pushTopLevelContextObject = function pushTopLevelContextObject(fiber, context, didChange) {
          !(contextStackCursor.cursor == null) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

          push(contextStackCursor, context, fiber);
          push(didPerformWorkStackCursor, didChange, fiber);
        };

        function processChildContext$1(fiber, parentContext, isReconciling) {
          var instance = fiber.stateNode;
          var childContextTypes = fiber.type.childContextTypes;

          // TODO (bvaughn) Replace this behavior with an invariant() in the future.
          // It has only been added in Fiber to match the (unintentional) behavior in Stack.
          if (typeof instance.getChildContext !== 'function') {
            {
              var componentName = getComponentName_1(fiber) || 'Unknown';

              if (!warnedAboutMissingGetChildContext[componentName]) {
                warnedAboutMissingGetChildContext[componentName] = true;
                warning$20(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
              }
            }
            return parentContext;
          }

          var childContext = void 0;
          {
            ReactDebugCurrentFiber$2.setCurrentFiber(fiber, 'getChildContext');
            startPhaseTimer(fiber, 'getChildContext');
            childContext = instance.getChildContext();
            stopPhaseTimer();
            ReactDebugCurrentFiber$2.resetCurrentFiber();
          }
          for (var contextKey in childContext) {
            !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName_1(fiber) || 'Unknown', contextKey) : void 0;
          }
          {
            var name = getComponentName_1(fiber) || 'Unknown';
            // We can only provide accurate element stacks if we pass work-in-progress tree
            // during the begin or complete phase. However currently this function is also
            // called from unstable_renderSubtree legacy implementation. In this case it unsafe to
            // assume anything about the given fiber. We won't pass it down if we aren't sure.
            // TODO: remove this hack when we delete unstable_renderSubtree in Fiber.
            var workInProgress = isReconciling ? fiber : null;
            ReactDebugCurrentFiber$2.setCurrentFiber(workInProgress, null);
            checkPropTypes$1(childContextTypes, childContext, 'child context', name, ReactDebugCurrentFiber$2.getCurrentFiberStackAddendum);
            ReactDebugCurrentFiber$2.resetCurrentFiber();
          }

          return _assign({}, parentContext, childContext);
        }
        var processChildContext_1 = processChildContext$1;

        var pushContextProvider = function pushContextProvider(workInProgress) {
          if (!isContextProvider$1(workInProgress)) {
            return false;
          }

          var instance = workInProgress.stateNode;
          // We push the context as early as possible to ensure stack integrity.
          // If the instance does not exist yet, we will push null at first,
          // and replace it on the stack later when invalidating the context.
          var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyObject;

          // Remember the parent context so we can merge with it later.
          // Inherit the parent's did-perform-work value to avoid inadvertantly blocking updates.
          previousContext = contextStackCursor.current;
          push(contextStackCursor, memoizedMergedChildContext, workInProgress);
          push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

          return true;
        };

        var invalidateContextProvider = function invalidateContextProvider(workInProgress, didChange) {
          var instance = workInProgress.stateNode;
          !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

          if (didChange) {
            // Merge parent and own context.
            // Skip this if we're not updating due to sCU.
            // This avoids unnecessarily recomputing memoized values.
            var mergedContext = processChildContext$1(workInProgress, previousContext, true);
            instance.__reactInternalMemoizedMergedChildContext = mergedContext;

            // Replace the old (or empty) context with the new one.
            // It is important to unwind the context in the reverse order.
            pop(didPerformWorkStackCursor, workInProgress);
            pop(contextStackCursor, workInProgress);
            // Now push the new context and mark that it has changed.
            push(contextStackCursor, mergedContext, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
          } else {
            pop(didPerformWorkStackCursor, workInProgress);
            push(didPerformWorkStackCursor, didChange, workInProgress);
          }
        };

        var resetContext = function resetContext() {
          previousContext = emptyObject;
          contextStackCursor.current = emptyObject;
          didPerformWorkStackCursor.current = false;
        };

        var findCurrentUnmaskedContext$1 = function findCurrentUnmaskedContext$1(fiber) {
          // Currently this is only used with renderSubtreeIntoContainer; not sure if it
          // makes sense elsewhere
          !(isFiberMounted$1(fiber) && fiber.tag === ClassComponent$3) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

          var node = fiber;
          while (node.tag !== HostRoot$3) {
            if (isContextProvider$1(node)) {
              return node.stateNode.__reactInternalMemoizedMergedChildContext;
            }
            var parent = node['return'];
            !parent ? invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            node = parent;
          }
          return node.stateNode.context;
        };

        var ReactFiberContext = {
          getUnmaskedContext: getUnmaskedContext_1,
          cacheContext: cacheContext_1,
          getMaskedContext: getMaskedContext,
          hasContextChanged: hasContextChanged,
          isContextConsumer: isContextConsumer_1,
          isContextProvider: isContextProvider_1,
          popContextProvider: popContextProvider_1,
          popTopLevelContextObject: popTopLevelContextObject,
          pushTopLevelContextObject: pushTopLevelContextObject,
          processChildContext: processChildContext_1,
          pushContextProvider: pushContextProvider,
          invalidateContextProvider: invalidateContextProvider,
          resetContext: resetContext,
          findCurrentUnmaskedContext: findCurrentUnmaskedContext$1
        };

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactTypeOfInternalContext
         * 
         */

        var ReactTypeOfInternalContext = {
          NoContext: 0,
          AsyncUpdates: 1
        };

        var IndeterminateComponent$1 = ReactTypeOfWork.IndeterminateComponent;
        var ClassComponent$4 = ReactTypeOfWork.ClassComponent;
        var HostRoot$5 = ReactTypeOfWork.HostRoot;
        var HostComponent$5 = ReactTypeOfWork.HostComponent;
        var HostText$3 = ReactTypeOfWork.HostText;
        var HostPortal$2 = ReactTypeOfWork.HostPortal;
        var CoroutineComponent = ReactTypeOfWork.CoroutineComponent;
        var YieldComponent$1 = ReactTypeOfWork.YieldComponent;
        var Fragment$1 = ReactTypeOfWork.Fragment;

        var NoWork$1 = ReactPriorityLevel.NoWork;

        var NoContext = ReactTypeOfInternalContext.NoContext;

        var NoEffect$1 = ReactTypeOfSideEffect.NoEffect;

        {
          var getComponentName$6 = getComponentName_1;
          var hasBadMapPolyfill = false;
          try {
            var nonExtensibleObject = Object.preventExtensions({});
            /* eslint-disable no-new */
            new Map([[nonExtensibleObject, null]]);
            new Set([nonExtensibleObject]);
            /* eslint-enable no-new */
          } catch (e) {
            // TODO: Consider warning about bad polyfills
            hasBadMapPolyfill = true;
          }
        }

        // A Fiber is work on a Component that needs to be done or was done. There can
        // be more than one per component.


        {
          var debugCounter = 1;
        }

        function FiberNode(tag, key, internalContextTag) {
          // Instance
          this.tag = tag;
          this.key = key;
          this.type = null;
          this.stateNode = null;

          // Fiber
          this['return'] = null;
          this.child = null;
          this.sibling = null;
          this.index = 0;

          this.ref = null;

          this.pendingProps = null;
          this.memoizedProps = null;
          this.updateQueue = null;
          this.memoizedState = null;

          this.internalContextTag = internalContextTag;

          // Effects
          this.effectTag = NoEffect$1;
          this.nextEffect = null;

          this.firstEffect = null;
          this.lastEffect = null;

          this.pendingWorkPriority = NoWork$1;

          this.alternate = null;

          {
            this._debugID = debugCounter++;
            this._debugSource = null;
            this._debugOwner = null;
            this._debugIsCurrentlyTiming = false;
            if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
              Object.preventExtensions(this);
            }
          }
        }

        // This is a constructor function, rather than a POJO constructor, still
        // please ensure we do the following:
        // 1) Nobody should add any instance methods on this. Instance methods can be
        //    more difficult to predict when they get optimized and they are almost
        //    never inlined properly in static compilers.
        // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
        //    always know when it is a fiber.
        // 3) We might want to experiment with using numeric keys since they are easier
        //    to optimize in a non-JIT environment.
        // 4) We can easily go from a constructor to a createFiber object literal if that
        //    is faster.
        // 5) It should be easy to port this to a C struct and keep a C implementation
        //    compatible.
        var createFiber = function createFiber(tag, key, internalContextTag) {
          // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
          return new FiberNode(tag, key, internalContextTag);
        };

        function shouldConstruct(Component) {
          return !!(Component.prototype && Component.prototype.isReactComponent);
        }

        // This is used to create an alternate fiber to do work on.
        var createWorkInProgress = function createWorkInProgress(current, renderPriority) {
          var workInProgress = current.alternate;
          if (workInProgress === null) {
            // We use a double buffering pooling technique because we know that we'll
            // only ever need at most two versions of a tree. We pool the "other" unused
            // node that we're free to reuse. This is lazily created to avoid allocating
            // extra objects for things that are never updated. It also allow us to
            // reclaim the extra memory if needed.
            workInProgress = createFiber(current.tag, current.key, current.internalContextTag);
            workInProgress.type = current.type;
            workInProgress.stateNode = current.stateNode;

            {
              // DEV-only fields
              workInProgress._debugID = current._debugID;
              workInProgress._debugSource = current._debugSource;
              workInProgress._debugOwner = current._debugOwner;
            }

            workInProgress.alternate = current;
            current.alternate = workInProgress;
          } else {
            // We already have an alternate.
            // Reset the effect tag.
            workInProgress.effectTag = NoEffect$1;

            // The effect list is no longer valid.
            workInProgress.nextEffect = null;
            workInProgress.firstEffect = null;
            workInProgress.lastEffect = null;
          }

          workInProgress.pendingWorkPriority = renderPriority;

          workInProgress.child = current.child;
          workInProgress.memoizedProps = current.memoizedProps;
          workInProgress.memoizedState = current.memoizedState;
          workInProgress.updateQueue = current.updateQueue;

          // pendingProps is set by the parent during reconciliation.
          // TODO: Pass this as an argument.

          // These will be overridden during the parent's reconciliation
          workInProgress.sibling = current.sibling;
          workInProgress.index = current.index;
          workInProgress.ref = current.ref;

          return workInProgress;
        };

        var createHostRootFiber$1 = function createHostRootFiber$1() {
          var fiber = createFiber(HostRoot$5, null, NoContext);
          return fiber;
        };

        var createFiberFromElement = function createFiberFromElement(element, internalContextTag, priorityLevel) {
          var owner = null;
          {
            owner = element._owner;
          }

          var fiber = createFiberFromElementType(element.type, element.key, internalContextTag, owner);
          fiber.pendingProps = element.props;
          fiber.pendingWorkPriority = priorityLevel;

          {
            fiber._debugSource = element._source;
            fiber._debugOwner = element._owner;
          }

          return fiber;
        };

        var createFiberFromFragment = function createFiberFromFragment(elements, internalContextTag, priorityLevel) {
          // TODO: Consider supporting keyed fragments. Technically, we accidentally
          // support that in the existing React.
          var fiber = createFiber(Fragment$1, null, internalContextTag);
          fiber.pendingProps = elements;
          fiber.pendingWorkPriority = priorityLevel;
          return fiber;
        };

        var createFiberFromText = function createFiberFromText(content, internalContextTag, priorityLevel) {
          var fiber = createFiber(HostText$3, null, internalContextTag);
          fiber.pendingProps = content;
          fiber.pendingWorkPriority = priorityLevel;
          return fiber;
        };

        function createFiberFromElementType(type, key, internalContextTag, debugOwner) {
          var fiber = void 0;
          if (typeof type === 'function') {
            fiber = shouldConstruct(type) ? createFiber(ClassComponent$4, key, internalContextTag) : createFiber(IndeterminateComponent$1, key, internalContextTag);
            fiber.type = type;
          } else if (typeof type === 'string') {
            fiber = createFiber(HostComponent$5, key, internalContextTag);
            fiber.type = type;
          } else if ((typeof type === "undefined" ? "undefined" : _typeof4(type)) === 'object' && type !== null && typeof type.tag === 'number') {
            // Currently assumed to be a continuation and therefore is a fiber already.
            // TODO: The yield system is currently broken for updates in some cases.
            // The reified yield stores a fiber, but we don't know which fiber that is;
            // the current or a workInProgress? When the continuation gets rendered here
            // we don't know if we can reuse that fiber or if we need to clone it.
            // There is probably a clever way to restructure this.
            fiber = type;
          } else {
            var info = '';
            {
              if (type === undefined || (typeof type === "undefined" ? "undefined" : _typeof4(type)) === 'object' && type !== null && Object.keys(type).length === 0) {
                info += ' You likely forgot to export your component from the file ' + "it's defined in.";
              }
              var ownerName = debugOwner ? getComponentName$6(debugOwner) : null;
              if (ownerName) {
                info += '\n\nCheck the render method of `' + ownerName + '`.';
              }
            }
            invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type === "undefined" ? "undefined" : _typeof4(type), info);
          }
          return fiber;
        }

        var createFiberFromElementType_1 = createFiberFromElementType;

        var createFiberFromHostInstanceForDeletion = function createFiberFromHostInstanceForDeletion() {
          var fiber = createFiber(HostComponent$5, null, NoContext);
          fiber.type = 'DELETED';
          return fiber;
        };

        var createFiberFromCoroutine = function createFiberFromCoroutine(coroutine, internalContextTag, priorityLevel) {
          var fiber = createFiber(CoroutineComponent, coroutine.key, internalContextTag);
          fiber.type = coroutine.handler;
          fiber.pendingProps = coroutine;
          fiber.pendingWorkPriority = priorityLevel;
          return fiber;
        };

        var createFiberFromYield = function createFiberFromYield(yieldNode, internalContextTag, priorityLevel) {
          var fiber = createFiber(YieldComponent$1, null, internalContextTag);
          return fiber;
        };

        var createFiberFromPortal = function createFiberFromPortal(portal, internalContextTag, priorityLevel) {
          var fiber = createFiber(HostPortal$2, portal.key, internalContextTag);
          fiber.pendingProps = portal.children || [];
          fiber.pendingWorkPriority = priorityLevel;
          fiber.stateNode = {
            containerInfo: portal.containerInfo,
            implementation: portal.implementation
          };
          return fiber;
        };

        var largerPriority = function largerPriority(p1, p2) {
          return p1 !== NoWork$1 && (p2 === NoWork$1 || p2 > p1) ? p1 : p2;
        };

        var ReactFiber = {
          createWorkInProgress: createWorkInProgress,
          createHostRootFiber: createHostRootFiber$1,
          createFiberFromElement: createFiberFromElement,
          createFiberFromFragment: createFiberFromFragment,
          createFiberFromText: createFiberFromText,
          createFiberFromElementType: createFiberFromElementType_1,
          createFiberFromHostInstanceForDeletion: createFiberFromHostInstanceForDeletion,
          createFiberFromCoroutine: createFiberFromCoroutine,
          createFiberFromYield: createFiberFromYield,
          createFiberFromPortal: createFiberFromPortal,
          largerPriority: largerPriority
        };

        var createHostRootFiber = ReactFiber.createHostRootFiber;

        var createFiberRoot$1 = function createFiberRoot$1(containerInfo) {
          // Cyclic construction. This cheats the type system right now because
          // stateNode is any.
          var uninitializedFiber = createHostRootFiber();
          var root = {
            current: uninitializedFiber,
            containerInfo: containerInfo,
            isScheduled: false,
            nextScheduledRoot: null,
            context: null,
            pendingContext: null
          };
          uninitializedFiber.stateNode = root;
          return root;
        };

        var ReactFiberRoot = {
          createFiberRoot: createFiberRoot$1
        };

        var defaultShowDialog = function defaultShowDialog(capturedError) {
          return true;
        };

        var showDialog = defaultShowDialog;

        function logCapturedError$1(capturedError) {
          var logError = showDialog(capturedError);

          // Allow injected showDialog() to prevent default console.error logging.
          // This enables renderers like ReactNative to better manage redbox behavior.
          if (logError === false) {
            return;
          }

          var error = capturedError.error;
          {
            var componentName = capturedError.componentName,
                componentStack = capturedError.componentStack,
                errorBoundaryName = capturedError.errorBoundaryName,
                errorBoundaryFound = capturedError.errorBoundaryFound,
                willRetry = capturedError.willRetry;

            var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

            var errorBoundaryMessage = void 0;
            // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
            if (errorBoundaryFound && errorBoundaryName) {
              if (willRetry) {
                errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
              } else {
                errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
              }
            } else {
              errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'You can learn more about error boundaries at https://fb.me/react-error-boundaries.';
            }
            var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

            // In development, we provide our own message with just the component stack.
            // We don't include the original error message and JS stack because the browser
            // has already printed it. Even if the application swallows the error, it is still
            // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
            console.error(combinedMessage);
          }
        }

        var injection$1 = {
          /**
           * Display custom dialog for lifecycle errors.
           * Return false to prevent default behavior of logging to console.error.
           */
          injectDialog: function injectDialog(fn) {
            !(showDialog === defaultShowDialog) ? invariant(false, 'The custom dialog was already injected.') : void 0;
            !(typeof fn === 'function') ? invariant(false, 'Injected showDialog() must be a function.') : void 0;
            showDialog = fn;
          }
        };

        var logCapturedError_1 = logCapturedError$1;

        var ReactFiberErrorLogger = {
          injection: injection$1,
          logCapturedError: logCapturedError_1
        };

        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactCoroutine
         * 
         */

        // The Symbol used to tag the special React types. If there is no native Symbol
        // nor polyfill, then a plain number is used for performance.
        var REACT_COROUTINE_TYPE$1;
        var REACT_YIELD_TYPE$1;
        if (typeof Symbol === 'function' && Symbol['for']) {
          REACT_COROUTINE_TYPE$1 = Symbol['for']('react.coroutine');
          REACT_YIELD_TYPE$1 = Symbol['for']('react.yield');
        } else {
          REACT_COROUTINE_TYPE$1 = 0xeac8;
          REACT_YIELD_TYPE$1 = 0xeac9;
        }

        var createCoroutine = function createCoroutine(children, handler, props) {
          var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

          var coroutine = {
            // This tag allow us to uniquely identify this as a React Coroutine
            $$typeof: REACT_COROUTINE_TYPE$1,
            key: key == null ? null : '' + key,
            children: children,
            handler: handler,
            props: props
          };

          {
            // TODO: Add _store property for marking this as validated.
            if (Object.freeze) {
              Object.freeze(coroutine.props);
              Object.freeze(coroutine);
            }
          }

          return coroutine;
        };

        var createYield = function createYield(value) {
          var yieldNode = {
            // This tag allow us to uniquely identify this as a React Yield
            $$typeof: REACT_YIELD_TYPE$1,
            value: value
          };

          {
            // TODO: Add _store property for marking this as validated.
            if (Object.freeze) {
              Object.freeze(yieldNode);
            }
          }

          return yieldNode;
        };

        /**
         * Verifies the object is a coroutine object.
         */
        var isCoroutine = function isCoroutine(object) {
          return (typeof object === "undefined" ? "undefined" : _typeof4(object)) === 'object' && object !== null && object.$$typeof === REACT_COROUTINE_TYPE$1;
        };

        /**
         * Verifies the object is a yield object.
         */
        var isYield = function isYield(object) {
          return (typeof object === "undefined" ? "undefined" : _typeof4(object)) === 'object' && object !== null && object.$$typeof === REACT_YIELD_TYPE$1;
        };

        var REACT_YIELD_TYPE_1 = REACT_YIELD_TYPE$1;
        var REACT_COROUTINE_TYPE_1 = REACT_COROUTINE_TYPE$1;

        var ReactCoroutine = {
          createCoroutine: createCoroutine,
          createYield: createYield,
          isCoroutine: isCoroutine,
          isYield: isYield,
          REACT_YIELD_TYPE: REACT_YIELD_TYPE_1,
          REACT_COROUTINE_TYPE: REACT_COROUTINE_TYPE_1
        };

        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactPortal
         * 
         */

        // The Symbol used to tag the special React types. If there is no native Symbol
        // nor polyfill, then a plain number is used for performance.
        var REACT_PORTAL_TYPE$1 = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.portal') || 0xeaca;

        var createPortal$1 = function createPortal$1(children, containerInfo,
        // TODO: figure out the API for cross-renderer implementation.
        implementation) {
          var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

          return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE$1,
            key: key == null ? null : '' + key,
            children: children,
            containerInfo: containerInfo,
            implementation: implementation
          };
        };

        /**
         * Verifies the object is a portal object.
         */
        var isPortal = function isPortal(object) {
          return (typeof object === "undefined" ? "undefined" : _typeof4(object)) === 'object' && object !== null && object.$$typeof === REACT_PORTAL_TYPE$1;
        };

        var REACT_PORTAL_TYPE_1 = REACT_PORTAL_TYPE$1;

        var ReactPortal = {
          createPortal: createPortal$1,
          isPortal: isPortal,
          REACT_PORTAL_TYPE: REACT_PORTAL_TYPE_1
        };

        var REACT_COROUTINE_TYPE = ReactCoroutine.REACT_COROUTINE_TYPE;
        var REACT_YIELD_TYPE = ReactCoroutine.REACT_YIELD_TYPE;

        var REACT_PORTAL_TYPE = ReactPortal.REACT_PORTAL_TYPE;

        {
          var _require3$4 = ReactDebugCurrentFiber_1,
              getCurrentFiberStackAddendum$5 = _require3$4.getCurrentFiberStackAddendum;

          var warning$24 = require$$0;
          var didWarnAboutMaps = false;
          /**
           * Warn if there's no key explicitly set on dynamic arrays of children or
           * object keys are not valid. This allows us to keep track of children between
           * updates.
           */
          var ownerHasKeyUseWarning = {};

          var warnForMissingKey = function warnForMissingKey(child) {
            if (child === null || (typeof child === "undefined" ? "undefined" : _typeof4(child)) !== 'object') {
              return;
            }
            if (!child._store || child._store.validated || child.key != null) {
              return;
            }
            !(_typeof4(child._store) === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            child._store.validated = true;

            var currentComponentErrorInfo = 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + (getCurrentFiberStackAddendum$5() || '');
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

            warning$24(false, 'Each child in an array or iterator should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.%s', getCurrentFiberStackAddendum$5());
          };
        }

        var createWorkInProgress$2 = ReactFiber.createWorkInProgress;
        var createFiberFromElement$1 = ReactFiber.createFiberFromElement;
        var createFiberFromFragment$1 = ReactFiber.createFiberFromFragment;
        var createFiberFromText$1 = ReactFiber.createFiberFromText;
        var createFiberFromCoroutine$1 = ReactFiber.createFiberFromCoroutine;
        var createFiberFromYield$1 = ReactFiber.createFiberFromYield;
        var createFiberFromPortal$1 = ReactFiber.createFiberFromPortal;

        var isArray = Array.isArray;

        var FunctionalComponent$2 = ReactTypeOfWork.FunctionalComponent;
        var ClassComponent$7 = ReactTypeOfWork.ClassComponent;
        var HostText$5 = ReactTypeOfWork.HostText;
        var HostPortal$5 = ReactTypeOfWork.HostPortal;
        var CoroutineComponent$2 = ReactTypeOfWork.CoroutineComponent;
        var YieldComponent$3 = ReactTypeOfWork.YieldComponent;
        var Fragment$3 = ReactTypeOfWork.Fragment;
        var NoEffect$2 = ReactTypeOfSideEffect.NoEffect;
        var Placement$3 = ReactTypeOfSideEffect.Placement;
        var Deletion$1 = ReactTypeOfSideEffect.Deletion;

        var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
        // The Symbol used to tag the ReactElement type. If there is no native Symbol
        // nor polyfill, then a plain number is used for performance.
        var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable === 'undefined') {
            return null;
          }
          var iteratorFn = ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof iteratorFn === 'function') {
            return iteratorFn;
          }
          return null;
        }

        function coerceRef(current, element) {
          var mixedRef = element.ref;
          if (mixedRef !== null && typeof mixedRef !== 'function') {
            if (element._owner) {
              var owner = element._owner;
              var inst = void 0;
              if (owner) {
                if (typeof owner.tag === 'number') {
                  var ownerFiber = owner;
                  !(ownerFiber.tag === ClassComponent$7) ? invariant(false, 'Stateless function components cannot have refs.') : void 0;
                  inst = ownerFiber.stateNode;
                } else {
                  // Stack
                  inst = owner.getPublicInstance();
                }
              }
              !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
              var stringRef = '' + mixedRef;
              // Check if previous string ref matches new string ref
              if (current !== null && current.ref !== null && current.ref._stringRef === stringRef) {
                return current.ref;
              }
              var ref = function ref(value) {
                var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
                if (value === null) {
                  delete refs[stringRef];
                } else {
                  refs[stringRef] = value;
                }
              };
              ref._stringRef = stringRef;
              return ref;
            } else {
              !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function or a string.') : void 0;
              !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. You may have multiple copies of React loaded. (details: https://fb.me/react-refs-must-have-owner).', mixedRef) : void 0;
            }
          }
          return mixedRef;
        }

        function throwOnInvalidObjectType(returnFiber, newChild) {
          if (returnFiber.type !== 'textarea') {
            var addendum = '';
            {
              addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + (getCurrentFiberStackAddendum$5() || '');
            }
            invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
          }
        }

        function warnOnFunctionType() {
          warning$24(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.%s', getCurrentFiberStackAddendum$5() || '');
        }

        // This wrapper function exists because I expect to clone the code in each path
        // to be able to optimize each path individually by branching early. This needs
        // a compiler or we can do it manually. Helpers that don't need this branching
        // live outside of this function.
        function ChildReconciler(shouldClone, shouldTrackSideEffects) {
          function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) {
              // Noop.
              return;
            }
            if (!shouldClone) {
              // When we're reconciling in place we have a work in progress copy. We
              // actually want the current copy. If there is no current copy, then we
              // don't need to track deletion side-effects.
              if (childToDelete.alternate === null) {
                return;
              }
              childToDelete = childToDelete.alternate;
            }
            // Deletions are added in reversed order so we add it to the front.
            // At this point, the return fiber's effect list is empty except for
            // deletions, so we can just append the deletion to the list. The remaining
            // effects aren't added until the complete phase. Once we implement
            // resuming, this may not be true.
            var last = returnFiber.lastEffect;
            if (last !== null) {
              last.nextEffect = childToDelete;
              returnFiber.lastEffect = childToDelete;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            }
            childToDelete.nextEffect = null;
            childToDelete.effectTag = Deletion$1;
          }

          function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) {
              // Noop.
              return null;
            }

            // TODO: For the shouldClone case, this could be micro-optimized a bit by
            // assuming that after the first child we've already added everything.
            var childToDelete = currentFirstChild;
            while (childToDelete !== null) {
              deleteChild(returnFiber, childToDelete);
              childToDelete = childToDelete.sibling;
            }
            return null;
          }

          function mapRemainingChildren(returnFiber, currentFirstChild) {
            // Add the remaining children to a temporary map so that we can find them by
            // keys quickly. Implicit (null) keys get added to this set with their index
            var existingChildren = new Map();

            var existingChild = currentFirstChild;
            while (existingChild !== null) {
              if (existingChild.key !== null) {
                existingChildren.set(existingChild.key, existingChild);
              } else {
                existingChildren.set(existingChild.index, existingChild);
              }
              existingChild = existingChild.sibling;
            }
            return existingChildren;
          }

          function useFiber(fiber, priority) {
            // We currently set sibling to null and index to 0 here because it is easy
            // to forget to do before returning it. E.g. for the single child case.
            if (shouldClone) {
              var clone = createWorkInProgress$2(fiber, priority);
              clone.index = 0;
              clone.sibling = null;
              return clone;
            } else {
              // We override the pending priority even if it is higher, because if
              // we're reconciling at a lower priority that means that this was
              // down-prioritized.
              fiber.pendingWorkPriority = priority;
              fiber.effectTag = NoEffect$2;
              fiber.index = 0;
              fiber.sibling = null;
              return fiber;
            }
          }

          function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
              // Noop.
              return lastPlacedIndex;
            }
            var current = newFiber.alternate;
            if (current !== null) {
              var oldIndex = current.index;
              if (oldIndex < lastPlacedIndex) {
                // This is a move.
                newFiber.effectTag = Placement$3;
                return lastPlacedIndex;
              } else {
                // This item can stay in place.
                return oldIndex;
              }
            } else {
              // This is an insertion.
              newFiber.effectTag = Placement$3;
              return lastPlacedIndex;
            }
          }

          function placeSingleChild(newFiber) {
            // This is simpler for the single child case. We only need to do a
            // placement for inserting new children.
            if (shouldTrackSideEffects && newFiber.alternate === null) {
              newFiber.effectTag = Placement$3;
            }
            return newFiber;
          }

          function updateTextNode(returnFiber, current, textContent, priority) {
            if (current === null || current.tag !== HostText$5) {
              // Insert
              var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
              created['return'] = returnFiber;
              return created;
            } else {
              // Update
              var existing = useFiber(current, priority);
              existing.pendingProps = textContent;
              existing['return'] = returnFiber;
              return existing;
            }
          }

          function updateElement(returnFiber, current, element, priority) {
            if (current === null || current.type !== element.type) {
              // Insert
              var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
              created.ref = coerceRef(current, element);
              created['return'] = returnFiber;
              return created;
            } else {
              // Move based on index
              var existing = useFiber(current, priority);
              existing.ref = coerceRef(current, element);
              existing.pendingProps = element.props;
              existing['return'] = returnFiber;
              {
                existing._debugSource = element._source;
                existing._debugOwner = element._owner;
              }
              return existing;
            }
          }

          function updateCoroutine(returnFiber, current, coroutine, priority) {
            // TODO: Should this also compare handler to determine whether to reuse?
            if (current === null || current.tag !== CoroutineComponent$2) {
              // Insert
              var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
              created['return'] = returnFiber;
              return created;
            } else {
              // Move based on index
              var existing = useFiber(current, priority);
              existing.pendingProps = coroutine;
              existing['return'] = returnFiber;
              return existing;
            }
          }

          function updateYield(returnFiber, current, yieldNode, priority) {
            if (current === null || current.tag !== YieldComponent$3) {
              // Insert
              var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
              created.type = yieldNode.value;
              created['return'] = returnFiber;
              return created;
            } else {
              // Move based on index
              var existing = useFiber(current, priority);
              existing.type = yieldNode.value;
              existing['return'] = returnFiber;
              return existing;
            }
          }

          function updatePortal(returnFiber, current, portal, priority) {
            if (current === null || current.tag !== HostPortal$5 || current.stateNode.containerInfo !== portal.containerInfo || current.stateNode.implementation !== portal.implementation) {
              // Insert
              var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
              created['return'] = returnFiber;
              return created;
            } else {
              // Update
              var existing = useFiber(current, priority);
              existing.pendingProps = portal.children || [];
              existing['return'] = returnFiber;
              return existing;
            }
          }

          function updateFragment(returnFiber, current, fragment, priority) {
            if (current === null || current.tag !== Fragment$3) {
              // Insert
              var created = createFiberFromFragment$1(fragment, returnFiber.internalContextTag, priority);
              created['return'] = returnFiber;
              return created;
            } else {
              // Update
              var existing = useFiber(current, priority);
              existing.pendingProps = fragment;
              existing['return'] = returnFiber;
              return existing;
            }
          }

          function createChild(returnFiber, newChild, priority) {
            if (typeof newChild === 'string' || typeof newChild === 'number') {
              // Text nodes doesn't have keys. If the previous node is implicitly keyed
              // we can continue to replace it without aborting even if it is not a text
              // node.
              var created = createFiberFromText$1('' + newChild, returnFiber.internalContextTag, priority);
              created['return'] = returnFiber;
              return created;
            }

            if ((typeof newChild === "undefined" ? "undefined" : _typeof4(newChild)) === 'object' && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  {
                    var _created = createFiberFromElement$1(newChild, returnFiber.internalContextTag, priority);
                    _created.ref = coerceRef(null, newChild);
                    _created['return'] = returnFiber;
                    return _created;
                  }

                case REACT_COROUTINE_TYPE:
                  {
                    var _created2 = createFiberFromCoroutine$1(newChild, returnFiber.internalContextTag, priority);
                    _created2['return'] = returnFiber;
                    return _created2;
                  }

                case REACT_YIELD_TYPE:
                  {
                    var _created3 = createFiberFromYield$1(newChild, returnFiber.internalContextTag, priority);
                    _created3.type = newChild.value;
                    _created3['return'] = returnFiber;
                    return _created3;
                  }

                case REACT_PORTAL_TYPE:
                  {
                    var _created4 = createFiberFromPortal$1(newChild, returnFiber.internalContextTag, priority);
                    _created4['return'] = returnFiber;
                    return _created4;
                  }
              }

              if (isArray(newChild) || getIteratorFn(newChild)) {
                var _created5 = createFiberFromFragment$1(newChild, returnFiber.internalContextTag, priority);
                _created5['return'] = returnFiber;
                return _created5;
              }

              throwOnInvalidObjectType(returnFiber, newChild);
            }

            {
              if (typeof newChild === 'function') {
                warnOnFunctionType();
              }
            }

            return null;
          }

          function updateSlot(returnFiber, oldFiber, newChild, priority) {
            // Update the fiber if the keys match, otherwise return null.

            var key = oldFiber !== null ? oldFiber.key : null;

            if (typeof newChild === 'string' || typeof newChild === 'number') {
              // Text nodes doesn't have keys. If the previous node is implicitly keyed
              // we can continue to replace it without aborting even if it is not a text
              // node.
              if (key !== null) {
                return null;
              }
              return updateTextNode(returnFiber, oldFiber, '' + newChild, priority);
            }

            if ((typeof newChild === "undefined" ? "undefined" : _typeof4(newChild)) === 'object' && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  {
                    if (newChild.key === key) {
                      return updateElement(returnFiber, oldFiber, newChild, priority);
                    } else {
                      return null;
                    }
                  }

                case REACT_COROUTINE_TYPE:
                  {
                    if (newChild.key === key) {
                      return updateCoroutine(returnFiber, oldFiber, newChild, priority);
                    } else {
                      return null;
                    }
                  }

                case REACT_YIELD_TYPE:
                  {
                    // Yields doesn't have keys. If the previous node is implicitly keyed
                    // we can continue to replace it without aborting even if it is not a
                    // yield.
                    if (key === null) {
                      return updateYield(returnFiber, oldFiber, newChild, priority);
                    } else {
                      return null;
                    }
                  }

                case REACT_PORTAL_TYPE:
                  {
                    if (newChild.key === key) {
                      return updatePortal(returnFiber, oldFiber, newChild, priority);
                    } else {
                      return null;
                    }
                  }
              }

              if (isArray(newChild) || getIteratorFn(newChild)) {
                // Fragments doesn't have keys so if the previous key is implicit we can
                // update it.
                if (key !== null) {
                  return null;
                }
                return updateFragment(returnFiber, oldFiber, newChild, priority);
              }

              throwOnInvalidObjectType(returnFiber, newChild);
            }

            {
              if (typeof newChild === 'function') {
                warnOnFunctionType();
              }
            }

            return null;
          }

          function updateFromMap(existingChildren, returnFiber, newIdx, newChild, priority) {
            if (typeof newChild === 'string' || typeof newChild === 'number') {
              // Text nodes doesn't have keys, so we neither have to check the old nor
              // new node for the key. If both are text nodes, they match.
              var matchedFiber = existingChildren.get(newIdx) || null;
              return updateTextNode(returnFiber, matchedFiber, '' + newChild, priority);
            }

            if ((typeof newChild === "undefined" ? "undefined" : _typeof4(newChild)) === 'object' && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  {
                    var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    return updateElement(returnFiber, _matchedFiber, newChild, priority);
                  }

                case REACT_COROUTINE_TYPE:
                  {
                    var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    return updateCoroutine(returnFiber, _matchedFiber2, newChild, priority);
                  }

                case REACT_YIELD_TYPE:
                  {
                    // Yields doesn't have keys, so we neither have to check the old nor
                    // new node for the key. If both are yields, they match.
                    var _matchedFiber3 = existingChildren.get(newIdx) || null;
                    return updateYield(returnFiber, _matchedFiber3, newChild, priority);
                  }

                case REACT_PORTAL_TYPE:
                  {
                    var _matchedFiber4 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                    return updatePortal(returnFiber, _matchedFiber4, newChild, priority);
                  }
              }

              if (isArray(newChild) || getIteratorFn(newChild)) {
                var _matchedFiber5 = existingChildren.get(newIdx) || null;
                return updateFragment(returnFiber, _matchedFiber5, newChild, priority);
              }

              throwOnInvalidObjectType(returnFiber, newChild);
            }

            {
              if (typeof newChild === 'function') {
                warnOnFunctionType();
              }
            }

            return null;
          }

          /**
           * Warns if there is a duplicate or missing key
           */
          function warnOnInvalidKey(child, knownKeys) {
            {
              if ((typeof child === "undefined" ? "undefined" : _typeof4(child)) !== 'object' || child === null) {
                return knownKeys;
              }
              switch (child.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_COROUTINE_TYPE:
                case REACT_PORTAL_TYPE:
                  warnForMissingKey(child);
                  var key = child.key;
                  if (typeof key !== 'string') {
                    break;
                  }
                  if (knownKeys === null) {
                    knownKeys = new Set();
                    knownKeys.add(key);
                    break;
                  }
                  if (!knownKeys.has(key)) {
                    knownKeys.add(key);
                    break;
                  }
                  warning$24(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.%s', key, getCurrentFiberStackAddendum$5());
                  break;
                default:
                  break;
              }
            }
            return knownKeys;
          }

          function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, priority) {
            // This algorithm can't optimize by searching from boths ends since we
            // don't have backpointers on fibers. I'm trying to see how far we can get
            // with that model. If it ends up not being worth the tradeoffs, we can
            // add it later.

            // Even with a two ended optimization, we'd want to optimize for the case
            // where there are few changes and brute force the comparison instead of
            // going for the Map. It'd like to explore hitting that path first in
            // forward-only mode and only go for the Map once we notice that we need
            // lots of look ahead. This doesn't handle reversal as well as two ended
            // search but that's unusual. Besides, for the two ended optimization to
            // work on Iterables, we'd need to copy the whole set.

            // In this first iteration, we'll just live with hitting the bad case
            // (adding everything to a Map) in for every insert/move.

            // If you change this code, also update reconcileChildrenIterator() which
            // uses the same algorithm.

            {
              // First, validate keys.
              var knownKeys = null;
              for (var i = 0; i < newChildren.length; i++) {
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys);
              }
            }

            var resultingFirstChild = null;
            var previousNewFiber = null;

            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], priority);
              if (newFiber === null) {
                // TODO: This breaks on empty slots like null children. That's
                // unfortunate because it triggers the slow path all the time. We need
                // a better way to communicate whether this was a miss or null,
                // boolean, undefined, etc.
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  // We matched the slot, but we didn't reuse the existing fiber, so we
                  // need to delete the existing child.
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
              } else {
                // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }

            if (newIdx === newChildren.length) {
              // We've reached the end of the new children. We can delete the rest.
              deleteRemainingChildren(returnFiber, oldFiber);
              return resultingFirstChild;
            }

            if (oldFiber === null) {
              // If we don't have any more existing children we can choose a fast path
              // since the rest will all be insertions.
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], priority);
                if (!_newFiber) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  // TODO: Move out of the loop. This only happens for the first run.
                  resultingFirstChild = _newFiber;
                } else {
                  previousNewFiber.sibling = _newFiber;
                }
                previousNewFiber = _newFiber;
              }
              return resultingFirstChild;
            }

            // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

            // Keep scanning and use the map to restore deleted items as moves.
            for (; newIdx < newChildren.length; newIdx++) {
              var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], priority);
              if (_newFiber2) {
                if (shouldTrackSideEffects) {
                  if (_newFiber2.alternate !== null) {
                    // The new fiber is a work in progress, but if there exists a
                    // current, that means that we reused the fiber. We need to delete
                    // it from the child list so that we don't add it to the deletion
                    // list.
                    existingChildren['delete'](_newFiber2.key === null ? newIdx : _newFiber2.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber2;
                } else {
                  previousNewFiber.sibling = _newFiber2;
                }
                previousNewFiber = _newFiber2;
              }
            }

            if (shouldTrackSideEffects) {
              // Any existing children that weren't consumed above were deleted. We need
              // to add them to the deletion list.
              existingChildren.forEach(function (child) {
                return deleteChild(returnFiber, child);
              });
            }

            return resultingFirstChild;
          }

          function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, priority) {
            // This is the same implementation as reconcileChildrenArray(),
            // but using the iterator instead.

            var iteratorFn = getIteratorFn(newChildrenIterable);
            !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

            {
              // Warn about using Maps as children
              if (typeof newChildrenIterable.entries === 'function') {
                var possibleMap = newChildrenIterable;
                if (possibleMap.entries === iteratorFn) {
                  warning$24(didWarnAboutMaps, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.%s', getCurrentFiberStackAddendum$5());
                  didWarnAboutMaps = true;
                }
              }

              // First, validate keys.
              // We'll get a different iterator later for the main pass.
              var _newChildren = iteratorFn.call(newChildrenIterable);
              if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for (; !_step.done; _step = _newChildren.next()) {
                  var child = _step.value;
                  knownKeys = warnOnInvalidKey(child, knownKeys);
                }
              }
            }

            var newChildren = iteratorFn.call(newChildrenIterable);
            !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

            var resultingFirstChild = null;
            var previousNewFiber = null;

            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;

            var step = newChildren.next();
            for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, step.value, priority);
              if (newFiber === null) {
                // TODO: This breaks on empty slots like null children. That's
                // unfortunate because it triggers the slow path all the time. We need
                // a better way to communicate whether this was a miss or null,
                // boolean, undefined, etc.
                if (!oldFiber) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  // We matched the slot, but we didn't reuse the existing fiber, so we
                  // need to delete the existing child.
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                // TODO: Move out of the loop. This only happens for the first run.
                resultingFirstChild = newFiber;
              } else {
                // TODO: Defer siblings if we're not at the right index for this slot.
                // I.e. if we had null values before, then we want to defer this
                // for each null value. However, we also don't want to call updateSlot
                // with the previous one.
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }

            if (step.done) {
              // We've reached the end of the new children. We can delete the rest.
              deleteRemainingChildren(returnFiber, oldFiber);
              return resultingFirstChild;
            }

            if (oldFiber === null) {
              // If we don't have any more existing children we can choose a fast path
              // since the rest will all be insertions.
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, priority);
                if (_newFiber3 === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  // TODO: Move out of the loop. This only happens for the first run.
                  resultingFirstChild = _newFiber3;
                } else {
                  previousNewFiber.sibling = _newFiber3;
                }
                previousNewFiber = _newFiber3;
              }
              return resultingFirstChild;
            }

            // Add all children to a key map for quick lookups.
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

            // Keep scanning and use the map to restore deleted items as moves.
            for (; !step.done; newIdx++, step = newChildren.next()) {
              var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, priority);
              if (_newFiber4 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber4.alternate !== null) {
                    // The new fiber is a work in progress, but if there exists a
                    // current, that means that we reused the fiber. We need to delete
                    // it from the child list so that we don't add it to the deletion
                    // list.
                    existingChildren['delete'](_newFiber4.key === null ? newIdx : _newFiber4.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber4;
                } else {
                  previousNewFiber.sibling = _newFiber4;
                }
                previousNewFiber = _newFiber4;
              }
            }

            if (shouldTrackSideEffects) {
              // Any existing children that weren't consumed above were deleted. We need
              // to add them to the deletion list.
              existingChildren.forEach(function (child) {
                return deleteChild(returnFiber, child);
              });
            }

            return resultingFirstChild;
          }

          function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, priority) {
            // There's no need to check for keys on text nodes since we don't have a
            // way to define them.
            if (currentFirstChild !== null && currentFirstChild.tag === HostText$5) {
              // We already have an existing node so let's just update it and delete
              // the rest.
              deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
              var existing = useFiber(currentFirstChild, priority);
              existing.pendingProps = textContent;
              existing['return'] = returnFiber;
              return existing;
            }
            // The existing first child is not a text node so we need to create one
            // and delete the existing ones.
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText$1(textContent, returnFiber.internalContextTag, priority);
            created['return'] = returnFiber;
            return created;
          }

          function reconcileSingleElement(returnFiber, currentFirstChild, element, priority) {
            var key = element.key;
            var child = currentFirstChild;
            while (child !== null) {
              // TODO: If key === null and child.key === null, then this only applies to
              // the first item in the list.
              if (child.key === key) {
                if (child.type === element.type) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, priority);
                  existing.ref = coerceRef(child, element);
                  existing.pendingProps = element.props;
                  existing['return'] = returnFiber;
                  {
                    existing._debugSource = element._source;
                    existing._debugOwner = element._owner;
                  }
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }

            var created = createFiberFromElement$1(element, returnFiber.internalContextTag, priority);
            created.ref = coerceRef(currentFirstChild, element);
            created['return'] = returnFiber;
            return created;
          }

          function reconcileSingleCoroutine(returnFiber, currentFirstChild, coroutine, priority) {
            var key = coroutine.key;
            var child = currentFirstChild;
            while (child !== null) {
              // TODO: If key === null and child.key === null, then this only applies to
              // the first item in the list.
              if (child.key === key) {
                if (child.tag === CoroutineComponent$2) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, priority);
                  existing.pendingProps = coroutine;
                  existing['return'] = returnFiber;
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }

            var created = createFiberFromCoroutine$1(coroutine, returnFiber.internalContextTag, priority);
            created['return'] = returnFiber;
            return created;
          }

          function reconcileSingleYield(returnFiber, currentFirstChild, yieldNode, priority) {
            // There's no need to check for keys on yields since they're stateless.
            var child = currentFirstChild;
            if (child !== null) {
              if (child.tag === YieldComponent$3) {
                deleteRemainingChildren(returnFiber, child.sibling);
                var existing = useFiber(child, priority);
                existing.type = yieldNode.value;
                existing['return'] = returnFiber;
                return existing;
              } else {
                deleteRemainingChildren(returnFiber, child);
              }
            }

            var created = createFiberFromYield$1(yieldNode, returnFiber.internalContextTag, priority);
            created.type = yieldNode.value;
            created['return'] = returnFiber;
            return created;
          }

          function reconcileSinglePortal(returnFiber, currentFirstChild, portal, priority) {
            var key = portal.key;
            var child = currentFirstChild;
            while (child !== null) {
              // TODO: If key === null and child.key === null, then this only applies to
              // the first item in the list.
              if (child.key === key) {
                if (child.tag === HostPortal$5 && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, priority);
                  existing.pendingProps = portal.children || [];
                  existing['return'] = returnFiber;
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }

            var created = createFiberFromPortal$1(portal, returnFiber.internalContextTag, priority);
            created['return'] = returnFiber;
            return created;
          }

          // This API will tag the children with the side-effect of the reconciliation
          // itself. They will be added to the side-effect list as we pass through the
          // children and the parent.
          function reconcileChildFibers(returnFiber, currentFirstChild, newChild, priority) {
            // This function is not recursive.
            // If the top level item is an array, we treat it as a set of children,
            // not as a fragment. Nested arrays on the other hand will be treated as
            // fragment nodes. Recursion happens at the normal flow.

            // Handle object types
            var isObject = (typeof newChild === "undefined" ? "undefined" : _typeof4(newChild)) === 'object' && newChild !== null;
            if (isObject) {
              // Support only the subset of return types that Stack supports. Treat
              // everything else as empty, but log a warning.
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, priority));

                case REACT_COROUTINE_TYPE:
                  return placeSingleChild(reconcileSingleCoroutine(returnFiber, currentFirstChild, newChild, priority));

                case REACT_YIELD_TYPE:
                  return placeSingleChild(reconcileSingleYield(returnFiber, currentFirstChild, newChild, priority));

                case REACT_PORTAL_TYPE:
                  return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, priority));
              }
            }

            if (typeof newChild === 'string' || typeof newChild === 'number') {
              return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, priority));
            }

            if (isArray(newChild)) {
              return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, priority);
            }

            if (getIteratorFn(newChild)) {
              return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, priority);
            }

            if (isObject) {
              throwOnInvalidObjectType(returnFiber, newChild);
            }

            {
              if (typeof newChild === 'function') {
                warnOnFunctionType();
              }
            }
            if (typeof newChild === 'undefined') {
              // If the new child is undefined, and the return fiber is a composite
              // component, throw an error. If Fiber return types are disabled,
              // we already threw above.
              switch (returnFiber.tag) {
                case ClassComponent$7:
                  {
                    {
                      var instance = returnFiber.stateNode;
                      if (instance.render._isMockFunction) {
                        // We allow auto-mocks to proceed as if they're returning null.
                        break;
                      }
                    }
                  }
                // Intentionally fall through to the next case, which handles both
                // functions and classes
                // eslint-disable-next-lined no-fallthrough
                case FunctionalComponent$2:
                  {
                    var Component = returnFiber.type;
                    invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
                  }
              }
            }

            // Remaining cases are all treated as empty.
            return deleteRemainingChildren(returnFiber, currentFirstChild);
          }

          return reconcileChildFibers;
        }

        var reconcileChildFibers$1 = ChildReconciler(true, true);

        var reconcileChildFibersInPlace$1 = ChildReconciler(false, true);

        var mountChildFibersInPlace$1 = ChildReconciler(false, false);

        var cloneChildFibers$1 = function cloneChildFibers$1(current, workInProgress) {
          !(current === null || workInProgress.child === current.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

          if (workInProgress.child === null) {
            return;
          }

          var currentChild = workInProgress.child;
          var newChild = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority);
          // TODO: Pass this as an argument, since it's easy to forget.
          newChild.pendingProps = currentChild.pendingProps;
          workInProgress.child = newChild;

          newChild['return'] = workInProgress;
          while (currentChild.sibling !== null) {
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress$2(currentChild, currentChild.pendingWorkPriority);
            newChild.pendingProps = currentChild.pendingProps;
            newChild['return'] = workInProgress;
          }
          newChild.sibling = null;
        };

        var ReactChildFiber = {
          reconcileChildFibers: reconcileChildFibers$1,
          reconcileChildFibersInPlace: reconcileChildFibersInPlace$1,
          mountChildFibersInPlace: mountChildFibersInPlace$1,
          cloneChildFibers: cloneChildFibers$1
        };

        var Update$1 = ReactTypeOfSideEffect.Update;

        var AsyncUpdates$1 = ReactTypeOfInternalContext.AsyncUpdates;

        var cacheContext$1 = ReactFiberContext.cacheContext;
        var getMaskedContext$2 = ReactFiberContext.getMaskedContext;
        var getUnmaskedContext$2 = ReactFiberContext.getUnmaskedContext;
        var isContextConsumer$1 = ReactFiberContext.isContextConsumer;

        var addUpdate$1 = ReactFiberUpdateQueue.addUpdate;
        var addReplaceUpdate$1 = ReactFiberUpdateQueue.addReplaceUpdate;
        var addForceUpdate$1 = ReactFiberUpdateQueue.addForceUpdate;
        var beginUpdateQueue$2 = ReactFiberUpdateQueue.beginUpdateQueue;

        var _require5 = ReactFiberContext;
        var hasContextChanged$2 = _require5.hasContextChanged;

        var isMounted$1 = ReactFiberTreeReflection.isMounted;

        var fakeInternalInstance = {};
        var isArray$1 = Array.isArray;

        {
          var _require7$1 = ReactDebugFiberPerf_1,
              startPhaseTimer$1 = _require7$1.startPhaseTimer,
              stopPhaseTimer$1 = _require7$1.stopPhaseTimer;

          var warning$25 = require$$0;
          var warnOnInvalidCallback = function warnOnInvalidCallback(callback, callerName) {
            warning$25(callback === null || typeof callback === 'function', '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
          };

          // This is so gross but it's at least non-critical and can be removed if
          // it causes problems. This is meant to give a nicer error message for
          // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
          // ...)) which otherwise throws a "_processChildContext is not a function"
          // exception.
          Object.defineProperty(fakeInternalInstance, '_processChildContext', {
            enumerable: false,
            value: function value() {
              invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
            }
          });
          Object.freeze(fakeInternalInstance);
        }

        var ReactFiberClassComponent = function ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState) {
          // Class component state updater
          var updater = {
            isMounted: isMounted$1,
            enqueueSetState: function enqueueSetState(instance, partialState, callback) {
              var fiber = ReactInstanceMap_1.get(instance);
              var priorityLevel = getPriorityContext(fiber, false);
              callback = callback === undefined ? null : callback;
              {
                warnOnInvalidCallback(callback, 'setState');
              }
              addUpdate$1(fiber, partialState, callback, priorityLevel);
              scheduleUpdate(fiber, priorityLevel);
            },
            enqueueReplaceState: function enqueueReplaceState(instance, state, callback) {
              var fiber = ReactInstanceMap_1.get(instance);
              var priorityLevel = getPriorityContext(fiber, false);
              callback = callback === undefined ? null : callback;
              {
                warnOnInvalidCallback(callback, 'replaceState');
              }
              addReplaceUpdate$1(fiber, state, callback, priorityLevel);
              scheduleUpdate(fiber, priorityLevel);
            },
            enqueueForceUpdate: function enqueueForceUpdate(instance, callback) {
              var fiber = ReactInstanceMap_1.get(instance);
              var priorityLevel = getPriorityContext(fiber, false);
              callback = callback === undefined ? null : callback;
              {
                warnOnInvalidCallback(callback, 'forceUpdate');
              }
              addForceUpdate$1(fiber, callback, priorityLevel);
              scheduleUpdate(fiber, priorityLevel);
            }
          };

          function checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext) {
            if (oldProps === null || workInProgress.updateQueue !== null && workInProgress.updateQueue.hasForceUpdate) {
              // If the workInProgress already has an Update effect, return true
              return true;
            }

            var instance = workInProgress.stateNode;
            var type = workInProgress.type;
            if (typeof instance.shouldComponentUpdate === 'function') {
              {
                startPhaseTimer$1(workInProgress, 'shouldComponentUpdate');
              }
              var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, newContext);
              {
                stopPhaseTimer$1();
              }

              {
                warning$25(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName_1(workInProgress) || 'Unknown');
              }

              return shouldUpdate;
            }

            if (type.prototype && type.prototype.isPureReactComponent) {
              return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
            }

            return true;
          }

          function checkClassInstance(workInProgress) {
            var instance = workInProgress.stateNode;
            var type = workInProgress.type;
            {
              var name = getComponentName_1(workInProgress);
              var renderPresent = instance.render;
              warning$25(renderPresent, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
              var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
              warning$25(noGetInitialStateOnES6, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name);
              var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
              warning$25(noGetDefaultPropsOnES6, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name);
              var noInstancePropTypes = !instance.propTypes;
              warning$25(noInstancePropTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name);
              var noInstanceContextTypes = !instance.contextTypes;
              warning$25(noInstanceContextTypes, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name);
              var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
              warning$25(noComponentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name);
              if (type.prototype && type.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
                warning$25(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName_1(workInProgress) || 'A pure component');
              }
              var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
              warning$25(noComponentDidUnmount, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name);
              var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
              warning$25(noComponentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name);
              var hasMutatedProps = instance.props !== workInProgress.pendingProps;
              warning$25(instance.props === undefined || !hasMutatedProps, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name);
              var noInstanceDefaultProps = !instance.defaultProps;
              warning$25(noInstanceDefaultProps, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name);
            }

            var state = instance.state;
            if (state && ((typeof state === "undefined" ? "undefined" : _typeof4(state)) !== 'object' || isArray$1(state))) {
              invariant(false, '%s.state: must be set to an object or null', getComponentName_1(workInProgress));
            }
            if (typeof instance.getChildContext === 'function') {
              !(_typeof4(workInProgress.type.childContextTypes) === 'object') ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', getComponentName_1(workInProgress)) : void 0;
            }
          }

          function resetInputPointers(workInProgress, instance) {
            instance.props = workInProgress.memoizedProps;
            instance.state = workInProgress.memoizedState;
          }

          function adoptClassInstance(workInProgress, instance) {
            instance.updater = updater;
            workInProgress.stateNode = instance;
            // The instance needs access to the fiber so that it can schedule updates
            ReactInstanceMap_1.set(instance, workInProgress);
            {
              instance._reactInternalInstance = fakeInternalInstance;
            }
          }

          function constructClassInstance(workInProgress, props) {
            var ctor = workInProgress.type;
            var unmaskedContext = getUnmaskedContext$2(workInProgress);
            var needsContext = isContextConsumer$1(workInProgress);
            var context = needsContext ? getMaskedContext$2(workInProgress, unmaskedContext) : emptyObject;
            var instance = new ctor(props, context);
            adoptClassInstance(workInProgress, instance);

            // Cache unmasked context so we can avoid recreating masked context unless necessary.
            // ReactFiberContext usually updates this cache but can't for newly-created instances.
            if (needsContext) {
              cacheContext$1(workInProgress, unmaskedContext, context);
            }

            return instance;
          }

          function callComponentWillMount(workInProgress, instance) {
            {
              startPhaseTimer$1(workInProgress, 'componentWillMount');
            }
            var oldState = instance.state;
            instance.componentWillMount();
            {
              stopPhaseTimer$1();
            }

            if (oldState !== instance.state) {
              {
                warning$25(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName_1(workInProgress));
              }
              updater.enqueueReplaceState(instance, instance.state, null);
            }
          }

          function callComponentWillReceiveProps(workInProgress, instance, newProps, newContext) {
            {
              startPhaseTimer$1(workInProgress, 'componentWillReceiveProps');
            }
            var oldState = instance.state;
            instance.componentWillReceiveProps(newProps, newContext);
            {
              stopPhaseTimer$1();
            }

            if (instance.state !== oldState) {
              {
                warning$25(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName_1(workInProgress));
              }
              updater.enqueueReplaceState(instance, instance.state, null);
            }
          }

          // Invokes the mount life-cycles on a previously never rendered instance.
          function mountClassInstance(workInProgress, priorityLevel) {
            var current = workInProgress.alternate;

            {
              checkClassInstance(workInProgress);
            }

            var instance = workInProgress.stateNode;
            var state = instance.state || null;

            var props = workInProgress.pendingProps;
            !props ? invariant(false, 'There must be pending props for an initial mount. This error is likely caused by a bug in React. Please file an issue.') : void 0;

            var unmaskedContext = getUnmaskedContext$2(workInProgress);

            instance.props = props;
            instance.state = state;
            instance.refs = emptyObject;
            instance.context = getMaskedContext$2(workInProgress, unmaskedContext);

            if (ReactFeatureFlags_1.enableAsyncSubtreeAPI && workInProgress.type != null && workInProgress.type.prototype != null && workInProgress.type.prototype.unstable_isAsyncReactComponent === true) {
              workInProgress.internalContextTag |= AsyncUpdates$1;
            }

            if (typeof instance.componentWillMount === 'function') {
              callComponentWillMount(workInProgress, instance);
              // If we had additional state updates during this life-cycle, let's
              // process them now.
              var updateQueue = workInProgress.updateQueue;
              if (updateQueue !== null) {
                instance.state = beginUpdateQueue$2(current, workInProgress, updateQueue, instance, state, props, priorityLevel);
              }
            }
            if (typeof instance.componentDidMount === 'function') {
              workInProgress.effectTag |= Update$1;
            }
          }

          // Called on a preexisting class instance. Returns false if a resumed render
          // could be reused.
          // function resumeMountClassInstance(
          //   workInProgress: Fiber,
          //   priorityLevel: PriorityLevel,
          // ): boolean {
          //   const instance = workInProgress.stateNode;
          //   resetInputPointers(workInProgress, instance);

          //   let newState = workInProgress.memoizedState;
          //   let newProps = workInProgress.pendingProps;
          //   if (!newProps) {
          //     // If there isn't any new props, then we'll reuse the memoized props.
          //     // This could be from already completed work.
          //     newProps = workInProgress.memoizedProps;
          //     invariant(
          //       newProps != null,
          //       'There should always be pending or memoized props. This error is ' +
          //         'likely caused by a bug in React. Please file an issue.',
          //     );
          //   }
          //   const newUnmaskedContext = getUnmaskedContext(workInProgress);
          //   const newContext = getMaskedContext(workInProgress, newUnmaskedContext);

          //   const oldContext = instance.context;
          //   const oldProps = workInProgress.memoizedProps;

          //   if (
          //     typeof instance.componentWillReceiveProps === 'function' &&
          //     (oldProps !== newProps || oldContext !== newContext)
          //   ) {
          //     callComponentWillReceiveProps(
          //       workInProgress,
          //       instance,
          //       newProps,
          //       newContext,
          //     );
          //   }

          //   // Process the update queue before calling shouldComponentUpdate
          //   const updateQueue = workInProgress.updateQueue;
          //   if (updateQueue !== null) {
          //     newState = beginUpdateQueue(
          //       workInProgress,
          //       updateQueue,
          //       instance,
          //       newState,
          //       newProps,
          //       priorityLevel,
          //     );
          //   }

          //   // TODO: Should we deal with a setState that happened after the last
          //   // componentWillMount and before this componentWillMount? Probably
          //   // unsupported anyway.

          //   if (
          //     !checkShouldComponentUpdate(
          //       workInProgress,
          //       workInProgress.memoizedProps,
          //       newProps,
          //       workInProgress.memoizedState,
          //       newState,
          //       newContext,
          //     )
          //   ) {
          //     // Update the existing instance's state, props, and context pointers even
          //     // though we're bailing out.
          //     instance.props = newProps;
          //     instance.state = newState;
          //     instance.context = newContext;
          //     return false;
          //   }

          //   // Update the input pointers now so that they are correct when we call
          //   // componentWillMount
          //   instance.props = newProps;
          //   instance.state = newState;
          //   instance.context = newContext;

          //   if (typeof instance.componentWillMount === 'function') {
          //     callComponentWillMount(workInProgress, instance);
          //     // componentWillMount may have called setState. Process the update queue.
          //     const newUpdateQueue = workInProgress.updateQueue;
          //     if (newUpdateQueue !== null) {
          //       newState = beginUpdateQueue(
          //         workInProgress,
          //         newUpdateQueue,
          //         instance,
          //         newState,
          //         newProps,
          //         priorityLevel,
          //       );
          //     }
          //   }

          //   if (typeof instance.componentDidMount === 'function') {
          //     workInProgress.effectTag |= Update;
          //   }

          //   instance.state = newState;

          //   return true;
          // }

          // Invokes the update life-cycles and returns false if it shouldn't rerender.
          function updateClassInstance(current, workInProgress, priorityLevel) {
            var instance = workInProgress.stateNode;
            resetInputPointers(workInProgress, instance);

            var oldProps = workInProgress.memoizedProps;
            var newProps = workInProgress.pendingProps;
            if (!newProps) {
              // If there aren't any new props, then we'll reuse the memoized props.
              // This could be from already completed work.
              newProps = oldProps;
              !(newProps != null) ? invariant(false, 'There should always be pending or memoized props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            }
            var oldContext = instance.context;
            var newUnmaskedContext = getUnmaskedContext$2(workInProgress);
            var newContext = getMaskedContext$2(workInProgress, newUnmaskedContext);

            // Note: During these life-cycles, instance.props/instance.state are what
            // ever the previously attempted to render - not the "current". However,
            // during componentDidUpdate we pass the "current" props.

            if (typeof instance.componentWillReceiveProps === 'function' && (oldProps !== newProps || oldContext !== newContext)) {
              callComponentWillReceiveProps(workInProgress, instance, newProps, newContext);
            }

            // Compute the next state using the memoized state and the update queue.
            var oldState = workInProgress.memoizedState;
            // TODO: Previous state can be null.
            var newState = void 0;
            if (workInProgress.updateQueue !== null) {
              newState = beginUpdateQueue$2(current, workInProgress, workInProgress.updateQueue, instance, oldState, newProps, priorityLevel);
            } else {
              newState = oldState;
            }

            if (oldProps === newProps && oldState === newState && !hasContextChanged$2() && !(workInProgress.updateQueue !== null && workInProgress.updateQueue.hasForceUpdate)) {
              // If an update was already in progress, we should schedule an Update
              // effect even though we're bailing out, so that cWU/cDU are called.
              if (typeof instance.componentDidUpdate === 'function') {
                if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
                  workInProgress.effectTag |= Update$1;
                }
              }
              return false;
            }

            var shouldUpdate = checkShouldComponentUpdate(workInProgress, oldProps, newProps, oldState, newState, newContext);

            if (shouldUpdate) {
              if (typeof instance.componentWillUpdate === 'function') {
                {
                  startPhaseTimer$1(workInProgress, 'componentWillUpdate');
                }
                instance.componentWillUpdate(newProps, newState, newContext);
                {
                  stopPhaseTimer$1();
                }
              }
              if (typeof instance.componentDidUpdate === 'function') {
                workInProgress.effectTag |= Update$1;
              }
            } else {
              // If an update was already in progress, we should schedule an Update
              // effect even though we're bailing out, so that cWU/cDU are called.
              if (typeof instance.componentDidUpdate === 'function') {
                if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
                  workInProgress.effectTag |= Update$1;
                }
              }

              // If shouldComponentUpdate returned false, we should still update the
              // memoized props/state to indicate that this work can be reused.
              memoizeProps(workInProgress, newProps);
              memoizeState(workInProgress, newState);
            }

            // Update the existing instance's state, props, and context pointers even
            // if shouldComponentUpdate returns false.
            instance.props = newProps;
            instance.state = newState;
            instance.context = newContext;

            return shouldUpdate;
          }

          return {
            adoptClassInstance: adoptClassInstance,
            constructClassInstance: constructClassInstance,
            mountClassInstance: mountClassInstance,
            // resumeMountClassInstance,
            updateClassInstance: updateClassInstance
          };
        };

        var mountChildFibersInPlace = ReactChildFiber.mountChildFibersInPlace;
        var reconcileChildFibers = ReactChildFiber.reconcileChildFibers;
        var reconcileChildFibersInPlace = ReactChildFiber.reconcileChildFibersInPlace;
        var cloneChildFibers = ReactChildFiber.cloneChildFibers;

        var beginUpdateQueue$1 = ReactFiberUpdateQueue.beginUpdateQueue;

        var getMaskedContext$1 = ReactFiberContext.getMaskedContext;
        var getUnmaskedContext$1 = ReactFiberContext.getUnmaskedContext;
        var hasContextChanged$1 = ReactFiberContext.hasContextChanged;
        var pushContextProvider$1 = ReactFiberContext.pushContextProvider;
        var pushTopLevelContextObject$1 = ReactFiberContext.pushTopLevelContextObject;
        var invalidateContextProvider$1 = ReactFiberContext.invalidateContextProvider;

        var IndeterminateComponent$2 = ReactTypeOfWork.IndeterminateComponent;
        var FunctionalComponent$1 = ReactTypeOfWork.FunctionalComponent;
        var ClassComponent$6 = ReactTypeOfWork.ClassComponent;
        var HostRoot$7 = ReactTypeOfWork.HostRoot;
        var HostComponent$7 = ReactTypeOfWork.HostComponent;
        var HostText$4 = ReactTypeOfWork.HostText;
        var HostPortal$4 = ReactTypeOfWork.HostPortal;
        var CoroutineComponent$1 = ReactTypeOfWork.CoroutineComponent;
        var CoroutineHandlerPhase = ReactTypeOfWork.CoroutineHandlerPhase;
        var YieldComponent$2 = ReactTypeOfWork.YieldComponent;
        var Fragment$2 = ReactTypeOfWork.Fragment;

        var NoWork$3 = ReactPriorityLevel.NoWork;
        var OffscreenPriority$1 = ReactPriorityLevel.OffscreenPriority;

        var PerformedWork$1 = ReactTypeOfSideEffect.PerformedWork;
        var Placement$2 = ReactTypeOfSideEffect.Placement;
        var ContentReset$1 = ReactTypeOfSideEffect.ContentReset;
        var Err$1 = ReactTypeOfSideEffect.Err;
        var Ref$1 = ReactTypeOfSideEffect.Ref;

        var ReactCurrentOwner$2 = ReactGlobalSharedState_1.ReactCurrentOwner;

        {
          var ReactDebugCurrentFiber$4 = ReactDebugCurrentFiber_1;

          var _require7 = ReactDebugFiberPerf_1,
              cancelWorkTimer = _require7.cancelWorkTimer;

          var warning$23 = require$$0;

          var warnedAboutStatelessRefs = {};
        }

        var ReactFiberBeginWork = function ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext) {
          var shouldSetTextContent = config.shouldSetTextContent,
              useSyncScheduling = config.useSyncScheduling,
              shouldDeprioritizeSubtree = config.shouldDeprioritizeSubtree;
          var pushHostContext = hostContext.pushHostContext,
              pushHostContainer = hostContext.pushHostContainer;
          var enterHydrationState = hydrationContext.enterHydrationState,
              resetHydrationState = hydrationContext.resetHydrationState,
              tryToClaimNextHydratableInstance = hydrationContext.tryToClaimNextHydratableInstance;

          var _ReactFiberClassCompo = ReactFiberClassComponent(scheduleUpdate, getPriorityContext, memoizeProps, memoizeState),
              adoptClassInstance = _ReactFiberClassCompo.adoptClassInstance,
              constructClassInstance = _ReactFiberClassCompo.constructClassInstance,
              mountClassInstance = _ReactFiberClassCompo.mountClassInstance,
              updateClassInstance = _ReactFiberClassCompo.updateClassInstance;

          function reconcileChildren(current, workInProgress, nextChildren) {
            var priorityLevel = workInProgress.pendingWorkPriority;
            reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel);
          }

          function reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel) {
            if (current === null) {
              // If this is a fresh new component that hasn't been rendered yet, we
              // won't update its child set by applying minimal side-effects. Instead,
              // we will add them all to the child before it gets rendered. That means
              // we can optimize this reconciliation pass by not tracking side-effects.
              workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
            } else if (current.child === workInProgress.child) {
              // If the current child is the same as the work in progress, it means that
              // we haven't yet started any work on these children. Therefore, we use
              // the clone algorithm to create a copy of all the current children.

              // If we had any progressed work already, that is invalid at this point so
              // let's throw it out.
              workInProgress.child = reconcileChildFibers(workInProgress, workInProgress.child, nextChildren, priorityLevel);
            } else {
              // If, on the other hand, it is already using a clone, that means we've
              // already begun some work on this tree and we can continue where we left
              // off by reconciling against the existing children.
              workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
            }
          }

          function updateFragment(current, workInProgress) {
            var nextChildren = workInProgress.pendingProps;
            if (hasContextChanged$1()) {
              // Normally we can bail out on props equality but if context has changed
              // we don't do the bailout and we have to reuse existing props instead.
              if (nextChildren === null) {
                nextChildren = workInProgress.memoizedProps;
              }
            } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
              return bailoutOnAlreadyFinishedWork(current, workInProgress);
            }
            reconcileChildren(current, workInProgress, nextChildren);
            memoizeProps(workInProgress, nextChildren);
            return workInProgress.child;
          }

          function markRef(current, workInProgress) {
            var ref = workInProgress.ref;
            if (ref !== null && (!current || current.ref !== ref)) {
              // Schedule a Ref effect
              workInProgress.effectTag |= Ref$1;
            }
          }

          function updateFunctionalComponent(current, workInProgress) {
            var fn = workInProgress.type;
            var nextProps = workInProgress.pendingProps;

            var memoizedProps = workInProgress.memoizedProps;
            if (hasContextChanged$1()) {
              // Normally we can bail out on props equality but if context has changed
              // we don't do the bailout and we have to reuse existing props instead.
              if (nextProps === null) {
                nextProps = memoizedProps;
              }
            } else {
              if (nextProps === null || memoizedProps === nextProps) {
                return bailoutOnAlreadyFinishedWork(current, workInProgress);
              }
              // TODO: consider bringing fn.shouldComponentUpdate() back.
              // It used to be here.
            }

            var unmaskedContext = getUnmaskedContext$1(workInProgress);
            var context = getMaskedContext$1(workInProgress, unmaskedContext);

            var nextChildren;

            {
              ReactCurrentOwner$2.current = workInProgress;
              ReactDebugCurrentFiber$4.setCurrentFiber(workInProgress, 'render');
              nextChildren = fn(nextProps, context);
              ReactDebugCurrentFiber$4.setCurrentFiber(workInProgress, null);
            }
            // React DevTools reads this flag.
            workInProgress.effectTag |= PerformedWork$1;
            reconcileChildren(current, workInProgress, nextChildren);
            memoizeProps(workInProgress, nextProps);
            return workInProgress.child;
          }

          function updateClassComponent(current, workInProgress, priorityLevel) {
            // Push context providers early to prevent context stack mismatches.
            // During mounting we don't know the child context yet as the instance doesn't exist.
            // We will invalidate the child context in finishClassComponent() right after rendering.
            var hasContext = pushContextProvider$1(workInProgress);

            var shouldUpdate = void 0;
            if (current === null) {
              if (!workInProgress.stateNode) {
                // In the initial pass we might need to construct the instance.
                constructClassInstance(workInProgress, workInProgress.pendingProps);
                mountClassInstance(workInProgress, priorityLevel);
                shouldUpdate = true;
              } else {
                invariant(false, 'Resuming work not yet implemented.');
                // In a resume, we'll already have an instance we can reuse.
                // shouldUpdate = resumeMountClassInstance(workInProgress, priorityLevel);
              }
            } else {
              shouldUpdate = updateClassInstance(current, workInProgress, priorityLevel);
            }
            return finishClassComponent(current, workInProgress, shouldUpdate, hasContext);
          }

          function finishClassComponent(current, workInProgress, shouldUpdate, hasContext) {
            // Refs should update even if shouldComponentUpdate returns false
            markRef(current, workInProgress);

            if (!shouldUpdate) {
              // Context providers should defer to sCU for rendering
              if (hasContext) {
                invalidateContextProvider$1(workInProgress, false);
              }

              return bailoutOnAlreadyFinishedWork(current, workInProgress);
            }

            var instance = workInProgress.stateNode;

            // Rerender
            ReactCurrentOwner$2.current = workInProgress;
            var nextChildren = void 0;
            {
              ReactDebugCurrentFiber$4.setCurrentFiber(workInProgress, 'render');
              nextChildren = instance.render();
              ReactDebugCurrentFiber$4.setCurrentFiber(workInProgress, null);
            }
            // React DevTools reads this flag.
            workInProgress.effectTag |= PerformedWork$1;
            reconcileChildren(current, workInProgress, nextChildren);
            // Memoize props and state using the values we just used to render.
            // TODO: Restructure so we never read values from the instance.
            memoizeState(workInProgress, instance.state);
            memoizeProps(workInProgress, instance.props);

            // The context might have changed so we need to recalculate it.
            if (hasContext) {
              invalidateContextProvider$1(workInProgress, true);
            }

            return workInProgress.child;
          }

          function pushHostRootContext(workInProgress) {
            var root = workInProgress.stateNode;
            if (root.pendingContext) {
              pushTopLevelContextObject$1(workInProgress, root.pendingContext, root.pendingContext !== root.context);
            } else if (root.context) {
              // Should always be set
              pushTopLevelContextObject$1(workInProgress, root.context, false);
            }
            pushHostContainer(workInProgress, root.containerInfo);
          }

          function updateHostRoot(current, workInProgress, priorityLevel) {
            pushHostRootContext(workInProgress);
            var updateQueue = workInProgress.updateQueue;
            if (updateQueue !== null) {
              var prevState = workInProgress.memoizedState;
              var state = beginUpdateQueue$1(current, workInProgress, updateQueue, null, prevState, null, priorityLevel);
              if (prevState === state) {
                // If the state is the same as before, that's a bailout because we had
                // no work matching this priority.
                resetHydrationState();
                return bailoutOnAlreadyFinishedWork(current, workInProgress);
              }
              var element = state.element;
              if ((current === null || current.child === null) && enterHydrationState(workInProgress)) {
                // If we don't have any current children this might be the first pass.
                // We always try to hydrate. If this isn't a hydration pass there won't
                // be any children to hydrate which is effectively the same thing as
                // not hydrating.

                // This is a bit of a hack. We track the host root as a placement to
                // know that we're currently in a mounting state. That way isMounted
                // works as expected. We must reset this before committing.
                // TODO: Delete this when we delete isMounted and findDOMNode.
                workInProgress.effectTag |= Placement$2;

                // Ensure that children mount into this root without tracking
                // side-effects. This ensures that we don't store Placement effects on
                // nodes that will be hydrated.
                workInProgress.child = mountChildFibersInPlace(workInProgress, workInProgress.child, element, priorityLevel);
              } else {
                // Otherwise reset hydration state in case we aborted and resumed another
                // root.
                resetHydrationState();
                reconcileChildren(current, workInProgress, element);
              }
              memoizeState(workInProgress, state);
              return workInProgress.child;
            }
            resetHydrationState();
            // If there is no update queue, that's a bailout because the root has no props.
            return bailoutOnAlreadyFinishedWork(current, workInProgress);
          }

          function updateHostComponent(current, workInProgress, renderPriority) {
            pushHostContext(workInProgress);

            if (current === null) {
              tryToClaimNextHydratableInstance(workInProgress);
            }

            var type = workInProgress.type;
            var memoizedProps = workInProgress.memoizedProps;
            var nextProps = workInProgress.pendingProps;
            if (nextProps === null) {
              nextProps = memoizedProps;
              !(nextProps !== null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            }
            var prevProps = current !== null ? current.memoizedProps : null;

            if (hasContextChanged$1()) {
              // Normally we can bail out on props equality but if context has changed
              // we don't do the bailout and we have to reuse existing props instead.
            } else if (nextProps === null || memoizedProps === nextProps) {
              return bailoutOnAlreadyFinishedWork(current, workInProgress);
            }

            var nextChildren = nextProps.children;
            var isDirectTextChild = shouldSetTextContent(type, nextProps);

            if (isDirectTextChild) {
              // We special case a direct text child of a host node. This is a common
              // case. We won't handle it as a reified child. We will instead handle
              // this in the host environment that also have access to this prop. That
              // avoids allocating another HostText fiber and traversing it.
              nextChildren = null;
            } else if (prevProps && shouldSetTextContent(type, prevProps)) {
              // If we're switching from a direct text child to a normal child, or to
              // empty, we need to schedule the text content to be reset.
              workInProgress.effectTag |= ContentReset$1;
            }

            markRef(current, workInProgress);

            // Check the host config to see if the children are offscreen/hidden.
            if (renderPriority !== OffscreenPriority$1 && !useSyncScheduling && shouldDeprioritizeSubtree(type, nextProps)) {
              // Down-prioritize the children.
              workInProgress.pendingWorkPriority = OffscreenPriority$1;
              // Bailout and come back to this fiber later at OffscreenPriority.
              return null;
            }

            reconcileChildren(current, workInProgress, nextChildren);
            memoizeProps(workInProgress, nextProps);
            return workInProgress.child;
          }

          function updateHostText(current, workInProgress) {
            if (current === null) {
              tryToClaimNextHydratableInstance(workInProgress);
            }
            var nextProps = workInProgress.pendingProps;
            if (nextProps === null) {
              nextProps = workInProgress.memoizedProps;
            }
            memoizeProps(workInProgress, nextProps);
            // Nothing to do here. This is terminal. We'll do the completion step
            // immediately after.
            return null;
          }

          function mountIndeterminateComponent(current, workInProgress, priorityLevel) {
            !(current === null) ? invariant(false, 'An indeterminate component should never have mounted. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            var fn = workInProgress.type;
            var props = workInProgress.pendingProps;
            var unmaskedContext = getUnmaskedContext$1(workInProgress);
            var context = getMaskedContext$1(workInProgress, unmaskedContext);

            var value;

            {
              ReactCurrentOwner$2.current = workInProgress;
              value = fn(props, context);
            }
            // React DevTools reads this flag.
            workInProgress.effectTag |= PerformedWork$1;

            if ((typeof value === "undefined" ? "undefined" : _typeof4(value)) === 'object' && value !== null && typeof value.render === 'function') {
              // Proceed under the assumption that this is a class instance
              workInProgress.tag = ClassComponent$6;

              // Push context providers early to prevent context stack mismatches.
              // During mounting we don't know the child context yet as the instance doesn't exist.
              // We will invalidate the child context in finishClassComponent() right after rendering.
              var hasContext = pushContextProvider$1(workInProgress);
              adoptClassInstance(workInProgress, value);
              mountClassInstance(workInProgress, priorityLevel);
              return finishClassComponent(current, workInProgress, true, hasContext);
            } else {
              // Proceed under the assumption that this is a functional component
              workInProgress.tag = FunctionalComponent$1;
              {
                var Component = workInProgress.type;

                if (Component) {
                  warning$23(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component');
                }
                if (workInProgress.ref !== null) {
                  var info = '';
                  var ownerName = ReactDebugCurrentFiber$4.getCurrentFiberOwnerName();
                  if (ownerName) {
                    info += '\n\nCheck the render method of `' + ownerName + '`.';
                  }

                  var warningKey = ownerName || workInProgress._debugID || '';
                  var debugSource = workInProgress._debugSource;
                  if (debugSource) {
                    warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
                  }
                  if (!warnedAboutStatelessRefs[warningKey]) {
                    warnedAboutStatelessRefs[warningKey] = true;
                    warning$23(false, 'Stateless function components cannot be given refs. ' + 'Attempts to access this ref will fail.%s%s', info, ReactDebugCurrentFiber$4.getCurrentFiberStackAddendum());
                  }
                }
              }
              reconcileChildren(current, workInProgress, value);
              memoizeProps(workInProgress, props);
              return workInProgress.child;
            }
          }

          function updateCoroutineComponent(current, workInProgress) {
            var nextCoroutine = workInProgress.pendingProps;
            if (hasContextChanged$1()) {
              // Normally we can bail out on props equality but if context has changed
              // we don't do the bailout and we have to reuse existing props instead.
              if (nextCoroutine === null) {
                nextCoroutine = current && current.memoizedProps;
                !(nextCoroutine !== null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
              }
            } else if (nextCoroutine === null || workInProgress.memoizedProps === nextCoroutine) {
              nextCoroutine = workInProgress.memoizedProps;
              // TODO: When bailing out, we might need to return the stateNode instead
              // of the child. To check it for work.
              // return bailoutOnAlreadyFinishedWork(current, workInProgress);
            }

            var nextChildren = nextCoroutine.children;
            var priorityLevel = workInProgress.pendingWorkPriority;

            // The following is a fork of reconcileChildrenAtPriority but using
            // stateNode to store the child.
            if (current === null) {
              workInProgress.stateNode = mountChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel);
            } else if (current.child === workInProgress.child) {
              workInProgress.stateNode = reconcileChildFibers(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel);
            } else {
              workInProgress.stateNode = reconcileChildFibersInPlace(workInProgress, workInProgress.stateNode, nextChildren, priorityLevel);
            }

            memoizeProps(workInProgress, nextCoroutine);
            // This doesn't take arbitrary time so we could synchronously just begin
            // eagerly do the work of workInProgress.child as an optimization.
            return workInProgress.stateNode;
          }

          function updatePortalComponent(current, workInProgress) {
            pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
            var priorityLevel = workInProgress.pendingWorkPriority;
            var nextChildren = workInProgress.pendingProps;
            if (hasContextChanged$1()) {
              // Normally we can bail out on props equality but if context has changed
              // we don't do the bailout and we have to reuse existing props instead.
              if (nextChildren === null) {
                nextChildren = current && current.memoizedProps;
                !(nextChildren != null) ? invariant(false, 'We should always have pending or current props. This error is likely caused by a bug in React. Please file an issue.') : void 0;
              }
            } else if (nextChildren === null || workInProgress.memoizedProps === nextChildren) {
              return bailoutOnAlreadyFinishedWork(current, workInProgress);
            }

            if (current === null) {
              // Portals are special because we don't append the children during mount
              // but at commit. Therefore we need to track insertions which the normal
              // flow doesn't do during mount. This doesn't happen at the root because
              // the root always starts with a "current" with a null child.
              // TODO: Consider unifying this with how the root works.
              workInProgress.child = reconcileChildFibersInPlace(workInProgress, workInProgress.child, nextChildren, priorityLevel);
              memoizeProps(workInProgress, nextChildren);
            } else {
              reconcileChildren(current, workInProgress, nextChildren);
              memoizeProps(workInProgress, nextChildren);
            }
            return workInProgress.child;
          }

          /*
          function reuseChildrenEffects(returnFiber : Fiber, firstChild : Fiber) {
            let child = firstChild;
            do {
              // Ensure that the first and last effect of the parent corresponds
              // to the children's first and last effect.
              if (!returnFiber.firstEffect) {
                returnFiber.firstEffect = child.firstEffect;
              }
              if (child.lastEffect) {
                if (returnFiber.lastEffect) {
                  returnFiber.lastEffect.nextEffect = child.firstEffect;
                }
                returnFiber.lastEffect = child.lastEffect;
              }
            } while (child = child.sibling);
          }
          */

          function bailoutOnAlreadyFinishedWork(current, workInProgress) {
            {
              cancelWorkTimer(workInProgress);
            }

            // TODO: We should ideally be able to bail out early if the children have no
            // more work to do. However, since we don't have a separation of this
            // Fiber's priority and its children yet - we don't know without doing lots
            // of the same work we do anyway. Once we have that separation we can just
            // bail out here if the children has no more work at this priority level.
            // if (workInProgress.priorityOfChildren <= priorityLevel) {
            //   // If there are side-effects in these children that have not yet been
            //   // committed we need to ensure that they get properly transferred up.
            //   if (current && current.child !== workInProgress.child) {
            //     reuseChildrenEffects(workInProgress, child);
            //   }
            //   return null;
            // }

            cloneChildFibers(current, workInProgress);
            return workInProgress.child;
          }

          function bailoutOnLowPriority(current, workInProgress) {
            {
              cancelWorkTimer(workInProgress);
            }

            // TODO: Handle HostComponent tags here as well and call pushHostContext()?
            // See PR 8590 discussion for context
            switch (workInProgress.tag) {
              case HostRoot$7:
                pushHostRootContext(workInProgress);
                break;
              case ClassComponent$6:
                pushContextProvider$1(workInProgress);
                break;
              case HostPortal$4:
                pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
                break;
            }
            // TODO: What if this is currently in progress?
            // How can that happen? How is this not being cloned?
            return null;
          }

          // TODO: Delete memoizeProps/State and move to reconcile/bailout instead
          function memoizeProps(workInProgress, nextProps) {
            workInProgress.memoizedProps = nextProps;
          }

          function memoizeState(workInProgress, nextState) {
            workInProgress.memoizedState = nextState;
            // Don't reset the updateQueue, in case there are pending updates. Resetting
            // is handled by beginUpdateQueue.
          }

          function beginWork(current, workInProgress, priorityLevel) {
            if (workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) {
              return bailoutOnLowPriority(current, workInProgress);
            }

            {
              ReactDebugCurrentFiber$4.setCurrentFiber(workInProgress, null);
            }

            switch (workInProgress.tag) {
              case IndeterminateComponent$2:
                return mountIndeterminateComponent(current, workInProgress, priorityLevel);
              case FunctionalComponent$1:
                return updateFunctionalComponent(current, workInProgress);
              case ClassComponent$6:
                return updateClassComponent(current, workInProgress, priorityLevel);
              case HostRoot$7:
                return updateHostRoot(current, workInProgress, priorityLevel);
              case HostComponent$7:
                return updateHostComponent(current, workInProgress, priorityLevel);
              case HostText$4:
                return updateHostText(current, workInProgress);
              case CoroutineHandlerPhase:
                // This is a restart. Reset the tag to the initial phase.
                workInProgress.tag = CoroutineComponent$1;
              // Intentionally fall through since this is now the same.
              case CoroutineComponent$1:
                return updateCoroutineComponent(current, workInProgress);
              case YieldComponent$2:
                // A yield component is just a placeholder, we can just run through the
                // next one immediately.
                return null;
              case HostPortal$4:
                return updatePortalComponent(current, workInProgress);
              case Fragment$2:
                return updateFragment(current, workInProgress);
              default:
                invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
            }
          }

          function beginFailedWork(current, workInProgress, priorityLevel) {
            // Push context providers here to avoid a push/pop context mismatch.
            switch (workInProgress.tag) {
              case ClassComponent$6:
                pushContextProvider$1(workInProgress);
                break;
              case HostRoot$7:
                pushHostRootContext(workInProgress);
                break;
              default:
                invariant(false, 'Invalid type of work. This error is likely caused by a bug in React. Please file an issue.');
            }

            // Add an error effect so we can handle the error during the commit phase
            workInProgress.effectTag |= Err$1;

            // This is a weird case where we do "resume" work — work that failed on
            // our first attempt. Because we no longer have a notion of "progressed
            // deletions," reset the child to the current child to make sure we delete
            // it again. TODO: Find a better way to handle this, perhaps during a more
            // general overhaul of error handling.
            if (current === null) {
              workInProgress.child = null;
            } else if (workInProgress.child !== current.child) {
              workInProgress.child = current.child;
            }

            if (workInProgress.pendingWorkPriority === NoWork$3 || workInProgress.pendingWorkPriority > priorityLevel) {
              return bailoutOnLowPriority(current, workInProgress);
            }

            // If we don't bail out, we're going be recomputing our children so we need
            // to drop our effect list.
            workInProgress.firstEffect = null;
            workInProgress.lastEffect = null;

            // Unmount the current children as if the component rendered null
            var nextChildren = null;
            reconcileChildrenAtPriority(current, workInProgress, nextChildren, priorityLevel);

            if (workInProgress.tag === ClassComponent$6) {
              var instance = workInProgress.stateNode;
              workInProgress.memoizedProps = instance.props;
              workInProgress.memoizedState = instance.state;
            }

            return workInProgress.child;
          }

          return {
            beginWork: beginWork,
            beginFailedWork: beginFailedWork
          };
        };

        var reconcileChildFibers$2 = ReactChildFiber.reconcileChildFibers;

        var popContextProvider$2 = ReactFiberContext.popContextProvider;
        var popTopLevelContextObject$1 = ReactFiberContext.popTopLevelContextObject;

        var IndeterminateComponent$3 = ReactTypeOfWork.IndeterminateComponent;
        var FunctionalComponent$3 = ReactTypeOfWork.FunctionalComponent;
        var ClassComponent$8 = ReactTypeOfWork.ClassComponent;
        var HostRoot$8 = ReactTypeOfWork.HostRoot;
        var HostComponent$8 = ReactTypeOfWork.HostComponent;
        var HostText$6 = ReactTypeOfWork.HostText;
        var HostPortal$6 = ReactTypeOfWork.HostPortal;
        var CoroutineComponent$3 = ReactTypeOfWork.CoroutineComponent;
        var CoroutineHandlerPhase$1 = ReactTypeOfWork.CoroutineHandlerPhase;
        var YieldComponent$4 = ReactTypeOfWork.YieldComponent;
        var Fragment$4 = ReactTypeOfWork.Fragment;
        var Placement$4 = ReactTypeOfSideEffect.Placement;
        var Ref$2 = ReactTypeOfSideEffect.Ref;
        var Update$2 = ReactTypeOfSideEffect.Update;
        var OffscreenPriority$2 = ReactPriorityLevel.OffscreenPriority;

        {
          var ReactDebugCurrentFiber$5 = ReactDebugCurrentFiber_1;
        }

        var ReactFiberCompleteWork = function ReactFiberCompleteWork(config, hostContext, hydrationContext) {
          var createInstance = config.createInstance,
              createTextInstance = config.createTextInstance,
              appendInitialChild = config.appendInitialChild,
              finalizeInitialChildren = config.finalizeInitialChildren,
              prepareUpdate = config.prepareUpdate;
          var getRootHostContainer = hostContext.getRootHostContainer,
              popHostContext = hostContext.popHostContext,
              getHostContext = hostContext.getHostContext,
              popHostContainer = hostContext.popHostContainer;
          var prepareToHydrateHostInstance = hydrationContext.prepareToHydrateHostInstance,
              prepareToHydrateHostTextInstance = hydrationContext.prepareToHydrateHostTextInstance,
              popHydrationState = hydrationContext.popHydrationState;

          function markUpdate(workInProgress) {
            // Tag the fiber with an update effect. This turns a Placement into
            // an UpdateAndPlacement.
            workInProgress.effectTag |= Update$2;
          }

          function markRef(workInProgress) {
            workInProgress.effectTag |= Ref$2;
          }

          function appendAllYields(yields, workInProgress) {
            var node = workInProgress.stateNode;
            if (node) {
              node['return'] = workInProgress;
            }
            while (node !== null) {
              if (node.tag === HostComponent$8 || node.tag === HostText$6 || node.tag === HostPortal$6) {
                invariant(false, 'A coroutine cannot have host component children.');
              } else if (node.tag === YieldComponent$4) {
                yields.push(node.type);
              } else if (node.child !== null) {
                node.child['return'] = node;
                node = node.child;
                continue;
              }
              while (node.sibling === null) {
                if (node['return'] === null || node['return'] === workInProgress) {
                  return;
                }
                node = node['return'];
              }
              node.sibling['return'] = node['return'];
              node = node.sibling;
            }
          }

          function moveCoroutineToHandlerPhase(current, workInProgress) {
            var coroutine = workInProgress.memoizedProps;
            !coroutine ? invariant(false, 'Should be resolved by now. This error is likely caused by a bug in React. Please file an issue.') : void 0;

            // First step of the coroutine has completed. Now we need to do the second.
            // TODO: It would be nice to have a multi stage coroutine represented by a
            // single component, or at least tail call optimize nested ones. Currently
            // that requires additional fields that we don't want to add to the fiber.
            // So this requires nested handlers.
            // Note: This doesn't mutate the alternate node. I don't think it needs to
            // since this stage is reset for every pass.
            workInProgress.tag = CoroutineHandlerPhase$1;

            // Build up the yields.
            // TODO: Compare this to a generator or opaque helpers like Children.
            var yields = [];
            appendAllYields(yields, workInProgress);
            var fn = coroutine.handler;
            var props = coroutine.props;
            var nextChildren = fn(props, yields);

            var currentFirstChild = current !== null ? current.child : null;
            // Inherit the priority of the returnFiber.
            var priority = workInProgress.pendingWorkPriority;
            workInProgress.child = reconcileChildFibers$2(workInProgress, currentFirstChild, nextChildren, priority);
            return workInProgress.child;
          }

          function appendAllChildren(parent, workInProgress) {
            // We only have the top Fiber that was created but we need recurse down its
            // children to find all the terminal nodes.
            var node = workInProgress.child;
            while (node !== null) {
              if (node.tag === HostComponent$8 || node.tag === HostText$6) {
                appendInitialChild(parent, node.stateNode);
              } else if (node.tag === HostPortal$6) {
                // If we have a portal child, then we don't want to traverse
                // down its children. Instead, we'll get insertions from each child in
                // the portal directly.
              } else if (node.child !== null) {
                node = node.child;
                continue;
              }
              if (node === workInProgress) {
                return;
              }
              while (node.sibling === null) {
                if (node['return'] === null || node['return'] === workInProgress) {
                  return;
                }
                node = node['return'];
              }
              node = node.sibling;
            }
          }

          function completeWork(current, workInProgress, renderPriority) {
            {
              ReactDebugCurrentFiber$5.setCurrentFiber(workInProgress, null);
            }

            // Get the latest props.
            var newProps = workInProgress.pendingProps;
            if (newProps === null) {
              newProps = workInProgress.memoizedProps;
            } else if (workInProgress.pendingWorkPriority !== OffscreenPriority$2 || renderPriority === OffscreenPriority$2) {
              // Reset the pending props, unless this was a down-prioritization.
              workInProgress.pendingProps = null;
            }

            switch (workInProgress.tag) {
              case FunctionalComponent$3:
                return null;
              case ClassComponent$8:
                {
                  // We are leaving this subtree, so pop context if any.
                  popContextProvider$2(workInProgress);
                  return null;
                }
              case HostRoot$8:
                {
                  popHostContainer(workInProgress);
                  popTopLevelContextObject$1(workInProgress);
                  var fiberRoot = workInProgress.stateNode;
                  if (fiberRoot.pendingContext) {
                    fiberRoot.context = fiberRoot.pendingContext;
                    fiberRoot.pendingContext = null;
                  }

                  if (current === null || current.child === null) {
                    // If we hydrated, pop so that we can delete any remaining children
                    // that weren't hydrated.
                    popHydrationState(workInProgress);
                    // This resets the hacky state to fix isMounted before committing.
                    // TODO: Delete this when we delete isMounted and findDOMNode.
                    workInProgress.effectTag &= ~Placement$4;
                  }
                  return null;
                }
              case HostComponent$8:
                {
                  popHostContext(workInProgress);
                  var rootContainerInstance = getRootHostContainer();
                  var type = workInProgress.type;
                  if (current !== null && workInProgress.stateNode != null) {
                    // If we have an alternate, that means this is an update and we need to
                    // schedule a side-effect to do the updates.
                    var oldProps = current.memoizedProps;
                    // If we get updated because one of our children updated, we don't
                    // have newProps so we'll have to reuse them.
                    // TODO: Split the update API as separate for the props vs. children.
                    // Even better would be if children weren't special cased at all tho.
                    var instance = workInProgress.stateNode;
                    var currentHostContext = getHostContext();
                    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);

                    // TODO: Type this specific to this type of component.
                    workInProgress.updateQueue = updatePayload;
                    // If the update payload indicates that there is a change or if there
                    // is a new ref we mark this as an update.
                    if (updatePayload) {
                      markUpdate(workInProgress);
                    }
                    if (current.ref !== workInProgress.ref) {
                      markRef(workInProgress);
                    }
                  } else {
                    if (!newProps) {
                      !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                      // This can happen when we abort work.
                      return null;
                    }

                    var _currentHostContext = getHostContext();
                    // TODO: Move createInstance to beginWork and keep it on a context
                    // "stack" as the parent. Then append children as we go in beginWork
                    // or completeWork depending on we want to add then top->down or
                    // bottom->up. Top->down is faster in IE11.
                    var wasHydrated = popHydrationState(workInProgress);
                    if (wasHydrated) {
                      // TOOD: Move this and createInstance step into the beginPhase
                      // to consolidate.
                      if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, _currentHostContext)) {
                        // If changes to the hydrated node needs to be applied at the
                        // commit-phase we mark this as such.
                        markUpdate(workInProgress);
                      }
                    } else {
                      var _instance = createInstance(type, newProps, rootContainerInstance, _currentHostContext, workInProgress);

                      appendAllChildren(_instance, workInProgress);

                      // Certain renderers require commit-time effects for initial mount.
                      // (eg DOM renderer supports auto-focus for certain elements).
                      // Make sure such renderers get scheduled for later work.
                      if (finalizeInitialChildren(_instance, type, newProps, rootContainerInstance)) {
                        markUpdate(workInProgress);
                      }
                      workInProgress.stateNode = _instance;
                    }

                    if (workInProgress.ref !== null) {
                      // If there is a ref on a host node we need to schedule a callback
                      markRef(workInProgress);
                    }
                  }
                  return null;
                }
              case HostText$6:
                {
                  var newText = newProps;
                  if (current && workInProgress.stateNode != null) {
                    var oldText = current.memoizedProps;
                    // If we have an alternate, that means this is an update and we need
                    // to schedule a side-effect to do the updates.
                    if (oldText !== newText) {
                      markUpdate(workInProgress);
                    }
                  } else {
                    if (typeof newText !== 'string') {
                      !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                      // This can happen when we abort work.
                      return null;
                    }
                    var _rootContainerInstance = getRootHostContainer();
                    var _currentHostContext2 = getHostContext();
                    var _wasHydrated = popHydrationState(workInProgress);
                    if (_wasHydrated) {
                      if (prepareToHydrateHostTextInstance(workInProgress)) {
                        markUpdate(workInProgress);
                      }
                    } else {
                      workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext2, workInProgress);
                    }
                  }
                  return null;
                }
              case CoroutineComponent$3:
                return moveCoroutineToHandlerPhase(current, workInProgress);
              case CoroutineHandlerPhase$1:
                // Reset the tag to now be a first phase coroutine.
                workInProgress.tag = CoroutineComponent$3;
                return null;
              case YieldComponent$4:
                // Does nothing.
                return null;
              case Fragment$4:
                return null;
              case HostPortal$6:
                // TODO: Only mark this as an update if we have any pending callbacks.
                markUpdate(workInProgress);
                popHostContainer(workInProgress);
                return null;
              // Error cases
              case IndeterminateComponent$3:
                invariant(false, 'An indeterminate component should have become determinate before completing. This error is likely caused by a bug in React. Please file an issue.');
              // eslint-disable-next-line no-fallthrough
              default:
                invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
            }
          }

          return {
            completeWork: completeWork
          };
        };

        {
          var warning$26 = require$$0;
        }

        var onCommitFiberRoot = null;
        var onCommitFiberUnmount = null;
        var hasLoggedError = false;

        function catchErrors(fn) {
          return function (arg) {
            try {
              return fn(arg);
            } catch (err) {
              if (true && !hasLoggedError) {
                hasLoggedError = true;
                warning$26(false, 'React DevTools encountered an error: %s', err);
              }
            }
          };
        }

        function injectInternals$1(internals) {
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
            // No DevTools
            return false;
          }
          var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (!hook.supportsFiber) {
            {
              warning$26(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
            }
            // DevTools exists, even though it doesn't support Fiber.
            return true;
          }
          try {
            var rendererID = hook.inject(internals);
            // We have successfully injected, so now it is safe to set up hooks.
            onCommitFiberRoot = catchErrors(function (root) {
              return hook.onCommitFiberRoot(rendererID, root);
            });
            onCommitFiberUnmount = catchErrors(function (fiber) {
              return hook.onCommitFiberUnmount(rendererID, fiber);
            });
          } catch (err) {
            // Catch all errors because it is unsafe to throw during initialization.
            {
              warning$26(false, 'React DevTools encountered an error: %s.', err);
            }
          }
          // DevTools exists
          return true;
        }

        function onCommitRoot$1(root) {
          if (typeof onCommitFiberRoot === 'function') {
            onCommitFiberRoot(root);
          }
        }

        function onCommitUnmount$1(fiber) {
          if (typeof onCommitFiberUnmount === 'function') {
            onCommitFiberUnmount(fiber);
          }
        }

        var injectInternals_1 = injectInternals$1;
        var onCommitRoot_1 = onCommitRoot$1;
        var onCommitUnmount_1 = onCommitUnmount$1;

        var ReactFiberDevToolsHook = {
          injectInternals: injectInternals_1,
          onCommitRoot: onCommitRoot_1,
          onCommitUnmount: onCommitUnmount_1
        };

        var ClassComponent$9 = ReactTypeOfWork.ClassComponent;
        var HostRoot$9 = ReactTypeOfWork.HostRoot;
        var HostComponent$9 = ReactTypeOfWork.HostComponent;
        var HostText$7 = ReactTypeOfWork.HostText;
        var HostPortal$7 = ReactTypeOfWork.HostPortal;
        var CoroutineComponent$4 = ReactTypeOfWork.CoroutineComponent;

        var commitCallbacks$1 = ReactFiberUpdateQueue.commitCallbacks;

        var onCommitUnmount = ReactFiberDevToolsHook.onCommitUnmount;

        var invokeGuardedCallback$2 = ReactErrorUtils_1.invokeGuardedCallback;
        var hasCaughtError$1 = ReactErrorUtils_1.hasCaughtError;
        var clearCaughtError$1 = ReactErrorUtils_1.clearCaughtError;

        var Placement$5 = ReactTypeOfSideEffect.Placement;
        var Update$3 = ReactTypeOfSideEffect.Update;
        var Callback$1 = ReactTypeOfSideEffect.Callback;
        var ContentReset$2 = ReactTypeOfSideEffect.ContentReset;

        {
          var _require5$1 = ReactDebugFiberPerf_1,
              startPhaseTimer$2 = _require5$1.startPhaseTimer,
              stopPhaseTimer$2 = _require5$1.stopPhaseTimer;
        }

        var ReactFiberCommitWork = function ReactFiberCommitWork(config, captureError) {
          var commitMount = config.commitMount,
              commitUpdate = config.commitUpdate,
              resetTextContent = config.resetTextContent,
              commitTextUpdate = config.commitTextUpdate,
              appendChild = config.appendChild,
              appendChildToContainer = config.appendChildToContainer,
              insertBefore = config.insertBefore,
              insertInContainerBefore = config.insertInContainerBefore,
              removeChild = config.removeChild,
              removeChildFromContainer = config.removeChildFromContainer,
              getPublicInstance = config.getPublicInstance;

          {
            var callComponentWillUnmountWithTimerInDev = function callComponentWillUnmountWithTimerInDev(current, instance) {
              startPhaseTimer$2(current, 'componentWillUnmount');
              instance.props = current.memoizedProps;
              instance.state = current.memoizedState;
              instance.componentWillUnmount();
              stopPhaseTimer$2();
            };
          }

          // Capture errors so they don't interrupt unmounting.
          function safelyCallComponentWillUnmount(current, instance) {
            {
              invokeGuardedCallback$2(null, callComponentWillUnmountWithTimerInDev, null, current, instance);
              if (hasCaughtError$1()) {
                var unmountError = clearCaughtError$1();
                captureError(current, unmountError);
              }
            }
          }

          function safelyDetachRef(current) {
            var ref = current.ref;
            if (ref !== null) {
              {
                invokeGuardedCallback$2(null, ref, null, null);
                if (hasCaughtError$1()) {
                  var refError = clearCaughtError$1();
                  captureError(current, refError);
                }
              }
            }
          }

          function getHostParentFiber(fiber) {
            var parent = fiber['return'];
            while (parent !== null) {
              if (isHostParent(parent)) {
                return parent;
              }
              parent = parent['return'];
            }
            invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
          }

          function isHostParent(fiber) {
            return fiber.tag === HostComponent$9 || fiber.tag === HostRoot$9 || fiber.tag === HostPortal$7;
          }

          function getHostSibling(fiber) {
            // We're going to search forward into the tree until we find a sibling host
            // node. Unfortunately, if multiple insertions are done in a row we have to
            // search past them. This leads to exponential search for the next sibling.
            var node = fiber;
            siblings: while (true) {
              // If we didn't find anything, let's try the next sibling.
              while (node.sibling === null) {
                if (node['return'] === null || isHostParent(node['return'])) {
                  // If we pop out of the root or hit the parent the fiber we are the
                  // last sibling.
                  return null;
                }
                node = node['return'];
              }
              node.sibling['return'] = node['return'];
              node = node.sibling;
              while (node.tag !== HostComponent$9 && node.tag !== HostText$7) {
                // If it is not host node and, we might have a host node inside it.
                // Try to search down until we find one.
                if (node.effectTag & Placement$5) {
                  // If we don't have a child, try the siblings instead.
                  continue siblings;
                }
                // If we don't have a child, try the siblings instead.
                // We also skip portals because they are not part of this host tree.
                if (node.child === null || node.tag === HostPortal$7) {
                  continue siblings;
                } else {
                  node.child['return'] = node;
                  node = node.child;
                }
              }
              // Check if this host node is stable or about to be placed.
              if (!(node.effectTag & Placement$5)) {
                // Found it!
                return node.stateNode;
              }
            }
          }

          function commitPlacement(finishedWork) {
            // Recursively insert all host nodes into the parent.
            var parentFiber = getHostParentFiber(finishedWork);
            var parent = void 0;
            var isContainer = void 0;
            switch (parentFiber.tag) {
              case HostComponent$9:
                parent = parentFiber.stateNode;
                isContainer = false;
                break;
              case HostRoot$9:
                parent = parentFiber.stateNode.containerInfo;
                isContainer = true;
                break;
              case HostPortal$7:
                parent = parentFiber.stateNode.containerInfo;
                isContainer = true;
                break;
              default:
                invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
            }
            if (parentFiber.effectTag & ContentReset$2) {
              // Reset the text content of the parent before doing any insertions
              resetTextContent(parent);
              // Clear ContentReset from the effect tag
              parentFiber.effectTag &= ~ContentReset$2;
            }

            var before = getHostSibling(finishedWork);
            // We only have the top Fiber that was inserted but we need recurse down its
            // children to find all the terminal nodes.
            var node = finishedWork;
            while (true) {
              if (node.tag === HostComponent$9 || node.tag === HostText$7) {
                if (before) {
                  if (isContainer) {
                    insertInContainerBefore(parent, node.stateNode, before);
                  } else {
                    insertBefore(parent, node.stateNode, before);
                  }
                } else {
                  if (isContainer) {
                    appendChildToContainer(parent, node.stateNode);
                  } else {
                    appendChild(parent, node.stateNode);
                  }
                }
              } else if (node.tag === HostPortal$7) {
                // If the insertion itself is a portal, then we don't want to traverse
                // down its children. Instead, we'll get insertions from each child in
                // the portal directly.
              } else if (node.child !== null) {
                node.child['return'] = node;
                node = node.child;
                continue;
              }
              if (node === finishedWork) {
                return;
              }
              while (node.sibling === null) {
                if (node['return'] === null || node['return'] === finishedWork) {
                  return;
                }
                node = node['return'];
              }
              node.sibling['return'] = node['return'];
              node = node.sibling;
            }
          }

          function commitNestedUnmounts(root) {
            // While we're inside a removed host node we don't want to call
            // removeChild on the inner nodes because they're removed by the top
            // call anyway. We also want to call componentWillUnmount on all
            // composites before this host node is removed from the tree. Therefore
            var node = root;
            while (true) {
              commitUnmount(node);
              // Visit children because they may contain more composite or host nodes.
              // Skip portals because commitUnmount() currently visits them recursively.
              if (node.child !== null && node.tag !== HostPortal$7) {
                node.child['return'] = node;
                node = node.child;
                continue;
              }
              if (node === root) {
                return;
              }
              while (node.sibling === null) {
                if (node['return'] === null || node['return'] === root) {
                  return;
                }
                node = node['return'];
              }
              node.sibling['return'] = node['return'];
              node = node.sibling;
            }
          }

          function unmountHostComponents(current) {
            // We only have the top Fiber that was inserted but we need recurse down its
            var node = current;

            // Each iteration, currentParent is populated with node's host parent if not
            // currentParentIsValid.
            var currentParentIsValid = false;
            var currentParent = void 0;
            var currentParentIsContainer = void 0;

            while (true) {
              if (!currentParentIsValid) {
                var parent = node['return'];
                findParent: while (true) {
                  !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                  switch (parent.tag) {
                    case HostComponent$9:
                      currentParent = parent.stateNode;
                      currentParentIsContainer = false;
                      break findParent;
                    case HostRoot$9:
                      currentParent = parent.stateNode.containerInfo;
                      currentParentIsContainer = true;
                      break findParent;
                    case HostPortal$7:
                      currentParent = parent.stateNode.containerInfo;
                      currentParentIsContainer = true;
                      break findParent;
                  }
                  parent = parent['return'];
                }
                currentParentIsValid = true;
              }

              if (node.tag === HostComponent$9 || node.tag === HostText$7) {
                commitNestedUnmounts(node);
                // After all the children have unmounted, it is now safe to remove the
                // node from the tree.
                if (currentParentIsContainer) {
                  removeChildFromContainer(currentParent, node.stateNode);
                } else {
                  removeChild(currentParent, node.stateNode);
                }
                // Don't visit children because we already visited them.
              } else if (node.tag === HostPortal$7) {
                // When we go into a portal, it becomes the parent to remove from.
                // We will reassign it back when we pop the portal on the way up.
                currentParent = node.stateNode.containerInfo;
                // Visit children because portals might contain host components.
                if (node.child !== null) {
                  node.child['return'] = node;
                  node = node.child;
                  continue;
                }
              } else {
                commitUnmount(node);
                // Visit children because we may find more host components below.
                if (node.child !== null) {
                  node.child['return'] = node;
                  node = node.child;
                  continue;
                }
              }
              if (node === current) {
                return;
              }
              while (node.sibling === null) {
                if (node['return'] === null || node['return'] === current) {
                  return;
                }
                node = node['return'];
                if (node.tag === HostPortal$7) {
                  // When we go out of the portal, we need to restore the parent.
                  // Since we don't keep a stack of them, we will search for it.
                  currentParentIsValid = false;
                }
              }
              node.sibling['return'] = node['return'];
              node = node.sibling;
            }
          }

          function commitDeletion(current) {
            // Recursively delete all host nodes from the parent.
            // Detach refs and call componentWillUnmount() on the whole subtree.
            unmountHostComponents(current);

            // Cut off the return pointers to disconnect it from the tree. Ideally, we
            // should clear the child pointer of the parent alternate to let this
            // get GC:ed but we don't know which for sure which parent is the current
            // one so we'll settle for GC:ing the subtree of this child. This child
            // itself will be GC:ed when the parent updates the next time.
            current['return'] = null;
            current.child = null;
            if (current.alternate) {
              current.alternate.child = null;
              current.alternate['return'] = null;
            }
          }

          // User-originating errors (lifecycles and refs) should not interrupt
          // deletion, so don't let them throw. Host-originating errors should
          // interrupt deletion, so it's okay
          function commitUnmount(current) {
            if (typeof onCommitUnmount === 'function') {
              onCommitUnmount(current);
            }

            switch (current.tag) {
              case ClassComponent$9:
                {
                  safelyDetachRef(current);
                  var instance = current.stateNode;
                  if (typeof instance.componentWillUnmount === 'function') {
                    safelyCallComponentWillUnmount(current, instance);
                  }
                  return;
                }
              case HostComponent$9:
                {
                  safelyDetachRef(current);
                  return;
                }
              case CoroutineComponent$4:
                {
                  commitNestedUnmounts(current.stateNode);
                  return;
                }
              case HostPortal$7:
                {
                  // TODO: this is recursive.
                  // We are also not using this parent because
                  // the portal will get pushed immediately.
                  unmountHostComponents(current);
                  return;
                }
            }
          }

          function commitWork(current, finishedWork) {
            switch (finishedWork.tag) {
              case ClassComponent$9:
                {
                  return;
                }
              case HostComponent$9:
                {
                  var instance = finishedWork.stateNode;
                  if (instance != null) {
                    // Commit the work prepared earlier.
                    var newProps = finishedWork.memoizedProps;
                    // For hydration we reuse the update path but we treat the oldProps
                    // as the newProps. The updatePayload will contain the real change in
                    // this case.
                    var oldProps = current !== null ? current.memoizedProps : newProps;
                    var type = finishedWork.type;
                    // TODO: Type the updateQueue to be specific to host components.
                    var updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null;
                    if (updatePayload !== null) {
                      commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
                    }
                  }
                  return;
                }
              case HostText$7:
                {
                  !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                  var textInstance = finishedWork.stateNode;
                  var newText = finishedWork.memoizedProps;
                  // For hydration we reuse the update path but we treat the oldProps
                  // as the newProps. The updatePayload will contain the real change in
                  // this case.
                  var oldText = current !== null ? current.memoizedProps : newText;
                  commitTextUpdate(textInstance, oldText, newText);
                  return;
                }
              case HostRoot$9:
                {
                  return;
                }
              case HostPortal$7:
                {
                  return;
                }
              default:
                {
                  invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
                }
            }
          }

          function commitLifeCycles(current, finishedWork) {
            switch (finishedWork.tag) {
              case ClassComponent$9:
                {
                  var instance = finishedWork.stateNode;
                  if (finishedWork.effectTag & Update$3) {
                    if (current === null) {
                      {
                        startPhaseTimer$2(finishedWork, 'componentDidMount');
                      }
                      instance.props = finishedWork.memoizedProps;
                      instance.state = finishedWork.memoizedState;
                      instance.componentDidMount();
                      {
                        stopPhaseTimer$2();
                      }
                    } else {
                      var prevProps = current.memoizedProps;
                      var prevState = current.memoizedState;
                      {
                        startPhaseTimer$2(finishedWork, 'componentDidUpdate');
                      }
                      instance.props = finishedWork.memoizedProps;
                      instance.state = finishedWork.memoizedState;
                      instance.componentDidUpdate(prevProps, prevState);
                      {
                        stopPhaseTimer$2();
                      }
                    }
                  }
                  if (finishedWork.effectTag & Callback$1 && finishedWork.updateQueue !== null) {
                    commitCallbacks$1(finishedWork, finishedWork.updateQueue, instance);
                  }
                  return;
                }
              case HostRoot$9:
                {
                  var updateQueue = finishedWork.updateQueue;
                  if (updateQueue !== null) {
                    var _instance = finishedWork.child && finishedWork.child.stateNode;
                    commitCallbacks$1(finishedWork, updateQueue, _instance);
                  }
                  return;
                }
              case HostComponent$9:
                {
                  var _instance2 = finishedWork.stateNode;

                  // Renderers may schedule work to be done after host components are mounted
                  // (eg DOM renderer may schedule auto-focus for inputs and form controls).
                  // These effects should only be committed when components are first mounted,
                  // aka when there is no current/alternate.
                  if (current === null && finishedWork.effectTag & Update$3) {
                    var type = finishedWork.type;
                    var props = finishedWork.memoizedProps;
                    commitMount(_instance2, type, props, finishedWork);
                  }

                  return;
                }
              case HostText$7:
                {
                  // We have no life-cycles associated with text.
                  return;
                }
              case HostPortal$7:
                {
                  // We have no life-cycles associated with portals.
                  return;
                }
              default:
                {
                  invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
                }
            }
          }

          function commitAttachRef(finishedWork) {
            var ref = finishedWork.ref;
            if (ref !== null) {
              var instance = finishedWork.stateNode;
              switch (finishedWork.tag) {
                case HostComponent$9:
                  ref(getPublicInstance(instance));
                  break;
                default:
                  ref(instance);
              }
            }
          }

          function commitDetachRef(current) {
            var currentRef = current.ref;
            if (currentRef !== null) {
              currentRef(null);
            }
          }

          return {
            commitPlacement: commitPlacement,
            commitDeletion: commitDeletion,
            commitWork: commitWork,
            commitLifeCycles: commitLifeCycles,
            commitAttachRef: commitAttachRef,
            commitDetachRef: commitDetachRef
          };
        };

        var createCursor$2 = ReactFiberStack.createCursor;
        var pop$2 = ReactFiberStack.pop;
        var push$2 = ReactFiberStack.push;

        var NO_CONTEXT = {};

        var ReactFiberHostContext = function ReactFiberHostContext(config) {
          var getChildHostContext = config.getChildHostContext,
              getRootHostContext = config.getRootHostContext;

          var contextStackCursor = createCursor$2(NO_CONTEXT);
          var contextFiberStackCursor = createCursor$2(NO_CONTEXT);
          var rootInstanceStackCursor = createCursor$2(NO_CONTEXT);

          function requiredContext(c) {
            !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            return c;
          }

          function getRootHostContainer() {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            return rootInstance;
          }

          function pushHostContainer(fiber, nextRootInstance) {
            // Push current root instance onto the stack;
            // This allows us to reset root when portals are popped.
            push$2(rootInstanceStackCursor, nextRootInstance, fiber);

            var nextRootContext = getRootHostContext(nextRootInstance);

            // Track the context and the Fiber that provided it.
            // This enables us to pop only Fibers that provide unique contexts.
            push$2(contextFiberStackCursor, fiber, fiber);
            push$2(contextStackCursor, nextRootContext, fiber);
          }

          function popHostContainer(fiber) {
            pop$2(contextStackCursor, fiber);
            pop$2(contextFiberStackCursor, fiber);
            pop$2(rootInstanceStackCursor, fiber);
          }

          function getHostContext() {
            var context = requiredContext(contextStackCursor.current);
            return context;
          }

          function pushHostContext(fiber) {
            var rootInstance = requiredContext(rootInstanceStackCursor.current);
            var context = requiredContext(contextStackCursor.current);
            var nextContext = getChildHostContext(context, fiber.type, rootInstance);

            // Don't push this Fiber's context unless it's unique.
            if (context === nextContext) {
              return;
            }

            // Track the context and the Fiber that provided it.
            // This enables us to pop only Fibers that provide unique contexts.
            push$2(contextFiberStackCursor, fiber, fiber);
            push$2(contextStackCursor, nextContext, fiber);
          }

          function popHostContext(fiber) {
            // Do not pop unless this Fiber provided the current context.
            // pushHostContext() only pushes Fibers that provide unique contexts.
            if (contextFiberStackCursor.current !== fiber) {
              return;
            }

            pop$2(contextStackCursor, fiber);
            pop$2(contextFiberStackCursor, fiber);
          }

          function resetHostContainer() {
            contextStackCursor.current = NO_CONTEXT;
            rootInstanceStackCursor.current = NO_CONTEXT;
          }

          return {
            getHostContext: getHostContext,
            getRootHostContainer: getRootHostContainer,
            popHostContainer: popHostContainer,
            popHostContext: popHostContext,
            pushHostContainer: pushHostContainer,
            pushHostContext: pushHostContext,
            resetHostContainer: resetHostContainer
          };
        };

        var HostComponent$10 = ReactTypeOfWork.HostComponent;
        var HostText$8 = ReactTypeOfWork.HostText;
        var HostRoot$10 = ReactTypeOfWork.HostRoot;

        var Deletion$2 = ReactTypeOfSideEffect.Deletion;
        var Placement$6 = ReactTypeOfSideEffect.Placement;

        var createFiberFromHostInstanceForDeletion$1 = ReactFiber.createFiberFromHostInstanceForDeletion;

        var ReactFiberHydrationContext = function ReactFiberHydrationContext(config) {
          var shouldSetTextContent = config.shouldSetTextContent,
              canHydrateInstance = config.canHydrateInstance,
              canHydrateTextInstance = config.canHydrateTextInstance,
              getNextHydratableSibling = config.getNextHydratableSibling,
              getFirstHydratableChild = config.getFirstHydratableChild,
              hydrateInstance = config.hydrateInstance,
              hydrateTextInstance = config.hydrateTextInstance,
              didNotHydrateInstance = config.didNotHydrateInstance,
              didNotFindHydratableInstance = config.didNotFindHydratableInstance,
              didNotFindHydratableTextInstance = config.didNotFindHydratableTextInstance;

          // If this doesn't have hydration mode.

          if (!(canHydrateInstance && canHydrateTextInstance && getNextHydratableSibling && getFirstHydratableChild && hydrateInstance && hydrateTextInstance && didNotHydrateInstance && didNotFindHydratableInstance && didNotFindHydratableTextInstance)) {
            return {
              enterHydrationState: function enterHydrationState() {
                return false;
              },
              resetHydrationState: function resetHydrationState() {},
              tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {},
              prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {
                invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
              },
              prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {
                invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
              },
              popHydrationState: function popHydrationState(fiber) {
                return false;
              }
            };
          }

          // The deepest Fiber on the stack involved in a hydration context.
          // This may have been an insertion or a hydration.
          var hydrationParentFiber = null;
          var nextHydratableInstance = null;
          var isHydrating = false;

          function enterHydrationState(fiber) {
            var parentInstance = fiber.stateNode.containerInfo;
            nextHydratableInstance = getFirstHydratableChild(parentInstance);
            hydrationParentFiber = fiber;
            isHydrating = true;
            return true;
          }

          function deleteHydratableInstance(returnFiber, instance) {
            {
              switch (returnFiber.tag) {
                case HostRoot$10:
                  didNotHydrateInstance(returnFiber.stateNode.containerInfo, instance);
                  break;
                case HostComponent$10:
                  didNotHydrateInstance(returnFiber.stateNode, instance);
                  break;
              }
            }

            var childToDelete = createFiberFromHostInstanceForDeletion$1();
            childToDelete.stateNode = instance;
            childToDelete['return'] = returnFiber;
            childToDelete.effectTag = Deletion$2;

            // This might seem like it belongs on progressedFirstDeletion. However,
            // these children are not part of the reconciliation list of children.
            // Even if we abort and rereconcile the children, that will try to hydrate
            // again and the nodes are still in the host tree so these will be
            // recreated.
            if (returnFiber.lastEffect !== null) {
              returnFiber.lastEffect.nextEffect = childToDelete;
              returnFiber.lastEffect = childToDelete;
            } else {
              returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
            }
          }

          function insertNonHydratedInstance(returnFiber, fiber) {
            fiber.effectTag |= Placement$6;
            {
              var parentInstance;
              switch (returnFiber.tag) {
                // TODO: Currently we don't warn for insertions into the root because
                // we always insert into the root in the non-hydrating case. We just
                // delete the existing content. Reenable this once we have a better
                // strategy for determining if we're hydrating or not.
                // case HostRoot:
                //   parentInstance = returnFiber.stateNode.containerInfo;
                //   break;
                case HostComponent$10:
                  parentInstance = returnFiber.stateNode;
                  break;
                default:
                  return;
              }
              switch (fiber.tag) {
                case HostComponent$10:
                  var type = fiber.type;
                  var props = fiber.pendingProps;
                  didNotFindHydratableInstance(parentInstance, type, props);
                  break;
                case HostText$8:
                  var text = fiber.pendingProps;
                  didNotFindHydratableTextInstance(parentInstance, text);
                  break;
              }
            }
          }

          function canHydrate(fiber, nextInstance) {
            switch (fiber.tag) {
              case HostComponent$10:
                {
                  var type = fiber.type;
                  var props = fiber.pendingProps;
                  return canHydrateInstance(nextInstance, type, props);
                }
              case HostText$8:
                {
                  var text = fiber.pendingProps;
                  return canHydrateTextInstance(nextInstance, text);
                }
              default:
                return false;
            }
          }

          function tryToClaimNextHydratableInstance(fiber) {
            if (!isHydrating) {
              return;
            }
            var nextInstance = nextHydratableInstance;
            if (!nextInstance) {
              // Nothing to hydrate. Make it an insertion.
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            if (!canHydrate(fiber, nextInstance)) {
              // If we can't hydrate this instance let's try the next one.
              // We use this as a heuristic. It's based on intuition and not data so it
              // might be flawed or unnecessary.
              nextInstance = getNextHydratableSibling(nextInstance);
              if (!nextInstance || !canHydrate(fiber, nextInstance)) {
                // Nothing to hydrate. Make it an insertion.
                insertNonHydratedInstance(hydrationParentFiber, fiber);
                isHydrating = false;
                hydrationParentFiber = fiber;
                return;
              }
              // We matched the next one, we'll now assume that the first one was
              // superfluous and we'll delete it. Since we can't eagerly delete it
              // we'll have to schedule a deletion. To do that, this node needs a dummy
              // fiber associated with it.
              deleteHydratableInstance(hydrationParentFiber, nextHydratableInstance);
            }
            fiber.stateNode = nextInstance;
            hydrationParentFiber = fiber;
            nextHydratableInstance = getFirstHydratableChild(nextInstance);
          }

          function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
            var instance = fiber.stateNode;
            var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
            // TODO: Type this specific to this type of component.
            fiber.updateQueue = updatePayload;
            // If the update payload indicates that there is a change or if there
            // is a new ref we mark this as an update.
            if (updatePayload !== null) {
              return true;
            }
            return false;
          }

          function prepareToHydrateHostTextInstance(fiber) {
            var textInstance = fiber.stateNode;
            var shouldUpdate = hydrateTextInstance(textInstance, fiber.memoizedProps, fiber);
            return shouldUpdate;
          }

          function popToNextHostParent(fiber) {
            var parent = fiber['return'];
            while (parent !== null && parent.tag !== HostComponent$10 && parent.tag !== HostRoot$10) {
              parent = parent['return'];
            }
            hydrationParentFiber = parent;
          }

          function popHydrationState(fiber) {
            if (fiber !== hydrationParentFiber) {
              // We're deeper than the current hydration context, inside an inserted
              // tree.
              return false;
            }
            if (!isHydrating) {
              // If we're not currently hydrating but we're in a hydration context, then
              // we were an insertion and now need to pop up reenter hydration of our
              // siblings.
              popToNextHostParent(fiber);
              isHydrating = true;
              return false;
            }

            var type = fiber.type;

            // If we have any remaining hydratable nodes, we need to delete them now.
            // We only do this deeper than head and body since they tend to have random
            // other nodes in them. We also ignore components with pure text content in
            // side of them.
            // TODO: Better heuristic.
            if (fiber.tag !== HostComponent$10 || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
              var nextInstance = nextHydratableInstance;
              while (nextInstance) {
                deleteHydratableInstance(fiber, nextInstance);
                nextInstance = getNextHydratableSibling(nextInstance);
              }
            }

            popToNextHostParent(fiber);
            nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
            return true;
          }

          function resetHydrationState() {
            hydrationParentFiber = null;
            nextHydratableInstance = null;
            isHydrating = false;
          }

          return {
            enterHydrationState: enterHydrationState,
            resetHydrationState: resetHydrationState,
            tryToClaimNextHydratableInstance: tryToClaimNextHydratableInstance,
            prepareToHydrateHostInstance: prepareToHydrateHostInstance,
            prepareToHydrateHostTextInstance: prepareToHydrateHostTextInstance,
            popHydrationState: popHydrationState
          };
        };

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactFiberInstrumentation
         * 
         */

        // This lets us hook into Fiber to debug what it's doing.
        // See https://github.com/facebook/react/pull/8033.
        // This is not part of the public API, not even for React DevTools.
        // You may only inject a debugTool if you work on React Fiber itself.

        var ReactFiberInstrumentation$2 = {
          debugTool: null
        };

        var ReactFiberInstrumentation_1 = ReactFiberInstrumentation$2;

        var popContextProvider$1 = ReactFiberContext.popContextProvider;

        var reset$1 = ReactFiberStack.reset;

        var getStackAddendumByWorkInProgressFiber$2 = ReactFiberComponentTreeHook.getStackAddendumByWorkInProgressFiber;

        var logCapturedError = ReactFiberErrorLogger.logCapturedError;

        var invokeGuardedCallback$1 = ReactErrorUtils_1.invokeGuardedCallback;
        var hasCaughtError = ReactErrorUtils_1.hasCaughtError;
        var clearCaughtError = ReactErrorUtils_1.clearCaughtError;

        var ReactCurrentOwner$1 = ReactGlobalSharedState_1.ReactCurrentOwner;

        var createWorkInProgress$1 = ReactFiber.createWorkInProgress;
        var largerPriority$1 = ReactFiber.largerPriority;

        var onCommitRoot = ReactFiberDevToolsHook.onCommitRoot;

        var NoWork$2 = ReactPriorityLevel.NoWork;
        var SynchronousPriority$1 = ReactPriorityLevel.SynchronousPriority;
        var TaskPriority$1 = ReactPriorityLevel.TaskPriority;
        var HighPriority = ReactPriorityLevel.HighPriority;
        var LowPriority = ReactPriorityLevel.LowPriority;
        var OffscreenPriority = ReactPriorityLevel.OffscreenPriority;

        var AsyncUpdates = ReactTypeOfInternalContext.AsyncUpdates;

        var PerformedWork = ReactTypeOfSideEffect.PerformedWork;
        var Placement$1 = ReactTypeOfSideEffect.Placement;
        var Update = ReactTypeOfSideEffect.Update;
        var PlacementAndUpdate = ReactTypeOfSideEffect.PlacementAndUpdate;
        var Deletion = ReactTypeOfSideEffect.Deletion;
        var ContentReset = ReactTypeOfSideEffect.ContentReset;
        var Callback = ReactTypeOfSideEffect.Callback;
        var Err = ReactTypeOfSideEffect.Err;
        var Ref = ReactTypeOfSideEffect.Ref;

        var HostRoot$6 = ReactTypeOfWork.HostRoot;
        var HostComponent$6 = ReactTypeOfWork.HostComponent;
        var HostPortal$3 = ReactTypeOfWork.HostPortal;
        var ClassComponent$5 = ReactTypeOfWork.ClassComponent;

        var getUpdatePriority$1 = ReactFiberUpdateQueue.getUpdatePriority;

        var _require14 = ReactFiberContext;
        var resetContext$1 = _require14.resetContext;

        {
          var warning$22 = require$$0;
          var ReactFiberInstrumentation$1 = ReactFiberInstrumentation_1;
          var ReactDebugCurrentFiber$3 = ReactDebugCurrentFiber_1;

          var _require15 = ReactDebugFiberPerf_1,
              recordEffect = _require15.recordEffect,
              recordScheduleUpdate = _require15.recordScheduleUpdate,
              startWorkTimer = _require15.startWorkTimer,
              stopWorkTimer = _require15.stopWorkTimer,
              stopFailedWorkTimer = _require15.stopFailedWorkTimer,
              startWorkLoopTimer = _require15.startWorkLoopTimer,
              stopWorkLoopTimer = _require15.stopWorkLoopTimer,
              startCommitTimer = _require15.startCommitTimer,
              stopCommitTimer = _require15.stopCommitTimer,
              startCommitHostEffectsTimer = _require15.startCommitHostEffectsTimer,
              stopCommitHostEffectsTimer = _require15.stopCommitHostEffectsTimer,
              startCommitLifeCyclesTimer = _require15.startCommitLifeCyclesTimer,
              stopCommitLifeCyclesTimer = _require15.stopCommitLifeCyclesTimer;

          var warnAboutUpdateOnUnmounted = function warnAboutUpdateOnUnmounted(instance) {
            var ctor = instance.constructor;
            warning$22(false, 'Can only update a mounted or mounting component. This usually means ' + 'you called setState, replaceState, or forceUpdate on an unmounted ' + 'component. This is a no-op.\n\nPlease check the code for the ' + '%s component.', ctor && (ctor.displayName || ctor.name) || 'ReactClass');
          };

          var warnAboutInvalidUpdates = function warnAboutInvalidUpdates(instance) {
            switch (ReactDebugCurrentFiber$3.phase) {
              case 'getChildContext':
                warning$22(false, 'setState(...): Cannot call setState() inside getChildContext()');
                break;
              case 'render':
                warning$22(false, 'Cannot update during an existing state transition (such as within ' + "`render` or another component's constructor). Render methods should " + 'be a pure function of props and state; constructor side-effects are ' + 'an anti-pattern, but can be moved to `componentWillMount`.');
                break;
            }
          };
        }

        var timeHeuristicForUnitOfWork = 1;

        var ReactFiberScheduler = function ReactFiberScheduler(config) {
          var hostContext = ReactFiberHostContext(config);
          var hydrationContext = ReactFiberHydrationContext(config);
          var popHostContainer = hostContext.popHostContainer,
              popHostContext = hostContext.popHostContext,
              resetHostContainer = hostContext.resetHostContainer;

          var _ReactFiberBeginWork = ReactFiberBeginWork(config, hostContext, hydrationContext, scheduleUpdate, getPriorityContext),
              beginWork = _ReactFiberBeginWork.beginWork,
              beginFailedWork = _ReactFiberBeginWork.beginFailedWork;

          var _ReactFiberCompleteWo = ReactFiberCompleteWork(config, hostContext, hydrationContext),
              completeWork = _ReactFiberCompleteWo.completeWork;

          var _ReactFiberCommitWork = ReactFiberCommitWork(config, captureError),
              commitPlacement = _ReactFiberCommitWork.commitPlacement,
              commitDeletion = _ReactFiberCommitWork.commitDeletion,
              commitWork = _ReactFiberCommitWork.commitWork,
              commitLifeCycles = _ReactFiberCommitWork.commitLifeCycles,
              commitAttachRef = _ReactFiberCommitWork.commitAttachRef,
              commitDetachRef = _ReactFiberCommitWork.commitDetachRef;

          var scheduleDeferredCallback = config.scheduleDeferredCallback,
              useSyncScheduling = config.useSyncScheduling,
              prepareForCommit = config.prepareForCommit,
              resetAfterCommit = config.resetAfterCommit;

          // The priority level to use when scheduling an update. We use NoWork to
          // represent the default priority.
          // TODO: Should we change this to an array instead of using the call stack?
          // Might be less confusing.

          var priorityContext = NoWork$2;

          // Keeps track of whether we're currently in a work loop.
          var isPerformingWork = false;

          // Keeps track of whether the current deadline has expired.
          var deadlineHasExpired = false;

          // Keeps track of whether we should should batch sync updates.
          var isBatchingUpdates = false;

          // This is needed for the weird case where the initial mount is synchronous
          // even inside batchedUpdates :(
          var isUnbatchingUpdates = false;

          // The next work in progress fiber that we're currently working on.
          var nextUnitOfWork = null;
          var nextPriorityLevel = NoWork$2;

          // The next fiber with an effect that we're currently committing.
          var nextEffect = null;

          var pendingCommit = null;

          // Linked list of roots with scheduled work on them.
          var nextScheduledRoot = null;
          var lastScheduledRoot = null;

          // Keep track of which host environment callbacks are scheduled.
          var isCallbackScheduled = false;

          // Keep track of which fibers have captured an error that need to be handled.
          // Work is removed from this collection after componentDidCatch is called.
          var capturedErrors = null;
          // Keep track of which fibers have failed during the current batch of work.
          // This is a different set than capturedErrors, because it is not reset until
          // the end of the batch. This is needed to propagate errors correctly if a
          // subtree fails more than once.
          var failedBoundaries = null;
          // Error boundaries that captured an error during the current commit.
          var commitPhaseBoundaries = null;
          var firstUncaughtError = null;
          var didFatal = false;

          var isCommitting = false;
          var isUnmounting = false;

          // Use these to prevent an infinite loop of nested updates
          var NESTED_UPDATE_LIMIT = 1000;
          var nestedUpdateCount = 0;
          var nextRenderedTree = null;

          function resetContextStack() {
            // Reset the stack
            reset$1();
            // Reset the cursors
            resetContext$1();
            resetHostContainer();
          }

          // resetNextUnitOfWork mutates the current priority context. It is reset after
          // after the workLoop exits, so never call resetNextUnitOfWork from outside
          // the work loop.
          function resetNextUnitOfWork() {
            // Clear out roots with no more work on them, or if they have uncaught errors
            while (nextScheduledRoot !== null && nextScheduledRoot.current.pendingWorkPriority === NoWork$2) {
              // Unschedule this root.
              nextScheduledRoot.isScheduled = false;
              // Read the next pointer now.
              // We need to clear it in case this root gets scheduled again later.
              var next = nextScheduledRoot.nextScheduledRoot;
              nextScheduledRoot.nextScheduledRoot = null;
              // Exit if we cleared all the roots and there's no work to do.
              if (nextScheduledRoot === lastScheduledRoot) {
                nextScheduledRoot = null;
                lastScheduledRoot = null;
                nextPriorityLevel = NoWork$2;
                return null;
              }
              // Continue with the next root.
              // If there's no work on it, it will get unscheduled too.
              nextScheduledRoot = next;
            }

            var root = nextScheduledRoot;
            var highestPriorityRoot = null;
            var highestPriorityLevel = NoWork$2;
            while (root !== null) {
              if (root.current.pendingWorkPriority !== NoWork$2 && (highestPriorityLevel === NoWork$2 || highestPriorityLevel > root.current.pendingWorkPriority)) {
                highestPriorityLevel = root.current.pendingWorkPriority;
                highestPriorityRoot = root;
              }
              // We didn't find anything to do in this root, so let's try the next one.
              root = root.nextScheduledRoot;
            }
            if (highestPriorityRoot !== null) {
              nextPriorityLevel = highestPriorityLevel;
              // Before we start any new work, let's make sure that we have a fresh
              // stack to work from.
              // TODO: This call is buried a bit too deep. It would be nice to have
              // a single point which happens right before any new work and
              // unfortunately this is it.
              resetContextStack();

              nextUnitOfWork = createWorkInProgress$1(highestPriorityRoot.current, highestPriorityLevel);
              if (highestPriorityRoot !== nextRenderedTree) {
                // We've switched trees. Reset the nested update counter.
                nestedUpdateCount = 0;
                nextRenderedTree = highestPriorityRoot;
              }
              return;
            }

            nextPriorityLevel = NoWork$2;
            nextUnitOfWork = null;
            nextRenderedTree = null;
            return;
          }

          function commitAllHostEffects() {
            while (nextEffect !== null) {
              {
                ReactDebugCurrentFiber$3.setCurrentFiber(nextEffect, null);
                recordEffect();
              }

              var effectTag = nextEffect.effectTag;
              if (effectTag & ContentReset) {
                config.resetTextContent(nextEffect.stateNode);
              }

              if (effectTag & Ref) {
                var current = nextEffect.alternate;
                if (current !== null) {
                  commitDetachRef(current);
                }
              }

              // The following switch statement is only concerned about placement,
              // updates, and deletions. To avoid needing to add a case for every
              // possible bitmap value, we remove the secondary effects from the
              // effect tag and switch on that value.
              var primaryEffectTag = effectTag & ~(Callback | Err | ContentReset | Ref | PerformedWork);
              switch (primaryEffectTag) {
                case Placement$1:
                  {
                    commitPlacement(nextEffect);
                    // Clear the "placement" from effect tag so that we know that this is inserted, before
                    // any life-cycles like componentDidMount gets called.
                    // TODO: findDOMNode doesn't rely on this any more but isMounted
                    // does and isMounted is deprecated anyway so we should be able
                    // to kill this.
                    nextEffect.effectTag &= ~Placement$1;
                    break;
                  }
                case PlacementAndUpdate:
                  {
                    // Placement
                    commitPlacement(nextEffect);
                    // Clear the "placement" from effect tag so that we know that this is inserted, before
                    // any life-cycles like componentDidMount gets called.
                    nextEffect.effectTag &= ~Placement$1;

                    // Update
                    var _current = nextEffect.alternate;
                    commitWork(_current, nextEffect);
                    break;
                  }
                case Update:
                  {
                    var _current2 = nextEffect.alternate;
                    commitWork(_current2, nextEffect);
                    break;
                  }
                case Deletion:
                  {
                    isUnmounting = true;
                    commitDeletion(nextEffect);
                    isUnmounting = false;
                    break;
                  }
              }
              nextEffect = nextEffect.nextEffect;
            }

            {
              ReactDebugCurrentFiber$3.resetCurrentFiber();
            }
          }

          function commitAllLifeCycles() {
            while (nextEffect !== null) {
              var effectTag = nextEffect.effectTag;

              // Use Task priority for lifecycle updates
              if (effectTag & (Update | Callback)) {
                {
                  recordEffect();
                }
                var current = nextEffect.alternate;
                commitLifeCycles(current, nextEffect);
              }

              if (effectTag & Ref) {
                {
                  recordEffect();
                }
                commitAttachRef(nextEffect);
              }

              if (effectTag & Err) {
                {
                  recordEffect();
                }
                commitErrorHandling(nextEffect);
              }

              var next = nextEffect.nextEffect;
              // Ensure that we clean these up so that we don't accidentally keep them.
              // I'm not actually sure this matters because we can't reset firstEffect
              // and lastEffect since they're on every node, not just the effectful
              // ones. So we have to clean everything as we reuse nodes anyway.
              nextEffect.nextEffect = null;
              // Ensure that we reset the effectTag here so that we can rely on effect
              // tags to reason about the current life-cycle.
              nextEffect = next;
            }
          }

          function commitAllWork(finishedWork) {
            // We keep track of this so that captureError can collect any boundaries
            // that capture an error during the commit phase. The reason these aren't
            // local to this function is because errors that occur during cWU are
            // captured elsewhere, to prevent the unmount from being interrupted.
            isCommitting = true;
            {
              startCommitTimer();
            }

            pendingCommit = null;
            var root = finishedWork.stateNode;
            !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;

            if (nextPriorityLevel === SynchronousPriority$1 || nextPriorityLevel === TaskPriority$1) {
              // Keep track of the number of iterations to prevent an infinite
              // update loop.
              nestedUpdateCount++;
            }

            // Reset this to null before calling lifecycles
            ReactCurrentOwner$1.current = null;

            var firstEffect = void 0;
            if (finishedWork.effectTag > PerformedWork) {
              // A fiber's effect list consists only of its children, not itself. So if
              // the root has an effect, we need to add it to the end of the list. The
              // resulting list is the set that would belong to the root's parent, if
              // it had one; that is, all the effects in the tree including the root.
              if (finishedWork.lastEffect !== null) {
                finishedWork.lastEffect.nextEffect = finishedWork;
                firstEffect = finishedWork.firstEffect;
              } else {
                firstEffect = finishedWork;
              }
            } else {
              // There is no effect on the root.
              firstEffect = finishedWork.firstEffect;
            }

            prepareForCommit();

            // Commit all the side-effects within a tree. We'll do this in two passes.
            // The first pass performs all the host insertions, updates, deletions and
            // ref unmounts.
            nextEffect = firstEffect;
            {
              startCommitHostEffectsTimer();
            }
            while (nextEffect !== null) {
              var didError = false;
              var _error = void 0;
              {
                invokeGuardedCallback$1(null, commitAllHostEffects, null);
                if (hasCaughtError()) {
                  didError = true;
                  _error = clearCaughtError();
                }
              }
              if (didError) {
                !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                captureError(nextEffect, _error);
                // Clean-up
                if (nextEffect !== null) {
                  nextEffect = nextEffect.nextEffect;
                }
              }
            }
            {
              stopCommitHostEffectsTimer();
            }

            resetAfterCommit();

            // The work-in-progress tree is now the current tree. This must come after
            // the first pass of the commit phase, so that the previous tree is still
            // current during componentWillUnmount, but before the second pass, so that
            // the finished work is current during componentDidMount/Update.
            root.current = finishedWork;

            // In the second pass we'll perform all life-cycles and ref callbacks.
            // Life-cycles happen as a separate pass so that all placements, updates,
            // and deletions in the entire tree have already been invoked.
            // This pass also triggers any renderer-specific initial effects.
            nextEffect = firstEffect;
            {
              startCommitLifeCyclesTimer();
            }
            while (nextEffect !== null) {
              var _didError = false;
              var _error2 = void 0;
              {
                invokeGuardedCallback$1(null, commitAllLifeCycles, null);
                if (hasCaughtError()) {
                  _didError = true;
                  _error2 = clearCaughtError();
                }
              }
              if (_didError) {
                !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                captureError(nextEffect, _error2);
                if (nextEffect !== null) {
                  nextEffect = nextEffect.nextEffect;
                }
              }
            }

            isCommitting = false;
            {
              stopCommitLifeCyclesTimer();
              stopCommitTimer();
            }
            if (typeof onCommitRoot === 'function') {
              onCommitRoot(finishedWork.stateNode);
            }
            if (true && ReactFiberInstrumentation$1.debugTool) {
              ReactFiberInstrumentation$1.debugTool.onCommitWork(finishedWork);
            }

            // If we caught any errors during this commit, schedule their boundaries
            // to update.
            if (commitPhaseBoundaries) {
              commitPhaseBoundaries.forEach(scheduleErrorRecovery);
              commitPhaseBoundaries = null;
            }

            // This tree is done. Reset the unit of work pointer to the next highest
            // priority root. If there's no more work left, the pointer is set to null.
            resetNextUnitOfWork();
          }

          function resetWorkPriority(workInProgress, renderPriority) {
            if (workInProgress.pendingWorkPriority !== NoWork$2 && workInProgress.pendingWorkPriority > renderPriority) {
              // This was a down-prioritization. Don't bubble priority from children.
              return;
            }

            // Check for pending update priority.
            var newPriority = getUpdatePriority$1(workInProgress);

            // TODO: Coroutines need to visit stateNode

            var child = workInProgress.child;
            while (child !== null) {
              // Ensure that remaining work priority bubbles up.
              newPriority = largerPriority$1(newPriority, child.pendingWorkPriority);
              child = child.sibling;
            }
            workInProgress.pendingWorkPriority = newPriority;
          }

          function completeUnitOfWork(workInProgress) {
            while (true) {
              // The current, flushed, state of this fiber is the alternate.
              // Ideally nothing should rely on this, but relying on it here
              // means that we don't need an additional field on the work in
              // progress.
              var current = workInProgress.alternate;
              var next = completeWork(current, workInProgress, nextPriorityLevel);

              var returnFiber = workInProgress['return'];
              var siblingFiber = workInProgress.sibling;

              resetWorkPriority(workInProgress, nextPriorityLevel);

              if (next !== null) {
                {
                  stopWorkTimer(workInProgress);
                }
                if (true && ReactFiberInstrumentation$1.debugTool) {
                  ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress);
                }
                // If completing this work spawned new work, do that next. We'll come
                // back here again.
                return next;
              }

              if (returnFiber !== null) {
                // Append all the effects of the subtree and this fiber onto the effect
                // list of the parent. The completion order of the children affects the
                // side-effect order.
                if (returnFiber.firstEffect === null) {
                  returnFiber.firstEffect = workInProgress.firstEffect;
                }
                if (workInProgress.lastEffect !== null) {
                  if (returnFiber.lastEffect !== null) {
                    returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
                  }
                  returnFiber.lastEffect = workInProgress.lastEffect;
                }

                // If this fiber had side-effects, we append it AFTER the children's
                // side-effects. We can perform certain side-effects earlier if
                // needed, by doing multiple passes over the effect list. We don't want
                // to schedule our own side-effect on our own list because if end up
                // reusing children we'll schedule this effect onto itself since we're
                // at the end.
                var effectTag = workInProgress.effectTag;
                // Skip both NoWork and PerformedWork tags when creating the effect list.
                // PerformedWork effect is read by React DevTools but shouldn't be committed.
                if (effectTag > PerformedWork) {
                  if (returnFiber.lastEffect !== null) {
                    returnFiber.lastEffect.nextEffect = workInProgress;
                  } else {
                    returnFiber.firstEffect = workInProgress;
                  }
                  returnFiber.lastEffect = workInProgress;
                }
              }

              {
                stopWorkTimer(workInProgress);
              }
              if (true && ReactFiberInstrumentation$1.debugTool) {
                ReactFiberInstrumentation$1.debugTool.onCompleteWork(workInProgress);
              }

              if (siblingFiber !== null) {
                // If there is more work to do in this returnFiber, do that next.
                return siblingFiber;
              } else if (returnFiber !== null) {
                // If there's no more work in this returnFiber. Complete the returnFiber.
                workInProgress = returnFiber;
                continue;
              } else {
                // We've reached the root. Mark the root as pending commit. Depending
                // on how much time we have left, we'll either commit it now or in
                // the next frame.
                pendingCommit = workInProgress;
                return null;
              }
            }

            // Without this explicit null return Flow complains of invalid return type
            // TODO Remove the above while(true) loop
            // eslint-disable-next-line no-unreachable
            return null;
          }

          function performUnitOfWork(workInProgress) {
            // The current, flushed, state of this fiber is the alternate.
            // Ideally nothing should rely on this, but relying on it here
            // means that we don't need an additional field on the work in
            // progress.
            var current = workInProgress.alternate;

            // See if beginning this work spawns more work.
            {
              startWorkTimer(workInProgress);
            }
            var next = beginWork(current, workInProgress, nextPriorityLevel);
            if (true && ReactFiberInstrumentation$1.debugTool) {
              ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress);
            }

            if (next === null) {
              // If this doesn't spawn new work, complete the current work.
              next = completeUnitOfWork(workInProgress);
            }

            ReactCurrentOwner$1.current = null;
            {
              ReactDebugCurrentFiber$3.resetCurrentFiber();
            }

            return next;
          }

          function performFailedUnitOfWork(workInProgress) {
            // The current, flushed, state of this fiber is the alternate.
            // Ideally nothing should rely on this, but relying on it here
            // means that we don't need an additional field on the work in
            // progress.
            var current = workInProgress.alternate;

            // See if beginning this work spawns more work.
            {
              startWorkTimer(workInProgress);
            }
            var next = beginFailedWork(current, workInProgress, nextPriorityLevel);
            if (true && ReactFiberInstrumentation$1.debugTool) {
              ReactFiberInstrumentation$1.debugTool.onBeginWork(workInProgress);
            }

            if (next === null) {
              // If this doesn't spawn new work, complete the current work.
              next = completeUnitOfWork(workInProgress);
            }

            ReactCurrentOwner$1.current = null;
            {
              ReactDebugCurrentFiber$3.resetCurrentFiber();
            }

            return next;
          }

          function performDeferredWork(deadline) {
            performWork(OffscreenPriority, deadline);
          }

          function handleCommitPhaseErrors() {
            // This is a special work loop for handling commit phase errors. It's
            // similar to the syncrhonous work loop, but does an additional check on
            // each fiber to see if it's an error boundary with an unhandled error. If
            // so, it uses a forked version of performUnitOfWork that unmounts the
            // failed subtree.
            //
            // The loop stops once the children have unmounted and error lifecycles are
            // called. Then we return to the regular flow.

            if (capturedErrors !== null && capturedErrors.size > 0 && nextPriorityLevel === TaskPriority$1) {
              while (nextUnitOfWork !== null) {
                if (hasCapturedError(nextUnitOfWork)) {
                  // Use a forked version of performUnitOfWork
                  nextUnitOfWork = performFailedUnitOfWork(nextUnitOfWork);
                } else {
                  nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                }
                if (nextUnitOfWork === null) {
                  !(pendingCommit !== null) ? invariant(false, 'Should have a pending commit. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                  // We just completed a root. Commit it now.
                  priorityContext = TaskPriority$1;
                  commitAllWork(pendingCommit);
                  priorityContext = nextPriorityLevel;

                  if (capturedErrors === null || capturedErrors.size === 0 || nextPriorityLevel !== TaskPriority$1) {
                    // There are no more unhandled errors. We can exit this special
                    // work loop. If there's still additional work, we'll perform it
                    // using one of the normal work loops.
                    break;
                  }
                  // The commit phase produced additional errors. Continue working.
                }
              }
            }
          }

          function workLoop(minPriorityLevel, deadline) {
            if (pendingCommit !== null) {
              priorityContext = TaskPriority$1;
              commitAllWork(pendingCommit);
              handleCommitPhaseErrors();
            } else if (nextUnitOfWork === null) {
              resetNextUnitOfWork();
            }

            if (nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel) {
              return;
            }

            // During the render phase, updates should have the same priority at which
            // we're rendering.
            priorityContext = nextPriorityLevel;

            loop: do {
              if (nextPriorityLevel <= TaskPriority$1) {
                // Flush all synchronous and task work.
                while (nextUnitOfWork !== null) {
                  nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                  if (nextUnitOfWork === null) {
                    !(pendingCommit !== null) ? invariant(false, 'Should have a pending commit. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                    // We just completed a root. Commit it now.
                    priorityContext = TaskPriority$1;
                    commitAllWork(pendingCommit);
                    priorityContext = nextPriorityLevel;
                    // Clear any errors that were scheduled during the commit phase.
                    handleCommitPhaseErrors();
                    // The priority level may have changed. Check again.
                    if (nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel > TaskPriority$1) {
                      // The priority level does not match.
                      break;
                    }
                  }
                }
              } else if (deadline !== null) {
                // Flush asynchronous work until the deadline expires.
                while (nextUnitOfWork !== null && !deadlineHasExpired) {
                  if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                    nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
                    // In a deferred work batch, iff nextUnitOfWork returns null, we just
                    // completed a root and a pendingCommit exists. Logically, we could
                    // omit either of the checks in the following condition, but we need
                    // both to satisfy Flow.
                    if (nextUnitOfWork === null) {
                      !(pendingCommit !== null) ? invariant(false, 'Should have a pending commit. This error is likely caused by a bug in React. Please file an issue.') : void 0;
                      // We just completed a root. If we have time, commit it now.
                      // Otherwise, we'll commit it in the next frame.
                      if (deadline.timeRemaining() > timeHeuristicForUnitOfWork) {
                        priorityContext = TaskPriority$1;
                        commitAllWork(pendingCommit);
                        priorityContext = nextPriorityLevel;
                        // Clear any errors that were scheduled during the commit phase.
                        handleCommitPhaseErrors();
                        // The priority level may have changed. Check again.
                        if (nextPriorityLevel === NoWork$2 || nextPriorityLevel > minPriorityLevel || nextPriorityLevel < HighPriority) {
                          // The priority level does not match.
                          break;
                        }
                      } else {
                        deadlineHasExpired = true;
                      }
                    }
                  } else {
                    deadlineHasExpired = true;
                  }
                }
              }

              // There might be work left. Depending on the priority, we should
              // either perform it now or schedule a callback to perform it later.
              switch (nextPriorityLevel) {
                case SynchronousPriority$1:
                case TaskPriority$1:
                  // We have remaining synchronous or task work. Keep performing it,
                  // regardless of whether we're inside a callback.
                  if (nextPriorityLevel <= minPriorityLevel) {
                    continue loop;
                  }
                  break loop;
                case HighPriority:
                case LowPriority:
                case OffscreenPriority:
                  // We have remaining async work.
                  if (deadline === null) {
                    // We're not inside a callback. Exit and perform the work during
                    // the next callback.
                    break loop;
                  }
                  // We are inside a callback.
                  if (!deadlineHasExpired && nextPriorityLevel <= minPriorityLevel) {
                    // We still have time. Keep working.
                    continue loop;
                  }
                  // We've run out of time. Exit.
                  break loop;
                case NoWork$2:
                  // No work left. We can exit.
                  break loop;
                default:
                  invariant(false, 'Switch statement should be exhuastive. This error is likely caused by a bug in React. Please file an issue.');
              }
            } while (true);
          }

          function performWorkCatchBlock(failedWork, boundary, minPriorityLevel, deadline) {
            // We're going to restart the error boundary that captured the error.
            // Conceptually, we're unwinding the stack. We need to unwind the
            // context stack, too.
            unwindContexts(failedWork, boundary);

            // Restart the error boundary using a forked version of
            // performUnitOfWork that deletes the boundary's children. The entire
            // failed subree will be unmounted. During the commit phase, a special
            // lifecycle method is called on the error boundary, which triggers
            // a re-render.
            nextUnitOfWork = performFailedUnitOfWork(boundary);

            // Continue working.
            workLoop(minPriorityLevel, deadline);
          }

          function performWork(minPriorityLevel, deadline) {
            {
              startWorkLoopTimer();
            }

            !!isPerformingWork ? invariant(false, 'performWork was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            isPerformingWork = true;

            // The priority context changes during the render phase. We'll need to
            // reset it at the end.
            var previousPriorityContext = priorityContext;

            var didError = false;
            var error = null;
            {
              invokeGuardedCallback$1(null, workLoop, null, minPriorityLevel, deadline);
              if (hasCaughtError()) {
                didError = true;
                error = clearCaughtError();
              }
            }

            // An error was thrown during the render phase.
            while (didError) {
              if (didFatal) {
                // This was a fatal error. Don't attempt to recover from it.
                firstUncaughtError = error;
                break;
              }

              var failedWork = nextUnitOfWork;
              if (failedWork === null) {
                // An error was thrown but there's no current unit of work. This can
                // happen during the commit phase if there's a bug in the renderer.
                didFatal = true;
                continue;
              }

              // "Capture" the error by finding the nearest boundary. If there is no
              // error boundary, we use the root.
              var boundary = captureError(failedWork, error);
              !(boundary !== null) ? invariant(false, 'Should have found an error boundary. This error is likely caused by a bug in React. Please file an issue.') : void 0;

              if (didFatal) {
                // The error we just captured was a fatal error. This happens
                // when the error propagates to the root more than once.
                continue;
              }

              didError = false;
              error = null;
              {
                invokeGuardedCallback$1(null, performWorkCatchBlock, null, failedWork, boundary, minPriorityLevel, deadline);
                if (hasCaughtError()) {
                  didError = true;
                  error = clearCaughtError();
                  continue;
                }
              }
              // We're finished working. Exit the error loop.
              break;
            }

            // Reset the priority context to its previous value.
            priorityContext = previousPriorityContext;

            // If we're inside a callback, set this to false, since we just flushed it.
            if (deadline !== null) {
              isCallbackScheduled = false;
            }
            // If there's remaining async work, make sure we schedule another callback.
            if (nextPriorityLevel > TaskPriority$1 && !isCallbackScheduled) {
              scheduleDeferredCallback(performDeferredWork);
              isCallbackScheduled = true;
            }

            var errorToThrow = firstUncaughtError;

            // We're done performing work. Time to clean up.
            isPerformingWork = false;
            deadlineHasExpired = false;
            didFatal = false;
            firstUncaughtError = null;
            capturedErrors = null;
            failedBoundaries = null;
            nextRenderedTree = null;
            nestedUpdateCount = 0;

            {
              stopWorkLoopTimer();
            }

            // It's safe to throw any unhandled errors.
            if (errorToThrow !== null) {
              throw errorToThrow;
            }
          }

          // Returns the boundary that captured the error, or null if the error is ignored
          function captureError(failedWork, error) {
            // It is no longer valid because we exited the user code.
            ReactCurrentOwner$1.current = null;
            {
              ReactDebugCurrentFiber$3.resetCurrentFiber();
            }

            // Search for the nearest error boundary.
            var boundary = null;

            // Passed to logCapturedError()
            var errorBoundaryFound = false;
            var willRetry = false;
            var errorBoundaryName = null;

            // Host containers are a special case. If the failed work itself is a host
            // container, then it acts as its own boundary. In all other cases, we
            // ignore the work itself and only search through the parents.
            if (failedWork.tag === HostRoot$6) {
              boundary = failedWork;

              if (isFailedBoundary(failedWork)) {
                // If this root already failed, there must have been an error when
                // attempting to unmount it. This is a worst-case scenario and
                // should only be possible if there's a bug in the renderer.
                didFatal = true;
              }
            } else {
              var node = failedWork['return'];
              while (node !== null && boundary === null) {
                if (node.tag === ClassComponent$5) {
                  var instance = node.stateNode;
                  if (typeof instance.componentDidCatch === 'function') {
                    errorBoundaryFound = true;
                    errorBoundaryName = getComponentName_1(node);

                    // Found an error boundary!
                    boundary = node;
                    willRetry = true;
                  }
                } else if (node.tag === HostRoot$6) {
                  // Treat the root like a no-op error boundary
                  boundary = node;
                }

                if (isFailedBoundary(node)) {
                  // This boundary is already in a failed state.

                  // If we're currently unmounting, that means this error was
                  // thrown while unmounting a failed subtree. We should ignore
                  // the error.
                  if (isUnmounting) {
                    return null;
                  }

                  // If we're in the commit phase, we should check to see if
                  // this boundary already captured an error during this commit.
                  // This case exists because multiple errors can be thrown during
                  // a single commit without interruption.
                  if (commitPhaseBoundaries !== null && (commitPhaseBoundaries.has(node) || node.alternate !== null && commitPhaseBoundaries.has(node.alternate))) {
                    // If so, we should ignore this error.
                    return null;
                  }

                  // The error should propagate to the next boundary -— we keep looking.
                  boundary = null;
                  willRetry = false;
                }

                node = node['return'];
              }
            }

            if (boundary !== null) {
              // Add to the collection of failed boundaries. This lets us know that
              // subsequent errors in this subtree should propagate to the next boundary.
              if (failedBoundaries === null) {
                failedBoundaries = new Set();
              }
              failedBoundaries.add(boundary);

              // This method is unsafe outside of the begin and complete phases.
              // We might be in the commit phase when an error is captured.
              // The risk is that the return path from this Fiber may not be accurate.
              // That risk is acceptable given the benefit of providing users more context.
              var _componentStack = getStackAddendumByWorkInProgressFiber$2(failedWork);
              var _componentName = getComponentName_1(failedWork);

              // Add to the collection of captured errors. This is stored as a global
              // map of errors and their component stack location keyed by the boundaries
              // that capture them. We mostly use this Map as a Set; it's a Map only to
              // avoid adding a field to Fiber to store the error.
              if (capturedErrors === null) {
                capturedErrors = new Map();
              }

              var capturedError = {
                componentName: _componentName,
                componentStack: _componentStack,
                error: error,
                errorBoundary: errorBoundaryFound ? boundary.stateNode : null,
                errorBoundaryFound: errorBoundaryFound,
                errorBoundaryName: errorBoundaryName,
                willRetry: willRetry
              };

              capturedErrors.set(boundary, capturedError);

              try {
                logCapturedError(capturedError);
              } catch (e) {
                // Prevent cycle if logCapturedError() throws.
                // A cycle may still occur if logCapturedError renders a component that throws.
                console.error(e);
              }

              // If we're in the commit phase, defer scheduling an update on the
              // boundary until after the commit is complete
              if (isCommitting) {
                if (commitPhaseBoundaries === null) {
                  commitPhaseBoundaries = new Set();
                }
                commitPhaseBoundaries.add(boundary);
              } else {
                // Otherwise, schedule an update now.
                // TODO: Is this actually necessary during the render phase? Is it
                // possible to unwind and continue rendering at the same priority,
                // without corrupting internal state?
                scheduleErrorRecovery(boundary);
              }
              return boundary;
            } else if (firstUncaughtError === null) {
              // If no boundary is found, we'll need to throw the error
              firstUncaughtError = error;
            }
            return null;
          }

          function hasCapturedError(fiber) {
            // TODO: capturedErrors should store the boundary instance, to avoid needing
            // to check the alternate.
            return capturedErrors !== null && (capturedErrors.has(fiber) || fiber.alternate !== null && capturedErrors.has(fiber.alternate));
          }

          function isFailedBoundary(fiber) {
            // TODO: failedBoundaries should store the boundary instance, to avoid
            // needing to check the alternate.
            return failedBoundaries !== null && (failedBoundaries.has(fiber) || fiber.alternate !== null && failedBoundaries.has(fiber.alternate));
          }

          function commitErrorHandling(effectfulFiber) {
            var capturedError = void 0;
            if (capturedErrors !== null) {
              capturedError = capturedErrors.get(effectfulFiber);
              capturedErrors['delete'](effectfulFiber);
              if (capturedError == null) {
                if (effectfulFiber.alternate !== null) {
                  effectfulFiber = effectfulFiber.alternate;
                  capturedError = capturedErrors.get(effectfulFiber);
                  capturedErrors['delete'](effectfulFiber);
                }
              }
            }

            !(capturedError != null) ? invariant(false, 'No error for given unit of work. This error is likely caused by a bug in React. Please file an issue.') : void 0;

            switch (effectfulFiber.tag) {
              case ClassComponent$5:
                var instance = effectfulFiber.stateNode;

                var info = {
                  componentStack: capturedError.componentStack
                };

                // Allow the boundary to handle the error, usually by scheduling
                // an update to itself
                instance.componentDidCatch(capturedError.error, info);
                return;
              case HostRoot$6:
                if (firstUncaughtError === null) {
                  // If this is the host container, we treat it as a no-op error
                  // boundary. We'll throw the first uncaught error once it's safe to
                  // do so, at the end of the batch.
                  firstUncaughtError = capturedError.error;
                }
                return;
              default:
                invariant(false, 'Invalid type of work. This error is likely caused by a bug in React. Please file an issue.');
            }
          }

          function unwindContexts(from, to) {
            var node = from;
            while (node !== null) {
              switch (node.tag) {
                case ClassComponent$5:
                  popContextProvider$1(node);
                  break;
                case HostComponent$6:
                  popHostContext(node);
                  break;
                case HostRoot$6:
                  popHostContainer(node);
                  break;
                case HostPortal$3:
                  popHostContainer(node);
                  break;
              }
              if (node === to || node.alternate === to) {
                {
                  stopFailedWorkTimer(node);
                }
                break;
              } else {
                stopWorkTimer(node);
              }
              node = node['return'];
            }
          }

          function scheduleRoot(root, priorityLevel) {
            if (priorityLevel === NoWork$2) {
              return;
            }

            if (!root.isScheduled) {
              root.isScheduled = true;
              if (lastScheduledRoot) {
                // Schedule ourselves to the end.
                lastScheduledRoot.nextScheduledRoot = root;
                lastScheduledRoot = root;
              } else {
                // We're the only work scheduled.
                nextScheduledRoot = root;
                lastScheduledRoot = root;
              }
            }
          }

          function scheduleUpdate(fiber, priorityLevel) {
            return scheduleUpdateImpl(fiber, priorityLevel, false);
          }

          function scheduleUpdateImpl(fiber, priorityLevel, isErrorRecovery) {
            {
              recordScheduleUpdate();
            }

            if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
              didFatal = true;
              invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
            }

            if (!isPerformingWork && priorityLevel <= nextPriorityLevel) {
              // We must reset the current unit of work pointer so that we restart the
              // search from the root during the next tick, in case there is now higher
              // priority work somewhere earlier than before.
              nextUnitOfWork = null;
            }

            {
              if (!isErrorRecovery && fiber.tag === ClassComponent$5) {
                var instance = fiber.stateNode;
                warnAboutInvalidUpdates(instance);
              }
            }

            var node = fiber;
            var shouldContinue = true;
            while (node !== null && shouldContinue) {
              // Walk the parent path to the root and update each node's priority. Once
              // we reach a node whose priority matches (and whose alternate's priority
              // matches) we can exit safely knowing that the rest of the path is correct.
              shouldContinue = false;
              if (node.pendingWorkPriority === NoWork$2 || node.pendingWorkPriority > priorityLevel) {
                // Priority did not match. Update and keep going.
                shouldContinue = true;
                node.pendingWorkPriority = priorityLevel;
              }
              if (node.alternate !== null) {
                if (node.alternate.pendingWorkPriority === NoWork$2 || node.alternate.pendingWorkPriority > priorityLevel) {
                  // Priority did not match. Update and keep going.
                  shouldContinue = true;
                  node.alternate.pendingWorkPriority = priorityLevel;
                }
              }
              if (node['return'] === null) {
                if (node.tag === HostRoot$6) {
                  var root = node.stateNode;
                  scheduleRoot(root, priorityLevel);
                  if (!isPerformingWork) {
                    switch (priorityLevel) {
                      case SynchronousPriority$1:
                        // Perform this update now.
                        if (isUnbatchingUpdates) {
                          // We're inside unbatchedUpdates, which is inside either
                          // batchedUpdates or a lifecycle. We should only flush
                          // synchronous work, not task work.
                          performWork(SynchronousPriority$1, null);
                        } else {
                          // Flush both synchronous and task work.
                          performWork(TaskPriority$1, null);
                        }
                        break;
                      case TaskPriority$1:
                        !isBatchingUpdates ? invariant(false, 'Task updates can only be scheduled as a nested update or inside batchedUpdates.') : void 0;
                        break;
                      default:
                        // Schedule a callback to perform the work later.
                        if (!isCallbackScheduled) {
                          scheduleDeferredCallback(performDeferredWork);
                          isCallbackScheduled = true;
                        }
                    }
                  }
                } else {
                  {
                    if (!isErrorRecovery && fiber.tag === ClassComponent$5) {
                      warnAboutUpdateOnUnmounted(fiber.stateNode);
                    }
                  }
                  return;
                }
              }
              node = node['return'];
            }
          }

          function getPriorityContext(fiber, forceAsync) {
            var priorityLevel = priorityContext;
            if (priorityLevel === NoWork$2) {
              if (!useSyncScheduling || fiber.internalContextTag & AsyncUpdates || forceAsync) {
                priorityLevel = LowPriority;
              } else {
                priorityLevel = SynchronousPriority$1;
              }
            }

            // If we're in a batch, or if we're already performing work, downgrade sync
            // priority to task priority
            if (priorityLevel === SynchronousPriority$1 && (isPerformingWork || isBatchingUpdates)) {
              return TaskPriority$1;
            }
            return priorityLevel;
          }

          function scheduleErrorRecovery(fiber) {
            scheduleUpdateImpl(fiber, TaskPriority$1, true);
          }

          function batchedUpdates(fn, a) {
            var previousIsBatchingUpdates = isBatchingUpdates;
            isBatchingUpdates = true;
            try {
              return fn(a);
            } finally {
              isBatchingUpdates = previousIsBatchingUpdates;
              // If we're not already inside a batch, we need to flush any task work
              // that was created by the user-provided function.
              if (!isPerformingWork && !isBatchingUpdates) {
                performWork(TaskPriority$1, null);
              }
            }
          }

          function unbatchedUpdates(fn) {
            var previousIsUnbatchingUpdates = isUnbatchingUpdates;
            var previousIsBatchingUpdates = isBatchingUpdates;
            // This is only true if we're nested inside batchedUpdates.
            isUnbatchingUpdates = isBatchingUpdates;
            isBatchingUpdates = false;
            try {
              return fn();
            } finally {
              isBatchingUpdates = previousIsBatchingUpdates;
              isUnbatchingUpdates = previousIsUnbatchingUpdates;
            }
          }

          function flushSync(batch) {
            var previousIsBatchingUpdates = isBatchingUpdates;
            var previousPriorityContext = priorityContext;
            isBatchingUpdates = true;
            priorityContext = SynchronousPriority$1;
            try {
              return batch();
            } finally {
              isBatchingUpdates = previousIsBatchingUpdates;
              priorityContext = previousPriorityContext;

              !!isPerformingWork ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
              performWork(TaskPriority$1, null);
            }
          }

          function deferredUpdates(fn) {
            var previousPriorityContext = priorityContext;
            priorityContext = LowPriority;
            try {
              return fn();
            } finally {
              priorityContext = previousPriorityContext;
            }
          }

          return {
            scheduleUpdate: scheduleUpdate,
            getPriorityContext: getPriorityContext,
            batchedUpdates: batchedUpdates,
            unbatchedUpdates: unbatchedUpdates,
            flushSync: flushSync,
            deferredUpdates: deferredUpdates
          };
        };

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule getContextForSubtree
         * 
         */

        var getContextFiber = function getContextFiber(arg) {
          invariant(false, 'Missing injection for fiber getContextForSubtree');
        };

        function getContextForSubtree(parentComponent) {
          if (!parentComponent) {
            return emptyObject;
          }

          var instance = ReactInstanceMap_1.get(parentComponent);
          if (typeof instance.tag === 'number') {
            return getContextFiber(instance);
          } else {
            return instance._processChildContext(instance._context);
          }
        }

        getContextForSubtree._injectFiber = function (fn) {
          getContextFiber = fn;
        };

        var getContextForSubtree_1 = getContextForSubtree;

        var addTopLevelUpdate = ReactFiberUpdateQueue.addTopLevelUpdate;

        var findCurrentUnmaskedContext = ReactFiberContext.findCurrentUnmaskedContext;
        var isContextProvider = ReactFiberContext.isContextProvider;
        var processChildContext = ReactFiberContext.processChildContext;

        var createFiberRoot = ReactFiberRoot.createFiberRoot;

        var HostComponent$3 = ReactTypeOfWork.HostComponent;

        {
          var warning$18 = require$$0;
          var ReactFiberInstrumentation = ReactFiberInstrumentation_1;
          var ReactDebugCurrentFiber$1 = ReactDebugCurrentFiber_1;
          var getComponentName$4 = getComponentName_1;
        }

        var findCurrentHostFiber$1 = ReactFiberTreeReflection.findCurrentHostFiber;
        var findCurrentHostFiberWithNoPortals$1 = ReactFiberTreeReflection.findCurrentHostFiberWithNoPortals;

        getContextForSubtree_1._injectFiber(function (fiber) {
          var parentContext = findCurrentUnmaskedContext(fiber);
          return isContextProvider(fiber) ? processChildContext(fiber, parentContext, false) : parentContext;
        });

        var ReactFiberReconciler = function ReactFiberReconciler(config) {
          var getPublicInstance = config.getPublicInstance;

          var _ReactFiberScheduler = ReactFiberScheduler(config),
              scheduleUpdate = _ReactFiberScheduler.scheduleUpdate,
              getPriorityContext = _ReactFiberScheduler.getPriorityContext,
              batchedUpdates = _ReactFiberScheduler.batchedUpdates,
              unbatchedUpdates = _ReactFiberScheduler.unbatchedUpdates,
              flushSync = _ReactFiberScheduler.flushSync,
              deferredUpdates = _ReactFiberScheduler.deferredUpdates;

          function scheduleTopLevelUpdate(current, element, callback) {
            {
              if (ReactDebugCurrentFiber$1.phase === 'render' && ReactDebugCurrentFiber$1.current !== null) {
                warning$18(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName$4(ReactDebugCurrentFiber$1.current) || 'Unknown');
              }
            }

            // Check if the top-level element is an async wrapper component. If so, treat
            // updates to the root as async. This is a bit weird but lets us avoid a separate
            // `renderAsync` API.
            var forceAsync = ReactFeatureFlags_1.enableAsyncSubtreeAPI && element != null && element.type != null && element.type.prototype != null && element.type.prototype.unstable_isAsyncReactComponent === true;
            var priorityLevel = getPriorityContext(current, forceAsync);
            var nextState = { element: element };
            callback = callback === undefined ? null : callback;
            {
              warning$18(callback === null || typeof callback === 'function', 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback);
            }
            addTopLevelUpdate(current, nextState, callback, priorityLevel);
            scheduleUpdate(current, priorityLevel);
          }

          return {
            createContainer: function createContainer(containerInfo) {
              return createFiberRoot(containerInfo);
            },
            updateContainer: function updateContainer(element, container, parentComponent, callback) {
              // TODO: If this is a nested container, this won't be the root.
              var current = container.current;

              {
                if (ReactFiberInstrumentation.debugTool) {
                  if (current.alternate === null) {
                    ReactFiberInstrumentation.debugTool.onMountContainer(container);
                  } else if (element === null) {
                    ReactFiberInstrumentation.debugTool.onUnmountContainer(container);
                  } else {
                    ReactFiberInstrumentation.debugTool.onUpdateContainer(container);
                  }
                }
              }

              var context = getContextForSubtree_1(parentComponent);
              if (container.context === null) {
                container.context = context;
              } else {
                container.pendingContext = context;
              }

              scheduleTopLevelUpdate(current, element, callback);
            },

            batchedUpdates: batchedUpdates,

            unbatchedUpdates: unbatchedUpdates,

            deferredUpdates: deferredUpdates,

            flushSync: flushSync,

            getPublicRootInstance: function getPublicRootInstance(container) {
              var containerFiber = container.current;
              if (!containerFiber.child) {
                return null;
              }
              switch (containerFiber.child.tag) {
                case HostComponent$3:
                  return getPublicInstance(containerFiber.child.stateNode);
                default:
                  return containerFiber.child.stateNode;
              }
            },
            findHostInstance: function findHostInstance(fiber) {
              var hostFiber = findCurrentHostFiber$1(fiber);
              if (hostFiber === null) {
                return null;
              }
              return hostFiber.stateNode;
            },
            findHostInstanceWithNoPortals: function findHostInstanceWithNoPortals(fiber) {
              var hostFiber = findCurrentHostFiberWithNoPortals$1(fiber);
              if (hostFiber === null) {
                return null;
              }
              return hostFiber.stateNode;
            }
          };
        };

        var TEXT_NODE$3 = HTMLNodeType_1.TEXT_NODE;

        /**
         * Given any node return the first leaf node without children.
         *
         * @param {DOMElement|DOMTextNode} node
         * @return {DOMElement|DOMTextNode}
         */

        function getLeafNode(node) {
          while (node && node.firstChild) {
            node = node.firstChild;
          }
          return node;
        }

        /**
         * Get the next sibling within a container. This will walk up the
         * DOM if a node's siblings have been exhausted.
         *
         * @param {DOMElement|DOMTextNode} node
         * @return {?DOMElement|DOMTextNode}
         */
        function getSiblingNode(node) {
          while (node) {
            if (node.nextSibling) {
              return node.nextSibling;
            }
            node = node.parentNode;
          }
        }

        /**
         * Get object describing the nodes which contain characters at offset.
         *
         * @param {DOMElement|DOMTextNode} root
         * @param {number} offset
         * @return {?object}
         */
        function getNodeForCharacterOffset(root, offset) {
          var node = getLeafNode(root);
          var nodeStart = 0;
          var nodeEnd = 0;

          while (node) {
            if (node.nodeType === TEXT_NODE$3) {
              nodeEnd = nodeStart + node.textContent.length;

              if (nodeStart <= offset && nodeEnd >= offset) {
                return {
                  node: node,
                  offset: offset - nodeStart
                };
              }

              nodeStart = nodeEnd;
            }

            node = getLeafNode(getSiblingNode(node));
          }
        }

        var getNodeForCharacterOffset_1 = getNodeForCharacterOffset;

        var contentKey = null;

        /**
         * Gets the key used to access text content on a DOM node.
         *
         * @return {?string} Key used to access text content.
         * @internal
         */
        function getTextContentAccessor() {
          if (!contentKey && ExecutionEnvironment.canUseDOM) {
            // Prefer textContent to innerText because many browsers support both but
            // SVG <text> elements don't support innerText even when <div> does.
            contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
          }
          return contentKey;
        }

        var getTextContentAccessor_1 = getTextContentAccessor;

        /**
         * While `isCollapsed` is available on the Selection object and `collapsed`
         * is available on the Range object, IE11 sometimes gets them wrong.
         * If the anchor/focus nodes and offsets are the same, the range is collapsed.
         */
        function isCollapsed(anchorNode, anchorOffset, focusNode$$1, focusOffset) {
          return anchorNode === focusNode$$1 && anchorOffset === focusOffset;
        }

        /**
         * @param {DOMElement} node
         * @return {?object}
         */
        function getModernOffsets(node) {
          var selection = window.getSelection && window.getSelection();

          if (!selection || selection.rangeCount === 0) {
            return null;
          }

          var anchorNode = selection.anchorNode;
          var anchorOffset = selection.anchorOffset;
          var focusNode$$1 = selection.focusNode;
          var focusOffset = selection.focusOffset;

          var currentRange = selection.getRangeAt(0);

          // In Firefox, range.startContainer and range.endContainer can be "anonymous
          // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
          // divs do not seem to expose properties, triggering a "Permission denied
          // error" if any of its properties are accessed. The only seemingly possible
          // way to avoid erroring is to access a property that typically works for
          // non-anonymous divs and catch any error that may otherwise arise. See
          // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
          try {
            /* eslint-disable no-unused-expressions */
            currentRange.startContainer.nodeType;
            currentRange.endContainer.nodeType;
            /* eslint-enable no-unused-expressions */
          } catch (e) {
            return null;
          }

          // If the node and offset values are the same, the selection is collapsed.
          // `Selection.isCollapsed` is available natively, but IE sometimes gets
          // this value wrong.
          var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

          var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

          var tempRange = currentRange.cloneRange();
          tempRange.selectNodeContents(node);
          tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

          var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

          var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
          var end = start + rangeLength;

          // Detect whether the selection is backward.
          var detectionRange = document.createRange();
          detectionRange.setStart(anchorNode, anchorOffset);
          detectionRange.setEnd(focusNode$$1, focusOffset);
          var isBackward = detectionRange.collapsed;

          return {
            start: isBackward ? end : start,
            end: isBackward ? start : end
          };
        }

        /**
         * In modern non-IE browsers, we can support both forward and backward
         * selections.
         *
         * Note: IE10+ supports the Selection object, but it does not support
         * the `extend` method, which means that even in modern IE, it's not possible
         * to programmatically create a backward selection. Thus, for all IE
         * versions, we use the old IE API to create our selections.
         *
         * @param {DOMElement|DOMTextNode} node
         * @param {object} offsets
         */
        function setModernOffsets(node, offsets) {
          if (!window.getSelection) {
            return;
          }

          var selection = window.getSelection();
          var length = node[getTextContentAccessor_1()].length;
          var start = Math.min(offsets.start, length);
          var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

          // IE 11 uses modern selection, but doesn't support the extend method.
          // Flip backward selections, so we can set with a single range.
          if (!selection.extend && start > end) {
            var temp = end;
            end = start;
            start = temp;
          }

          var startMarker = getNodeForCharacterOffset_1(node, start);
          var endMarker = getNodeForCharacterOffset_1(node, end);

          if (startMarker && endMarker) {
            var range = document.createRange();
            range.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();

            if (start > end) {
              selection.addRange(range);
              selection.extend(endMarker.node, endMarker.offset);
            } else {
              range.setEnd(endMarker.node, endMarker.offset);
              selection.addRange(range);
            }
          }
        }

        var ReactDOMSelection = {
          /**
           * @param {DOMElement} node
           */
          getOffsets: getModernOffsets,

          /**
           * @param {DOMElement|DOMTextNode} node
           * @param {object} offsets
           */
          setOffsets: setModernOffsets
        };

        var ReactDOMSelection_1 = ReactDOMSelection;

        var ELEMENT_NODE$2 = HTMLNodeType_1.ELEMENT_NODE;

        function isInDocument(node) {
          return containsNode(document.documentElement, node);
        }

        /**
         * @ReactInputSelection: React input selection module. Based on Selection.js,
         * but modified to be suitable for react and has a couple of bug fixes (doesn't
         * assume buttons have range selections allowed).
         * Input selection module for React.
         */
        var ReactInputSelection = {
          hasSelectionCapabilities: function hasSelectionCapabilities(elem) {
            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
            return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
          },

          getSelectionInformation: function getSelectionInformation() {
            var focusedElem = getActiveElement();
            return {
              focusedElem: focusedElem,
              selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
            };
          },

          /**
           * @restoreSelection: If any selection information was potentially lost,
           * restore it. This is useful when performing operations that could remove dom
           * nodes and place them back in, resulting in focus being lost.
           */
          restoreSelection: function restoreSelection(priorSelectionInformation) {
            var curFocusedElem = getActiveElement();
            var priorFocusedElem = priorSelectionInformation.focusedElem;
            var priorSelectionRange = priorSelectionInformation.selectionRange;
            if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
              if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
                ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
              }

              // Focusing a node can change the scroll position, which is undesirable
              var ancestors = [];
              var ancestor = priorFocusedElem;
              while (ancestor = ancestor.parentNode) {
                if (ancestor.nodeType === ELEMENT_NODE$2) {
                  ancestors.push({
                    element: ancestor,
                    left: ancestor.scrollLeft,
                    top: ancestor.scrollTop
                  });
                }
              }

              focusNode(priorFocusedElem);

              for (var i = 0; i < ancestors.length; i++) {
                var info = ancestors[i];
                info.element.scrollLeft = info.left;
                info.element.scrollTop = info.top;
              }
            }
          },

          /**
           * @getSelection: Gets the selection bounds of a focused textarea, input or
           * contentEditable node.
           * -@input: Look up selection bounds of this input
           * -@return {start: selectionStart, end: selectionEnd}
           */
          getSelection: function getSelection(input) {
            var selection;

            if ('selectionStart' in input) {
              // Modern browser with input or textarea.
              selection = {
                start: input.selectionStart,
                end: input.selectionEnd
              };
            } else {
              // Content editable or old IE textarea.
              selection = ReactDOMSelection_1.getOffsets(input);
            }

            return selection || { start: 0, end: 0 };
          },

          /**
           * @setSelection: Sets the selection bounds of a textarea or input and focuses
           * the input.
           * -@input     Set selection bounds of this input or textarea
           * -@offsets   Object of same form that is returned from get*
           */
          setSelection: function setSelection(input, offsets) {
            var start = offsets.start;
            var end = offsets.end;
            if (end === undefined) {
              end = start;
            }

            if ('selectionStart' in input) {
              input.selectionStart = start;
              input.selectionEnd = Math.min(end, input.value.length);
            } else {
              ReactDOMSelection_1.setOffsets(input, offsets);
            }
          }
        };

        var ReactInputSelection_1 = ReactInputSelection;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule ReactVersion
         */

        var ReactVersion = '16.0.0';

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule findDOMNode
         * 
         */

        var ELEMENT_NODE$3 = HTMLNodeType_1.ELEMENT_NODE;

        var ReactCurrentOwner$3 = ReactGlobalSharedState_1.ReactCurrentOwner;

        {
          var warning$27 = require$$0;
        }

        var findFiber = function findFiber(arg) {
          invariant(false, 'Missing injection for fiber findDOMNode');
        };
        var findStack = function findStack(arg) {
          invariant(false, 'Missing injection for stack findDOMNode');
        };

        var findDOMNode = function findDOMNode(componentOrElement) {
          {
            var owner = ReactCurrentOwner$3.current;
            if (owner !== null) {
              var isFiber = typeof owner.tag === 'number';
              var warnedAboutRefsInRender = isFiber ? owner.stateNode._warnedAboutRefsInRender : owner._warnedAboutRefsInRender;
              warning$27(warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName_1(owner) || 'A component');
              if (isFiber) {
                owner.stateNode._warnedAboutRefsInRender = true;
              } else {
                owner._warnedAboutRefsInRender = true;
              }
            }
          }
          if (componentOrElement == null) {
            return null;
          }
          if (componentOrElement.nodeType === ELEMENT_NODE$3) {
            return componentOrElement;
          }

          var inst = ReactInstanceMap_1.get(componentOrElement);
          if (inst) {
            if (typeof inst.tag === 'number') {
              return findFiber(inst);
            } else {
              return findStack(inst);
            }
          }

          if (typeof componentOrElement.render === 'function') {
            invariant(false, 'Unable to find node on an unmounted component.');
          } else {
            invariant(false, 'Element appears to be neither ReactComponent nor DOMNode. Keys: %s', Object.keys(componentOrElement));
          }
        };

        findDOMNode._injectFiber = function (fn) {
          findFiber = fn;
        };
        findDOMNode._injectStack = function (fn) {
          findStack = fn;
        };

        var findDOMNode_1 = findDOMNode;

        /**
         * Copyright (c) 2014-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule lowPriorityWarning
         */

        /**
         * Forked from fbjs/warning:
         * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
         *
         * Only change is we use console.warn instead of console.error,
         * and do nothing when 'console' is not supported.
         * This really simplifies the code.
         * ---
         * Similar to invariant but only logs a warning if the condition is not met.
         * This can be used to log issues in development environments in critical
         * paths. Removing the logging code for production environments will keep the
         * same logic and follow the same code paths.
         */

        var lowPriorityWarning$1 = function lowPriorityWarning$1() {};

        {
          var printWarning = function printWarning(format) {
            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              args[_key - 1] = arguments[_key];
            }

            var argIndex = 0;
            var message = 'Warning: ' + format.replace(/%s/g, function () {
              return args[argIndex++];
            });
            if (typeof console !== 'undefined') {
              console.warn(message);
            }
            try {
              // --- Welcome to debugging React ---
              // This error was thrown as a convenience so that you can use this stack
              // to find the callsite that caused this warning to fire.
              throw new Error(message);
            } catch (x) {}
          };

          lowPriorityWarning$1 = function lowPriorityWarning$1(condition, format) {
            if (format === undefined) {
              throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
            }
            if (!condition) {
              for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
                args[_key2 - 2] = arguments[_key2];
              }

              printWarning.apply(undefined, [format].concat(args));
            }
          };
        }

        var lowPriorityWarning_1 = lowPriorityWarning$1;

        var validateDOMNesting$1 = emptyFunction;

        {
          var warning$28 = require$$0;

          var _require$13 = ReactDebugCurrentFiber_1,
              getCurrentFiberStackAddendum$6 = _require$13.getCurrentFiberStackAddendum;

          // This validation code was written based on the HTML5 parsing spec:
          // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
          //
          // Note: this does not catch all invalid nesting, nor does it try to (as it's
          // not clear what practical benefit doing so provides); instead, we warn only
          // for cases where the parser will give a parse tree differing from what React
          // intended. For example, <b><div></div></b> is invalid but we don't warn
          // because it still parses correctly; we do warn for other cases like nested
          // <p> tags where the beginning of the second element implicitly closes the
          // first, causing a confusing mess.

          // https://html.spec.whatwg.org/multipage/syntax.html#special


          var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

          // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
          var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

          // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
          // TODO: Distinguish by namespace here -- for <title>, including it here
          // errs on the side of fewer warnings
          'foreignObject', 'desc', 'title'];

          // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
          var buttonScopeTags = inScopeTags.concat(['button']);

          // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
          var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

          var emptyAncestorInfo = {
            current: null,

            formTag: null,
            aTagInScope: null,
            buttonTagInScope: null,
            nobrTagInScope: null,
            pTagInButtonScope: null,

            listItemTagAutoclosing: null,
            dlItemTagAutoclosing: null
          };

          var updatedAncestorInfo$1 = function updatedAncestorInfo$1(oldInfo, tag, instance) {
            var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
            var info = { tag: tag, instance: instance };

            if (inScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.aTagInScope = null;
              ancestorInfo.buttonTagInScope = null;
              ancestorInfo.nobrTagInScope = null;
            }
            if (buttonScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.pTagInButtonScope = null;
            }

            // See rules for 'li', 'dd', 'dt' start tags in
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
            if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
              ancestorInfo.listItemTagAutoclosing = null;
              ancestorInfo.dlItemTagAutoclosing = null;
            }

            ancestorInfo.current = info;

            if (tag === 'form') {
              ancestorInfo.formTag = info;
            }
            if (tag === 'a') {
              ancestorInfo.aTagInScope = info;
            }
            if (tag === 'button') {
              ancestorInfo.buttonTagInScope = info;
            }
            if (tag === 'nobr') {
              ancestorInfo.nobrTagInScope = info;
            }
            if (tag === 'p') {
              ancestorInfo.pTagInButtonScope = info;
            }
            if (tag === 'li') {
              ancestorInfo.listItemTagAutoclosing = info;
            }
            if (tag === 'dd' || tag === 'dt') {
              ancestorInfo.dlItemTagAutoclosing = info;
            }

            return ancestorInfo;
          };

          /**
           * Returns whether
           */
          var isTagValidWithParent = function isTagValidWithParent(tag, parentTag) {
            // First, let's check if we're in an unusual parsing mode...
            switch (parentTag) {
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
              case 'select':
                return tag === 'option' || tag === 'optgroup' || tag === '#text';
              case 'optgroup':
                return tag === 'option' || tag === '#text';
              // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
              // but
              case 'option':
                return tag === '#text';
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
              // No special behavior since these rules fall back to "in body" mode for
              // all except special table nodes which cause bad parsing behavior anyway.

              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
              case 'tr':
                return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
              case 'tbody':
              case 'thead':
              case 'tfoot':
                return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
              case 'colgroup':
                return tag === 'col' || tag === 'template';
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
              case 'table':
                return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
              // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
              case 'head':
                return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
              // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
              case 'html':
                return tag === 'head' || tag === 'body';
              case '#document':
                return tag === 'html';
            }

            // Probably in the "in body" parsing mode, so we outlaw only tag combos
            // where the parsing rules cause implicit opens or closes to be added.
            // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
            switch (tag) {
              case 'h1':
              case 'h2':
              case 'h3':
              case 'h4':
              case 'h5':
              case 'h6':
                return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

              case 'rp':
              case 'rt':
                return impliedEndTags.indexOf(parentTag) === -1;

              case 'body':
              case 'caption':
              case 'col':
              case 'colgroup':
              case 'frame':
              case 'head':
              case 'html':
              case 'tbody':
              case 'td':
              case 'tfoot':
              case 'th':
              case 'thead':
              case 'tr':
                // These tags are only valid with a few parents that have special child
                // parsing rules -- if we're down here, then none of those matched and
                // so we allow it only if we don't know what the parent is, as all other
                // cases are invalid.
                return parentTag == null;
            }

            return true;
          };

          /**
           * Returns whether
           */
          var findInvalidAncestorForTag = function findInvalidAncestorForTag(tag, ancestorInfo) {
            switch (tag) {
              case 'address':
              case 'article':
              case 'aside':
              case 'blockquote':
              case 'center':
              case 'details':
              case 'dialog':
              case 'dir':
              case 'div':
              case 'dl':
              case 'fieldset':
              case 'figcaption':
              case 'figure':
              case 'footer':
              case 'header':
              case 'hgroup':
              case 'main':
              case 'menu':
              case 'nav':
              case 'ol':
              case 'p':
              case 'section':
              case 'summary':
              case 'ul':
              case 'pre':
              case 'listing':
              case 'table':
              case 'hr':
              case 'xmp':
              case 'h1':
              case 'h2':
              case 'h3':
              case 'h4':
              case 'h5':
              case 'h6':
                return ancestorInfo.pTagInButtonScope;

              case 'form':
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

              case 'li':
                return ancestorInfo.listItemTagAutoclosing;

              case 'dd':
              case 'dt':
                return ancestorInfo.dlItemTagAutoclosing;

              case 'button':
                return ancestorInfo.buttonTagInScope;

              case 'a':
                // Spec says something about storing a list of markers, but it sounds
                // equivalent to this check.
                return ancestorInfo.aTagInScope;

              case 'nobr':
                return ancestorInfo.nobrTagInScope;
            }

            return null;
          };

          /**
           * Given a ReactCompositeComponent instance, return a list of its recursive
           * owners, starting at the root and ending with the instance itself.
           */
          var findOwnerStack = function findOwnerStack(instance) {
            if (!instance) {
              return [];
            }

            var stack = [];
            do {
              stack.push(instance);
            } while (instance = instance._currentElement._owner);
            stack.reverse();
            return stack;
          };

          var getOwnerInfo = function getOwnerInfo(childInstance, childTag, ancestorInstance, ancestorTag, isParent) {
            var childOwner = childInstance && childInstance._currentElement._owner;
            var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

            var childOwners = findOwnerStack(childOwner);
            var ancestorOwners = findOwnerStack(ancestorOwner);

            var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
            var i;

            var deepestCommon = -1;
            for (i = 0; i < minStackLen; i++) {
              if (childOwners[i] === ancestorOwners[i]) {
                deepestCommon = i;
              } else {
                break;
              }
            }

            var UNKNOWN = '(unknown)';
            var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
              return getComponentName_1(inst) || UNKNOWN;
            });
            var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
              return getComponentName_1(inst) || UNKNOWN;
            });
            var ownerInfo = [].concat(
            // If the parent and child instances have a common owner ancestor, start
            // with that -- otherwise we just start with the parent's owners.
            deepestCommon !== -1 ? getComponentName_1(childOwners[deepestCommon]) || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
            // If we're warning about an invalid (non-parent) ancestry, add '...'
            isParent ? [] : ['...'], childOwnerNames, childTag).join(' > ');

            return ownerInfo;
          };

          var didWarn = {};

          validateDOMNesting$1 = function validateDOMNesting$1(childTag, childText, childInstance, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;

            if (childText != null) {
              warning$28(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null');
              childTag = '#text';
            }

            var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
            var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
            var invalidParentOrAncestor = invalidParent || invalidAncestor;
            if (!invalidParentOrAncestor) {
              return;
            }

            var ancestorInstance = invalidParentOrAncestor.instance;
            var ancestorTag = invalidParentOrAncestor.tag;
            var addendum;

            if (childInstance != null) {
              addendum = ' See ' + getOwnerInfo(childInstance, childTag, ancestorInstance, ancestorTag, !!invalidParent) + '.';
            } else {
              addendum = getCurrentFiberStackAddendum$6();
            }

            var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
            if (didWarn[warnKey]) {
              return;
            }
            didWarn[warnKey] = true;

            var tagDisplayName = childTag;
            var whitespaceInfo = '';
            if (childTag === '#text') {
              if (/\S/.test(childText)) {
                tagDisplayName = 'Text nodes';
              } else {
                tagDisplayName = 'Whitespace text nodes';
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
              }
            } else {
              tagDisplayName = '<' + childTag + '>';
            }

            if (invalidParent) {
              var info = '';
              if (ancestorTag === 'table' && childTag === 'tr') {
                info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
              }
              warning$28(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
            } else {
              warning$28(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
            }
          };

          validateDOMNesting$1.updatedAncestorInfo = updatedAncestorInfo$1;

          // For testing
          validateDOMNesting$1.isTagValidInContext = function (tag, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;
            return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
          };
        }

        var validateDOMNesting_1 = validateDOMNesting$1;

        var HostComponent$11 = ReactTypeOfWork.HostComponent;

        function getParent(inst) {
          if (inst._hostParent !== undefined) {
            return inst._hostParent;
          }
          if (typeof inst.tag === 'number') {
            do {
              inst = inst['return'];
              // TODO: If this is a HostRoot we might want to bail out.
              // That is depending on if we want nested subtrees (layers) to bubble
              // events to their parent. We could also go through parentNode on the
              // host node but that wouldn't work for React Native and doesn't let us
              // do the portal feature.
            } while (inst && inst.tag !== HostComponent$11);
            if (inst) {
              return inst;
            }
          }
          return null;
        }

        /**
         * Return the lowest common ancestor of A and B, or null if they are in
         * different trees.
         */
        function getLowestCommonAncestor(instA, instB) {
          var depthA = 0;
          for (var tempA = instA; tempA; tempA = getParent(tempA)) {
            depthA++;
          }
          var depthB = 0;
          for (var tempB = instB; tempB; tempB = getParent(tempB)) {
            depthB++;
          }

          // If A is deeper, crawl up.
          while (depthA - depthB > 0) {
            instA = getParent(instA);
            depthA--;
          }

          // If B is deeper, crawl up.
          while (depthB - depthA > 0) {
            instB = getParent(instB);
            depthB--;
          }

          // Walk in lockstep until we find a match.
          var depth = depthA;
          while (depth--) {
            if (instA === instB || instA === instB.alternate) {
              return instA;
            }
            instA = getParent(instA);
            instB = getParent(instB);
          }
          return null;
        }

        /**
         * Return if A is an ancestor of B.
         */
        function isAncestor(instA, instB) {
          while (instB) {
            if (instA === instB || instA === instB.alternate) {
              return true;
            }
            instB = getParent(instB);
          }
          return false;
        }

        /**
         * Return the parent instance of the passed-in instance.
         */
        function getParentInstance(inst) {
          return getParent(inst);
        }

        /**
         * Simulates the traversal of a two-phase, capture/bubble event dispatch.
         */
        function traverseTwoPhase(inst, fn, arg) {
          var path = [];
          while (inst) {
            path.push(inst);
            inst = getParent(inst);
          }
          var i;
          for (i = path.length; i-- > 0;) {
            fn(path[i], 'captured', arg);
          }
          for (i = 0; i < path.length; i++) {
            fn(path[i], 'bubbled', arg);
          }
        }

        /**
         * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
         * should would receive a `mouseEnter` or `mouseLeave` event.
         *
         * Does not invoke the callback on the nearest common ancestor because nothing
         * "entered" or "left" that element.
         */
        function traverseEnterLeave(from, to, fn, argFrom, argTo) {
          var common = from && to ? getLowestCommonAncestor(from, to) : null;
          var pathFrom = [];
          while (from && from !== common) {
            pathFrom.push(from);
            from = getParent(from);
          }
          var pathTo = [];
          while (to && to !== common) {
            pathTo.push(to);
            to = getParent(to);
          }
          var i;
          for (i = 0; i < pathFrom.length; i++) {
            fn(pathFrom[i], 'bubbled', argFrom);
          }
          for (i = pathTo.length; i-- > 0;) {
            fn(pathTo[i], 'captured', argTo);
          }
        }

        var ReactTreeTraversal = {
          isAncestor: isAncestor,
          getLowestCommonAncestor: getLowestCommonAncestor,
          getParentInstance: getParentInstance,
          traverseTwoPhase: traverseTwoPhase,
          traverseEnterLeave: traverseEnterLeave
        };

        var getListener = EventPluginHub_1.getListener;

        {
          var warning$29 = require$$0;
        }

        /**
         * Some event types have a notion of different registration names for different
         * "phases" of propagation. This finds listeners by a given phase.
         */
        function listenerAtPhase(inst, event, propagationPhase) {
          var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
          return getListener(inst, registrationName);
        }

        /**
         * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
         * here, allows us to not have to bind or create functions for each event.
         * Mutating the event's members allows us to not have to create a wrapping
         * "dispatch" object that pairs the event with the listener.
         */
        function accumulateDirectionalDispatches(inst, phase, event) {
          {
            warning$29(inst, 'Dispatching inst must not be null');
          }
          var listener = listenerAtPhase(inst, event, phase);
          if (listener) {
            event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener);
            event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst);
          }
        }

        /**
         * Collect dispatches (must be entirely collected before dispatching - see unit
         * tests). Lazily allocate the array to conserve memory.  We must loop through
         * each event and perform the traversal for each one. We cannot perform a
         * single traversal for the entire collection of events because each event may
         * have a different target.
         */
        function accumulateTwoPhaseDispatchesSingle(event) {
          if (event && event.dispatchConfig.phasedRegistrationNames) {
            ReactTreeTraversal.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
          }
        }

        /**
         * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
         */
        function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
          if (event && event.dispatchConfig.phasedRegistrationNames) {
            var targetInst = event._targetInst;
            var parentInst = targetInst ? ReactTreeTraversal.getParentInstance(targetInst) : null;
            ReactTreeTraversal.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
          }
        }

        /**
         * Accumulates without regard to direction, does not look for phased
         * registration names. Same as `accumulateDirectDispatchesSingle` but without
         * requiring that the `dispatchMarker` be the same as the dispatched ID.
         */
        function accumulateDispatches(inst, ignoredDirection, event) {
          if (inst && event && event.dispatchConfig.registrationName) {
            var registrationName = event.dispatchConfig.registrationName;
            var listener = getListener(inst, registrationName);
            if (listener) {
              event._dispatchListeners = accumulateInto_1(event._dispatchListeners, listener);
              event._dispatchInstances = accumulateInto_1(event._dispatchInstances, inst);
            }
          }
        }

        /**
         * Accumulates dispatches on an `SyntheticEvent`, but only for the
         * `dispatchMarker`.
         * @param {SyntheticEvent} event
         */
        function accumulateDirectDispatchesSingle(event) {
          if (event && event.dispatchConfig.registrationName) {
            accumulateDispatches(event._targetInst, null, event);
          }
        }

        function accumulateTwoPhaseDispatches(events) {
          forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingle);
        }

        function accumulateTwoPhaseDispatchesSkipTarget(events) {
          forEachAccumulated_1(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
        }

        function accumulateEnterLeaveDispatches(leave, enter, from, to) {
          ReactTreeTraversal.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
        }

        function accumulateDirectDispatches(events) {
          forEachAccumulated_1(events, accumulateDirectDispatchesSingle);
        }

        /**
         * A small set of propagation patterns, each of which will accept a small amount
         * of information, and generate a set of "dispatch ready event objects" - which
         * are sets of events that have already been annotated with a set of dispatched
         * listener functions/ids. The API is designed this way to discourage these
         * propagation strategies from actually executing the dispatches, since we
         * always want to collect the entire set of dispatches before executing even a
         * single one.
         *
         * @constructor EventPropagators
         */
        var EventPropagators = {
          accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
          accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
          accumulateDirectDispatches: accumulateDirectDispatches,
          accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
        };

        var EventPropagators_1 = EventPropagators;

        /**
         * This helper object stores information about text content of a target node,
         * allowing comparison of content before and after a given event.
         *
         * Identify the node where selection currently begins, then observe
         * both its text content and its current position in the DOM. Since the
         * browser may natively replace the target node during composition, we can
         * use its position to find its replacement.
         * 
         *
         */
        var compositionState = {
          _root: null,
          _startText: null,
          _fallbackText: null
        };

        var FallbackCompositionState = {
          initialize: function initialize(nativeEventTarget) {
            compositionState._root = nativeEventTarget;
            compositionState._startText = FallbackCompositionState.getText();
            return true;
          },
          reset: function reset() {
            compositionState._root = null;
            compositionState._startText = null;
            compositionState._fallbackText = null;
          },
          getData: function getData() {
            if (compositionState._fallbackText) {
              return compositionState._fallbackText;
            }

            var start;
            var startValue = compositionState._startText;
            var startLength = startValue.length;
            var end;
            var endValue = FallbackCompositionState.getText();
            var endLength = endValue.length;

            for (start = 0; start < startLength; start++) {
              if (startValue[start] !== endValue[start]) {
                break;
              }
            }

            var minEnd = startLength - start;
            for (end = 1; end <= minEnd; end++) {
              if (startValue[startLength - end] !== endValue[endLength - end]) {
                break;
              }
            }

            var sliceTail = end > 1 ? 1 - end : undefined;
            compositionState._fallbackText = endValue.slice(start, sliceTail);
            return compositionState._fallbackText;
          },
          getText: function getText() {
            if ('value' in compositionState._root) {
              return compositionState._root.value;
            }
            return compositionState._root[getTextContentAccessor_1()];
          }
        };

        var FallbackCompositionState_1 = FallbackCompositionState;

        var didWarnForAddedNewProperty = false;
        var isProxySupported = typeof Proxy === 'function';
        var EVENT_POOL_SIZE = 10;

        {
          var warning$30 = require$$0;
        }

        var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

        /**
         * @interface Event
         * @see http://www.w3.org/TR/DOM-Level-3-Events/
         */
        var EventInterface = {
          type: null,
          target: null,
          // currentTarget is set when dispatching; no use in copying it here
          currentTarget: emptyFunction.thatReturnsNull,
          eventPhase: null,
          bubbles: null,
          cancelable: null,
          timeStamp: function timeStamp(event) {
            return event.timeStamp || Date.now();
          },
          defaultPrevented: null,
          isTrusted: null
        };

        /**
         * Synthetic events are dispatched by event plugins, typically in response to a
         * top-level event delegation handler.
         *
         * These systems should generally use pooling to reduce the frequency of garbage
         * collection. The system should check `isPersistent` to determine whether the
         * event should be released into the pool after being dispatched. Users that
         * need a persisted event should invoke `persist`.
         *
         * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
         * normalizing browser quirks. Subclasses do not necessarily have to implement a
         * DOM interface; custom application-specific events can also subclass this.
         *
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {*} targetInst Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @param {DOMEventTarget} nativeEventTarget Target node.
         */
        function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
          {
            // these have a getter/setter for warnings
            delete this.nativeEvent;
            delete this.preventDefault;
            delete this.stopPropagation;
          }

          this.dispatchConfig = dispatchConfig;
          this._targetInst = targetInst;
          this.nativeEvent = nativeEvent;

          var Interface = this.constructor.Interface;
          for (var propName in Interface) {
            if (!Interface.hasOwnProperty(propName)) {
              continue;
            }
            {
              delete this[propName]; // this has a getter/setter for warnings
            }
            var normalize = Interface[propName];
            if (normalize) {
              this[propName] = normalize(nativeEvent);
            } else {
              if (propName === 'target') {
                this.target = nativeEventTarget;
              } else {
                this[propName] = nativeEvent[propName];
              }
            }
          }

          var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
          if (defaultPrevented) {
            this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
          } else {
            this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
          }
          this.isPropagationStopped = emptyFunction.thatReturnsFalse;
          return this;
        }

        _assign(SyntheticEvent.prototype, {
          preventDefault: function preventDefault() {
            this.defaultPrevented = true;
            var event = this.nativeEvent;
            if (!event) {
              return;
            }

            if (event.preventDefault) {
              event.preventDefault();
            } else if (typeof event.returnValue !== 'unknown') {
              event.returnValue = false;
            }
            this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
          },

          stopPropagation: function stopPropagation() {
            var event = this.nativeEvent;
            if (!event) {
              return;
            }

            if (event.stopPropagation) {
              event.stopPropagation();
            } else if (typeof event.cancelBubble !== 'unknown') {
              // The ChangeEventPlugin registers a "propertychange" event for
              // IE. This event does not support bubbling or cancelling, and
              // any references to cancelBubble throw "Member not found".  A
              // typeof check of "unknown" circumvents this issue (and is also
              // IE specific).
              event.cancelBubble = true;
            }

            this.isPropagationStopped = emptyFunction.thatReturnsTrue;
          },

          /**
           * We release all dispatched `SyntheticEvent`s after each event loop, adding
           * them back into the pool. This allows a way to hold onto a reference that
           * won't be added back into the pool.
           */
          persist: function persist() {
            this.isPersistent = emptyFunction.thatReturnsTrue;
          },

          /**
           * Checks if this event should be released back into the pool.
           *
           * @return {boolean} True if this should not be released, false otherwise.
           */
          isPersistent: emptyFunction.thatReturnsFalse,

          /**
           * `PooledClass` looks for `destructor` on each instance it releases.
           */
          destructor: function destructor() {
            var Interface = this.constructor.Interface;
            for (var propName in Interface) {
              {
                Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
              }
            }
            for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
              this[shouldBeReleasedProperties[i]] = null;
            }
            {
              Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
              Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
              Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
            }
          }
        });

        SyntheticEvent.Interface = EventInterface;

        /**
         * Helper to reduce boilerplate when creating subclasses.
         *
         * @param {function} Class
         * @param {?object} Interface
         */
        SyntheticEvent.augmentClass = function (Class, Interface) {
          var Super = this;

          var E = function E() {};
          E.prototype = Super.prototype;
          var prototype = new E();

          _assign(prototype, Class.prototype);
          Class.prototype = prototype;
          Class.prototype.constructor = Class;

          Class.Interface = _assign({}, Super.Interface, Interface);
          Class.augmentClass = Super.augmentClass;
          addEventPoolingTo(Class);
        };

        /** Proxying after everything set on SyntheticEvent
          * to resolve Proxy issue on some WebKit browsers
          * in which some Event properties are set to undefined (GH#10010)
          */
        {
          if (isProxySupported) {
            /*eslint-disable no-func-assign */
            SyntheticEvent = new Proxy(SyntheticEvent, {
              construct: function construct(target, args) {
                return this.apply(target, Object.create(target.prototype), args);
              },
              apply: function apply(constructor, that, args) {
                return new Proxy(constructor.apply(that, args), {
                  set: function set(target, prop, value) {
                    if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
                      warning$30(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.');
                      didWarnForAddedNewProperty = true;
                    }
                    target[prop] = value;
                    return true;
                  }
                });
              }
            });
            /*eslint-enable no-func-assign */
          }
        }

        addEventPoolingTo(SyntheticEvent);

        var SyntheticEvent_1 = SyntheticEvent;

        /**
          * Helper to nullify syntheticEvent instance properties when destructing
          *
          * @param {String} propName
          * @param {?object} getVal
          * @return {object} defineProperty object
          */
        function getPooledWarningPropertyDefinition(propName, getVal) {
          var isFunction = typeof getVal === 'function';
          return {
            configurable: true,
            set: set,
            get: get
          };

          function set(val) {
            var action = isFunction ? 'setting the method' : 'setting the property';
            warn(action, 'This is effectively a no-op');
            return val;
          }

          function get() {
            var action = isFunction ? 'accessing the method' : 'accessing the property';
            var result = isFunction ? 'This is a no-op function' : 'This is set to null';
            warn(action, result);
            return getVal;
          }

          function warn(action, result) {
            var warningCondition = false;
            warning$30(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result);
          }
        }

        function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
          var EventConstructor = this;
          if (EventConstructor.eventPool.length) {
            var instance = EventConstructor.eventPool.pop();
            EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
            return instance;
          }
          return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
        }

        function releasePooledEvent(event) {
          var EventConstructor = this;
          !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance  into a pool of a different type.') : void 0;
          event.destructor();
          if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
            EventConstructor.eventPool.push(event);
          }
        }

        function addEventPoolingTo(EventConstructor) {
          EventConstructor.eventPool = [];
          EventConstructor.getPooled = getPooledEvent;
          EventConstructor.release = releasePooledEvent;
        }

        /**
         * @interface Event
         * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
         */
        var CompositionEventInterface = {
          data: null
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticUIEvent}
         */
        function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticEvent_1.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

        var SyntheticCompositionEvent_1 = SyntheticCompositionEvent;

        /**
         * @interface Event
         * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
         *      /#events-inputevents
         */
        var InputEventInterface = {
          data: null
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticUIEvent}
         */
        function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticEvent_1.augmentClass(SyntheticInputEvent, InputEventInterface);

        var SyntheticInputEvent_1 = SyntheticInputEvent;

        var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
        var START_KEYCODE = 229;

        var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

        var documentMode = null;
        if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
          documentMode = document.documentMode;
        }

        // Webkit offers a very useful `textInput` event that can be used to
        // directly represent `beforeInput`. The IE `textinput` event is not as
        // useful, so we don't use it.
        var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

        // In IE9+, we have access to composition events, but the data supplied
        // by the native compositionend event may be incorrect. Japanese ideographic
        // spaces, for instance (\u3000) are not recorded correctly.
        var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

        /**
         * Opera <= 12 includes TextEvent in window, but does not fire
         * text input events. Rely on keypress instead.
         */
        function isPresto() {
          var opera = window.opera;
          return (typeof opera === "undefined" ? "undefined" : _typeof4(opera)) === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
        }

        var SPACEBAR_CODE = 32;
        var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

        // Events and their corresponding property names.
        var eventTypes = {
          beforeInput: {
            phasedRegistrationNames: {
              bubbled: 'onBeforeInput',
              captured: 'onBeforeInputCapture'
            },
            dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
          },
          compositionEnd: {
            phasedRegistrationNames: {
              bubbled: 'onCompositionEnd',
              captured: 'onCompositionEndCapture'
            },
            dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
          },
          compositionStart: {
            phasedRegistrationNames: {
              bubbled: 'onCompositionStart',
              captured: 'onCompositionStartCapture'
            },
            dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
          },
          compositionUpdate: {
            phasedRegistrationNames: {
              bubbled: 'onCompositionUpdate',
              captured: 'onCompositionUpdateCapture'
            },
            dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
          }
        };

        // Track whether we've ever handled a keypress on the space key.
        var hasSpaceKeypress = false;

        /**
         * Return whether a native keypress event is assumed to be a command.
         * This is required because Firefox fires `keypress` events for key commands
         * (cut, copy, select-all, etc.) even though no character is inserted.
         */
        function isKeypressCommand(nativeEvent) {
          return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
          // ctrlKey && altKey is equivalent to AltGr, and is not a command.
          !(nativeEvent.ctrlKey && nativeEvent.altKey);
        }

        /**
         * Translate native top level events into event types.
         *
         * @param {string} topLevelType
         * @return {object}
         */
        function getCompositionEventType(topLevelType) {
          switch (topLevelType) {
            case 'topCompositionStart':
              return eventTypes.compositionStart;
            case 'topCompositionEnd':
              return eventTypes.compositionEnd;
            case 'topCompositionUpdate':
              return eventTypes.compositionUpdate;
          }
        }

        /**
         * Does our fallback best-guess model think this event signifies that
         * composition has begun?
         *
         * @param {string} topLevelType
         * @param {object} nativeEvent
         * @return {boolean}
         */
        function isFallbackCompositionStart(topLevelType, nativeEvent) {
          return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
        }

        /**
         * Does our fallback mode think that this event is the end of composition?
         *
         * @param {string} topLevelType
         * @param {object} nativeEvent
         * @return {boolean}
         */
        function isFallbackCompositionEnd(topLevelType, nativeEvent) {
          switch (topLevelType) {
            case 'topKeyUp':
              // Command keys insert or clear IME input.
              return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case 'topKeyDown':
              // Expect IME keyCode on each keydown. If we get any other
              // code we must have exited earlier.
              return nativeEvent.keyCode !== START_KEYCODE;
            case 'topKeyPress':
            case 'topMouseDown':
            case 'topBlur':
              // Events are not possible without cancelling IME.
              return true;
            default:
              return false;
          }
        }

        /**
         * Google Input Tools provides composition data via a CustomEvent,
         * with the `data` property populated in the `detail` object. If this
         * is available on the event object, use it. If not, this is a plain
         * composition event and we have nothing special to extract.
         *
         * @param {object} nativeEvent
         * @return {?string}
         */
        function getDataFromCustomEvent(nativeEvent) {
          var detail = nativeEvent.detail;
          if ((typeof detail === "undefined" ? "undefined" : _typeof4(detail)) === 'object' && 'data' in detail) {
            return detail.data;
          }
          return null;
        }

        // Track the current IME composition status, if any.
        var isComposing = false;

        /**
         * @return {?object} A SyntheticCompositionEvent.
         */
        function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          var eventType;
          var fallbackData;

          if (canUseCompositionEvent) {
            eventType = getCompositionEventType(topLevelType);
          } else if (!isComposing) {
            if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
              eventType = eventTypes.compositionStart;
            }
          } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
            eventType = eventTypes.compositionEnd;
          }

          if (!eventType) {
            return null;
          }

          if (useFallbackCompositionData) {
            // The current composition is stored statically and must not be
            // overwritten while composition continues.
            if (!isComposing && eventType === eventTypes.compositionStart) {
              isComposing = FallbackCompositionState_1.initialize(nativeEventTarget);
            } else if (eventType === eventTypes.compositionEnd) {
              if (isComposing) {
                fallbackData = FallbackCompositionState_1.getData();
              }
            }
          }

          var event = SyntheticCompositionEvent_1.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

          if (fallbackData) {
            // Inject data generated from fallback path into the synthetic event.
            // This matches the property of native CompositionEventInterface.
            event.data = fallbackData;
          } else {
            var customData = getDataFromCustomEvent(nativeEvent);
            if (customData !== null) {
              event.data = customData;
            }
          }

          EventPropagators_1.accumulateTwoPhaseDispatches(event);
          return event;
        }

        /**
         * @param {TopLevelTypes} topLevelType Record from `BrowserEventConstants`.
         * @param {object} nativeEvent Native browser event.
         * @return {?string} The string corresponding to this `beforeInput` event.
         */
        function getNativeBeforeInputChars(topLevelType, nativeEvent) {
          switch (topLevelType) {
            case 'topCompositionEnd':
              return getDataFromCustomEvent(nativeEvent);
            case 'topKeyPress':
              /**
               * If native `textInput` events are available, our goal is to make
               * use of them. However, there is a special case: the spacebar key.
               * In Webkit, preventing default on a spacebar `textInput` event
               * cancels character insertion, but it *also* causes the browser
               * to fall back to its default spacebar behavior of scrolling the
               * page.
               *
               * Tracking at:
               * https://code.google.com/p/chromium/issues/detail?id=355103
               *
               * To avoid this issue, use the keypress event as if no `textInput`
               * event is available.
               */
              var which = nativeEvent.which;
              if (which !== SPACEBAR_CODE) {
                return null;
              }

              hasSpaceKeypress = true;
              return SPACEBAR_CHAR;

            case 'topTextInput':
              // Record the characters to be added to the DOM.
              var chars = nativeEvent.data;

              // If it's a spacebar character, assume that we have already handled
              // it at the keypress level and bail immediately. Android Chrome
              // doesn't give us keycodes, so we need to blacklist it.
              if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                return null;
              }

              return chars;

            default:
              // For other native event types, do nothing.
              return null;
          }
        }

        /**
         * For browsers that do not provide the `textInput` event, extract the
         * appropriate string to use for SyntheticInputEvent.
         *
         * @param {string} topLevelType Record from `BrowserEventConstants`.
         * @param {object} nativeEvent Native browser event.
         * @return {?string} The fallback string for this `beforeInput` event.
         */
        function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
          // If we are currently composing (IME) and using a fallback to do so,
          // try to extract the composed characters from the fallback object.
          // If composition event is available, we extract a string only at
          // compositionevent, otherwise extract it at fallback events.
          if (isComposing) {
            if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
              var chars = FallbackCompositionState_1.getData();
              FallbackCompositionState_1.reset();
              isComposing = false;
              return chars;
            }
            return null;
          }

          switch (topLevelType) {
            case 'topPaste':
              // If a paste event occurs after a keypress, throw out the input
              // chars. Paste events should not lead to BeforeInput events.
              return null;
            case 'topKeyPress':
              /**
               * As of v27, Firefox may fire keypress events even when no character
               * will be inserted. A few possibilities:
               *
               * - `which` is `0`. Arrow keys, Esc key, etc.
               *
               * - `which` is the pressed key code, but no char is available.
               *   Ex: 'AltGr + d` in Polish. There is no modified character for
               *   this key combination and no character is inserted into the
               *   document, but FF fires the keypress for char code `100` anyway.
               *   No `input` event will occur.
               *
               * - `which` is the pressed key code, but a command combination is
               *   being used. Ex: `Cmd+C`. No character is inserted, and no
               *   `input` event will occur.
               */
              if (!isKeypressCommand(nativeEvent)) {
                // IE fires the `keypress` event when a user types an emoji via
                // Touch keyboard of Windows.  In such a case, the `char` property
                // holds an emoji character like `\uD83D\uDE0A`.  Because its length
                // is 2, the property `which` does not represent an emoji correctly.
                // In such a case, we directly return the `char` property instead of
                // using `which`.
                if (nativeEvent.char && nativeEvent.char.length > 1) {
                  return nativeEvent.char;
                } else if (nativeEvent.which) {
                  return String.fromCharCode(nativeEvent.which);
                }
              }
              return null;
            case 'topCompositionEnd':
              return useFallbackCompositionData ? null : nativeEvent.data;
            default:
              return null;
          }
        }

        /**
         * Extract a SyntheticInputEvent for `beforeInput`, based on either native
         * `textInput` or fallback behavior.
         *
         * @return {?object} A SyntheticInputEvent.
         */
        function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
          var chars;

          if (canUseTextInputEvent) {
            chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
          } else {
            chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
          }

          // If no characters are being inserted, no BeforeInput event should
          // be fired.
          if (!chars) {
            return null;
          }

          var event = SyntheticInputEvent_1.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

          event.data = chars;
          EventPropagators_1.accumulateTwoPhaseDispatches(event);
          return event;
        }

        /**
         * Create an `onBeforeInput` event to match
         * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
         *
         * This event plugin is based on the native `textInput` event
         * available in Chrome, Safari, Opera, and IE. This event fires after
         * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
         *
         * `beforeInput` is spec'd but not implemented in any browsers, and
         * the `input` event does not provide any useful information about what has
         * actually been added, contrary to the spec. Thus, `textInput` is the best
         * available event to identify the characters that have actually been inserted
         * into the target node.
         *
         * This plugin is also responsible for emitting `composition` events, thus
         * allowing us to share composition fallback code for both `beforeInput` and
         * `composition` event types.
         */
        var BeforeInputEventPlugin = {
          eventTypes: eventTypes,

          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
          }
        };

        var BeforeInputEventPlugin_1 = BeforeInputEventPlugin;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule isTextInputElement
         * 
         */

        /**
         * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
         */

        var supportedInputTypes = {
          color: true,
          date: true,
          datetime: true,
          'datetime-local': true,
          email: true,
          month: true,
          number: true,
          password: true,
          range: true,
          search: true,
          tel: true,
          text: true,
          time: true,
          url: true,
          week: true
        };

        function isTextInputElement(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

          if (nodeName === 'input') {
            return !!supportedInputTypes[elem.type];
          }

          if (nodeName === 'textarea') {
            return true;
          }

          return false;
        }

        var isTextInputElement_1 = isTextInputElement;

        var eventTypes$1 = {
          change: {
            phasedRegistrationNames: {
              bubbled: 'onChange',
              captured: 'onChangeCapture'
            },
            dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
          }
        };

        function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
          var event = SyntheticEvent_1.getPooled(eventTypes$1.change, inst, nativeEvent, target);
          event.type = 'change';
          // Flag this event loop as needing state restore.
          ReactControlledComponent_1.enqueueStateRestore(target);
          EventPropagators_1.accumulateTwoPhaseDispatches(event);
          return event;
        }
        /**
         * For IE shims
         */
        var activeElement = null;
        var activeElementInst = null;

        /**
         * SECTION: handle `change` event
         */
        function shouldUseChangeEvent(elem) {
          var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
        }

        function manualDispatchChangeEvent(nativeEvent) {
          var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget_1(nativeEvent));

          // If change and propertychange bubbled, we'd just bind to it like all the
          // other events and have it go through ReactBrowserEventEmitter. Since it
          // doesn't, we manually listen for the events and so we have to enqueue and
          // process the abstract event manually.
          //
          // Batching is necessary here in order to ensure that all event handlers run
          // before the next rerender (including event handlers attached to ancestor
          // elements instead of directly on the input). Without this, controlled
          // components don't work properly in conjunction with event bubbling because
          // the component is rerendered and the value reverted before all the event
          // handlers can run. See https://github.com/facebook/react/issues/708.
          ReactGenericBatching_1.batchedUpdates(runEventInBatch, event);
        }

        function runEventInBatch(event) {
          EventPluginHub_1.enqueueEvents(event);
          EventPluginHub_1.processEventQueue(false);
        }

        function getInstIfValueChanged(targetInst) {
          var targetNode = ReactDOMComponentTree_1.getNodeFromInstance(targetInst);
          if (inputValueTracking_1.updateValueIfChanged(targetNode)) {
            return targetInst;
          }
        }

        function getTargetInstForChangeEvent(topLevelType, targetInst) {
          if (topLevelType === 'topChange') {
            return targetInst;
          }
        }

        /**
         * SECTION: handle `input` event
         */
        var isInputEventSupported = false;
        if (ExecutionEnvironment.canUseDOM) {
          // IE9 claims to support the input event but fails to trigger it when
          // deleting text, so we ignore its input events.
          isInputEventSupported = isEventSupported_1('input') && (!document.documentMode || document.documentMode > 9);
        }

        /**
         * (For IE <=9) Starts tracking propertychange events on the passed-in element
         * and override the value property so that we can distinguish user events from
         * value changes in JS.
         */
        function startWatchingForValueChange(target, targetInst) {
          activeElement = target;
          activeElementInst = targetInst;
          activeElement.attachEvent('onpropertychange', handlePropertyChange);
        }

        /**
         * (For IE <=9) Removes the event listeners from the currently-tracked element,
         * if any exists.
         */
        function stopWatchingForValueChange() {
          if (!activeElement) {
            return;
          }
          activeElement.detachEvent('onpropertychange', handlePropertyChange);
          activeElement = null;
          activeElementInst = null;
        }

        /**
         * (For IE <=9) Handles a propertychange event, sending a `change` event if
         * the value of the active element has changed.
         */
        function handlePropertyChange(nativeEvent) {
          if (nativeEvent.propertyName !== 'value') {
            return;
          }
          if (getInstIfValueChanged(activeElementInst)) {
            manualDispatchChangeEvent(nativeEvent);
          }
        }

        function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
          if (topLevelType === 'topFocus') {
            // In IE9, propertychange fires for most input events but is buggy and
            // doesn't fire when text is deleted, but conveniently, selectionchange
            // appears to fire in all of the remaining cases so we catch those and
            // forward the event if the value has changed
            // In either case, we don't want to call the event handler if the value
            // is changed from JS so we redefine a setter for `.value` that updates
            // our activeElementValue variable, allowing us to ignore those changes
            //
            // stopWatching() should be a noop here but we call it just in case we
            // missed a blur event somehow.
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
          } else if (topLevelType === 'topBlur') {
            stopWatchingForValueChange();
          }
        }

        // For IE8 and IE9.
        function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
          if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
            // On the selectionchange event, the target is just document which isn't
            // helpful for us so just check activeElement instead.
            //
            // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
            // propertychange on the first input event after setting `value` from a
            // script and fires only keydown, keypress, keyup. Catching keyup usually
            // gets it and catching keydown lets us fire an event for the first
            // keystroke if user does a key repeat (it'll be a little delayed: right
            // before the second keystroke). Other input methods (e.g., paste) seem to
            // fire selectionchange normally.
            return getInstIfValueChanged(activeElementInst);
          }
        }

        /**
         * SECTION: handle `click` event
         */
        function shouldUseClickEvent(elem) {
          // Use the `click` event to detect changes to checkbox and radio inputs.
          // This approach works across all browsers, whereas `change` does not fire
          // until `blur` in IE8.
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
        }

        function getTargetInstForClickEvent(topLevelType, targetInst) {
          if (topLevelType === 'topClick') {
            return getInstIfValueChanged(targetInst);
          }
        }

        function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
          if (topLevelType === 'topInput' || topLevelType === 'topChange') {
            return getInstIfValueChanged(targetInst);
          }
        }

        function handleControlledInputBlur(inst, node) {
          // TODO: In IE, inst is occasionally null. Why?
          if (inst == null) {
            return;
          }

          // Fiber and ReactDOM keep wrapper state in separate places
          var state = inst._wrapperState || node._wrapperState;

          if (!state || !state.controlled || node.type !== 'number') {
            return;
          }

          // If controlled, assign the value attribute to the current value on blur
          var value = '' + node.value;
          if (node.getAttribute('value') !== value) {
            node.setAttribute('value', value);
          }
        }

        /**
         * This plugin creates an `onChange` event that normalizes change events
         * across form elements. This event fires at a time when it's possible to
         * change the element's value without seeing a flicker.
         *
         * Supported elements are:
         * - input (see `isTextInputElement`)
         * - textarea
         * - select
         */
        var ChangeEventPlugin = {
          eventTypes: eventTypes$1,

          _isInputEventSupported: isInputEventSupported,

          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var targetNode = targetInst ? ReactDOMComponentTree_1.getNodeFromInstance(targetInst) : window;

            var getTargetInstFunc, handleEventFunc;
            if (shouldUseChangeEvent(targetNode)) {
              getTargetInstFunc = getTargetInstForChangeEvent;
            } else if (isTextInputElement_1(targetNode)) {
              if (isInputEventSupported) {
                getTargetInstFunc = getTargetInstForInputOrChangeEvent;
              } else {
                getTargetInstFunc = getTargetInstForInputEventPolyfill;
                handleEventFunc = handleEventsForInputEventPolyfill;
              }
            } else if (shouldUseClickEvent(targetNode)) {
              getTargetInstFunc = getTargetInstForClickEvent;
            }

            if (getTargetInstFunc) {
              var inst = getTargetInstFunc(topLevelType, targetInst);
              if (inst) {
                var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
                return event;
              }
            }

            if (handleEventFunc) {
              handleEventFunc(topLevelType, targetNode, targetInst);
            }

            // When blurring, set the value attribute for number inputs
            if (topLevelType === 'topBlur') {
              handleControlledInputBlur(targetInst, targetNode);
            }
          }
        };

        var ChangeEventPlugin_1 = ChangeEventPlugin;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule DOMEventPluginOrder
         */

        /**
         * Module that is injectable into `EventPluginHub`, that specifies a
         * deterministic ordering of `EventPlugin`s. A convenient way to reason about
         * plugins, without having to package every one of them. This is better than
         * having plugins be ordered in the same order that they are injected because
         * that ordering would be influenced by the packaging order.
         * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
         * preventing default on events is convenient in `SimpleEventPlugin` handlers.
         */

        var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

        var DOMEventPluginOrder_1 = DOMEventPluginOrder;

        /**
         * @interface UIEvent
         * @see http://www.w3.org/TR/DOM-Level-3-Events/
         */
        var UIEventInterface = {
          view: function view(event) {
            if (event.view) {
              return event.view;
            }

            var target = getEventTarget_1(event);
            if (target.window === target) {
              // target is a window object
              return target;
            }

            var doc = target.ownerDocument;
            // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
            if (doc) {
              return doc.defaultView || doc.parentWindow;
            } else {
              return window;
            }
          },
          detail: function detail(event) {
            return event.detail || 0;
          }
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticEvent}
         */
        function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticEvent_1.augmentClass(SyntheticUIEvent, UIEventInterface);

        var SyntheticUIEvent_1 = SyntheticUIEvent;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule getEventModifierState
         */

        /**
         * Translation from modifier key to the associated property in the event.
         * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
         */

        var modifierKeyToProp = {
          Alt: 'altKey',
          Control: 'ctrlKey',
          Meta: 'metaKey',
          Shift: 'shiftKey'
        };

        // IE8 does not implement getModifierState so we simply map it to the only
        // modifier keys exposed by the event itself, does not support Lock-keys.
        // Currently, all major browsers except Chrome seems to support Lock-keys.
        function modifierStateGetter(keyArg) {
          var syntheticEvent = this;
          var nativeEvent = syntheticEvent.nativeEvent;
          if (nativeEvent.getModifierState) {
            return nativeEvent.getModifierState(keyArg);
          }
          var keyProp = modifierKeyToProp[keyArg];
          return keyProp ? !!nativeEvent[keyProp] : false;
        }

        function getEventModifierState(nativeEvent) {
          return modifierStateGetter;
        }

        var getEventModifierState_1 = getEventModifierState;

        /**
         * @interface MouseEvent
         * @see http://www.w3.org/TR/DOM-Level-3-Events/
         */
        var MouseEventInterface = {
          screenX: null,
          screenY: null,
          clientX: null,
          clientY: null,
          pageX: null,
          pageY: null,
          ctrlKey: null,
          shiftKey: null,
          altKey: null,
          metaKey: null,
          getModifierState: getEventModifierState_1,
          button: null,
          buttons: null,
          relatedTarget: function relatedTarget(event) {
            return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
          }
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticUIEvent}
         */
        function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticUIEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticUIEvent_1.augmentClass(SyntheticMouseEvent, MouseEventInterface);

        var SyntheticMouseEvent_1 = SyntheticMouseEvent;

        var eventTypes$2 = {
          mouseEnter: {
            registrationName: 'onMouseEnter',
            dependencies: ['topMouseOut', 'topMouseOver']
          },
          mouseLeave: {
            registrationName: 'onMouseLeave',
            dependencies: ['topMouseOut', 'topMouseOver']
          }
        };

        var EnterLeaveEventPlugin = {
          eventTypes: eventTypes$2,

          /**
           * For almost every interaction we care about, there will be both a top-level
           * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
           * we do not extract duplicate events. However, moving the mouse into the
           * browser from outside will not fire a `mouseout` event. In this case, we use
           * the `mouseover` top-level event.
           */
          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
              return null;
            }
            if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
              // Must not be a mouse in or mouse out - ignoring.
              return null;
            }

            var win;
            if (nativeEventTarget.window === nativeEventTarget) {
              // `nativeEventTarget` is probably a window object.
              win = nativeEventTarget;
            } else {
              // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
              var doc = nativeEventTarget.ownerDocument;
              if (doc) {
                win = doc.defaultView || doc.parentWindow;
              } else {
                win = window;
              }
            }

            var from;
            var to;
            if (topLevelType === 'topMouseOut') {
              from = targetInst;
              var related = nativeEvent.relatedTarget || nativeEvent.toElement;
              to = related ? ReactDOMComponentTree_1.getClosestInstanceFromNode(related) : null;
            } else {
              // Moving to a node from outside the window.
              from = null;
              to = targetInst;
            }

            if (from === to) {
              // Nothing pertains to our managed components.
              return null;
            }

            var fromNode = from == null ? win : ReactDOMComponentTree_1.getNodeFromInstance(from);
            var toNode = to == null ? win : ReactDOMComponentTree_1.getNodeFromInstance(to);

            var leave = SyntheticMouseEvent_1.getPooled(eventTypes$2.mouseLeave, from, nativeEvent, nativeEventTarget);
            leave.type = 'mouseleave';
            leave.target = fromNode;
            leave.relatedTarget = toNode;

            var enter = SyntheticMouseEvent_1.getPooled(eventTypes$2.mouseEnter, to, nativeEvent, nativeEventTarget);
            enter.type = 'mouseenter';
            enter.target = toNode;
            enter.relatedTarget = fromNode;

            EventPropagators_1.accumulateEnterLeaveDispatches(leave, enter, from, to);

            return [leave, enter];
          }
        };

        var EnterLeaveEventPlugin_1 = EnterLeaveEventPlugin;

        var DOCUMENT_NODE$2 = HTMLNodeType_1.DOCUMENT_NODE;

        var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

        var eventTypes$3 = {
          select: {
            phasedRegistrationNames: {
              bubbled: 'onSelect',
              captured: 'onSelectCapture'
            },
            dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
          }
        };

        var activeElement$1 = null;
        var activeElementInst$1 = null;
        var lastSelection = null;
        var mouseDown = false;

        // Track whether all listeners exists for this plugin. If none exist, we do
        // not extract events. See #3639.
        var isListeningToAllDependencies = ReactBrowserEventEmitter_1.isListeningToAllDependencies;

        /**
         * Get an object which is a unique representation of the current selection.
         *
         * The return value will not be consistent across nodes or browsers, but
         * two identical selections on the same node will return identical objects.
         *
         * @param {DOMElement} node
         * @return {object}
         */
        function getSelection(node) {
          if ('selectionStart' in node && ReactInputSelection_1.hasSelectionCapabilities(node)) {
            return {
              start: node.selectionStart,
              end: node.selectionEnd
            };
          } else if (window.getSelection) {
            var selection = window.getSelection();
            return {
              anchorNode: selection.anchorNode,
              anchorOffset: selection.anchorOffset,
              focusNode: selection.focusNode,
              focusOffset: selection.focusOffset
            };
          }
        }

        /**
         * Poll selection to see whether it's changed.
         *
         * @param {object} nativeEvent
         * @return {?SyntheticEvent}
         */
        function constructSelectEvent(nativeEvent, nativeEventTarget) {
          // Ensure we have the right element, and that the user is not dragging a
          // selection (this matches native `select` event behavior). In HTML5, select
          // fires only on input and textarea thus if there's no focused element we
          // won't dispatch.
          if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement()) {
            return null;
          }

          // Only fire when selection has actually changed.
          var currentSelection = getSelection(activeElement$1);
          if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;

            var syntheticEvent = SyntheticEvent_1.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

            syntheticEvent.type = 'select';
            syntheticEvent.target = activeElement$1;

            EventPropagators_1.accumulateTwoPhaseDispatches(syntheticEvent);

            return syntheticEvent;
          }

          return null;
        }

        /**
         * This plugin creates an `onSelect` event that normalizes select events
         * across form elements.
         *
         * Supported elements are:
         * - input (see `isTextInputElement`)
         * - textarea
         * - contentEditable
         *
         * This differs from native browser implementations in the following ways:
         * - Fires on contentEditable fields as well as inputs.
         * - Fires for collapsed selection.
         * - Fires after user input.
         */
        var SelectEventPlugin = {
          eventTypes: eventTypes$3,

          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var doc = nativeEventTarget.window === nativeEventTarget ? nativeEventTarget.document : nativeEventTarget.nodeType === DOCUMENT_NODE$2 ? nativeEventTarget : nativeEventTarget.ownerDocument;
            if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
              return null;
            }

            var targetNode = targetInst ? ReactDOMComponentTree_1.getNodeFromInstance(targetInst) : window;

            switch (topLevelType) {
              // Track the input node that has focus.
              case 'topFocus':
                if (isTextInputElement_1(targetNode) || targetNode.contentEditable === 'true') {
                  activeElement$1 = targetNode;
                  activeElementInst$1 = targetInst;
                  lastSelection = null;
                }
                break;
              case 'topBlur':
                activeElement$1 = null;
                activeElementInst$1 = null;
                lastSelection = null;
                break;
              // Don't fire the event while the user is dragging. This matches the
              // semantics of the native select event.
              case 'topMouseDown':
                mouseDown = true;
                break;
              case 'topContextMenu':
              case 'topMouseUp':
                mouseDown = false;
                return constructSelectEvent(nativeEvent, nativeEventTarget);
              // Chrome and IE fire non-standard event when selection is changed (and
              // sometimes when it hasn't). IE's event fires out of order with respect
              // to key and input events on deletion, so we discard it.
              //
              // Firefox doesn't support selectionchange, so check selection status
              // after each key entry. The selection changes after keydown and before
              // keyup, but we check on keydown as well in the case of holding down a
              // key, when multiple keydown events are fired but only one keyup is.
              // This is also our approach for IE handling, for the reason above.
              case 'topSelectionChange':
                if (skipSelectionChangeEvent) {
                  break;
                }
              // falls through
              case 'topKeyDown':
              case 'topKeyUp':
                return constructSelectEvent(nativeEvent, nativeEventTarget);
            }

            return null;
          }
        };

        var SelectEventPlugin_1 = SelectEventPlugin;

        /**
         * @interface Event
         * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
         * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
         */
        var AnimationEventInterface = {
          animationName: null,
          elapsedTime: null,
          pseudoElement: null
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticEvent}
         */
        function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticEvent_1.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

        var SyntheticAnimationEvent_1 = SyntheticAnimationEvent;

        /**
         * @interface Event
         * @see http://www.w3.org/TR/clipboard-apis/
         */
        var ClipboardEventInterface = {
          clipboardData: function clipboardData(event) {
            return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
          }
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticUIEvent}
         */
        function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticEvent_1.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

        var SyntheticClipboardEvent_1 = SyntheticClipboardEvent;

        /**
         * @interface FocusEvent
         * @see http://www.w3.org/TR/DOM-Level-3-Events/
         */
        var FocusEventInterface = {
          relatedTarget: null
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticUIEvent}
         */
        function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticUIEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticUIEvent_1.augmentClass(SyntheticFocusEvent, FocusEventInterface);

        var SyntheticFocusEvent_1 = SyntheticFocusEvent;

        /**
         * Copyright (c) 2013-present, Facebook, Inc.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         *
         * @providesModule getEventCharCode
         */

        /**
         * `charCode` represents the actual "character code" and is safe to use with
         * `String.fromCharCode`. As such, only keys that correspond to printable
         * characters produce a valid `charCode`, the only exception to this is Enter.
         * The Tab-key is considered non-printable and does not have a `charCode`,
         * presumably because it does not produce a tab-character in browsers.
         *
         * @param {object} nativeEvent Native browser event.
         * @return {number} Normalized `charCode` property.
         */

        function getEventCharCode(nativeEvent) {
          var charCode;
          var keyCode = nativeEvent.keyCode;

          if ('charCode' in nativeEvent) {
            charCode = nativeEvent.charCode;

            // FF does not set `charCode` for the Enter-key, check against `keyCode`.
            if (charCode === 0 && keyCode === 13) {
              charCode = 13;
            }
          } else {
            // IE8 does not implement `charCode`, but `keyCode` has the correct value.
            charCode = keyCode;
          }

          // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
          // Must not discard the (non-)printable Enter-key.
          if (charCode >= 32 || charCode === 13) {
            return charCode;
          }

          return 0;
        }

        var getEventCharCode_1 = getEventCharCode;

        /**
         * Normalization of deprecated HTML5 `key` values
         * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
         */
        var normalizeKey = {
          Esc: 'Escape',
          Spacebar: ' ',
          Left: 'ArrowLeft',
          Up: 'ArrowUp',
          Right: 'ArrowRight',
          Down: 'ArrowDown',
          Del: 'Delete',
          Win: 'OS',
          Menu: 'ContextMenu',
          Apps: 'ContextMenu',
          Scroll: 'ScrollLock',
          MozPrintableKey: 'Unidentified'
        };

        /**
         * Translation from legacy `keyCode` to HTML5 `key`
         * Only special keys supported, all others depend on keyboard layout or browser
         * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
         */
        var translateToKey = {
          8: 'Backspace',
          9: 'Tab',
          12: 'Clear',
          13: 'Enter',
          16: 'Shift',
          17: 'Control',
          18: 'Alt',
          19: 'Pause',
          20: 'CapsLock',
          27: 'Escape',
          32: ' ',
          33: 'PageUp',
          34: 'PageDown',
          35: 'End',
          36: 'Home',
          37: 'ArrowLeft',
          38: 'ArrowUp',
          39: 'ArrowRight',
          40: 'ArrowDown',
          45: 'Insert',
          46: 'Delete',
          112: 'F1',
          113: 'F2',
          114: 'F3',
          115: 'F4',
          116: 'F5',
          117: 'F6',
          118: 'F7',
          119: 'F8',
          120: 'F9',
          121: 'F10',
          122: 'F11',
          123: 'F12',
          144: 'NumLock',
          145: 'ScrollLock',
          224: 'Meta'
        };

        /**
         * @param {object} nativeEvent Native browser event.
         * @return {string} Normalized `key` property.
         */
        function getEventKey(nativeEvent) {
          if (nativeEvent.key) {
            // Normalize inconsistent values reported by browsers due to
            // implementations of a working draft specification.

            // FireFox implements `key` but returns `MozPrintableKey` for all
            // printable characters (normalized to `Unidentified`), ignore it.
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== 'Unidentified') {
              return key;
            }
          }

          // Browser does not implement `key`, polyfill as much of it as we can.
          if (nativeEvent.type === 'keypress') {
            var charCode = getEventCharCode_1(nativeEvent);

            // The enter-key is technically both printable and non-printable and can
            // thus be captured by `keypress`, no other non-printable key should.
            return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
          }
          if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
            // While user keyboard layout determines the actual meaning of each
            // `keyCode` value, almost all function keys have a universal value.
            return translateToKey[nativeEvent.keyCode] || 'Unidentified';
          }
          return '';
        }

        var getEventKey_1 = getEventKey;

        /**
         * @interface KeyboardEvent
         * @see http://www.w3.org/TR/DOM-Level-3-Events/
         */
        var KeyboardEventInterface = {
          key: getEventKey_1,
          location: null,
          ctrlKey: null,
          shiftKey: null,
          altKey: null,
          metaKey: null,
          repeat: null,
          locale: null,
          getModifierState: getEventModifierState_1,
          // Legacy Interface
          charCode: function charCode(event) {
            // `charCode` is the result of a KeyPress event and represents the value of
            // the actual printable character.

            // KeyPress is deprecated, but its replacement is not yet final and not
            // implemented in any major browser. Only KeyPress has charCode.
            if (event.type === 'keypress') {
              return getEventCharCode_1(event);
            }
            return 0;
          },
          keyCode: function keyCode(event) {
            // `keyCode` is the result of a KeyDown/Up event and represents the value of
            // physical keyboard key.

            // The actual meaning of the value depends on the users' keyboard layout
            // which cannot be detected. Assuming that it is a US keyboard layout
            // provides a surprisingly accurate mapping for US and European users.
            // Due to this, it is left to the user to implement at this time.
            if (event.type === 'keydown' || event.type === 'keyup') {
              return event.keyCode;
            }
            return 0;
          },
          which: function which(event) {
            // `which` is an alias for either `keyCode` or `charCode` depending on the
            // type of the event.
            if (event.type === 'keypress') {
              return getEventCharCode_1(event);
            }
            if (event.type === 'keydown' || event.type === 'keyup') {
              return event.keyCode;
            }
            return 0;
          }
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticUIEvent}
         */
        function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticUIEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticUIEvent_1.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

        var SyntheticKeyboardEvent_1 = SyntheticKeyboardEvent;

        /**
         * @interface DragEvent
         * @see http://www.w3.org/TR/DOM-Level-3-Events/
         */
        var DragEventInterface = {
          dataTransfer: null
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticUIEvent}
         */
        function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticMouseEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticMouseEvent_1.augmentClass(SyntheticDragEvent, DragEventInterface);

        var SyntheticDragEvent_1 = SyntheticDragEvent;

        /**
         * @interface TouchEvent
         * @see http://www.w3.org/TR/touch-events/
         */
        var TouchEventInterface = {
          touches: null,
          targetTouches: null,
          changedTouches: null,
          altKey: null,
          metaKey: null,
          ctrlKey: null,
          shiftKey: null,
          getModifierState: getEventModifierState_1
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticUIEvent}
         */
        function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticUIEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticUIEvent_1.augmentClass(SyntheticTouchEvent, TouchEventInterface);

        var SyntheticTouchEvent_1 = SyntheticTouchEvent;

        /**
         * @interface Event
         * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
         * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
         */
        var TransitionEventInterface = {
          propertyName: null,
          elapsedTime: null,
          pseudoElement: null
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticEvent}
         */
        function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticEvent_1.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

        var SyntheticTransitionEvent_1 = SyntheticTransitionEvent;

        /**
         * @interface WheelEvent
         * @see http://www.w3.org/TR/DOM-Level-3-Events/
         */
        var WheelEventInterface = {
          deltaX: function deltaX(event) {
            return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
            'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
          },
          deltaY: function deltaY(event) {
            return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
            'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
            'wheelDelta' in event ? -event.wheelDelta : 0;
          },
          deltaZ: null,

          // Browsers without "deltaMode" is reporting in raw wheel delta where one
          // notch on the scroll is always +/- 120, roughly equivalent to pixels.
          // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
          // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
          deltaMode: null
        };

        /**
         * @param {object} dispatchConfig Configuration used to dispatch this event.
         * @param {string} dispatchMarker Marker identifying the event target.
         * @param {object} nativeEvent Native browser event.
         * @extends {SyntheticMouseEvent}
         */
        function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
          return SyntheticMouseEvent_1.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
        }

        SyntheticMouseEvent_1.augmentClass(SyntheticWheelEvent, WheelEventInterface);

        var SyntheticWheelEvent_1 = SyntheticWheelEvent;

        /**
         * Turns
         * ['abort', ...]
         * into
         * eventTypes = {
         *   'abort': {
         *     phasedRegistrationNames: {
         *       bubbled: 'onAbort',
         *       captured: 'onAbortCapture',
         *     },
         *     dependencies: ['topAbort'],
         *   },
         *   ...
         * };
         * topLevelEventsToDispatchConfig = {
         *   'topAbort': { sameConfig }
         * };
         */
        var eventTypes$4 = {};
        var topLevelEventsToDispatchConfig = {};
        ['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'cancel', 'canPlay', 'canPlayThrough', 'click', 'close', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'toggle', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
          var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
          var onEvent = 'on' + capitalizedEvent;
          var topEvent = 'top' + capitalizedEvent;

          var type = {
            phasedRegistrationNames: {
              bubbled: onEvent,
              captured: onEvent + 'Capture'
            },
            dependencies: [topEvent]
          };
          eventTypes$4[event] = type;
          topLevelEventsToDispatchConfig[topEvent] = type;
        });

        var SimpleEventPlugin = {
          eventTypes: eventTypes$4,

          extractEvents: function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
            var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
            if (!dispatchConfig) {
              return null;
            }
            var EventConstructor;
            switch (topLevelType) {
              case 'topAbort':
              case 'topCancel':
              case 'topCanPlay':
              case 'topCanPlayThrough':
              case 'topClose':
              case 'topDurationChange':
              case 'topEmptied':
              case 'topEncrypted':
              case 'topEnded':
              case 'topError':
              case 'topInput':
              case 'topInvalid':
              case 'topLoad':
              case 'topLoadedData':
              case 'topLoadedMetadata':
              case 'topLoadStart':
              case 'topPause':
              case 'topPlay':
              case 'topPlaying':
              case 'topProgress':
              case 'topRateChange':
              case 'topReset':
              case 'topSeeked':
              case 'topSeeking':
              case 'topStalled':
              case 'topSubmit':
              case 'topSuspend':
              case 'topTimeUpdate':
              case 'topToggle':
              case 'topVolumeChange':
              case 'topWaiting':
                // HTML Events
                // @see http://www.w3.org/TR/html5/index.html#events-0
                EventConstructor = SyntheticEvent_1;
                break;
              case 'topKeyPress':
                // Firefox creates a keypress event for function keys too. This removes
                // the unwanted keypress events. Enter is however both printable and
                // non-printable. One would expect Tab to be as well (but it isn't).
                if (getEventCharCode_1(nativeEvent) === 0) {
                  return null;
                }
              /* falls through */
              case 'topKeyDown':
              case 'topKeyUp':
                EventConstructor = SyntheticKeyboardEvent_1;
                break;
              case 'topBlur':
              case 'topFocus':
                EventConstructor = SyntheticFocusEvent_1;
                break;
              case 'topClick':
                // Firefox creates a click event on right mouse clicks. This removes the
                // unwanted click events.
                if (nativeEvent.button === 2) {
                  return null;
                }
              /* falls through */
              case 'topDoubleClick':
              case 'topMouseDown':
              case 'topMouseMove':
              case 'topMouseUp':
              // TODO: Disabled elements should not respond to mouse events
              /* falls through */
              case 'topMouseOut':
              case 'topMouseOver':
              case 'topContextMenu':
                EventConstructor = SyntheticMouseEvent_1;
                break;
              case 'topDrag':
              case 'topDragEnd':
              case 'topDragEnter':
              case 'topDragExit':
              case 'topDragLeave':
              case 'topDragOver':
              case 'topDragStart':
              case 'topDrop':
                EventConstructor = SyntheticDragEvent_1;
                break;
              case 'topTouchCancel':
              case 'topTouchEnd':
              case 'topTouchMove':
              case 'topTouchStart':
                EventConstructor = SyntheticTouchEvent_1;
                break;
              case 'topAnimationEnd':
              case 'topAnimationIteration':
              case 'topAnimationStart':
                EventConstructor = SyntheticAnimationEvent_1;
                break;
              case 'topTransitionEnd':
                EventConstructor = SyntheticTransitionEvent_1;
                break;
              case 'topScroll':
                EventConstructor = SyntheticUIEvent_1;
                break;
              case 'topWheel':
                EventConstructor = SyntheticWheelEvent_1;
                break;
              case 'topCopy':
              case 'topCut':
              case 'topPaste':
                EventConstructor = SyntheticClipboardEvent_1;
                break;
            }
            !EventConstructor ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : void 0;
            var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
            EventPropagators_1.accumulateTwoPhaseDispatches(event);
            return event;
          }
        };

        var SimpleEventPlugin_1 = SimpleEventPlugin;

        ReactDOMEventListener_1.setHandleTopLevel(ReactBrowserEventEmitter_1.handleTopLevel);

        /**
         * Inject modules for resolving DOM hierarchy and plugin ordering.
         */
        EventPluginHub_1.injection.injectEventPluginOrder(DOMEventPluginOrder_1);
        EventPluginUtils_1.injection.injectComponentTree(ReactDOMComponentTree_1);

        /**
         * Some important event plugins included by default (without having to require
         * them).
         */
        EventPluginHub_1.injection.injectEventPluginsByName({
          SimpleEventPlugin: SimpleEventPlugin_1,
          EnterLeaveEventPlugin: EnterLeaveEventPlugin_1,
          ChangeEventPlugin: ChangeEventPlugin_1,
          SelectEventPlugin: SelectEventPlugin_1,
          BeforeInputEventPlugin: BeforeInputEventPlugin_1
        });

        var MUST_USE_PROPERTY = DOMProperty_1.injection.MUST_USE_PROPERTY;
        var HAS_BOOLEAN_VALUE = DOMProperty_1.injection.HAS_BOOLEAN_VALUE;
        var HAS_NUMERIC_VALUE = DOMProperty_1.injection.HAS_NUMERIC_VALUE;
        var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty_1.injection.HAS_POSITIVE_NUMERIC_VALUE;
        var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty_1.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
        var HAS_STRING_BOOLEAN_VALUE = DOMProperty_1.injection.HAS_STRING_BOOLEAN_VALUE;

        var HTMLDOMPropertyConfig = {
          // When adding attributes to this list, be sure to also add them to
          // the `possibleStandardNames` module to ensure casing and incorrect
          // name warnings.
          Properties: {
            allowFullScreen: HAS_BOOLEAN_VALUE,
            // IE only true/false iFrame attribute
            // https://msdn.microsoft.com/en-us/library/ms533072(v=vs.85).aspx
            allowTransparency: HAS_STRING_BOOLEAN_VALUE,
            // specifies target context for links with `preload` type
            async: HAS_BOOLEAN_VALUE,
            // autoFocus is polyfilled/normalized by AutoFocusUtils
            // autoFocus: HAS_BOOLEAN_VALUE,
            autoPlay: HAS_BOOLEAN_VALUE,
            capture: HAS_BOOLEAN_VALUE,
            checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
            cols: HAS_POSITIVE_NUMERIC_VALUE,
            contentEditable: HAS_STRING_BOOLEAN_VALUE,
            controls: HAS_BOOLEAN_VALUE,
            'default': HAS_BOOLEAN_VALUE,
            defer: HAS_BOOLEAN_VALUE,
            disabled: HAS_BOOLEAN_VALUE,
            download: HAS_OVERLOADED_BOOLEAN_VALUE,
            draggable: HAS_STRING_BOOLEAN_VALUE,
            formNoValidate: HAS_BOOLEAN_VALUE,
            hidden: HAS_BOOLEAN_VALUE,
            loop: HAS_BOOLEAN_VALUE,
            // Caution; `option.selected` is not updated if `select.multiple` is
            // disabled with `removeAttribute`.
            multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
            muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
            noValidate: HAS_BOOLEAN_VALUE,
            open: HAS_BOOLEAN_VALUE,
            playsInline: HAS_BOOLEAN_VALUE,
            readOnly: HAS_BOOLEAN_VALUE,
            required: HAS_BOOLEAN_VALUE,
            reversed: HAS_BOOLEAN_VALUE,
            rows: HAS_POSITIVE_NUMERIC_VALUE,
            rowSpan: HAS_NUMERIC_VALUE,
            scoped: HAS_BOOLEAN_VALUE,
            seamless: HAS_BOOLEAN_VALUE,
            selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
            size: HAS_POSITIVE_NUMERIC_VALUE,
            start: HAS_NUMERIC_VALUE,
            // support for projecting regular DOM Elements via V1 named slots ( shadow dom )
            span: HAS_POSITIVE_NUMERIC_VALUE,
            spellCheck: HAS_STRING_BOOLEAN_VALUE,
            // Style must be explicitly set in the attribute list. React components
            // expect a style object
            style: 0,
            // itemScope is for for Microdata support.
            // See http://schema.org/docs/gs.html
            itemScope: HAS_BOOLEAN_VALUE,
            // These attributes must stay in the white-list because they have
            // different attribute names (see DOMAttributeNames below)
            acceptCharset: 0,
            className: 0,
            htmlFor: 0,
            httpEquiv: 0,
            // Attributes with mutation methods must be specified in the whitelist
            // Set the string boolean flag to allow the behavior
            value: HAS_STRING_BOOLEAN_VALUE
          },
          DOMAttributeNames: {
            acceptCharset: 'accept-charset',
            className: 'class',
            htmlFor: 'for',
            httpEquiv: 'http-equiv'
          },
          DOMMutationMethods: {
            value: function value(node, _value2) {
              if (_value2 == null) {
                return node.removeAttribute('value');
              }

              // Number inputs get special treatment due to some edge cases in
              // Chrome. Let everything else assign the value attribute as normal.
              // https://github.com/facebook/react/issues/7253#issuecomment-236074326
              if (node.type !== 'number' || node.hasAttribute('value') === false) {
                node.setAttribute('value', '' + _value2);
              } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
                // Don't assign an attribute if validation reports bad
                // input. Chrome will clear the value. Additionally, don't
                // operate on inputs that have focus, otherwise Chrome might
                // strip off trailing decimal places and cause the user's
                // cursor position to jump to the beginning of the input.
                //
                // In ReactDOMInput, we have an onBlur event that will trigger
                // this function again when focus is lost.
                node.setAttribute('value', '' + _value2);
              }
            }
          }
        };

        var HTMLDOMPropertyConfig_1 = HTMLDOMPropertyConfig;

        var HAS_STRING_BOOLEAN_VALUE$1 = DOMProperty_1.injection.HAS_STRING_BOOLEAN_VALUE;

        var NS = {
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace'
        };

        /**
         * This is a list of all SVG attributes that need special casing,
         * namespacing, or boolean value assignment.
         *
         * When adding attributes to this list, be sure to also add them to
         * the `possibleStandardNames` module to ensure casing and incorrect
         * name warnings.
         *
         * SVG Attributes List:
         * https://www.w3.org/TR/SVG/attindex.html
         * SMIL Spec:
         * https://www.w3.org/TR/smil
         */
        var ATTRS = ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'x-height', 'xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type', 'xml:base', 'xmlns:xlink', 'xml:lang', 'xml:space'];

        var SVGDOMPropertyConfig = {
          Properties: {
            autoReverse: HAS_STRING_BOOLEAN_VALUE$1,
            externalResourcesRequired: HAS_STRING_BOOLEAN_VALUE$1,
            preserveAlpha: HAS_STRING_BOOLEAN_VALUE$1
          },
          DOMAttributeNames: {
            autoReverse: 'autoReverse',
            externalResourcesRequired: 'externalResourcesRequired',
            preserveAlpha: 'preserveAlpha'
          },
          DOMAttributeNamespaces: {
            xlinkActuate: NS.xlink,
            xlinkArcrole: NS.xlink,
            xlinkHref: NS.xlink,
            xlinkRole: NS.xlink,
            xlinkShow: NS.xlink,
            xlinkTitle: NS.xlink,
            xlinkType: NS.xlink,
            xmlBase: NS.xml,
            xmlLang: NS.xml,
            xmlSpace: NS.xml
          }
        };

        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize = function capitalize(token) {
          return token[1].toUpperCase();
        };

        ATTRS.forEach(function (original) {
          var reactName = original.replace(CAMELIZE, capitalize);

          SVGDOMPropertyConfig.Properties[reactName] = 0;
          SVGDOMPropertyConfig.DOMAttributeNames[reactName] = original;
        });

        var SVGDOMPropertyConfig_1 = SVGDOMPropertyConfig;

        DOMProperty_1.injection.injectDOMPropertyConfig(HTMLDOMPropertyConfig_1);
        DOMProperty_1.injection.injectDOMPropertyConfig(SVGDOMPropertyConfig_1);

        var injectInternals = ReactFiberDevToolsHook.injectInternals;

        var ELEMENT_NODE = HTMLNodeType_1.ELEMENT_NODE;
        var TEXT_NODE = HTMLNodeType_1.TEXT_NODE;
        var COMMENT_NODE = HTMLNodeType_1.COMMENT_NODE;
        var DOCUMENT_NODE = HTMLNodeType_1.DOCUMENT_NODE;
        var DOCUMENT_FRAGMENT_NODE = HTMLNodeType_1.DOCUMENT_FRAGMENT_NODE;

        var ROOT_ATTRIBUTE_NAME = DOMProperty_1.ROOT_ATTRIBUTE_NAME;

        var getChildNamespace = DOMNamespaces.getChildNamespace;
        var createElement = ReactDOMFiberComponent_1.createElement;
        var createTextNode = ReactDOMFiberComponent_1.createTextNode;
        var setInitialProperties = ReactDOMFiberComponent_1.setInitialProperties;
        var diffProperties = ReactDOMFiberComponent_1.diffProperties;
        var updateProperties = ReactDOMFiberComponent_1.updateProperties;
        var diffHydratedProperties = ReactDOMFiberComponent_1.diffHydratedProperties;
        var diffHydratedText = ReactDOMFiberComponent_1.diffHydratedText;
        var warnForDeletedHydratableElement = ReactDOMFiberComponent_1.warnForDeletedHydratableElement;
        var warnForDeletedHydratableText = ReactDOMFiberComponent_1.warnForDeletedHydratableText;
        var warnForInsertedHydratedElement = ReactDOMFiberComponent_1.warnForInsertedHydratedElement;
        var warnForInsertedHydratedText = ReactDOMFiberComponent_1.warnForInsertedHydratedText;
        var precacheFiberNode = ReactDOMComponentTree_1.precacheFiberNode;
        var updateFiberProps = ReactDOMComponentTree_1.updateFiberProps;

        {
          var lowPriorityWarning = lowPriorityWarning_1;
          var warning = require$$0;
          var validateDOMNesting = validateDOMNesting_1;
          var updatedAncestorInfo = validateDOMNesting.updatedAncestorInfo;

          if (typeof Map !== 'function' || Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
            warning(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. http://fb.me/react-polyfills');
          }
        }

        ReactControlledComponent_1.injection.injectFiberControlledHostComponent(ReactDOMFiberComponent_1);
        findDOMNode_1._injectFiber(function (fiber) {
          return DOMRenderer.findHostInstance(fiber);
        });

        var eventsEnabled = null;
        var selectionInformation = null;

        /**
         * True if the supplied DOM node is a valid node element.
         *
         * @param {?DOMElement} node The candidate DOM node.
         * @return {boolean} True if the DOM is a valid DOM node.
         * @internal
         */
        function isValidContainer(node) {
          return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
        }

        function getReactRootElementInContainer(container) {
          if (!container) {
            return null;
          }

          if (container.nodeType === DOCUMENT_NODE) {
            return container.documentElement;
          } else {
            return container.firstChild;
          }
        }

        function shouldHydrateDueToLegacyHeuristic(container) {
          var rootElement = getReactRootElementInContainer(container);
          return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
        }

        function shouldAutoFocusHostComponent(type, props) {
          switch (type) {
            case 'button':
            case 'input':
            case 'select':
            case 'textarea':
              return !!props.autoFocus;
          }
          return false;
        }

        var DOMRenderer = ReactFiberReconciler({
          getRootHostContext: function getRootHostContext(rootContainerInstance) {
            var type = void 0;
            var namespace = void 0;
            if (rootContainerInstance.nodeType === DOCUMENT_NODE) {
              type = '#document';
              var root = rootContainerInstance.documentElement;
              namespace = root ? root.namespaceURI : getChildNamespace(null, '');
            } else {
              var container = rootContainerInstance.nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
              var ownNamespace = container.namespaceURI || null;
              type = container.tagName;
              namespace = getChildNamespace(ownNamespace, type);
            }
            {
              var validatedTag = type.toLowerCase();
              var _ancestorInfo = updatedAncestorInfo(null, validatedTag, null);
              return { namespace: namespace, ancestorInfo: _ancestorInfo };
            }
            return namespace;
          },
          getChildHostContext: function getChildHostContext(parentHostContext, type) {
            {
              var parentHostContextDev = parentHostContext;
              var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
              var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type, null);
              return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
            }
            var parentNamespace = parentHostContext;
            return getChildNamespace(parentNamespace, type);
          },
          getPublicInstance: function getPublicInstance(instance) {
            return instance;
          },
          prepareForCommit: function prepareForCommit() {
            eventsEnabled = ReactBrowserEventEmitter_1.isEnabled();
            selectionInformation = ReactInputSelection_1.getSelectionInformation();
            ReactBrowserEventEmitter_1.setEnabled(false);
          },
          resetAfterCommit: function resetAfterCommit() {
            ReactInputSelection_1.restoreSelection(selectionInformation);
            selectionInformation = null;
            ReactBrowserEventEmitter_1.setEnabled(eventsEnabled);
            eventsEnabled = null;
          },
          createInstance: function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
            var parentNamespace = void 0;
            {
              // TODO: take namespace into account when validating.
              var hostContextDev = hostContext;
              validateDOMNesting(type, null, null, hostContextDev.ancestorInfo);
              if (typeof props.children === 'string' || typeof props.children === 'number') {
                var string = '' + props.children;
                var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
                validateDOMNesting(null, string, null, ownAncestorInfo);
              }
              parentNamespace = hostContextDev.namespace;
            }
            var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
            precacheFiberNode(internalInstanceHandle, domElement);
            updateFiberProps(domElement, props);
            return domElement;
          },
          appendInitialChild: function appendInitialChild(parentInstance, child) {
            parentInstance.appendChild(child);
          },
          finalizeInitialChildren: function finalizeInitialChildren(domElement, type, props, rootContainerInstance) {
            setInitialProperties(domElement, type, props, rootContainerInstance);
            return shouldAutoFocusHostComponent(type, props);
          },
          prepareUpdate: function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
            {
              var hostContextDev = hostContext;
              if (_typeof4(newProps.children) !== _typeof4(oldProps.children) && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
                var string = '' + newProps.children;
                var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type, null);
                validateDOMNesting(null, string, null, ownAncestorInfo);
              }
            }
            return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
          },
          commitMount: function commitMount(domElement, type, newProps, internalInstanceHandle) {
            domElement.focus();
          },
          commitUpdate: function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
            // Update the props handle so that we know which props are the ones with
            // with current event handlers.
            updateFiberProps(domElement, newProps);
            // Apply the diff to the DOM node.
            updateProperties(domElement, updatePayload, type, oldProps, newProps);
          },
          shouldSetTextContent: function shouldSetTextContent(type, props) {
            return type === 'textarea' || typeof props.children === 'string' || typeof props.children === 'number' || _typeof4(props.dangerouslySetInnerHTML) === 'object' && props.dangerouslySetInnerHTML !== null && typeof props.dangerouslySetInnerHTML.__html === 'string';
          },
          resetTextContent: function resetTextContent(domElement) {
            domElement.textContent = '';
          },
          shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(type, props) {
            return !!props.hidden;
          },
          createTextInstance: function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
            {
              var hostContextDev = hostContext;
              validateDOMNesting(null, text, null, hostContextDev.ancestorInfo);
            }
            var textNode = createTextNode(text, rootContainerInstance);
            precacheFiberNode(internalInstanceHandle, textNode);
            return textNode;
          },
          commitTextUpdate: function commitTextUpdate(textInstance, oldText, newText) {
            textInstance.nodeValue = newText;
          },
          appendChild: function appendChild(parentInstance, child) {
            parentInstance.appendChild(child);
          },
          appendChildToContainer: function appendChildToContainer(container, child) {
            if (container.nodeType === COMMENT_NODE) {
              container.parentNode.insertBefore(child, container);
            } else {
              container.appendChild(child);
            }
          },
          insertBefore: function insertBefore(parentInstance, child, beforeChild) {
            parentInstance.insertBefore(child, beforeChild);
          },
          insertInContainerBefore: function insertInContainerBefore(container, child, beforeChild) {
            if (container.nodeType === COMMENT_NODE) {
              container.parentNode.insertBefore(child, beforeChild);
            } else {
              container.insertBefore(child, beforeChild);
            }
          },
          removeChild: function removeChild(parentInstance, child) {
            parentInstance.removeChild(child);
          },
          removeChildFromContainer: function removeChildFromContainer(container, child) {
            if (container.nodeType === COMMENT_NODE) {
              container.parentNode.removeChild(child);
            } else {
              container.removeChild(child);
            }
          },
          canHydrateInstance: function canHydrateInstance(instance, type, props) {
            return instance.nodeType === ELEMENT_NODE && type === instance.nodeName.toLowerCase();
          },
          canHydrateTextInstance: function canHydrateTextInstance(instance, text) {
            if (text === '') {
              // Empty strings are not parsed by HTML so there won't be a correct match here.
              return false;
            }
            return instance.nodeType === TEXT_NODE;
          },
          getNextHydratableSibling: function getNextHydratableSibling(instance) {
            var node = instance.nextSibling;
            // Skip non-hydratable nodes.
            while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE) {
              node = node.nextSibling;
            }
            return node;
          },
          getFirstHydratableChild: function getFirstHydratableChild(parentInstance) {
            var next = parentInstance.firstChild;
            // Skip non-hydratable nodes.
            while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE) {
              next = next.nextSibling;
            }
            return next;
          },
          hydrateInstance: function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
            precacheFiberNode(internalInstanceHandle, instance);
            // TODO: Possibly defer this until the commit phase where all the events
            // get attached.
            updateFiberProps(instance, props);
            var parentNamespace = void 0;
            {
              var hostContextDev = hostContext;
              parentNamespace = hostContextDev.namespace;
            }
            return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
          },
          hydrateTextInstance: function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
            precacheFiberNode(internalInstanceHandle, textInstance);
            return diffHydratedText(textInstance, text);
          },
          didNotHydrateInstance: function didNotHydrateInstance(parentInstance, instance) {
            if (instance.nodeType === 1) {
              warnForDeletedHydratableElement(parentInstance, instance);
            } else {
              warnForDeletedHydratableText(parentInstance, instance);
            }
          },
          didNotFindHydratableInstance: function didNotFindHydratableInstance(parentInstance, type, props) {
            warnForInsertedHydratedElement(parentInstance, type, props);
          },
          didNotFindHydratableTextInstance: function didNotFindHydratableTextInstance(parentInstance, text) {
            warnForInsertedHydratedText(parentInstance, text);
          },

          scheduleDeferredCallback: ReactDOMFrameScheduling.rIC,

          useSyncScheduling: !ReactDOMFeatureFlags_1.fiberAsyncScheduling
        });

        ReactGenericBatching_1.injection.injectFiberBatchedUpdates(DOMRenderer.batchedUpdates);

        var warnedAboutHydrateAPI = false;

        function renderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
          !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;

          {
            if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
              var hostInstance = DOMRenderer.findHostInstanceWithNoPortals(container._reactRootContainer.current);
              if (hostInstance) {
                warning(hostInstance.parentNode === container, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.');
              }
            }

            var isRootRenderedBySomeReact = !!container._reactRootContainer;
            var rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(rootEl && ReactDOMComponentTree_1.getInstanceFromNode(rootEl));

            warning(!hasNonRootReactChild || isRootRenderedBySomeReact, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.');

            warning(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.');
          }

          var root = container._reactRootContainer;
          if (!root) {
            var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
            // First clear any existing content.
            if (!shouldHydrate) {
              var warned = false;
              var rootSibling = void 0;
              while (rootSibling = container.lastChild) {
                {
                  if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
                    warned = true;
                    warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
                  }
                }
                container.removeChild(rootSibling);
              }
            }
            {
              if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
                warnedAboutHydrateAPI = true;
                lowPriorityWarning(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
              }
            }
            var newRoot = DOMRenderer.createContainer(container);
            root = container._reactRootContainer = newRoot;
            // Initial mount should not be batched.
            DOMRenderer.unbatchedUpdates(function () {
              DOMRenderer.updateContainer(children, newRoot, parentComponent, callback);
            });
          } else {
            DOMRenderer.updateContainer(children, root, parentComponent, callback);
          }
          return DOMRenderer.getPublicRootInstance(root);
        }

        function createPortal(children, container) {
          var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

          !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
          // TODO: pass ReactDOM portal implementation as third argument
          return ReactPortal.createPortal(children, container, null, key);
        }

        var ReactDOMFiber = {
          createPortal: createPortal,

          hydrate: function hydrate(element, container, callback) {
            // TODO: throw or warn if we couldn't hydrate?
            return renderSubtreeIntoContainer(null, element, container, true, callback);
          },
          render: function render(element, container, callback) {
            return renderSubtreeIntoContainer(null, element, container, false, callback);
          },
          unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
            !(parentComponent != null && ReactInstanceMap_1.has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
            return renderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
          },
          unmountComponentAtNode: function unmountComponentAtNode(container) {
            !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

            if (container._reactRootContainer) {
              {
                var rootEl = getReactRootElementInContainer(container);
                var renderedByDifferentReact = rootEl && !ReactDOMComponentTree_1.getInstanceFromNode(rootEl);
                warning(!renderedByDifferentReact, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.');
              }

              // Unmount should not be batched.
              DOMRenderer.unbatchedUpdates(function () {
                renderSubtreeIntoContainer(null, null, container, false, function () {
                  container._reactRootContainer = null;
                });
              });
              // If you call unmountComponentAtNode twice in quick succession, you'll
              // get `true` twice. That's probably fine?
              return true;
            } else {
              {
                var _rootEl = getReactRootElementInContainer(container);
                var hasNonRootReactChild = !!(_rootEl && ReactDOMComponentTree_1.getInstanceFromNode(_rootEl));

                // Check if the container itself is a React root node.
                var isContainerReactRoot = container.nodeType === 1 && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

                warning(!hasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.');
              }

              return false;
            }
          },

          findDOMNode: findDOMNode_1,

          // Temporary alias since we already shipped React 16 RC with it.
          // TODO: remove in React 17.
          unstable_createPortal: createPortal,

          unstable_batchedUpdates: ReactGenericBatching_1.batchedUpdates,

          unstable_deferredUpdates: DOMRenderer.deferredUpdates,

          flushSync: DOMRenderer.flushSync,

          __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
            // For TapEventPlugin which is popular in open source
            EventPluginHub: EventPluginHub_1,
            // Used by test-utils
            EventPluginRegistry: EventPluginRegistry_1,
            EventPropagators: EventPropagators_1,
            ReactControlledComponent: ReactControlledComponent_1,
            ReactDOMComponentTree: ReactDOMComponentTree_1,
            ReactDOMEventListener: ReactDOMEventListener_1
          }
        };

        var foundDevTools = injectInternals({
          findFiberByHostInstance: ReactDOMComponentTree_1.getClosestInstanceFromNode,
          findHostInstanceByFiber: DOMRenderer.findHostInstance,
          // This is an enum because we may add more (e.g. profiler build)
          bundleType: 1,
          version: ReactVersion,
          rendererPackageName: 'react-dom'
        });

        {
          if (!foundDevTools && ExecutionEnvironment.canUseDOM && window.top === window.self) {
            // If we're in Chrome or Firefox, provide a download link if not installed.
            if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
              var protocol = window.location.protocol;
              // Don't warn in exotic cases like chrome-extension://.
              if (/^(https?|file):$/.test(protocol)) {
                console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
              }
            }
          }
        }

        var ReactDOMFiberEntry = ReactDOMFiber;

        module.exports = ReactDOMFiberEntry;
      })();
    }

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 232 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var hyphenate = __webpack_require__(233);

  var msPattern = /^ms-/;

  /**
   * Hyphenates a camelcased CSS property name, for example:
   *
   *   > hyphenateStyleName('backgroundColor')
   *   < "background-color"
   *   > hyphenateStyleName('MozTransition')
   *   < "-moz-transition"
   *   > hyphenateStyleName('msTransition')
   *   < "-ms-transition"
   *
   * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
   * is converted to `-ms-`.
   *
   * @param {string} string
   * @return {string}
   */
  function hyphenateStyleName(string) {
    return hyphenate(string).replace(msPattern, '-ms-');
  }

  module.exports = hyphenateStyleName;

  /***/
},
/* 233 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var _uppercasePattern = /([A-Z])/g;

  /**
   * Hyphenates a camelcased string, for example:
   *
   *   > hyphenate('backgroundColor')
   *   < "background-color"
   *
   * For CSS style names, use `hyphenateStyleName` instead which works properly
   * with all vendor prefixes, including `ms`.
   *
   * @param {string} string
   * @return {string}
   */
  function hyphenate(string) {
    return string.replace(_uppercasePattern, '-$1').toLowerCase();
  }

  module.exports = hyphenate;

  /***/
},
/* 234 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var camelize = __webpack_require__(235);

  var msPattern = /^-ms-/;

  /**
   * Camelcases a hyphenated CSS property name, for example:
   *
   *   > camelizeStyleName('background-color')
   *   < "backgroundColor"
   *   > camelizeStyleName('-moz-transition')
   *   < "MozTransition"
   *   > camelizeStyleName('-ms-transition')
   *   < "msTransition"
   *
   * As Andi Smith suggests
   * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
   * is converted to lowercase `ms`.
   *
   * @param {string} string
   * @return {string}
   */
  function camelizeStyleName(string) {
    return camelize(string.replace(msPattern, 'ms-'));
  }

  module.exports = camelizeStyleName;

  /***/
},
/* 235 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var _hyphenPattern = /-(.)/g;

  /**
   * Camelcases a hyphenated string, for example:
   *
   *   > camelize('background-color')
   *   < "backgroundColor"
   *
   * @param {string} string
   * @return {string}
   */
  function camelize(string) {
    return string.replace(_hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  }

  module.exports = camelize;

  /***/
},
/* 236 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var performance = __webpack_require__(237);

  var performanceNow;

  /**
   * Detect if we can use `window.performance.now()` and gracefully fallback to
   * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
   * because of Facebook's testing infrastructure.
   */
  if (performance.now) {
    performanceNow = function performanceNow() {
      return performance.now();
    };
  } else {
    performanceNow = function performanceNow() {
      return Date.now();
    };
  }

  module.exports = performanceNow;

  /***/
},
/* 237 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   * @typechecks
   */

  var ExecutionEnvironment = __webpack_require__(67);

  var performance;

  if (ExecutionEnvironment.canUseDOM) {
    performance = window.performance || window.msPerformance || window.webkitPerformance;
  }

  module.exports = performance || {};

  /***/
},
/* 238 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /**
    * Copyright (c) 2013-present, Facebook, Inc.
    *
    * This source code is licensed under the MIT license found in the
    * LICENSE file in the root directory of this source tree.
    */

    var emptyFunction = __webpack_require__(12);
    var invariant = __webpack_require__(15);
    var warning = __webpack_require__(44);
    var assign = __webpack_require__(34);

    var ReactPropTypesSecret = __webpack_require__(66);
    var checkPropTypes = __webpack_require__(65);

    module.exports = function (isValidElement, throwOnDirectAccess) {
      /* global Symbol */
      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

      /**
       * Returns the iterator method function contained on the iterable object.
       *
       * Be sure to invoke the function with the iterable as context:
       *
       *     var iteratorFn = getIteratorFn(myIterable);
       *     if (iteratorFn) {
       *       var iterator = iteratorFn.call(myIterable);
       *       ...
       *     }
       *
       * @param {?object} maybeIterable
       * @return {?function}
       */
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') {
          return iteratorFn;
        }
      }

      /**
       * Collection of methods that allow declaration and validation of props that are
       * supplied to React components. Example usage:
       *
       *   var Props = require('ReactPropTypes');
       *   var MyArticle = React.createClass({
       *     propTypes: {
       *       // An optional string prop named "description".
       *       description: Props.string,
       *
       *       // A required enum prop named "category".
       *       category: Props.oneOf(['News','Photos']).isRequired,
       *
       *       // A prop named "dialog" that requires an instance of Dialog.
       *       dialog: Props.instanceOf(Dialog).isRequired
       *     },
       *     render: function() { ... }
       *   });
       *
       * A more formal specification of how these methods are used:
       *
       *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
       *   decl := ReactPropTypes.{type}(.isRequired)?
       *
       * Each and every declaration produces a function with the same signature. This
       * allows the creation of custom validation functions. For example:
       *
       *  var MyLink = React.createClass({
       *    propTypes: {
       *      // An optional string or URI prop named "href".
       *      href: function(props, propName, componentName) {
       *        var propValue = props[propName];
       *        if (propValue != null && typeof propValue !== 'string' &&
       *            !(propValue instanceof URI)) {
       *          return new Error(
       *            'Expected a string or an URI for ' + propName + ' in ' +
       *            componentName
       *          );
       *        }
       *      }
       *    },
       *    render: function() {...}
       *  });
       *
       * @internal
       */

      var ANONYMOUS = '<<anonymous>>';

      // Important!
      // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),

        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };

      /**
       * inlined Object.is polyfill to avoid requiring consumers ship their own
       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
       */
      /*eslint-disable no-self-compare*/
      function is(x, y) {
        // SameValue algorithm
        if (x === y) {
          // Steps 1-5, 7-10
          // Steps 6.b-6.e: +0 != -0
          return x !== 0 || 1 / x === 1 / y;
        } else {
          // Step 6.a: NaN == NaN
          return x !== x && y !== y;
        }
      }
      /*eslint-enable no-self-compare*/

      /**
       * We use an Error-like object for backward compatibility as people may call
       * PropTypes directly and inspect their output. However, we don't use real
       * Errors anymore. We don't inspect their stack anyway, and creating them
       * is prohibitively expensive if they are created too often, such as what
       * happens in oneOfType() for any type before the one that matched.
       */
      function PropTypeError(message) {
        this.message = message;
        this.stack = '';
      }
      // Make `instanceof Error` still work for returned errors.
      PropTypeError.prototype = Error.prototype;

      function createChainableTypeChecker(validate) {
        if (undefined !== 'production') {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;

          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              // New behavior only for users of `prop-types` package
              invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
            } else if (undefined !== 'production' && typeof console !== 'undefined') {
              // Old behavior for people using React.PropTypes
              var cacheKey = componentName + ':' + propName;
              if (!manualPropTypeCallCache[cacheKey] &&
              // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
              }
              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }

        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);

        return chainedCheckType;
      }

      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            // `propValue` being instance of, say, date/regexp, pass the 'object'
            // check, but we can offer a more precise error message here rather than
            // 'of type `object`'.
            var preciseType = getPreciseType(propValue);

            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunction.thatReturnsNull);
      }

      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          undefined !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
          return emptyFunction.thatReturnsNull;
        }

        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }

          var valuesString = JSON.stringify(expectedValues);
          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
      }

      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== 'function') {
            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
          }
          for (var key in propValue) {
            if (propValue.hasOwnProperty(key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          undefined !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
          return emptyFunction.thatReturnsNull;
        }

        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== 'function') {
            warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);
            return emptyFunction.thatReturnsNull;
          }
        }

        function validate(props, propName, componentName, location, propFullName) {
          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
            var checker = arrayOfTypeCheckers[i];
            if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
              return null;
            }
          }

          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
        }
        return createChainableTypeChecker(validate);
      }

      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (!checker) {
              continue;
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }

      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== 'object') {
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
          }
          // We need to check all keys in case some are required but missing from
          // props.
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (!checker) {
              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
            }
            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }

        return createChainableTypeChecker(validate);
      }

      function isNode(propValue) {
        switch (typeof propValue === "undefined" ? "undefined" : _typeof4(propValue)) {
          case 'number':
          case 'string':
          case 'undefined':
            return true;
          case 'boolean':
            return !propValue;
          case 'object':
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }

            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                // Iterator will provide entry [k,v] tuples rather than values.
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }

            return true;
          default:
            return false;
        }
      }

      function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') {
          return true;
        }

        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') {
          return true;
        }

        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) {
          return true;
        }

        return false;
      }

      // Equivalent of `typeof` but with special handling for array and regexp.
      function getPropType(propValue) {
        var propType = typeof propValue === "undefined" ? "undefined" : _typeof4(propValue);
        if (Array.isArray(propValue)) {
          return 'array';
        }
        if (propValue instanceof RegExp) {
          // Old webkits (at least until Android 4.0) return 'function' rather than
          // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
          // passes PropTypes.object.
          return 'object';
        }
        if (isSymbol(propType, propValue)) {
          return 'symbol';
        }
        return propType;
      }

      // This handles more types than `getPropType`. Only used for error messages.
      // See `createPrimitiveTypeChecker`.
      function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) {
          return '' + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === 'object') {
          if (propValue instanceof Date) {
            return 'date';
          } else if (propValue instanceof RegExp) {
            return 'regexp';
          }
        }
        return propType;
      }

      // Returns a string that is postfixed to a warning about an invalid type.
      // For example, "undefined" or "of type array"
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case 'array':
          case 'object':
            return 'an ' + type;
          case 'boolean':
          case 'date':
          case 'regexp':
            return 'a ' + type;
          default:
            return type;
        }
      }

      // Returns class name of the object, if any.
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }

      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.PropTypes = ReactPropTypes;

      return ReactPropTypes;
    };

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(3));

  /***/
},
/* 239 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /**
   * Copyright (c) 2013-present, Facebook, Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  var emptyFunction = __webpack_require__(12);
  var invariant = __webpack_require__(15);
  var ReactPropTypesSecret = __webpack_require__(66);

  module.exports = function () {
    function shim(props, propName, componentName, location, propFullName, secret) {
      if (secret === ReactPropTypesSecret) {
        // It is still safe when called from React.
        return;
      }
      invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
    };
    shim.isRequired = shim;
    function getShim() {
      return shim;
    };
    // Important!
    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
    var ReactPropTypes = {
      array: shim,
      bool: shim,
      func: shim,
      number: shim,
      object: shim,
      string: shim,
      symbol: shim,

      any: shim,
      arrayOf: getShim,
      element: shim,
      instanceOf: getShim,
      node: shim,
      objectOf: getShim,
      oneOf: getShim,
      oneOfType: getShim,
      shape: getShim,
      exact: getShim
    };

    ReactPropTypes.checkPropTypes = emptyFunction;
    ReactPropTypes.PropTypes = ReactPropTypes;

    return ReactPropTypes;
  };

  /***/
},
/* 240 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /* harmony export (immutable) */__webpack_exports__["a"] = createProvider;
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__ = __webpack_require__(128);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__utils_warning__ = __webpack_require__(68);
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    function _possibleConstructorReturn(self, call) {
      if (!self) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
    }

    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
      }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }

    var didWarnAboutReceivingStore = false;
    function warnAboutReceivingStore() {
      if (didWarnAboutReceivingStore) {
        return;
      }
      didWarnAboutReceivingStore = true;

      Object(__WEBPACK_IMPORTED_MODULE_3__utils_warning__["a" /* default */])('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
    }

    function createProvider() {
      var _Provider$childContex;

      var storeKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'store';
      var subKey = arguments[1];

      var subscriptionKey = subKey || storeKey + 'Subscription';

      var Provider = function (_Component) {
        _inherits(Provider, _Component);

        Provider.prototype.getChildContext = function getChildContext() {
          var _ref;

          return _ref = {}, _ref[storeKey] = this[storeKey], _ref[subscriptionKey] = null, _ref;
        };

        function Provider(props, context) {
          _classCallCheck(this, Provider);

          var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

          _this[storeKey] = props.store;
          return _this;
        }

        Provider.prototype.render = function render() {
          return __WEBPACK_IMPORTED_MODULE_0_react__["Children"].only(this.props.children);
        };

        return Provider;
      }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

      if (undefined !== 'production') {
        Provider.prototype.componentWillReceiveProps = function (nextProps) {
          if (this[storeKey] !== nextProps.store) {
            warnAboutReceivingStore();
          }
        };
      }

      Provider.propTypes = {
        store: __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__["a" /* storeShape */].isRequired,
        children: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.element.isRequired
      };
      Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[storeKey] = __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__["a" /* storeShape */].isRequired, _Provider$childContex[subscriptionKey] = __WEBPACK_IMPORTED_MODULE_2__utils_PropTypes__["b" /* subscriptionShape */], _Provider$childContex);

      return Provider;
    }

    /* harmony default export */__webpack_exports__["b"] = createProvider();
    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(3));

  /***/
},
/* 241 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (binding) */
  __webpack_require__.d(__webpack_exports__, "a", function () {
    return Subscription;
  });
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  // encapsulates the subscription logic for connecting a component to the redux store, as
  // well as nesting subscriptions of descendant components, so that we can ensure the
  // ancestor components re-render before descendants

  var CLEARED = null;
  var nullListeners = {
    notify: function notify() {}
  };

  function createListenerCollection() {
    // the current/next pattern is copied from redux's createStore code.
    // TODO: refactor+expose that code to be reusable here?
    var current = [];
    var next = [];

    return {
      clear: function clear() {
        next = CLEARED;
        current = CLEARED;
      },
      notify: function notify() {
        var listeners = current = next;
        for (var i = 0; i < listeners.length; i++) {
          listeners[i]();
        }
      },
      get: function get() {
        return next;
      },
      subscribe: function subscribe(listener) {
        var isSubscribed = true;
        if (next === current) next = current.slice();
        next.push(listener);

        return function unsubscribe() {
          if (!isSubscribed || current === CLEARED) return;
          isSubscribed = false;

          if (next === current) next = current.slice();
          next.splice(next.indexOf(listener), 1);
        };
      }
    };
  }

  var Subscription = function () {
    function Subscription(store, parentSub, onStateChange) {
      _classCallCheck(this, Subscription);

      this.store = store;
      this.parentSub = parentSub;
      this.onStateChange = onStateChange;
      this.unsubscribe = null;
      this.listeners = nullListeners;
    }

    Subscription.prototype.addNestedSub = function addNestedSub(listener) {
      this.trySubscribe();
      return this.listeners.subscribe(listener);
    };

    Subscription.prototype.notifyNestedSubs = function notifyNestedSubs() {
      this.listeners.notify();
    };

    Subscription.prototype.isSubscribed = function isSubscribed() {
      return Boolean(this.unsubscribe);
    };

    Subscription.prototype.trySubscribe = function trySubscribe() {
      if (!this.unsubscribe) {
        this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange);

        this.listeners = createListenerCollection();
      }
    };

    Subscription.prototype.tryUnsubscribe = function tryUnsubscribe() {
      if (this.unsubscribe) {
        this.unsubscribe();
        this.unsubscribe = null;
        this.listeners.clear();
        this.listeners = nullListeners;
      }
    };

    return Subscription;
  }();

  /***/
},
/* 242 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* unused harmony export createConnect */
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__ = __webpack_require__(129);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__ = __webpack_require__(243);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__ = __webpack_require__(244);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__ = __webpack_require__(252);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__mergeProps__ = __webpack_require__(253);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__selectorFactory__ = __webpack_require__(254);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  /*
    connect is a facade over connectAdvanced. It turns its args into a compatible
    selectorFactory, which has the signature:
  
      (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps
    
    connect passes its args to connectAdvanced as options, which will in turn pass them to
    selectorFactory each time a Connect component instance is instantiated or hot reloaded.
  
    selectorFactory returns a final props selector from its mapStateToProps,
    mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,
    mergePropsFactories, and pure args.
  
    The resulting final props selector is called by the Connect component instance whenever
    it receives new props or store state.
   */

  function match(arg, factories, name) {
    for (var i = factories.length - 1; i >= 0; i--) {
      var result = factories[i](arg);
      if (result) return result;
    }

    return function (dispatch, options) {
      throw new Error('Invalid value of type ' + (typeof arg === "undefined" ? "undefined" : _typeof4(arg)) + ' for ' + name + ' argument when connecting component ' + options.wrappedComponentName + '.');
    };
  }

  function strictEqual(a, b) {
    return a === b;
  }

  // createConnect with default args builds the 'official' connect behavior. Calling it with
  // different options opens up some testing and extensibility scenarios
  function createConnect() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$connectHOC = _ref.connectHOC,
        connectHOC = _ref$connectHOC === undefined ? __WEBPACK_IMPORTED_MODULE_0__components_connectAdvanced__["a" /* default */] : _ref$connectHOC,
        _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,
        mapStateToPropsFactories = _ref$mapStateToPropsF === undefined ? __WEBPACK_IMPORTED_MODULE_3__mapStateToProps__["a" /* default */] : _ref$mapStateToPropsF,
        _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,
        mapDispatchToPropsFactories = _ref$mapDispatchToPro === undefined ? __WEBPACK_IMPORTED_MODULE_2__mapDispatchToProps__["a" /* default */] : _ref$mapDispatchToPro,
        _ref$mergePropsFactor = _ref.mergePropsFactories,
        mergePropsFactories = _ref$mergePropsFactor === undefined ? __WEBPACK_IMPORTED_MODULE_4__mergeProps__["a" /* default */] : _ref$mergePropsFactor,
        _ref$selectorFactory = _ref.selectorFactory,
        selectorFactory = _ref$selectorFactory === undefined ? __WEBPACK_IMPORTED_MODULE_5__selectorFactory__["a" /* default */] : _ref$selectorFactory;

    return function connect(mapStateToProps, mapDispatchToProps, mergeProps) {
      var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
          _ref2$pure = _ref2.pure,
          pure = _ref2$pure === undefined ? true : _ref2$pure,
          _ref2$areStatesEqual = _ref2.areStatesEqual,
          areStatesEqual = _ref2$areStatesEqual === undefined ? strictEqual : _ref2$areStatesEqual,
          _ref2$areOwnPropsEqua = _ref2.areOwnPropsEqual,
          areOwnPropsEqual = _ref2$areOwnPropsEqua === undefined ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__["a" /* default */] : _ref2$areOwnPropsEqua,
          _ref2$areStatePropsEq = _ref2.areStatePropsEqual,
          areStatePropsEqual = _ref2$areStatePropsEq === undefined ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__["a" /* default */] : _ref2$areStatePropsEq,
          _ref2$areMergedPropsE = _ref2.areMergedPropsEqual,
          areMergedPropsEqual = _ref2$areMergedPropsE === undefined ? __WEBPACK_IMPORTED_MODULE_1__utils_shallowEqual__["a" /* default */] : _ref2$areMergedPropsE,
          extraOptions = _objectWithoutProperties(_ref2, ['pure', 'areStatesEqual', 'areOwnPropsEqual', 'areStatePropsEqual', 'areMergedPropsEqual']);

      var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');
      var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');
      var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');

      return connectHOC(selectorFactory, _extends({
        // used in error messages
        methodName: 'connect',

        // used to compute Connect's displayName from the wrapped component's displayName.
        getDisplayName: function getDisplayName(name) {
          return 'Connect(' + name + ')';
        },

        // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes
        shouldHandleStateChanges: Boolean(mapStateToProps),

        // passed through to selectorFactory
        initMapStateToProps: initMapStateToProps,
        initMapDispatchToProps: initMapDispatchToProps,
        initMergeProps: initMergeProps,
        pure: pure,
        areStatesEqual: areStatesEqual,
        areOwnPropsEqual: areOwnPropsEqual,
        areStatePropsEqual: areStatePropsEqual,
        areMergedPropsEqual: areMergedPropsEqual

      }, extraOptions));
    };
  }

  /* harmony default export */__webpack_exports__["a"] = createConnect();

  /***/
},
/* 243 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (immutable) */
  __webpack_exports__["a"] = shallowEqual;
  var hasOwn = Object.prototype.hasOwnProperty;

  function is(x, y) {
    if (x === y) {
      return x !== 0 || y !== 0 || 1 / x === 1 / y;
    } else {
      return x !== x && y !== y;
    }
  }

  function shallowEqual(objA, objB) {
    if (is(objA, objB)) return true;

    if ((typeof objA === "undefined" ? "undefined" : _typeof4(objA)) !== 'object' || objA === null || (typeof objB === "undefined" ? "undefined" : _typeof4(objB)) !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) return false;

    for (var i = 0; i < keysA.length; i++) {
      if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
        return false;
      }
    }

    return true;
  }

  /***/
},
/* 244 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* unused harmony export whenMapDispatchToPropsIsFunction */
  /* unused harmony export whenMapDispatchToPropsIsMissing */
  /* unused harmony export whenMapDispatchToPropsIsObject */
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_redux__ = __webpack_require__(24);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__ = __webpack_require__(138);

  function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {
    return typeof mapDispatchToProps === 'function' ? Object(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__["b" /* wrapMapToPropsFunc */])(mapDispatchToProps, 'mapDispatchToProps') : undefined;
  }

  function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {
    return !mapDispatchToProps ? Object(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__["a" /* wrapMapToPropsConstant */])(function (dispatch) {
      return { dispatch: dispatch };
    }) : undefined;
  }

  function whenMapDispatchToPropsIsObject(mapDispatchToProps) {
    return mapDispatchToProps && (typeof mapDispatchToProps === "undefined" ? "undefined" : _typeof4(mapDispatchToProps)) === 'object' ? Object(__WEBPACK_IMPORTED_MODULE_1__wrapMapToProps__["a" /* wrapMapToPropsConstant */])(function (dispatch) {
      return Object(__WEBPACK_IMPORTED_MODULE_0_redux__["bindActionCreators"])(mapDispatchToProps, dispatch);
    }) : undefined;
  }

  /* harmony default export */__webpack_exports__["a"] = [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];

  /***/
},
/* 245 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(46);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /** Built-in value references. */
  var symToStringTag = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */].toStringTag : undefined;

  /**
   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the raw `toStringTag`.
   */
  function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag),
        tag = value[symToStringTag];

    try {
      value[symToStringTag] = undefined;
      var unmasked = true;
    } catch (e) {}

    var result = nativeObjectToString.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = getRawTag;

  /***/
},
/* 246 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /** Used for built-in method references. */

  var objectProto = Object.prototype;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /**
   * Converts `value` to a string using `Object.prototype.toString`.
   *
   * @private
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   */
  function objectToString(value) {
    return nativeObjectToString.call(value);
  }

  /* harmony default export */__webpack_exports__["a"] = objectToString;

  /***/
},
/* 247 */
/***/function (module, exports, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (global, module) {

    Object.defineProperty(exports, "__esModule", {
      value: true
    });

    var _ponyfill = __webpack_require__(248);

    var _ponyfill2 = _interopRequireDefault(_ponyfill);

    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { 'default': obj };
    }

    var root; /* global window */

    if (typeof self !== 'undefined') {
      root = self;
    } else if (typeof window !== 'undefined') {
      root = window;
    } else if (typeof global !== 'undefined') {
      root = global;
    } else if (true) {
      root = module;
    } else {
      root = Function('return this')();
    }

    var result = (0, _ponyfill2['default'])(root);
    exports['default'] = result;
    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(16), __webpack_require__(69)(module));

  /***/
},
/* 248 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports['default'] = symbolObservablePonyfill;
  function symbolObservablePonyfill(root) {
    var result;
    var _Symbol = root.Symbol;

    if (typeof _Symbol === 'function') {
      if (_Symbol.observable) {
        result = _Symbol.observable;
      } else {
        result = _Symbol('observable');
        _Symbol.observable = result;
      }
    } else {
      result = '@@observable';
    }

    return result;
  };

  /***/
},
/* 249 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /* harmony export (immutable) */__webpack_exports__["a"] = combineReducers;
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__createStore__ = __webpack_require__(131);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__ = __webpack_require__(45);
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__utils_warning__ = __webpack_require__(136);

    function getUndefinedStateErrorMessage(key, action) {
      var actionType = action && action.type;
      var actionName = actionType && '"' + actionType.toString() + '"' || 'an action';

      return 'Given action ' + actionName + ', reducer "' + key + '" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';
    }

    function getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {
      var reducerKeys = Object.keys(reducers);
      var argumentName = action && action.type === __WEBPACK_IMPORTED_MODULE_0__createStore__["a" /* ActionTypes */].INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';

      if (reducerKeys.length === 0) {
        return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';
      }

      if (!Object(__WEBPACK_IMPORTED_MODULE_1_lodash_es_isPlainObject__["a" /* default */])(inputState)) {
        return 'The ' + argumentName + ' has unexpected type of "' + {}.toString.call(inputState).match(/\s([a-z|A-Z]+)/)[1] + '". Expected argument to be an object with the following ' + ('keys: "' + reducerKeys.join('", "') + '"');
      }

      var unexpectedKeys = Object.keys(inputState).filter(function (key) {
        return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];
      });

      unexpectedKeys.forEach(function (key) {
        unexpectedKeyCache[key] = true;
      });

      if (unexpectedKeys.length > 0) {
        return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('"' + unexpectedKeys.join('", "') + '" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('"' + reducerKeys.join('", "') + '". Unexpected keys will be ignored.');
      }
    }

    function assertReducerShape(reducers) {
      Object.keys(reducers).forEach(function (key) {
        var reducer = reducers[key];
        var initialState = reducer(undefined, { type: __WEBPACK_IMPORTED_MODULE_0__createStore__["a" /* ActionTypes */].INIT });

        if (typeof initialState === 'undefined') {
          throw new Error('Reducer "' + key + '" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');
        }

        var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');
        if (typeof reducer(undefined, { type: type }) === 'undefined') {
          throw new Error('Reducer "' + key + '" returned undefined when probed with a random type. ' + ('Don\'t try to handle ' + __WEBPACK_IMPORTED_MODULE_0__createStore__["a" /* ActionTypes */].INIT + ' or other actions in "redux/*" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');
        }
      });
    }

    /**
     * Turns an object whose values are different reducer functions, into a single
     * reducer function. It will call every child reducer, and gather their results
     * into a single state object, whose keys correspond to the keys of the passed
     * reducer functions.
     *
     * @param {Object} reducers An object whose values correspond to different
     * reducer functions that need to be combined into one. One handy way to obtain
     * it is to use ES6 `import * as reducers` syntax. The reducers may never return
     * undefined for any action. Instead, they should return their initial state
     * if the state passed to them was undefined, and the current state for any
     * unrecognized action.
     *
     * @returns {Function} A reducer function that invokes every reducer inside the
     * passed object, and builds a state object with the same shape.
     */
    function combineReducers(reducers) {
      var reducerKeys = Object.keys(reducers);
      var finalReducers = {};
      for (var i = 0; i < reducerKeys.length; i++) {
        var key = reducerKeys[i];

        if (undefined !== 'production') {
          if (typeof reducers[key] === 'undefined') {
            Object(__WEBPACK_IMPORTED_MODULE_2__utils_warning__["a" /* default */])('No reducer provided for key "' + key + '"');
          }
        }

        if (typeof reducers[key] === 'function') {
          finalReducers[key] = reducers[key];
        }
      }
      var finalReducerKeys = Object.keys(finalReducers);

      var unexpectedKeyCache = void 0;
      if (undefined !== 'production') {
        unexpectedKeyCache = {};
      }

      var shapeAssertionError = void 0;
      try {
        assertReducerShape(finalReducers);
      } catch (e) {
        shapeAssertionError = e;
      }

      return function combination() {
        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var action = arguments[1];

        if (shapeAssertionError) {
          throw shapeAssertionError;
        }

        if (undefined !== 'production') {
          var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);
          if (warningMessage) {
            Object(__WEBPACK_IMPORTED_MODULE_2__utils_warning__["a" /* default */])(warningMessage);
          }
        }

        var hasChanged = false;
        var nextState = {};
        for (var _i = 0; _i < finalReducerKeys.length; _i++) {
          var _key = finalReducerKeys[_i];
          var reducer = finalReducers[_key];
          var previousStateForKey = state[_key];
          var nextStateForKey = reducer(previousStateForKey, action);
          if (typeof nextStateForKey === 'undefined') {
            var errorMessage = getUndefinedStateErrorMessage(_key, action);
            throw new Error(errorMessage);
          }
          nextState[_key] = nextStateForKey;
          hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
        }
        return hasChanged ? nextState : state;
      };
    }
    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(3));

  /***/
},
/* 250 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (immutable) */
  __webpack_exports__["a"] = bindActionCreators;
  function bindActionCreator(actionCreator, dispatch) {
    return function () {
      return dispatch(actionCreator.apply(undefined, arguments));
    };
  }

  /**
   * Turns an object whose values are action creators, into an object with the
   * same keys, but with every function wrapped into a `dispatch` call so they
   * may be invoked directly. This is just a convenience method, as you can call
   * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
   *
   * For convenience, you can also pass a single function as the first argument,
   * and get a function in return.
   *
   * @param {Function|Object} actionCreators An object whose values are action
   * creator functions. One handy way to obtain it is to use ES6 `import * as`
   * syntax. You may also pass a single function.
   *
   * @param {Function} dispatch The `dispatch` function available on your Redux
   * store.
   *
   * @returns {Function|Object} The object mimicking the original object, but with
   * every action creator wrapped into the `dispatch` call. If you passed a
   * function as `actionCreators`, the return value will also be a single
   * function.
   */
  function bindActionCreators(actionCreators, dispatch) {
    if (typeof actionCreators === 'function') {
      return bindActionCreator(actionCreators, dispatch);
    }

    if ((typeof actionCreators === "undefined" ? "undefined" : _typeof4(actionCreators)) !== 'object' || actionCreators === null) {
      throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === "undefined" ? "undefined" : _typeof4(actionCreators)) + '. ' + 'Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
    }

    var keys = Object.keys(actionCreators);
    var boundActionCreators = {};
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var actionCreator = actionCreators[key];
      if (typeof actionCreator === 'function') {
        boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
      }
    }
    return boundActionCreators;
  }

  /***/
},
/* 251 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (immutable) */
  __webpack_exports__["a"] = applyMiddleware;
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__compose__ = __webpack_require__(137);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  /**
   * Creates a store enhancer that applies middleware to the dispatch method
   * of the Redux store. This is handy for a variety of tasks, such as expressing
   * asynchronous actions in a concise manner, or logging every action payload.
   *
   * See `redux-thunk` package as an example of the Redux middleware.
   *
   * Because middleware is potentially asynchronous, this should be the first
   * store enhancer in the composition chain.
   *
   * Note that each middleware will be given the `dispatch` and `getState` functions
   * as named arguments.
   *
   * @param {...Function} middlewares The middleware chain to be applied.
   * @returns {Function} A store enhancer applying the middleware.
   */
  function applyMiddleware() {
    for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
      middlewares[_key] = arguments[_key];
    }

    return function (createStore) {
      return function (reducer, preloadedState, enhancer) {
        var store = createStore(reducer, preloadedState, enhancer);
        var _dispatch = store.dispatch;
        var chain = [];

        var middlewareAPI = {
          getState: store.getState,
          dispatch: function dispatch(action) {
            return _dispatch(action);
          }
        };
        chain = middlewares.map(function (middleware) {
          return middleware(middlewareAPI);
        });
        _dispatch = __WEBPACK_IMPORTED_MODULE_0__compose__["a" /* default */].apply(undefined, chain)(store.dispatch);

        return _extends({}, store, {
          dispatch: _dispatch
        });
      };
    };
  }

  /***/
},
/* 252 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* unused harmony export whenMapStateToPropsIsFunction */
  /* unused harmony export whenMapStateToPropsIsMissing */
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__ = __webpack_require__(138);

  function whenMapStateToPropsIsFunction(mapStateToProps) {
    return typeof mapStateToProps === 'function' ? Object(__WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__["b" /* wrapMapToPropsFunc */])(mapStateToProps, 'mapStateToProps') : undefined;
  }

  function whenMapStateToPropsIsMissing(mapStateToProps) {
    return !mapStateToProps ? Object(__WEBPACK_IMPORTED_MODULE_0__wrapMapToProps__["a" /* wrapMapToPropsConstant */])(function () {
      return {};
    }) : undefined;
  }

  /* harmony default export */__webpack_exports__["a"] = [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];

  /***/
},
/* 253 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /* unused harmony export defaultMergeProps */
    /* unused harmony export wrapMergePropsFunc */
    /* unused harmony export whenMergePropsIsFunction */
    /* unused harmony export whenMergePropsIsOmitted */
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__ = __webpack_require__(139);
    var _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }return target;
    };

    function defaultMergeProps(stateProps, dispatchProps, ownProps) {
      return _extends({}, ownProps, stateProps, dispatchProps);
    }

    function wrapMergePropsFunc(mergeProps) {
      return function initMergePropsProxy(dispatch, _ref) {
        var displayName = _ref.displayName,
            pure = _ref.pure,
            areMergedPropsEqual = _ref.areMergedPropsEqual;

        var hasRunOnce = false;
        var mergedProps = void 0;

        return function mergePropsProxy(stateProps, dispatchProps, ownProps) {
          var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);

          if (hasRunOnce) {
            if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;
          } else {
            hasRunOnce = true;
            mergedProps = nextMergedProps;

            if (undefined !== 'production') Object(__WEBPACK_IMPORTED_MODULE_0__utils_verifyPlainObject__["a" /* default */])(mergedProps, displayName, 'mergeProps');
          }

          return mergedProps;
        };
      };
    }

    function whenMergePropsIsFunction(mergeProps) {
      return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;
    }

    function whenMergePropsIsOmitted(mergeProps) {
      return !mergeProps ? function () {
        return defaultMergeProps;
      } : undefined;
    }

    /* harmony default export */__webpack_exports__["a"] = [whenMergePropsIsFunction, whenMergePropsIsOmitted];
    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(3));

  /***/
},
/* 254 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (process) {
    /* unused harmony export impureFinalPropsSelectorFactory */
    /* unused harmony export pureFinalPropsSelectorFactory */
    /* harmony export (immutable) */__webpack_exports__["a"] = finalPropsSelectorFactory;
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__verifySubselectors__ = __webpack_require__(255);
    function _objectWithoutProperties(obj, keys) {
      var target = {};for (var i in obj) {
        if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
      }return target;
    }

    function impureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch) {
      return function impureFinalPropsSelector(state, ownProps) {
        return mergeProps(mapStateToProps(state, ownProps), mapDispatchToProps(dispatch, ownProps), ownProps);
      };
    }

    function pureFinalPropsSelectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, _ref) {
      var areStatesEqual = _ref.areStatesEqual,
          areOwnPropsEqual = _ref.areOwnPropsEqual,
          areStatePropsEqual = _ref.areStatePropsEqual;

      var hasRunAtLeastOnce = false;
      var state = void 0;
      var ownProps = void 0;
      var stateProps = void 0;
      var dispatchProps = void 0;
      var mergedProps = void 0;

      function handleFirstCall(firstState, firstOwnProps) {
        state = firstState;
        ownProps = firstOwnProps;
        stateProps = mapStateToProps(state, ownProps);
        dispatchProps = mapDispatchToProps(dispatch, ownProps);
        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        hasRunAtLeastOnce = true;
        return mergedProps;
      }

      function handleNewPropsAndNewState() {
        stateProps = mapStateToProps(state, ownProps);

        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        return mergedProps;
      }

      function handleNewProps() {
        if (mapStateToProps.dependsOnOwnProps) stateProps = mapStateToProps(state, ownProps);

        if (mapDispatchToProps.dependsOnOwnProps) dispatchProps = mapDispatchToProps(dispatch, ownProps);

        mergedProps = mergeProps(stateProps, dispatchProps, ownProps);
        return mergedProps;
      }

      function handleNewState() {
        var nextStateProps = mapStateToProps(state, ownProps);
        var statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps);
        stateProps = nextStateProps;

        if (statePropsChanged) mergedProps = mergeProps(stateProps, dispatchProps, ownProps);

        return mergedProps;
      }

      function handleSubsequentCalls(nextState, nextOwnProps) {
        var propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps);
        var stateChanged = !areStatesEqual(nextState, state);
        state = nextState;
        ownProps = nextOwnProps;

        if (propsChanged && stateChanged) return handleNewPropsAndNewState();
        if (propsChanged) return handleNewProps();
        if (stateChanged) return handleNewState();
        return mergedProps;
      }

      return function pureFinalPropsSelector(nextState, nextOwnProps) {
        return hasRunAtLeastOnce ? handleSubsequentCalls(nextState, nextOwnProps) : handleFirstCall(nextState, nextOwnProps);
      };
    }

    // TODO: Add more comments

    // If pure is true, the selector returned by selectorFactory will memoize its results,
    // allowing connectAdvanced's shouldComponentUpdate to return false if final
    // props have not changed. If false, the selector will always return a new
    // object and shouldComponentUpdate will always return true.

    function finalPropsSelectorFactory(dispatch, _ref2) {
      var initMapStateToProps = _ref2.initMapStateToProps,
          initMapDispatchToProps = _ref2.initMapDispatchToProps,
          initMergeProps = _ref2.initMergeProps,
          options = _objectWithoutProperties(_ref2, ['initMapStateToProps', 'initMapDispatchToProps', 'initMergeProps']);

      var mapStateToProps = initMapStateToProps(dispatch, options);
      var mapDispatchToProps = initMapDispatchToProps(dispatch, options);
      var mergeProps = initMergeProps(dispatch, options);

      if (undefined !== 'production') {
        Object(__WEBPACK_IMPORTED_MODULE_0__verifySubselectors__["a" /* default */])(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName);
      }

      var selectorFactory = options.pure ? pureFinalPropsSelectorFactory : impureFinalPropsSelectorFactory;

      return selectorFactory(mapStateToProps, mapDispatchToProps, mergeProps, dispatch, options);
    }
    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(3));

  /***/
},
/* 255 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (immutable) */
  __webpack_exports__["a"] = verifySubselectors;
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__utils_warning__ = __webpack_require__(68);

  function verify(selector, methodName, displayName) {
    if (!selector) {
      throw new Error('Unexpected value for ' + methodName + ' in ' + displayName + '.');
    } else if (methodName === 'mapStateToProps' || methodName === 'mapDispatchToProps') {
      if (!selector.hasOwnProperty('dependsOnOwnProps')) {
        Object(__WEBPACK_IMPORTED_MODULE_0__utils_warning__["a" /* default */])('The selector for ' + methodName + ' of ' + displayName + ' did not specify a value for dependsOnOwnProps.');
      }
    }
  }

  function verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, displayName) {
    verify(mapStateToProps, 'mapStateToProps', displayName);
    verify(mapDispatchToProps, 'mapDispatchToProps', displayName);
    verify(mergeProps, 'mergeProps', displayName);
  }

  /***/
},
/* 256 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = configureStore;

  var _redux = __webpack_require__(24);

  var _RootReducer = __webpack_require__(257);

  var _RootReducer2 = _interopRequireDefault(_RootReducer);

  var _reduxLogger = __webpack_require__(423);

  var _DevTools = __webpack_require__(173);

  var _DevTools2 = _interopRequireDefault(_DevTools);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function configureStore() {
    var logger = (0, _reduxLogger.createLogger)({ logger: console });
    var createStoreWithMiddleware = (0, _redux.applyMiddleware)(logger)(_redux.createStore);
    var store = createStoreWithMiddleware(_RootReducer2.default, _DevTools2.default.instrument());
    return store;
  }

  /***/
},
/* 257 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _redux = __webpack_require__(24);

  var _reduxForm = __webpack_require__(140);

  var _Modal = __webpack_require__(422);

  var _Modal2 = _interopRequireDefault(_Modal);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  var App = (0, _redux.combineReducers)({
    Modal: _Modal2.default,
    form: _reduxForm.reducer
  });

  exports.default = App;

  /***/
},
/* 258 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var Form = function (_Component) {
    _inherits(Form, _Component);

    function Form(props, context) {
      _classCallCheck(this, Form);

      var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props, context));

      if (!context._reduxForm) {
        throw new Error('Form must be inside a component decorated with reduxForm()');
      }
      return _this;
    }

    _createClass(Form, [{
      key: 'componentWillMount',
      value: function componentWillMount() {
        this.context._reduxForm.registerInnerOnSubmit(this.props.onSubmit);
      }
    }, {
      key: 'render',
      value: function render() {
        return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('form', this.props);
      }
    }]);

    return Form;
  }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

  Form.propTypes = {
    onSubmit: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired
  };
  Form.contextTypes = {
    _reduxForm: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
  };

  /* harmony default export */__webpack_exports__["a"] = Form;

  /***/
},
/* 259 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__util_prefixName__ = __webpack_require__(35);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var FormSection = function (_Component) {
    _inherits(FormSection, _Component);

    function FormSection(props, context) {
      _classCallCheck(this, FormSection);

      var _this = _possibleConstructorReturn(this, (FormSection.__proto__ || Object.getPrototypeOf(FormSection)).call(this, props, context));

      if (!context._reduxForm) {
        throw new Error('FormSection must be inside a component decorated with reduxForm()');
      }
      return _this;
    }

    _createClass(FormSection, [{
      key: 'getChildContext',
      value: function getChildContext() {
        var context = this.context,
            name = this.props.name;

        return {
          _reduxForm: _extends({}, context._reduxForm, {
            sectionPrefix: Object(__WEBPACK_IMPORTED_MODULE_2__util_prefixName__["a" /* default */])(context, name)
          })
        };
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            children = _props.children,
            name = _props.name,
            component = _props.component,
            rest = _objectWithoutProperties(_props, ['children', 'name', 'component']);

        if (__WEBPACK_IMPORTED_MODULE_0_react___default.a.isValidElement(children)) {
          return children;
        }

        return Object(__WEBPACK_IMPORTED_MODULE_0_react__["createElement"])(component, _extends({}, rest, {
          children: children
        }));
      }
    }]);

    return FormSection;
  }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

  FormSection.propTypes = {
    name: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired,
    component: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string])
  };

  FormSection.defaultProps = {
    component: 'div'
  };

  FormSection.childContextTypes = {
    _reduxForm: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired
  };

  FormSection.contextTypes = {
    _reduxForm: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
  };

  /* harmony default export */__webpack_exports__["a"] = FormSection;

  /***/
},
/* 260 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _extendableBuiltin(cls) {
    function ExtendableBuiltin() {
      cls.apply(this, arguments);
    }

    ExtendableBuiltin.prototype = Object.create(cls.prototype, {
      constructor: {
        value: cls,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });

    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(ExtendableBuiltin, cls);
    } else {
      ExtendableBuiltin.__proto__ = cls;
    }

    return ExtendableBuiltin;
  }

  var ExtendableError = function (_extendableBuiltin2) {
    _inherits(ExtendableError, _extendableBuiltin2);

    function ExtendableError() {
      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      _classCallCheck(this, ExtendableError);

      // extending Error is weird and does not propagate `message`
      var _this = _possibleConstructorReturn(this, (ExtendableError.__proto__ || Object.getPrototypeOf(ExtendableError)).call(this, message));

      Object.defineProperty(_this, 'message', {
        configurable: true,
        enumerable: false,
        value: message,
        writable: true
      });

      Object.defineProperty(_this, 'name', {
        configurable: true,
        enumerable: false,
        value: _this.constructor.name,
        writable: true
      });

      if (Error.hasOwnProperty('captureStackTrace')) {
        Error.captureStackTrace(_this, _this.constructor);
        return _possibleConstructorReturn(_this);
      }

      Object.defineProperty(_this, 'stack', {
        configurable: true,
        enumerable: false,
        value: new Error(message).stack,
        writable: true
      });
      return _this;
    }

    return ExtendableError;
  }(_extendableBuiltin(Error));

  exports.default = ExtendableError;
  module.exports = exports['default'];

  /***/
},
/* 261 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (binding) */
  __webpack_require__.d(__webpack_exports__, "h", function () {
    return formPropTypes;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "e", function () {
    return fieldInputPropTypes;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "f", function () {
    return fieldMetaPropTypes;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "c", function () {
    return fieldArrayMetaPropTypes;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "b", function () {
    return fieldArrayFieldsPropTypes;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "g", function () {
    return fieldPropTypes;
  });
  /* harmony export (binding) */__webpack_require__.d(__webpack_exports__, "d", function () {
    return fieldArrayPropTypes;
  });
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_prop_types__);

  var any = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.any,
      bool = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.bool,
      func = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.func,
      shape = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.shape,
      string = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.string,
      oneOfType = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.oneOfType,
      object = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.object,
      number = __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.number;

  var formPropTypes = {
    // State:
    anyTouched: bool.isRequired, // true if any of the fields have been marked as touched
    asyncValidating: oneOfType([bool, string]).isRequired, // true if async validation is running, a string if a field triggered async validation
    dirty: bool.isRequired, // true if any values are different from initialValues
    error: any, // form-wide error from '_error' key in validation result
    form: string.isRequired, // the name of the form
    invalid: bool.isRequired, // true if there are any validation errors
    initialized: bool.isRequired, // true if the form has been initialized
    initialValues: object, // the initialValues object passed to reduxForm
    pristine: bool.isRequired, // true if the values are the same as initialValues
    pure: bool.isRequired, // if true, implements shouldComponentUpdate
    submitting: bool.isRequired, // true if the form is in the process of being submitted
    submitFailed: bool.isRequired, // true if the form was submitted and failed for any reason
    submitSucceeded: bool.isRequired, // true if the form was successfully submitted
    valid: bool.isRequired, // true if there are no validation errors
    warning: any, // form-wide warning from '_warning' key in validation result
    // Actions:
    array: shape({
      insert: func.isRequired, // function to insert a value into an array field
      move: func.isRequired, // function to move a value within an array field
      pop: func.isRequired, // function to pop a value off of an array field
      push: func.isRequired, // function to push a value onto an array field
      remove: func.isRequired, // function to remove a value from an array field
      removeAll: func.isRequired, // function to remove all the values from an array field
      shift: func.isRequired, // function to shift a value out of an array field
      splice: func.isRequired, // function to splice a value into an array field
      swap: func.isRequired, // function to swap values in an array field
      unshift: func.isRequired // function to unshift a value into an array field
    }),
    asyncValidate: func.isRequired, // function to trigger async validation
    autofill: func.isRequired, // action to set a value of a field and mark it as autofilled
    blur: func.isRequired, // action to mark a field as blurred
    change: func.isRequired, // action to change the value of a field
    clearAsyncError: func.isRequired, // action to clear the async error of a field
    destroy: func.isRequired, // action to destroy the form's data in Redux
    dispatch: func.isRequired, // the Redux dispatch action
    handleSubmit: func.isRequired, // function to submit the form
    initialize: func.isRequired, // action to initialize form data
    reset: func.isRequired, // action to reset the form data to previously initialized values
    touch: func.isRequired, // action to mark fields as touched
    submit: func.isRequired, // action to trigger a submission of the specified form
    untouch: func.isRequired, // action to mark fields as untouched

    // triggerSubmit
    triggerSubmit: bool, // if true, submits the form on componentWillReceiveProps
    clearSubmit: func.isRequired // called before a triggered submit, by default clears triggerSubmit
  };

  var fieldInputPropTypes = {
    checked: bool,
    name: string.isRequired,
    onBlur: func.isRequired,
    onChange: func.isRequired,
    onDragStart: func.isRequired,
    onDrop: func.isRequired,
    onFocus: func.isRequired,
    value: any
  };

  var fieldMetaPropTypes = {
    active: bool.isRequired,
    asyncValidating: bool.isRequired,
    autofilled: bool.isRequired,
    dirty: bool.isRequired,
    dispatch: func.isRequired,
    error: string,
    form: string.isRequired,
    invalid: bool.isRequired,
    pristine: bool.isRequired,
    submitting: bool.isRequired,
    submitFailed: bool.isRequired,
    touched: bool.isRequired,
    valid: bool.isRequired,
    visited: bool.isRequired,
    warning: string
  };

  var fieldArrayMetaPropTypes = {
    dirty: bool.isRequired,
    error: string,
    form: string.isRequired,
    invalid: bool.isRequired,
    pristine: bool.isRequired,
    submitFailed: bool,
    submitting: bool,
    valid: bool.isRequired,
    warning: string
  };

  var fieldArrayFieldsPropTypes = {
    name: string.isRequired,
    forEach: func.isRequired,
    get: func.isRequired,
    getAll: func.isRequired,
    insert: func.isRequired,
    length: number.isRequired,
    map: func.isRequired,
    move: func.isRequired,
    pop: func.isRequired,
    push: func.isRequired,
    reduce: func.isRequired,
    remove: func.isRequired,
    removeAll: func.isRequired,
    shift: func.isRequired,
    swap: func.isRequired,
    unshift: func.isRequired
  };

  var fieldPropTypes = {
    input: shape(fieldInputPropTypes).isRequired,
    meta: shape(fieldMetaPropTypes).isRequired
  };

  var fieldArrayPropTypes = {
    fields: shape(fieldArrayFieldsPropTypes).isRequired,
    meta: shape(fieldArrayMetaPropTypes).isRequired
  };

  /* harmony default export */__webpack_exports__["a"] = formPropTypes;

  /***/
},
/* 262 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__createField__ = __webpack_require__(263);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__createField__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 263 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_invariant__ = __webpack_require__(23);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_invariant__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__ConnectedField__ = __webpack_require__(264);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__util_shallowCompare__ = __webpack_require__(160);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__util_prefixName__ = __webpack_require__(35);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__structure_plain__ = __webpack_require__(1);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var createField = function createField(structure) {
    var ConnectedField = Object(__WEBPACK_IMPORTED_MODULE_3__ConnectedField__["a" /* default */])(structure);

    var setIn = structure.setIn;

    var Field = function (_Component) {
      _inherits(Field, _Component);

      function Field(props, context) {
        _classCallCheck(this, Field);

        var _this = _possibleConstructorReturn(this, (Field.__proto__ || Object.getPrototypeOf(Field)).call(this, props, context));

        _this.saveRef = function (ref) {
          return _this.ref = ref;
        };

        _this.normalize = function (name, value) {
          var normalize = _this.props.normalize;

          if (!normalize) {
            return value;
          }
          var previousValues = _this.context._reduxForm.getValues();
          var previousValue = _this.value;
          var nextValues = setIn(previousValues, name, value);
          return normalize(value, previousValue, nextValues, previousValues);
        };

        if (!context._reduxForm) {
          throw new Error('Field must be inside a component decorated with reduxForm()');
        }
        return _this;
      }

      _createClass(Field, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          return Object(__WEBPACK_IMPORTED_MODULE_4__util_shallowCompare__["a" /* default */])(this, nextProps);
        }
      }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
          var _this2 = this;

          this.context._reduxForm.register(this.name, 'Field', function () {
            return _this2.props.validate;
          }, function () {
            return _this2.props.warn;
          });
        }
      }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps, nextContext) {
          var oldName = Object(__WEBPACK_IMPORTED_MODULE_5__util_prefixName__["a" /* default */])(this.context, this.props.name);
          var newName = Object(__WEBPACK_IMPORTED_MODULE_5__util_prefixName__["a" /* default */])(nextContext, nextProps.name);

          if (oldName !== newName ||
          // use deepEqual here because they could be a function or an array of functions
          !__WEBPACK_IMPORTED_MODULE_6__structure_plain__["a" /* default */].deepEqual(this.props.validate, nextProps.validate) || !__WEBPACK_IMPORTED_MODULE_6__structure_plain__["a" /* default */].deepEqual(this.props.warn, nextProps.warn)) {
            // unregister old name
            this.context._reduxForm.unregister(oldName);
            // register new name
            this.context._reduxForm.register(newName, 'Field', function () {
              return nextProps.validate;
            }, function () {
              return nextProps.warn;
            });
          }
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          this.context._reduxForm.unregister(this.name);
        }
      }, {
        key: 'getRenderedComponent',
        value: function getRenderedComponent() {
          __WEBPACK_IMPORTED_MODULE_2_invariant___default()(this.props.withRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a withRef prop to Field');
          return this.ref ? this.ref.getWrappedInstance().getRenderedComponent() : undefined;
        }
      }, {
        key: 'render',
        value: function render() {
          return Object(__WEBPACK_IMPORTED_MODULE_0_react__["createElement"])(ConnectedField, _extends({}, this.props, {
            name: this.name,
            normalize: this.normalize,
            _reduxForm: this.context._reduxForm,
            ref: this.saveRef
          }));
        }
      }, {
        key: 'name',
        get: function get() {
          return Object(__WEBPACK_IMPORTED_MODULE_5__util_prefixName__["a" /* default */])(this.context, this.props.name);
        }
      }, {
        key: 'dirty',
        get: function get() {
          return !this.pristine;
        }
      }, {
        key: 'pristine',
        get: function get() {
          return !!(this.ref && this.ref.getWrappedInstance().isPristine());
        }
      }, {
        key: 'value',
        get: function get() {
          return this.ref && this.ref.getWrappedInstance().getValue();
        }
      }]);

      return Field;
    }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

    Field.propTypes = {
      name: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired,
      component: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string]).isRequired,
      format: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      normalize: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      onBlur: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      onChange: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      onFocus: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      onDragStart: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      onDrop: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      parse: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      props: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
      validate: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func)]),
      warn: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func)]),
      withRef: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool
    };
    Field.contextTypes = {
      _reduxForm: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
    };

    return Field;
  };

  /* harmony default export */__webpack_exports__["a"] = createField;

  /***/
},
/* 264 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(8);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__createFieldProps__ = __webpack_require__(147);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__events_onChangeValue__ = __webpack_require__(148);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__util_eventConsts__ = __webpack_require__(266);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__structure_plain__ = __webpack_require__(1);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_7__isReactNative__ = __webpack_require__(150);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _typeof = typeof Symbol === "function" && _typeof4(Symbol.iterator) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  };

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var propsToNotUpdateFor = ['_reduxForm'];

  var isObject = function isObject(entity) {
    return entity && (typeof entity === 'undefined' ? 'undefined' : _typeof(entity)) === 'object';
  };

  var isFunction = function isFunction(entity) {
    return entity && typeof entity === 'function';
  };

  var eventPreventDefault = function eventPreventDefault(event) {
    if (isObject(event) && isFunction(event.preventDefault)) {
      event.preventDefault();
    }
  };

  var eventDataTransferGetData = function eventDataTransferGetData(event, key) {
    if (isObject(event) && isObject(event.dataTransfer) && isFunction(event.dataTransfer.getData)) {
      return event.dataTransfer.getData(key);
    }
  };

  var eventDataTransferSetData = function eventDataTransferSetData(event, key, value) {
    if (isObject(event) && isObject(event.dataTransfer) && isFunction(event.dataTransfer.setData)) {
      event.dataTransfer.setData(key, value);
    }
  };

  var createConnectedField = function createConnectedField(structure) {
    var deepEqual = structure.deepEqual,
        getIn = structure.getIn;

    var getSyncError = function getSyncError(syncErrors, name) {
      var error = __WEBPACK_IMPORTED_MODULE_6__structure_plain__["a" /* default */].getIn(syncErrors, name);
      // Because the error for this field might not be at a level in the error structure where
      // it can be set directly, it might need to be unwrapped from the _error property
      return error && error._error ? error._error : error;
    };

    var getSyncWarning = function getSyncWarning(syncWarnings, name) {
      var warning = getIn(syncWarnings, name);
      // Because the warning for this field might not be at a level in the warning structure where
      // it can be set directly, it might need to be unwrapped from the _warning property
      return warning && warning._warning ? warning._warning : warning;
    };

    var ConnectedField = function (_Component) {
      _inherits(ConnectedField, _Component);

      function ConnectedField() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, ConnectedField);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ConnectedField.__proto__ || Object.getPrototypeOf(ConnectedField)).call.apply(_ref, [this].concat(args))), _this), _this.saveRef = function (ref) {
          return _this.ref = ref;
        }, _this.isPristine = function () {
          return _this.props.pristine;
        }, _this.getValue = function () {
          return _this.props.value;
        }, _this.handleChange = function (event) {
          var _this$props = _this.props,
              name = _this$props.name,
              dispatch = _this$props.dispatch,
              parse = _this$props.parse,
              normalize = _this$props.normalize,
              onChange = _this$props.onChange,
              _reduxForm = _this$props._reduxForm,
              previousValue = _this$props.value;

          var newValue = Object(__WEBPACK_IMPORTED_MODULE_4__events_onChangeValue__["a" /* default */])(event, { name: name, parse: parse, normalize: normalize });

          var defaultPrevented = false;
          if (onChange) {
            // Can't seem to find a way to extend Event in React Native,
            // thus I simply avoid adding preventDefault() in a RN environment
            // to prevent the following error:
            // `One of the sources for assign has an enumerable key on the prototype chain`
            // Reference: https://github.com/facebook/react-native/issues/5507
            if (!__WEBPACK_IMPORTED_MODULE_7__isReactNative__["a" /* default */]) {
              onChange(_extends({}, event, {
                preventDefault: function preventDefault() {
                  defaultPrevented = true;
                  return eventPreventDefault(event);
                }
              }), newValue, previousValue);
            } else {
              onChange(event, newValue, previousValue);
            }
          }
          if (!defaultPrevented) {
            // dispatch change action
            dispatch(_reduxForm.change(name, newValue));
          }
        }, _this.handleFocus = function (event) {
          var _this$props2 = _this.props,
              name = _this$props2.name,
              dispatch = _this$props2.dispatch,
              onFocus = _this$props2.onFocus,
              _reduxForm = _this$props2._reduxForm;

          var defaultPrevented = false;
          if (onFocus) {
            if (!__WEBPACK_IMPORTED_MODULE_7__isReactNative__["a" /* default */]) {
              onFocus(_extends({}, event, {
                preventDefault: function preventDefault() {
                  defaultPrevented = true;
                  return eventPreventDefault(event);
                }
              }));
            } else {
              onFocus(event);
            }
          }

          if (!defaultPrevented) {
            dispatch(_reduxForm.focus(name));
          }
        }, _this.handleBlur = function (event) {
          var _this$props3 = _this.props,
              name = _this$props3.name,
              dispatch = _this$props3.dispatch,
              parse = _this$props3.parse,
              normalize = _this$props3.normalize,
              onBlur = _this$props3.onBlur,
              _reduxForm = _this$props3._reduxForm,
              _value = _this$props3._value,
              previousValue = _this$props3.value;

          var newValue = Object(__WEBPACK_IMPORTED_MODULE_4__events_onChangeValue__["a" /* default */])(event, { name: name, parse: parse, normalize: normalize });

          // for checkbox and radio, if the value property of checkbox or radio equals
          // the value passed by blur event, then fire blur action with previousValue.
          if (newValue === _value && _value !== undefined) {
            newValue = previousValue;
          }

          var defaultPrevented = false;
          if (onBlur) {
            if (!__WEBPACK_IMPORTED_MODULE_7__isReactNative__["a" /* default */]) {
              onBlur(_extends({}, event, {
                preventDefault: function preventDefault() {
                  defaultPrevented = true;
                  return eventPreventDefault(event);
                }
              }), newValue, previousValue);
            } else {
              onBlur(event, newValue, previousValue);
            }
          }

          if (!defaultPrevented) {
            // dispatch blur action
            dispatch(_reduxForm.blur(name, newValue));

            // call post-blur callback
            if (_reduxForm.asyncValidate) {
              _reduxForm.asyncValidate(name, newValue);
            }
          }
        }, _this.handleDragStart = function (event) {
          var _this$props4 = _this.props,
              onDragStart = _this$props4.onDragStart,
              value = _this$props4.value;

          eventDataTransferSetData(event, __WEBPACK_IMPORTED_MODULE_5__util_eventConsts__["a" /* dataKey */], value == null ? '' : value);

          if (onDragStart) {
            onDragStart(event);
          }
        }, _this.handleDrop = function (event) {
          var _this$props5 = _this.props,
              name = _this$props5.name,
              dispatch = _this$props5.dispatch,
              onDrop = _this$props5.onDrop,
              _reduxForm = _this$props5._reduxForm,
              previousValue = _this$props5.value;

          var newValue = eventDataTransferGetData(event, __WEBPACK_IMPORTED_MODULE_5__util_eventConsts__["a" /* dataKey */]);

          var defaultPrevented = false;
          if (onDrop) {
            onDrop(_extends({}, event, {
              preventDefault: function preventDefault() {
                defaultPrevented = true;
                return eventPreventDefault(event);
              }
            }), newValue, previousValue);
          }

          if (!defaultPrevented) {
            // dispatch change action
            dispatch(_reduxForm.change(name, newValue));
            eventPreventDefault(event);
          }
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }

      _createClass(ConnectedField, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          var _this2 = this;

          var nextPropsKeys = Object.keys(nextProps);
          var thisPropsKeys = Object.keys(this.props);
          // if we have children, we MUST update in React 16
          // https://twitter.com/erikras/status/915866544558788608
          return !!(this.props.children || nextProps.children || nextPropsKeys.length !== thisPropsKeys.length || nextPropsKeys.some(function (prop) {
            return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this2.props[prop], nextProps[prop]);
          }));
        }
      }, {
        key: 'getRenderedComponent',
        value: function getRenderedComponent() {
          return this.ref;
        }
      }, {
        key: 'render',
        value: function render() {
          var _props = this.props,
              component = _props.component,
              withRef = _props.withRef,
              name = _props.name,
              _reduxForm = _props._reduxForm,
              normalize = _props.normalize,
              onBlur = _props.onBlur,
              onChange = _props.onChange,
              onFocus = _props.onFocus,
              onDragStart = _props.onDragStart,
              onDrop = _props.onDrop,
              rest = _objectWithoutProperties(_props, ['component', 'withRef', 'name', '_reduxForm', 'normalize', 'onBlur', 'onChange', 'onFocus', 'onDragStart', 'onDrop']);

          var _createFieldProps = Object(__WEBPACK_IMPORTED_MODULE_3__createFieldProps__["a" /* default */])(structure, name, _extends({}, rest, {
            form: _reduxForm.form,
            onBlur: this.handleBlur,
            onChange: this.handleChange,
            onDrop: this.handleDrop,
            onDragStart: this.handleDragStart,
            onFocus: this.handleFocus
          })),
              custom = _createFieldProps.custom,
              props = _objectWithoutProperties(_createFieldProps, ['custom']);

          if (withRef) {
            custom.ref = this.saveRef;
          }
          if (typeof component === 'string') {
            var input = props.input,
                meta = props.meta; // eslint-disable-line no-unused-vars
            // flatten input into other props

            return Object(__WEBPACK_IMPORTED_MODULE_0_react__["createElement"])(component, _extends({}, input, custom));
          } else {
            return Object(__WEBPACK_IMPORTED_MODULE_0_react__["createElement"])(component, _extends({}, props, custom));
          }
        }
      }]);

      return ConnectedField;
    }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

    ConnectedField.propTypes = {
      component: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string]).isRequired,
      props: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
    };

    var connector = Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__["connect"])(function (state, ownProps) {
      var name = ownProps.name,
          _ownProps$_reduxForm = ownProps._reduxForm,
          initialValues = _ownProps$_reduxForm.initialValues,
          getFormState = _ownProps$_reduxForm.getFormState;

      var formState = getFormState(state);
      var initialState = getIn(formState, 'initial.' + name);
      var initial = initialState !== undefined ? initialState : initialValues && getIn(initialValues, name);
      var value = getIn(formState, 'values.' + name);
      var submitting = getIn(formState, 'submitting');
      var syncError = getSyncError(getIn(formState, 'syncErrors'), name);
      var syncWarning = getSyncWarning(getIn(formState, 'syncWarnings'), name);
      var pristine = deepEqual(value, initial);
      return {
        asyncError: getIn(formState, 'asyncErrors.' + name),
        asyncValidating: getIn(formState, 'asyncValidating') === name,
        dirty: !pristine,
        pristine: pristine,
        state: getIn(formState, 'fields.' + name),
        submitError: getIn(formState, 'submitErrors.' + name),
        submitFailed: getIn(formState, 'submitFailed'),
        submitting: submitting,
        syncError: syncError,
        syncWarning: syncWarning,
        initial: initial,
        value: value,
        _value: ownProps.value // save value passed in (for checkboxes)
      };
    }, undefined, undefined, { withRef: true });
    return connector(ConnectedField);
  };

  /* harmony default export */__webpack_exports__["a"] = createConnectedField;

  /***/
},
/* 265 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isEvent__ = __webpack_require__(149);

  var getSelectedValues = function getSelectedValues(options) {
    var result = [];
    if (options) {
      for (var index = 0; index < options.length; index++) {
        var option = options[index];
        if (option.selected) {
          result.push(option.value);
        }
      }
    }
    return result;
  };

  var getValue = function getValue(event, isReactNative) {
    if (Object(__WEBPACK_IMPORTED_MODULE_0__isEvent__["a" /* default */])(event)) {
      if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {
        return event.nativeEvent.text;
      }
      if (isReactNative && event.nativeEvent !== undefined) {
        return event.nativeEvent.text;
      }
      var detypedEvent = event;
      var _detypedEvent$target = detypedEvent.target,
          type = _detypedEvent$target.type,
          value = _detypedEvent$target.value,
          checked = _detypedEvent$target.checked,
          files = _detypedEvent$target.files,
          dataTransfer = detypedEvent.dataTransfer;

      if (type === 'checkbox') {
        return !!checked;
      }
      if (type === 'file') {
        return files || dataTransfer && dataTransfer.files;
      }
      if (type === 'select-multiple') {
        return getSelectedValues(event.target.options);
      }
      return value;
    }
    return event;
  };

  /* harmony default export */__webpack_exports__["a"] = getValue;

  /***/
},
/* 266 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony export (binding) */
  __webpack_require__.d(__webpack_exports__, "a", function () {
    return dataKey;
  });
  var dataKey = 'text';

  /***/
},
/* 267 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }return arr2;
    } else {
      return Array.from(arr);
    }
  }

  var splice = function splice(array, index, removeNum, value) {
    array = array || [];

    if (index < array.length) {
      if (value === undefined && !removeNum) {
        // inserting undefined
        var _copy2 = [].concat(_toConsumableArray(array));
        _copy2.splice(index, 0, true); // temporary placeholder
        _copy2[index] = undefined; // set to undefined
        return _copy2;
      }
      if (value != null) {
        var _copy3 = [].concat(_toConsumableArray(array));
        _copy3.splice(index, removeNum, value); // removing and adding
        return _copy3;
      }
      var _copy = [].concat(_toConsumableArray(array));
      _copy.splice(index, removeNum); // removing
      return _copy;
    }
    if (removeNum) {
      // trying to remove non-existant item: return original array
      return array;
    }
    // trying to add outside of range: just set value
    var copy = [].concat(_toConsumableArray(array));
    copy[index] = value;
    return copy;
  };

  /* harmony default export */__webpack_exports__["a"] = splice;

  /***/
},
/* 268 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_lodash_es_toPath__ = __webpack_require__(47);

  var getIn = function getIn(state, field) {
    if (!state) {
      return state;
    }

    var path = Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_toPath__["a" /* default */])(field);
    var length = path.length;
    if (!length) {
      return undefined;
    }

    var result = state;
    for (var i = 0; i < length && result; ++i) {
      result = result[path[i]];
    }

    return result;
  };

  /* harmony default export */__webpack_exports__["a"] = getIn;

  /***/
},
/* 269 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__memoize_js__ = __webpack_require__(270);

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /**
   * A specialized version of `_.memoize` which clears the memoized function's
   * cache when it exceeds `MAX_MEMOIZE_SIZE`.
   *
   * @private
   * @param {Function} func The function to have its output memoized.
   * @returns {Function} Returns the new memoized function.
   */
  function memoizeCapped(func) {
    var result = Object(__WEBPACK_IMPORTED_MODULE_0__memoize_js__["a" /* default */])(func, function (key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }
      return key;
    });

    var cache = result.cache;
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = memoizeCapped;

  /***/
},
/* 270 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__MapCache_js__ = __webpack_require__(71);

  /** Error message constants. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /**
   * Creates a function that memoizes the result of `func`. If `resolver` is
   * provided, it determines the cache key for storing the result based on the
   * arguments provided to the memoized function. By default, the first argument
   * provided to the memoized function is used as the map cache key. The `func`
   * is invoked with the `this` binding of the memoized function.
   *
   * **Note:** The cache is exposed as the `cache` property on the memoized
   * function. Its creation may be customized by replacing the `_.memoize.Cache`
   * constructor with one whose instances implement the
   * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
   * method interface of `clear`, `delete`, `get`, `has`, and `set`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to have its output memoized.
   * @param {Function} [resolver] The function to resolve the cache key.
   * @returns {Function} Returns the new memoized function.
   * @example
   *
   * var object = { 'a': 1, 'b': 2 };
   * var other = { 'c': 3, 'd': 4 };
   *
   * var values = _.memoize(_.values);
   * values(object);
   * // => [1, 2]
   *
   * values(other);
   * // => [3, 4]
   *
   * object.a = 2;
   * values(object);
   * // => [1, 2]
   *
   * // Modify the result cache.
   * values.cache.set(object, ['a', 'b']);
   * values(object);
   * // => ['a', 'b']
   *
   * // Replace `_.memoize.Cache`.
   * _.memoize.Cache = WeakMap;
   */
  function memoize(func, resolver) {
    if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function memoized() {
      var args = arguments,
          key = resolver ? resolver.apply(this, args) : args[0],
          cache = memoized.cache;

      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result) || cache;
      return result;
    };
    memoized.cache = new (memoize.Cache || __WEBPACK_IMPORTED_MODULE_0__MapCache_js__["a" /* default */])();
    return memoized;
  }

  // Expose `MapCache`.
  memoize.Cache = __WEBPACK_IMPORTED_MODULE_0__MapCache_js__["a" /* default */];

  /* harmony default export */__webpack_exports__["a"] = memoize;

  /***/
},
/* 271 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__Hash_js__ = __webpack_require__(272);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__ListCache_js__ = __webpack_require__(50);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__Map_js__ = __webpack_require__(73);

  /**
   * Removes all key-value entries from the map.
   *
   * @private
   * @name clear
   * @memberOf MapCache
   */
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      'hash': new __WEBPACK_IMPORTED_MODULE_0__Hash_js__["a" /* default */](),
      'map': new (__WEBPACK_IMPORTED_MODULE_2__Map_js__["a" /* default */] || __WEBPACK_IMPORTED_MODULE_1__ListCache_js__["a" /* default */])(),
      'string': new __WEBPACK_IMPORTED_MODULE_0__Hash_js__["a" /* default */]()
    };
  }

  /* harmony default export */__webpack_exports__["a"] = mapCacheClear;

  /***/
},
/* 272 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__hashClear_js__ = __webpack_require__(273);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__hashDelete_js__ = __webpack_require__(278);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__hashGet_js__ = __webpack_require__(279);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__hashHas_js__ = __webpack_require__(280);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__hashSet_js__ = __webpack_require__(281);

  /**
   * Creates a hash object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `Hash`.
  Hash.prototype.clear = __WEBPACK_IMPORTED_MODULE_0__hashClear_js__["a" /* default */];
  Hash.prototype['delete'] = __WEBPACK_IMPORTED_MODULE_1__hashDelete_js__["a" /* default */];
  Hash.prototype.get = __WEBPACK_IMPORTED_MODULE_2__hashGet_js__["a" /* default */];
  Hash.prototype.has = __WEBPACK_IMPORTED_MODULE_3__hashHas_js__["a" /* default */];
  Hash.prototype.set = __WEBPACK_IMPORTED_MODULE_4__hashSet_js__["a" /* default */];

  /* harmony default export */__webpack_exports__["a"] = Hash;

  /***/
},
/* 273 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__nativeCreate_js__ = __webpack_require__(49);

  /**
   * Removes all key-value entries from the hash.
   *
   * @private
   * @name clear
   * @memberOf Hash
   */
  function hashClear() {
    this.__data__ = __WEBPACK_IMPORTED_MODULE_0__nativeCreate_js__["a" /* default */] ? Object(__WEBPACK_IMPORTED_MODULE_0__nativeCreate_js__["a" /* default */])(null) : {};
    this.size = 0;
  }

  /* harmony default export */__webpack_exports__["a"] = hashClear;

  /***/
},
/* 274 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isFunction_js__ = __webpack_require__(72);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isMasked_js__ = __webpack_require__(275);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isObject_js__ = __webpack_require__(13);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__toSource_js__ = __webpack_require__(154);

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

  /**
   * The base implementation of `_.isNative` without bad shim checks.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function,
   *  else `false`.
   */
  function baseIsNative(value) {
    if (!Object(__WEBPACK_IMPORTED_MODULE_2__isObject_js__["a" /* default */])(value) || Object(__WEBPACK_IMPORTED_MODULE_1__isMasked_js__["a" /* default */])(value)) {
      return false;
    }
    var pattern = Object(__WEBPACK_IMPORTED_MODULE_0__isFunction_js__["a" /* default */])(value) ? reIsNative : reIsHostCtor;
    return pattern.test(Object(__WEBPACK_IMPORTED_MODULE_3__toSource_js__["a" /* default */])(value));
  }

  /* harmony default export */__webpack_exports__["a"] = baseIsNative;

  /***/
},
/* 275 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__coreJsData_js__ = __webpack_require__(276);

  /** Used to detect methods masquerading as native. */
  var maskSrcKey = function () {
    var uid = /[^.]+$/.exec(__WEBPACK_IMPORTED_MODULE_0__coreJsData_js__["a" /* default */] && __WEBPACK_IMPORTED_MODULE_0__coreJsData_js__["a" /* default */].keys && __WEBPACK_IMPORTED_MODULE_0__coreJsData_js__["a" /* default */].keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
  }();

  /**
   * Checks if `func` has its source masked.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` is masked, else `false`.
   */
  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }

  /* harmony default export */__webpack_exports__["a"] = isMasked;

  /***/
},
/* 276 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(5);

  /** Used to detect overreaching core-js shims. */
  var coreJsData = __WEBPACK_IMPORTED_MODULE_0__root_js__["a" /* default */]['__core-js_shared__'];

  /* harmony default export */__webpack_exports__["a"] = coreJsData;

  /***/
},
/* 277 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */

  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /* harmony default export */__webpack_exports__["a"] = getValue;

  /***/
},
/* 278 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Removes `key` and its value from the hash.
   *
   * @private
   * @name delete
   * @memberOf Hash
   * @param {Object} hash The hash to modify.
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */

  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = hashDelete;

  /***/
},
/* 279 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__nativeCreate_js__ = __webpack_require__(49);

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Gets the hash value for `key`.
   *
   * @private
   * @name get
   * @memberOf Hash
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function hashGet(key) {
    var data = this.__data__;
    if (__WEBPACK_IMPORTED_MODULE_0__nativeCreate_js__["a" /* default */]) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }

  /* harmony default export */__webpack_exports__["a"] = hashGet;

  /***/
},
/* 280 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__nativeCreate_js__ = __webpack_require__(49);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Checks if a hash value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Hash
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function hashHas(key) {
    var data = this.__data__;
    return __WEBPACK_IMPORTED_MODULE_0__nativeCreate_js__["a" /* default */] ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }

  /* harmony default export */__webpack_exports__["a"] = hashHas;

  /***/
},
/* 281 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__nativeCreate_js__ = __webpack_require__(49);

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /**
   * Sets the hash `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Hash
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the hash instance.
   */
  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = __WEBPACK_IMPORTED_MODULE_0__nativeCreate_js__["a" /* default */] && value === undefined ? HASH_UNDEFINED : value;
    return this;
  }

  /* harmony default export */__webpack_exports__["a"] = hashSet;

  /***/
},
/* 282 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Removes all key-value entries from the list cache.
   *
   * @private
   * @name clear
   * @memberOf ListCache
   */

  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }

  /* harmony default export */__webpack_exports__["a"] = listCacheClear;

  /***/
},
/* 283 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__assocIndexOf_js__ = __webpack_require__(51);

  /** Used for built-in method references. */
  var arrayProto = Array.prototype;

  /** Built-in value references. */
  var splice = arrayProto.splice;

  /**
   * Removes `key` and its value from the list cache.
   *
   * @private
   * @name delete
   * @memberOf ListCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function listCacheDelete(key) {
    var data = this.__data__,
        index = Object(__WEBPACK_IMPORTED_MODULE_0__assocIndexOf_js__["a" /* default */])(data, key);

    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    --this.size;
    return true;
  }

  /* harmony default export */__webpack_exports__["a"] = listCacheDelete;

  /***/
},
/* 284 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__assocIndexOf_js__ = __webpack_require__(51);

  /**
   * Gets the list cache value for `key`.
   *
   * @private
   * @name get
   * @memberOf ListCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function listCacheGet(key) {
    var data = this.__data__,
        index = Object(__WEBPACK_IMPORTED_MODULE_0__assocIndexOf_js__["a" /* default */])(data, key);

    return index < 0 ? undefined : data[index][1];
  }

  /* harmony default export */__webpack_exports__["a"] = listCacheGet;

  /***/
},
/* 285 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__assocIndexOf_js__ = __webpack_require__(51);

  /**
   * Checks if a list cache value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf ListCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function listCacheHas(key) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__assocIndexOf_js__["a" /* default */])(this.__data__, key) > -1;
  }

  /* harmony default export */__webpack_exports__["a"] = listCacheHas;

  /***/
},
/* 286 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__assocIndexOf_js__ = __webpack_require__(51);

  /**
   * Sets the list cache `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf ListCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the list cache instance.
   */
  function listCacheSet(key, value) {
    var data = this.__data__,
        index = Object(__WEBPACK_IMPORTED_MODULE_0__assocIndexOf_js__["a" /* default */])(data, key);

    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }

  /* harmony default export */__webpack_exports__["a"] = listCacheSet;

  /***/
},
/* 287 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getMapData_js__ = __webpack_require__(52);

  /**
   * Removes `key` and its value from the map.
   *
   * @private
   * @name delete
   * @memberOf MapCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function mapCacheDelete(key) {
    var result = Object(__WEBPACK_IMPORTED_MODULE_0__getMapData_js__["a" /* default */])(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = mapCacheDelete;

  /***/
},
/* 288 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Checks if `value` is suitable for use as unique object key.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
   */

  function isKeyable(value) {
    var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
  }

  /* harmony default export */__webpack_exports__["a"] = isKeyable;

  /***/
},
/* 289 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getMapData_js__ = __webpack_require__(52);

  /**
   * Gets the map value for `key`.
   *
   * @private
   * @name get
   * @memberOf MapCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function mapCacheGet(key) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__getMapData_js__["a" /* default */])(this, key).get(key);
  }

  /* harmony default export */__webpack_exports__["a"] = mapCacheGet;

  /***/
},
/* 290 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getMapData_js__ = __webpack_require__(52);

  /**
   * Checks if a map value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf MapCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function mapCacheHas(key) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__getMapData_js__["a" /* default */])(this, key).has(key);
  }

  /* harmony default export */__webpack_exports__["a"] = mapCacheHas;

  /***/
},
/* 291 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getMapData_js__ = __webpack_require__(52);

  /**
   * Sets the map `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf MapCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the map cache instance.
   */
  function mapCacheSet(key, value) {
    var data = Object(__WEBPACK_IMPORTED_MODULE_0__getMapData_js__["a" /* default */])(this, key),
        size = data.size;

    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }

  /* harmony default export */__webpack_exports__["a"] = mapCacheSet;

  /***/
},
/* 292 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(46);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__arrayMap_js__ = __webpack_require__(151);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isArray_js__ = __webpack_require__(6);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__isSymbol_js__ = __webpack_require__(48);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */].prototype : undefined,
      symbolToString = symbolProto ? symbolProto.toString : undefined;

  /**
   * The base implementation of `_.toString` which doesn't convert nullish
   * values to empty strings.
   *
   * @private
   * @param {*} value The value to process.
   * @returns {string} Returns the string.
   */
  function baseToString(value) {
    // Exit early for strings to avoid a performance hit in some environments.
    if (typeof value == 'string') {
      return value;
    }
    if (Object(__WEBPACK_IMPORTED_MODULE_2__isArray_js__["a" /* default */])(value)) {
      // Recursively convert values (susceptible to call stack limits).
      return Object(__WEBPACK_IMPORTED_MODULE_1__arrayMap_js__["a" /* default */])(value, baseToString) + '';
    }
    if (Object(__WEBPACK_IMPORTED_MODULE_3__isSymbol_js__["a" /* default */])(value)) {
      return symbolToString ? symbolToString.call(value) : '';
    }
    var result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
  }

  /* harmony default export */__webpack_exports__["a"] = baseToString;

  /***/
},
/* 293 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_lodash_es_toPath__ = __webpack_require__(47);

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }return obj;
  }

  var setInWithPath = function setInWithPath(state, value, path, pathIndex) {
    if (pathIndex >= path.length) {
      return value;
    }

    var first = path[pathIndex];
    var firstState = state && (Array.isArray(state) ? state[Number(first)] : state[first]);
    var next = setInWithPath(firstState, value, path, pathIndex + 1);

    if (!state) {
      if (isNaN(first)) {
        return _defineProperty({}, first, next);
      }
      var initialized = [];
      initialized[parseInt(first, 10)] = next;
      return initialized;
    }

    if (Array.isArray(state)) {
      var copy = [].concat(state);
      copy[parseInt(first, 10)] = next;
      return copy;
    }

    return _extends({}, state, _defineProperty({}, first, next));
  };

  var setIn = function setIn(state, field, value) {
    return setInWithPath(state, value, Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_toPath__["a" /* default */])(field), 0);
  };

  /* harmony default export */__webpack_exports__["a"] = setIn;

  /***/
},
/* 294 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_lodash_es_isEqualWith__ = __webpack_require__(156);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);

  var customizer = function customizer(obj, other) {
    if (obj === other) return true;

    if (!obj && !other) {
      var objIsEmpty = obj === null || obj === undefined || obj === '';
      var otherIsEmpty = other === null || other === undefined || other === '';
      return objIsEmpty === otherIsEmpty;
    }

    if (obj && other && obj._error !== other._error) return false;
    if (obj && other && obj._warning !== other._warning) return false;
    if (__WEBPACK_IMPORTED_MODULE_1_react___default.a.isValidElement(obj) || __WEBPACK_IMPORTED_MODULE_1_react___default.a.isValidElement(other)) return false;
  };

  var deepEqual = function deepEqual(a, b) {
    return Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_isEqualWith__["a" /* default */])(a, b, customizer);
  };

  /* harmony default export */__webpack_exports__["a"] = deepEqual;

  /***/
},
/* 295 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__Stack_js__ = __webpack_require__(75);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__equalArrays_js__ = __webpack_require__(157);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__equalByTag_js__ = __webpack_require__(306);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__equalObjects_js__ = __webpack_require__(309);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__getTag_js__ = __webpack_require__(324);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__isArray_js__ = __webpack_require__(6);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__isBuffer_js__ = __webpack_require__(78);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_7__isTypedArray_js__ = __webpack_require__(81);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      objectTag = '[object Object]';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * A specialized version of `baseIsEqual` for arrays and objects which performs
   * deep comparisons and tracks traversed objects enabling objects with circular
   * references to be compared.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} [stack] Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = Object(__WEBPACK_IMPORTED_MODULE_5__isArray_js__["a" /* default */])(object),
        othIsArr = Object(__WEBPACK_IMPORTED_MODULE_5__isArray_js__["a" /* default */])(other),
        objTag = objIsArr ? arrayTag : Object(__WEBPACK_IMPORTED_MODULE_4__getTag_js__["a" /* default */])(object),
        othTag = othIsArr ? arrayTag : Object(__WEBPACK_IMPORTED_MODULE_4__getTag_js__["a" /* default */])(other);

    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;

    var objIsObj = objTag == objectTag,
        othIsObj = othTag == objectTag,
        isSameTag = objTag == othTag;

    if (isSameTag && Object(__WEBPACK_IMPORTED_MODULE_6__isBuffer_js__["a" /* default */])(object)) {
      if (!Object(__WEBPACK_IMPORTED_MODULE_6__isBuffer_js__["a" /* default */])(other)) {
        return false;
      }
      objIsArr = true;
      objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
      stack || (stack = new __WEBPACK_IMPORTED_MODULE_0__Stack_js__["a" /* default */]());
      return objIsArr || Object(__WEBPACK_IMPORTED_MODULE_7__isTypedArray_js__["a" /* default */])(object) ? Object(__WEBPACK_IMPORTED_MODULE_1__equalArrays_js__["a" /* default */])(object, other, bitmask, customizer, equalFunc, stack) : Object(__WEBPACK_IMPORTED_MODULE_2__equalByTag_js__["a" /* default */])(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object,
            othUnwrapped = othIsWrapped ? other.value() : other;

        stack || (stack = new __WEBPACK_IMPORTED_MODULE_0__Stack_js__["a" /* default */]());
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new __WEBPACK_IMPORTED_MODULE_0__Stack_js__["a" /* default */]());
    return Object(__WEBPACK_IMPORTED_MODULE_3__equalObjects_js__["a" /* default */])(object, other, bitmask, customizer, equalFunc, stack);
  }

  /* harmony default export */__webpack_exports__["a"] = baseIsEqualDeep;

  /***/
},
/* 296 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__ListCache_js__ = __webpack_require__(50);

  /**
   * Removes all key-value entries from the stack.
   *
   * @private
   * @name clear
   * @memberOf Stack
   */
  function stackClear() {
    this.__data__ = new __WEBPACK_IMPORTED_MODULE_0__ListCache_js__["a" /* default */]();
    this.size = 0;
  }

  /* harmony default export */__webpack_exports__["a"] = stackClear;

  /***/
},
/* 297 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Removes `key` and its value from the stack.
   *
   * @private
   * @name delete
   * @memberOf Stack
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */

  function stackDelete(key) {
    var data = this.__data__,
        result = data['delete'](key);

    this.size = data.size;
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = stackDelete;

  /***/
},
/* 298 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Gets the stack value for `key`.
   *
   * @private
   * @name get
   * @memberOf Stack
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */

  function stackGet(key) {
    return this.__data__.get(key);
  }

  /* harmony default export */__webpack_exports__["a"] = stackGet;

  /***/
},
/* 299 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Checks if a stack value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Stack
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */

  function stackHas(key) {
    return this.__data__.has(key);
  }

  /* harmony default export */__webpack_exports__["a"] = stackHas;

  /***/
},
/* 300 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__ListCache_js__ = __webpack_require__(50);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__Map_js__ = __webpack_require__(73);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__MapCache_js__ = __webpack_require__(71);

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * Sets the stack `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Stack
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the stack cache instance.
   */
  function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof __WEBPACK_IMPORTED_MODULE_0__ListCache_js__["a" /* default */]) {
      var pairs = data.__data__;
      if (!__WEBPACK_IMPORTED_MODULE_1__Map_js__["a" /* default */] || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new __WEBPACK_IMPORTED_MODULE_2__MapCache_js__["a" /* default */](pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }

  /* harmony default export */__webpack_exports__["a"] = stackSet;

  /***/
},
/* 301 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__MapCache_js__ = __webpack_require__(71);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__setCacheAdd_js__ = __webpack_require__(302);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__setCacheHas_js__ = __webpack_require__(303);

  /**
   *
   * Creates an array cache object to store unique values.
   *
   * @private
   * @constructor
   * @param {Array} [values] The values to cache.
   */
  function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;

    this.__data__ = new __WEBPACK_IMPORTED_MODULE_0__MapCache_js__["a" /* default */]();
    while (++index < length) {
      this.add(values[index]);
    }
  }

  // Add methods to `SetCache`.
  SetCache.prototype.add = SetCache.prototype.push = __WEBPACK_IMPORTED_MODULE_1__setCacheAdd_js__["a" /* default */];
  SetCache.prototype.has = __WEBPACK_IMPORTED_MODULE_2__setCacheHas_js__["a" /* default */];

  /* harmony default export */__webpack_exports__["a"] = SetCache;

  /***/
},
/* 302 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /** Used to stand-in for `undefined` hash values. */

  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /**
   * Adds `value` to the array cache.
   *
   * @private
   * @name add
   * @memberOf SetCache
   * @alias push
   * @param {*} value The value to cache.
   * @returns {Object} Returns the cache instance.
   */
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }

  /* harmony default export */__webpack_exports__["a"] = setCacheAdd;

  /***/
},
/* 303 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Checks if `value` is in the array cache.
   *
   * @private
   * @name has
   * @memberOf SetCache
   * @param {*} value The value to search for.
   * @returns {number} Returns `true` if `value` is found, else `false`.
   */

  function setCacheHas(value) {
    return this.__data__.has(value);
  }

  /* harmony default export */__webpack_exports__["a"] = setCacheHas;

  /***/
},
/* 304 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */

  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /* harmony default export */__webpack_exports__["a"] = arraySome;

  /***/
},
/* 305 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */

  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /* harmony default export */__webpack_exports__["a"] = cacheHas;

  /***/
},
/* 306 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(46);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__Uint8Array_js__ = __webpack_require__(158);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__eq_js__ = __webpack_require__(36);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__equalArrays_js__ = __webpack_require__(157);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__mapToArray_js__ = __webpack_require__(307);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__setToArray_js__ = __webpack_require__(308);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** `Object#toString` result references. */
  var boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]';

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__["a" /* default */].prototype : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  /**
   * A specialized version of `baseIsEqualDeep` for comparing objects of
   * the same `toStringTag`.
   *
   * **Note:** This function only supports comparing values with tags of
   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {string} tag The `toStringTag` of the objects to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag:
        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;

      case arrayBufferTag:
        if (object.byteLength != other.byteLength || !equalFunc(new __WEBPACK_IMPORTED_MODULE_1__Uint8Array_js__["a" /* default */](object), new __WEBPACK_IMPORTED_MODULE_1__Uint8Array_js__["a" /* default */](other))) {
          return false;
        }
        return true;

      case boolTag:
      case dateTag:
      case numberTag:
        // Coerce booleans to `1` or `0` and dates to milliseconds.
        // Invalid dates are coerced to `NaN`.
        return Object(__WEBPACK_IMPORTED_MODULE_2__eq_js__["a" /* default */])(+object, +other);

      case errorTag:
        return object.name == other.name && object.message == other.message;

      case regexpTag:
      case stringTag:
        // Coerce regexes to strings and treat strings, primitives and objects,
        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
        // for more details.
        return object == other + '';

      case mapTag:
        var convert = __WEBPACK_IMPORTED_MODULE_4__mapToArray_js__["a" /* default */];

      case setTag:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
        convert || (convert = __WEBPACK_IMPORTED_MODULE_5__setToArray_js__["a" /* default */]);

        if (object.size != other.size && !isPartial) {
          return false;
        }
        // Assume cyclic values are equal.
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= COMPARE_UNORDERED_FLAG;

        // Recursively compare objects (susceptible to call stack limits).
        stack.set(object, other);
        var result = Object(__WEBPACK_IMPORTED_MODULE_3__equalArrays_js__["a" /* default */])(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack['delete'](object);
        return result;

      case symbolTag:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }
    }
    return false;
  }

  /* harmony default export */__webpack_exports__["a"] = equalByTag;

  /***/
},
/* 307 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */

  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function (value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = mapToArray;

  /***/
},
/* 308 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */

  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function (value) {
      result[++index] = value;
    });
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = setToArray;

  /***/
},
/* 309 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getAllKeys_js__ = __webpack_require__(310);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1;

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * A specialized version of `baseIsEqualDeep` for objects with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        objProps = Object(__WEBPACK_IMPORTED_MODULE_0__getAllKeys_js__["a" /* default */])(object),
        objLength = objProps.length,
        othProps = Object(__WEBPACK_IMPORTED_MODULE_0__getAllKeys_js__["a" /* default */])(other),
        othLength = othProps.length;

    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
        return false;
      }
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(object);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);

    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key],
          othValue = other[key];

      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
      }
      // Recursively compare objects (susceptible to call stack limits).
      if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor,
          othCtor = other.constructor;

      // Non `Object` object instances with different constructors are not equal.
      if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = equalObjects;

  /***/
},
/* 310 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseGetAllKeys_js__ = __webpack_require__(311);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__getSymbols_js__ = __webpack_require__(313);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__keys_js__ = __webpack_require__(76);

  /**
   * Creates an array of own enumerable property names and symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeys(object) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__baseGetAllKeys_js__["a" /* default */])(object, __WEBPACK_IMPORTED_MODULE_2__keys_js__["a" /* default */], __WEBPACK_IMPORTED_MODULE_1__getSymbols_js__["a" /* default */]);
  }

  /* harmony default export */__webpack_exports__["a"] = getAllKeys;

  /***/
},
/* 311 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__arrayPush_js__ = __webpack_require__(312);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isArray_js__ = __webpack_require__(6);

  /**
   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
   * `keysFunc` and `symbolsFunc` to get the enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @param {Function} symbolsFunc The function to get the symbols of `object`.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return Object(__WEBPACK_IMPORTED_MODULE_1__isArray_js__["a" /* default */])(object) ? result : Object(__WEBPACK_IMPORTED_MODULE_0__arrayPush_js__["a" /* default */])(result, symbolsFunc(object));
  }

  /* harmony default export */__webpack_exports__["a"] = baseGetAllKeys;

  /***/
},
/* 312 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */

  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /* harmony default export */__webpack_exports__["a"] = arrayPush;

  /***/
},
/* 313 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__arrayFilter_js__ = __webpack_require__(314);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__stubArray_js__ = __webpack_require__(315);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Built-in value references. */
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols;

  /**
   * Creates an array of the own enumerable symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbols = !nativeGetSymbols ? __WEBPACK_IMPORTED_MODULE_1__stubArray_js__["a" /* default */] : function (object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return Object(__WEBPACK_IMPORTED_MODULE_0__arrayFilter_js__["a" /* default */])(nativeGetSymbols(object), function (symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };

  /* harmony default export */__webpack_exports__["a"] = getSymbols;

  /***/
},
/* 314 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */

  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = arrayFilter;

  /***/
},
/* 315 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * This method returns a new empty array.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {Array} Returns the new empty array.
   * @example
   *
   * var arrays = _.times(2, _.stubArray);
   *
   * console.log(arrays);
   * // => [[], []]
   *
   * console.log(arrays[0] === arrays[1]);
   * // => false
   */

  function stubArray() {
    return [];
  }

  /* harmony default export */__webpack_exports__["a"] = stubArray;

  /***/
},
/* 316 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */

  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = baseTimes;

  /***/
},
/* 317 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(25);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__ = __webpack_require__(17);

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]';

  /**
   * The base implementation of `_.isArguments`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   */
  function baseIsArguments(value) {
    return Object(__WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__["a" /* default */])(value) && Object(__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__["a" /* default */])(value) == argsTag;
  }

  /* harmony default export */__webpack_exports__["a"] = baseIsArguments;

  /***/
},
/* 318 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * This method returns `false`.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {boolean} Returns `false`.
   * @example
   *
   * _.times(2, _.stubFalse);
   * // => [false, false]
   */

  function stubFalse() {
    return false;
  }

  /* harmony default export */__webpack_exports__["a"] = stubFalse;

  /***/
},
/* 319 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__ = __webpack_require__(25);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isLength_js__ = __webpack_require__(82);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__ = __webpack_require__(17);

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      weakMapTag = '[object WeakMap]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

  /**
   * The base implementation of `_.isTypedArray` without Node.js optimizations.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   */
  function baseIsTypedArray(value) {
    return Object(__WEBPACK_IMPORTED_MODULE_2__isObjectLike_js__["a" /* default */])(value) && Object(__WEBPACK_IMPORTED_MODULE_1__isLength_js__["a" /* default */])(value.length) && !!typedArrayTags[Object(__WEBPACK_IMPORTED_MODULE_0__baseGetTag_js__["a" /* default */])(value)];
  }

  /* harmony default export */__webpack_exports__["a"] = baseIsTypedArray;

  /***/
},
/* 320 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */

  function baseUnary(func) {
    return function (value) {
      return func(value);
    };
  }

  /* harmony default export */__webpack_exports__["a"] = baseUnary;

  /***/
},
/* 321 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (module) {
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__ = __webpack_require__(132);

    /** Detect free variable `exports`. */
    var freeExports = (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) == 'object' && exports && !exports.nodeType && exports;

    /** Detect free variable `module`. */
    var freeModule = freeExports && (typeof module === "undefined" ? "undefined" : _typeof4(module)) == 'object' && module && !module.nodeType && module;

    /** Detect the popular CommonJS extension `module.exports`. */
    var moduleExports = freeModule && freeModule.exports === freeExports;

    /** Detect free variable `process` from Node.js. */
    var freeProcess = moduleExports && __WEBPACK_IMPORTED_MODULE_0__freeGlobal_js__["a" /* default */].process;

    /** Used to access faster Node.js helpers. */
    var nodeUtil = function () {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding('util');
      } catch (e) {}
    }();

    /* harmony default export */__webpack_exports__["a"] = nodeUtil;

    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(79)(module));

  /***/
},
/* 322 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isPrototype_js__ = __webpack_require__(83);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__nativeKeys_js__ = __webpack_require__(323);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys(object) {
    if (!Object(__WEBPACK_IMPORTED_MODULE_0__isPrototype_js__["a" /* default */])(object)) {
      return Object(__WEBPACK_IMPORTED_MODULE_1__nativeKeys_js__["a" /* default */])(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = baseKeys;

  /***/
},
/* 323 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__overArg_js__ = __webpack_require__(134);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeKeys = Object(__WEBPACK_IMPORTED_MODULE_0__overArg_js__["a" /* default */])(Object.keys, Object);

  /* harmony default export */__webpack_exports__["a"] = nativeKeys;

  /***/
},
/* 324 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__DataView_js__ = __webpack_require__(325);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__Map_js__ = __webpack_require__(73);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__Promise_js__ = __webpack_require__(326);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__Set_js__ = __webpack_require__(327);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__WeakMap_js__ = __webpack_require__(328);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__baseGetTag_js__ = __webpack_require__(25);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__toSource_js__ = __webpack_require__(154);

  /** `Object#toString` result references. */
  var mapTag = '[object Map]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      setTag = '[object Set]',
      weakMapTag = '[object WeakMap]';

  var dataViewTag = '[object DataView]';

  /** Used to detect maps, sets, and weakmaps. */
  var dataViewCtorString = Object(__WEBPACK_IMPORTED_MODULE_6__toSource_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_0__DataView_js__["a" /* default */]),
      mapCtorString = Object(__WEBPACK_IMPORTED_MODULE_6__toSource_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__Map_js__["a" /* default */]),
      promiseCtorString = Object(__WEBPACK_IMPORTED_MODULE_6__toSource_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_2__Promise_js__["a" /* default */]),
      setCtorString = Object(__WEBPACK_IMPORTED_MODULE_6__toSource_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_3__Set_js__["a" /* default */]),
      weakMapCtorString = Object(__WEBPACK_IMPORTED_MODULE_6__toSource_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_4__WeakMap_js__["a" /* default */]);

  /**
   * Gets the `toStringTag` of `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  var getTag = __WEBPACK_IMPORTED_MODULE_5__baseGetTag_js__["a" /* default */];

  // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
  if (__WEBPACK_IMPORTED_MODULE_0__DataView_js__["a" /* default */] && getTag(new __WEBPACK_IMPORTED_MODULE_0__DataView_js__["a" /* default */](new ArrayBuffer(1))) != dataViewTag || __WEBPACK_IMPORTED_MODULE_1__Map_js__["a" /* default */] && getTag(new __WEBPACK_IMPORTED_MODULE_1__Map_js__["a" /* default */]()) != mapTag || __WEBPACK_IMPORTED_MODULE_2__Promise_js__["a" /* default */] && getTag(__WEBPACK_IMPORTED_MODULE_2__Promise_js__["a" /* default */].resolve()) != promiseTag || __WEBPACK_IMPORTED_MODULE_3__Set_js__["a" /* default */] && getTag(new __WEBPACK_IMPORTED_MODULE_3__Set_js__["a" /* default */]()) != setTag || __WEBPACK_IMPORTED_MODULE_4__WeakMap_js__["a" /* default */] && getTag(new __WEBPACK_IMPORTED_MODULE_4__WeakMap_js__["a" /* default */]()) != weakMapTag) {
    getTag = function getTag(value) {
      var result = Object(__WEBPACK_IMPORTED_MODULE_5__baseGetTag_js__["a" /* default */])(value),
          Ctor = result == objectTag ? value.constructor : undefined,
          ctorString = Ctor ? Object(__WEBPACK_IMPORTED_MODULE_6__toSource_js__["a" /* default */])(Ctor) : '';

      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;
          case mapCtorString:
            return mapTag;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag;
          case weakMapCtorString:
            return weakMapTag;
        }
      }
      return result;
    };
  }

  /* harmony default export */__webpack_exports__["a"] = getTag;

  /***/
},
/* 325 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getNative_js__ = __webpack_require__(18);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__root_js__ = __webpack_require__(5);

  /* Built-in method references that are verified to be native. */
  var DataView = Object(__WEBPACK_IMPORTED_MODULE_0__getNative_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__root_js__["a" /* default */], 'DataView');

  /* harmony default export */__webpack_exports__["a"] = DataView;

  /***/
},
/* 326 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getNative_js__ = __webpack_require__(18);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__root_js__ = __webpack_require__(5);

  /* Built-in method references that are verified to be native. */
  var Promise = Object(__WEBPACK_IMPORTED_MODULE_0__getNative_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__root_js__["a" /* default */], 'Promise');

  /* harmony default export */__webpack_exports__["a"] = Promise;

  /***/
},
/* 327 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getNative_js__ = __webpack_require__(18);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__root_js__ = __webpack_require__(5);

  /* Built-in method references that are verified to be native. */
  var Set = Object(__WEBPACK_IMPORTED_MODULE_0__getNative_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__root_js__["a" /* default */], 'Set');

  /* harmony default export */__webpack_exports__["a"] = Set;

  /***/
},
/* 328 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__getNative_js__ = __webpack_require__(18);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__root_js__ = __webpack_require__(5);

  /* Built-in method references that are verified to be native. */
  var WeakMap = Object(__WEBPACK_IMPORTED_MODULE_0__getNative_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__root_js__["a" /* default */], 'WeakMap');

  /* harmony default export */__webpack_exports__["a"] = WeakMap;

  /***/
},
/* 329 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_lodash_es_toPath__ = __webpack_require__(47);

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }return obj;
  }

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }return arr2;
    } else {
      return Array.from(arr);
    }
  }

  function deleteInWithPath(state, first) {
    if (state === undefined || state === null || first === undefined || first === null) {
      return state;
    }

    for (var _len = arguments.length, rest = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      rest[_key - 2] = arguments[_key];
    }

    if (rest.length) {
      if (Array.isArray(state)) {
        if (isNaN(first)) {
          throw new Error('Must access array elements with a number, not "' + String(first) + '".');
        }
        var firstIndex = Number(first);
        if (firstIndex < state.length) {
          var result = deleteInWithPath.apply(undefined, [state && state[firstIndex]].concat(_toConsumableArray(rest)));
          if (result !== state[firstIndex]) {
            var copy = [].concat(_toConsumableArray(state));
            copy[firstIndex] = result;
            return copy;
          }
        }
        return state;
      }
      if (first in state) {
        var _result = deleteInWithPath.apply(undefined, [state && state[first]].concat(_toConsumableArray(rest)));
        return state[first] === _result ? state : _extends({}, state, _defineProperty({}, first, _result));
      }
      return state;
    }
    if (Array.isArray(state)) {
      if (isNaN(first)) {
        throw new Error('Cannot delete non-numerical index from an array. Given: "' + String(first));
      }
      var _firstIndex = Number(first);
      if (_firstIndex < state.length) {
        var _copy = [].concat(_toConsumableArray(state));
        _copy.splice(_firstIndex, 1);
        return _copy;
      }
      return state;
    }
    if (first in state) {
      var _copy2 = _extends({}, state);
      delete _copy2[first];
      return _copy2;
    }
    return state;
  }

  var deleteIn = function deleteIn(state, field) {
    return deleteInWithPath.apply(undefined, [state].concat(_toConsumableArray(Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_toPath__["a" /* default */])(field))));
  };

  /* harmony default export */__webpack_exports__["a"] = deleteIn;

  /***/
},
/* 330 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  function keys(value) {
    if (!value) {
      return [];
    }

    if (Array.isArray(value)) {
      return value.map(function (i) {
        return i.name;
      });
    }

    return Object.keys(value);
  }

  /* harmony default export */__webpack_exports__["a"] = keys;

  /***/
},
/* 331 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__createFields__ = __webpack_require__(332);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__createFields__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 332 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_invariant__ = __webpack_require__(23);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_invariant__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__ConnectedFields__ = __webpack_require__(333);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__util_shallowCompare__ = __webpack_require__(160);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__structure_plain__ = __webpack_require__(1);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__util_prefixName__ = __webpack_require__(35);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var validateNameProp = function validateNameProp(prop) {
    if (!prop) {
      return new Error('No "names" prop was specified <Fields/>');
    }
    if (!Array.isArray(prop) && !prop._isFieldArray) {
      return new Error('Invalid prop "names" supplied to <Fields/>. Must be either an array of strings or the fields array generated by FieldArray.');
    }
  };

  var createFields = function createFields(structure) {
    var ConnectedFields = Object(__WEBPACK_IMPORTED_MODULE_3__ConnectedFields__["a" /* default */])(structure);

    var Fields = function (_Component) {
      _inherits(Fields, _Component);

      function Fields(props, context) {
        _classCallCheck(this, Fields);

        var _this = _possibleConstructorReturn(this, (Fields.__proto__ || Object.getPrototypeOf(Fields)).call(this, props, context));

        if (!context._reduxForm) {
          throw new Error('Fields must be inside a component decorated with reduxForm()');
        }
        return _this;
      }

      _createClass(Fields, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          return Object(__WEBPACK_IMPORTED_MODULE_4__util_shallowCompare__["a" /* default */])(this, nextProps);
        }
      }, {
        key: 'componentWillMount',
        value: function componentWillMount() {
          var error = validateNameProp(this.props.names);
          if (error) {
            throw error;
          }
          var context = this.context;
          var register = context._reduxForm.register;

          this.names.forEach(function (name) {
            return register(name, 'Field');
          });
        }
      }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
          if (!__WEBPACK_IMPORTED_MODULE_5__structure_plain__["a" /* default */].deepEqual(this.props.names, nextProps.names)) {
            var context = this.context;
            var _context$_reduxForm = context._reduxForm,
                register = _context$_reduxForm.register,
                unregister = _context$_reduxForm.unregister;
            // unregister old name

            this.props.names.forEach(function (name) {
              return unregister(Object(__WEBPACK_IMPORTED_MODULE_6__util_prefixName__["a" /* default */])(context, name));
            });
            // register new name
            nextProps.names.forEach(function (name) {
              return register(Object(__WEBPACK_IMPORTED_MODULE_6__util_prefixName__["a" /* default */])(context, name), 'Field');
            });
          }
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          var context = this.context;
          var unregister = context._reduxForm.unregister;

          this.props.names.forEach(function (name) {
            return unregister(Object(__WEBPACK_IMPORTED_MODULE_6__util_prefixName__["a" /* default */])(context, name));
          });
        }
      }, {
        key: 'getRenderedComponent',
        value: function getRenderedComponent() {
          __WEBPACK_IMPORTED_MODULE_2_invariant___default()(this.props.withRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a withRef prop to Fields');
          return this.refs.connected.getWrappedInstance().getRenderedComponent();
        }
      }, {
        key: 'render',
        value: function render() {
          var context = this.context;

          return Object(__WEBPACK_IMPORTED_MODULE_0_react__["createElement"])(ConnectedFields, _extends({}, this.props, {
            names: this.props.names.map(function (name) {
              return Object(__WEBPACK_IMPORTED_MODULE_6__util_prefixName__["a" /* default */])(context, name);
            }),
            _reduxForm: this.context._reduxForm,
            ref: 'connected'
          }));
        }
      }, {
        key: 'names',
        get: function get() {
          var context = this.context;

          return this.props.names.map(function (name) {
            return Object(__WEBPACK_IMPORTED_MODULE_6__util_prefixName__["a" /* default */])(context, name);
          });
        }
      }, {
        key: 'dirty',
        get: function get() {
          return this.refs.connected.getWrappedInstance().isDirty();
        }
      }, {
        key: 'pristine',
        get: function get() {
          return !this.dirty;
        }
      }, {
        key: 'values',
        get: function get() {
          return this.refs.connected && this.refs.connected.getWrappedInstance().getValues();
        }
      }]);

      return Fields;
    }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

    Fields.propTypes = {
      names: function names(props, propName) {
        return validateNameProp(props[propName]);
      },
      component: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string]).isRequired,
      format: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      parse: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func,
      props: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
      withRef: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool
    };
    Fields.contextTypes = {
      _reduxForm: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
    };

    return Fields;
  };

  /* harmony default export */__webpack_exports__["a"] = createFields;

  /***/
},
/* 333 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(8);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__createFieldProps__ = __webpack_require__(147);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__structure_plain__ = __webpack_require__(1);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__events_onChangeValue__ = __webpack_require__(148);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var propsToNotUpdateFor = ['_reduxForm'];

  var createConnectedFields = function createConnectedFields(structure) {
    var deepEqual = structure.deepEqual,
        getIn = structure.getIn,
        size = structure.size;

    var getSyncError = function getSyncError(syncErrors, name) {
      // Because the error for this field might not be at a level in the error structure where
      // it can be set directly, it might need to be unwrapped from the _error property
      return __WEBPACK_IMPORTED_MODULE_4__structure_plain__["a" /* default */].getIn(syncErrors, name + '._error') || __WEBPACK_IMPORTED_MODULE_4__structure_plain__["a" /* default */].getIn(syncErrors, name);
    };

    var getSyncWarning = function getSyncWarning(syncWarnings, name) {
      var warning = getIn(syncWarnings, name);
      // Because the warning for this field might not be at a level in the warning structure where
      // it can be set directly, it might need to be unwrapped from the _warning property
      return warning && warning._warning ? warning._warning : warning;
    };

    var ConnectedFields = function (_Component) {
      _inherits(ConnectedFields, _Component);

      function ConnectedFields(props) {
        _classCallCheck(this, ConnectedFields);

        var _this = _possibleConstructorReturn(this, (ConnectedFields.__proto__ || Object.getPrototypeOf(ConnectedFields)).call(this, props));

        _this.onChangeFns = {};
        _this.onFocusFns = {};
        _this.onBlurFns = {};

        _this.prepareEventHandlers = function (_ref) {
          var names = _ref.names;
          return names.forEach(function (name) {
            _this.onChangeFns[name] = function (event) {
              return _this.handleChange(name, event);
            };
            _this.onFocusFns[name] = function () {
              return _this.handleFocus(name);
            };
            _this.onBlurFns[name] = function (event) {
              return _this.handleBlur(name, event);
            };
          });
        };

        _this.handleChange = function (name, event) {
          var _this$props = _this.props,
              dispatch = _this$props.dispatch,
              parse = _this$props.parse,
              _reduxForm = _this$props._reduxForm;

          var value = Object(__WEBPACK_IMPORTED_MODULE_5__events_onChangeValue__["a" /* default */])(event, { name: name, parse: parse });

          dispatch(_reduxForm.change(name, value));
        };

        _this.handleFocus = function (name) {
          var _this$props2 = _this.props,
              dispatch = _this$props2.dispatch,
              _reduxForm = _this$props2._reduxForm;

          dispatch(_reduxForm.focus(name));
        };

        _this.handleBlur = function (name, event) {
          var _this$props3 = _this.props,
              dispatch = _this$props3.dispatch,
              parse = _this$props3.parse,
              _reduxForm = _this$props3._reduxForm;

          var value = Object(__WEBPACK_IMPORTED_MODULE_5__events_onChangeValue__["a" /* default */])(event, { name: name, parse: parse });

          // dispatch blur action
          dispatch(_reduxForm.blur(name, value));

          // call post-blur callback
          if (_reduxForm.asyncValidate) {
            _reduxForm.asyncValidate(name, value);
          }
        };

        _this.prepareEventHandlers(props);
        return _this;
      }

      _createClass(ConnectedFields, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {
          var _this2 = this;

          if (this.props.names !== nextProps.names && (size(this.props.names) !== size(nextProps.names) || nextProps.names.some(function (nextName) {
            return !_this2.props._fields[nextName];
          }))) {
            // names has changed. The cached event handlers need to be updated
            this.prepareEventHandlers(nextProps);
          }
        }
      }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          var _this3 = this;

          var nextPropsKeys = Object.keys(nextProps);
          var thisPropsKeys = Object.keys(this.props);
          // if we have children, we MUST update in React 16
          // https://twitter.com/erikras/status/915866544558788608
          return !!(this.props.children || nextProps.children || nextPropsKeys.length !== thisPropsKeys.length || nextPropsKeys.some(function (prop) {
            return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this3.props[prop], nextProps[prop]);
          }));
        }
      }, {
        key: 'isDirty',
        value: function isDirty() {
          var _fields = this.props._fields;

          return Object.keys(_fields).some(function (name) {
            return _fields[name].dirty;
          });
        }
      }, {
        key: 'getValues',
        value: function getValues() {
          var _fields = this.props._fields;

          return Object.keys(_fields).reduce(function (accumulator, name) {
            return __WEBPACK_IMPORTED_MODULE_4__structure_plain__["a" /* default */].setIn(accumulator, name, _fields[name].value);
          }, {});
        }
      }, {
        key: 'getRenderedComponent',
        value: function getRenderedComponent() {
          return this.refs.renderedComponent;
        }
      }, {
        key: 'render',
        value: function render() {
          var _this4 = this;

          var _props = this.props,
              component = _props.component,
              withRef = _props.withRef,
              _fields = _props._fields,
              _reduxForm = _props._reduxForm,
              rest = _objectWithoutProperties(_props, ['component', 'withRef', '_fields', '_reduxForm']);

          var sectionPrefix = _reduxForm.sectionPrefix,
              form = _reduxForm.form;

          var _Object$keys$reduce = Object.keys(_fields).reduce(function (accumulator, name) {
            var connectedProps = _fields[name];

            var _createFieldProps = Object(__WEBPACK_IMPORTED_MODULE_3__createFieldProps__["a" /* default */])(structure, name, _extends({}, connectedProps, rest, {
              form: form,
              onBlur: _this4.onBlurFns[name],
              onChange: _this4.onChangeFns[name],
              onFocus: _this4.onFocusFns[name]
            })),
                custom = _createFieldProps.custom,
                fieldProps = _objectWithoutProperties(_createFieldProps, ['custom']);

            accumulator.custom = custom;
            var fieldName = sectionPrefix ? name.replace(sectionPrefix + '.', '') : name;
            return __WEBPACK_IMPORTED_MODULE_4__structure_plain__["a" /* default */].setIn(accumulator, fieldName, fieldProps);
          }, {}),
              custom = _Object$keys$reduce.custom,
              props = _objectWithoutProperties(_Object$keys$reduce, ['custom']);

          if (withRef) {
            props.ref = 'renderedComponent';
          }

          return Object(__WEBPACK_IMPORTED_MODULE_0_react__["createElement"])(component, _extends({}, props, custom));
        }
      }]);

      return ConnectedFields;
    }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

    ConnectedFields.propTypes = {
      component: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string]).isRequired,
      _fields: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired,
      props: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
    };

    var connector = Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__["connect"])(function (state, ownProps) {
      var names = ownProps.names,
          _ownProps$_reduxForm = ownProps._reduxForm,
          initialValues = _ownProps$_reduxForm.initialValues,
          getFormState = _ownProps$_reduxForm.getFormState;

      var formState = getFormState(state);
      return {
        _fields: names.reduce(function (accumulator, name) {
          var initialState = getIn(formState, 'initial.' + name);
          var initial = initialState !== undefined ? initialState : initialValues && getIn(initialValues, name);
          var value = getIn(formState, 'values.' + name);
          var syncError = getSyncError(getIn(formState, 'syncErrors'), name);
          var syncWarning = getSyncWarning(getIn(formState, 'syncWarnings'), name);
          var submitting = getIn(formState, 'submitting');
          var pristine = value === initial;
          accumulator[name] = {
            asyncError: getIn(formState, 'asyncErrors.' + name),
            asyncValidating: getIn(formState, 'asyncValidating') === name,
            dirty: !pristine,
            initial: initial,
            pristine: pristine,
            state: getIn(formState, 'fields.' + name),
            submitError: getIn(formState, 'submitErrors.' + name),
            submitFailed: getIn(formState, 'submitFailed'),
            submitting: submitting,
            syncError: syncError,
            syncWarning: syncWarning,
            value: value,
            _value: ownProps.value // save value passed in (for checkboxes)
          };
          return accumulator;
        }, {})
      };
    }, undefined, undefined, { withRef: true });
    return connector(ConnectedFields);
  };

  /* harmony default export */__webpack_exports__["a"] = createConnectedFields;

  /***/
},
/* 334 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__createFieldArray__ = __webpack_require__(335);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__createFieldArray__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 335 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_invariant__ = __webpack_require__(23);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_invariant__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__ConnectedFieldArray__ = __webpack_require__(336);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__util_prefixName__ = __webpack_require__(35);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }return obj;
  }

  var toArray = function toArray(value) {
    return Array.isArray(value) ? value : [value];
  };

  var wrapError = function wrapError(fn, key) {
    return fn && function () {
      var validators = toArray(fn);
      for (var i = 0; i < validators.length; i++) {
        var result = validators[i].apply(validators, arguments);
        if (result) {
          return _defineProperty({}, key, result);
        }
      }
    };
  };

  var createFieldArray = function createFieldArray(structure) {
    var ConnectedFieldArray = Object(__WEBPACK_IMPORTED_MODULE_3__ConnectedFieldArray__["a" /* default */])(structure);

    var FieldArray = function (_Component) {
      _inherits(FieldArray, _Component);

      function FieldArray(props, context) {
        _classCallCheck(this, FieldArray);

        var _this = _possibleConstructorReturn(this, (FieldArray.__proto__ || Object.getPrototypeOf(FieldArray)).call(this, props, context));

        _this.saveRef = function (ref) {
          _this.ref = ref;
        };

        if (!context._reduxForm) {
          throw new Error('FieldArray must be inside a component decorated with reduxForm()');
        }
        return _this;
      }

      _createClass(FieldArray, [{
        key: 'componentWillMount',
        value: function componentWillMount() {
          var _this2 = this;

          this.context._reduxForm.register(this.name, 'FieldArray', function () {
            return wrapError(_this2.props.validate, '_error');
          }, function () {
            return wrapError(_this2.props.warn, '_warning');
          });
        }
      }, {
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps, nextContext) {
          var oldName = Object(__WEBPACK_IMPORTED_MODULE_4__util_prefixName__["a" /* default */])(this.context, this.props.name);
          var newName = Object(__WEBPACK_IMPORTED_MODULE_4__util_prefixName__["a" /* default */])(nextContext, nextProps.name);

          if (oldName !== newName) {
            // unregister old name
            this.context._reduxForm.unregister(oldName);
            // register new name
            this.context._reduxForm.register(newName, 'FieldArray');
          }
        }
      }, {
        key: 'componentWillUnmount',
        value: function componentWillUnmount() {
          this.context._reduxForm.unregister(this.name);
        }
      }, {
        key: 'getRenderedComponent',
        value: function getRenderedComponent() {
          __WEBPACK_IMPORTED_MODULE_2_invariant___default()(this.props.withRef, 'If you want to access getRenderedComponent(), ' + 'you must specify a withRef prop to FieldArray');
          return this.ref && this.ref.getWrappedInstance().getRenderedComponent();
        }
      }, {
        key: 'render',
        value: function render() {
          return Object(__WEBPACK_IMPORTED_MODULE_0_react__["createElement"])(ConnectedFieldArray, _extends({}, this.props, {
            name: this.name,
            _reduxForm: this.context._reduxForm,
            ref: this.saveRef
          }));
        }
      }, {
        key: 'name',
        get: function get() {
          return Object(__WEBPACK_IMPORTED_MODULE_4__util_prefixName__["a" /* default */])(this.context, this.props.name);
        }
      }, {
        key: 'dirty',
        get: function get() {
          return !this.ref || this.ref.getWrappedInstance().dirty;
        }
      }, {
        key: 'pristine',
        get: function get() {
          return !!(this.ref && this.ref.getWrappedInstance().pristine);
        }
      }, {
        key: 'value',
        get: function get() {
          return this.ref ? this.ref.getWrappedInstance().value : undefined;
        }
      }]);

      return FieldArray;
    }(__WEBPACK_IMPORTED_MODULE_0_react__["Component"]);

    FieldArray.propTypes = {
      name: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.string.isRequired,
      component: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func.isRequired,
      props: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object,
      validate: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func)]),
      warn: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.arrayOf(__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.func)]),
      withRef: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool
    };
    FieldArray.contextTypes = {
      _reduxForm: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
    };

    return FieldArray;
  };

  /* harmony default export */__webpack_exports__["a"] = createFieldArray;

  /***/
},
/* 336 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_lodash_es_mapValues__ = __webpack_require__(161);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_prop_types__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3_react_redux__ = __webpack_require__(8);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4_redux__ = __webpack_require__(24);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__createFieldArrayProps__ = __webpack_require__(351);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__structure_plain__ = __webpack_require__(1);

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var propsToNotUpdateFor = ['_reduxForm', 'value'];

  var createConnectedFieldArray = function createConnectedFieldArray(structure) {
    var deepEqual = structure.deepEqual,
        getIn = structure.getIn,
        size = structure.size;

    var getSyncError = function getSyncError(syncErrors, name) {
      // For an array, the error can _ONLY_ be under _error.
      // This is why this getSyncError is not the same as the
      // one in Field.
      return __WEBPACK_IMPORTED_MODULE_6__structure_plain__["a" /* default */].getIn(syncErrors, name + '._error');
    };

    var getSyncWarning = function getSyncWarning(syncWarnings, name) {
      // For an array, the warning can _ONLY_ be under _warning.
      // This is why this getSyncError is not the same as the
      // one in Field.
      return getIn(syncWarnings, name + '._warning');
    };

    var ConnectedFieldArray = function (_Component) {
      _inherits(ConnectedFieldArray, _Component);

      function ConnectedFieldArray() {
        var _ref;

        var _temp, _this, _ret;

        _classCallCheck(this, ConnectedFieldArray);

        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ConnectedFieldArray.__proto__ || Object.getPrototypeOf(ConnectedFieldArray)).call.apply(_ref, [this].concat(args))), _this), _this.saveRef = function (ref) {
          _this.ref = ref;
        }, _this.getValue = function (index) {
          return _this.props.value && getIn(_this.props.value, String(index));
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }

      _createClass(ConnectedFieldArray, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps) {
          var _this2 = this;

          // Update if the elements of the value array was updated.
          var thisValue = this.props.value;
          var nextValue = nextProps.value;

          if (thisValue && nextValue) {
            var nextValueItemsSame = nextValue.every(function (val) {
              return thisValue.includes(val);
            });
            var nextValueItemsOrderChanged = nextValue.some(function (val, index) {
              return val !== thisValue[index];
            });
            if (thisValue.length !== nextValue.length || nextValueItemsSame && nextValueItemsOrderChanged || nextProps.rerenderOnEveryChange && thisValue.some(function (val, index) {
              return !deepEqual(val, nextValue[index]);
            })) {
              return true;
            }
          }

          var nextPropsKeys = Object.keys(nextProps);
          var thisPropsKeys = Object.keys(this.props);
          // if we have children, we MUST update in React 16
          // https://twitter.com/erikras/status/915866544558788608
          return !!(this.props.children || nextProps.children || nextPropsKeys.length !== thisPropsKeys.length || nextPropsKeys.some(function (prop) {
            // useful to debug rerenders
            // if (!plain.deepEqual(this.props[ prop ], nextProps[ prop ])) {
            //   console.info(prop, 'changed', this.props[ prop ], '==>', nextProps[ prop ])
            // }
            return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this2.props[prop], nextProps[prop]);
          }));
        }
      }, {
        key: 'getRenderedComponent',
        value: function getRenderedComponent() {
          return this.ref;
        }
      }, {
        key: 'render',
        value: function render() {
          var _props = this.props,
              component = _props.component,
              withRef = _props.withRef,
              name = _props.name,
              _reduxForm = _props._reduxForm,
              validate = _props.validate,
              warn = _props.warn,
              rerenderOnEveryChange = _props.rerenderOnEveryChange,
              rest = _objectWithoutProperties(_props, ['component', 'withRef', 'name', '_reduxForm', 'validate', 'warn', 'rerenderOnEveryChange']);

          var props = Object(__WEBPACK_IMPORTED_MODULE_5__createFieldArrayProps__["a" /* default */])(structure, name, _reduxForm.form, _reduxForm.sectionPrefix, this.getValue, rest);
          if (withRef) {
            props.ref = this.saveRef;
          }
          return Object(__WEBPACK_IMPORTED_MODULE_1_react__["createElement"])(component, props);
        }
      }, {
        key: 'dirty',
        get: function get() {
          return this.props.dirty;
        }
      }, {
        key: 'pristine',
        get: function get() {
          return this.props.pristine;
        }
      }, {
        key: 'value',
        get: function get() {
          return this.props.value;
        }
      }]);

      return ConnectedFieldArray;
    }(__WEBPACK_IMPORTED_MODULE_1_react__["Component"]);

    ConnectedFieldArray.propTypes = {
      component: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.func, __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.string]).isRequired,
      props: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object,
      rerenderOnEveryChange: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.bool
    };

    ConnectedFieldArray.defaultProps = {
      rerenderOnEveryChange: false
    };

    ConnectedFieldArray.contextTypes = {
      _reduxForm: __WEBPACK_IMPORTED_MODULE_2_prop_types___default.a.object
    };

    var connector = Object(__WEBPACK_IMPORTED_MODULE_3_react_redux__["connect"])(function (state, ownProps) {
      var name = ownProps.name,
          _ownProps$_reduxForm = ownProps._reduxForm,
          initialValues = _ownProps$_reduxForm.initialValues,
          getFormState = _ownProps$_reduxForm.getFormState;

      var formState = getFormState(state);
      var initial = getIn(formState, 'initial.' + name) || initialValues && getIn(initialValues, name);
      var value = getIn(formState, 'values.' + name);
      var submitting = getIn(formState, 'submitting');
      var syncError = getSyncError(getIn(formState, 'syncErrors'), name);
      var syncWarning = getSyncWarning(getIn(formState, 'syncWarnings'), name);
      var pristine = deepEqual(value, initial);
      return {
        asyncError: getIn(formState, 'asyncErrors.' + name + '._error'),
        dirty: !pristine,
        pristine: pristine,
        state: getIn(formState, 'fields.' + name),
        submitError: getIn(formState, 'submitErrors.' + name + '._error'),
        submitFailed: getIn(formState, 'submitFailed'),
        submitting: submitting,
        syncError: syncError,
        syncWarning: syncWarning,
        value: value,
        length: size(value)
      };
    }, function (dispatch, ownProps) {
      var name = ownProps.name,
          _reduxForm = ownProps._reduxForm;
      var arrayInsert = _reduxForm.arrayInsert,
          arrayMove = _reduxForm.arrayMove,
          arrayPop = _reduxForm.arrayPop,
          arrayPush = _reduxForm.arrayPush,
          arrayRemove = _reduxForm.arrayRemove,
          arrayRemoveAll = _reduxForm.arrayRemoveAll,
          arrayShift = _reduxForm.arrayShift,
          arraySplice = _reduxForm.arraySplice,
          arraySwap = _reduxForm.arraySwap,
          arrayUnshift = _reduxForm.arrayUnshift;

      return Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_mapValues__["a" /* default */])({
        arrayInsert: arrayInsert,
        arrayMove: arrayMove,
        arrayPop: arrayPop,
        arrayPush: arrayPush,
        arrayRemove: arrayRemove,
        arrayRemoveAll: arrayRemoveAll,
        arrayShift: arrayShift,
        arraySplice: arraySplice,
        arraySwap: arraySwap,
        arrayUnshift: arrayUnshift
      }, function (actionCreator) {
        return Object(__WEBPACK_IMPORTED_MODULE_4_redux__["bindActionCreators"])(actionCreator.bind(null, name), dispatch);
      });
    }, undefined, { withRef: true });
    return connector(ConnectedFieldArray);
  };

  /* harmony default export */__webpack_exports__["a"] = createConnectedFieldArray;

  /***/
},
/* 337 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseFor_js__ = __webpack_require__(163);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__keys_js__ = __webpack_require__(76);

  /**
   * The base implementation of `_.forOwn` without support for iteratee shorthands.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Object} Returns `object`.
   */
  function baseForOwn(object, iteratee) {
    return object && Object(__WEBPACK_IMPORTED_MODULE_0__baseFor_js__["a" /* default */])(object, iteratee, __WEBPACK_IMPORTED_MODULE_1__keys_js__["a" /* default */]);
  }

  /* harmony default export */__webpack_exports__["a"] = baseForOwn;

  /***/
},
/* 338 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Creates a base function for methods like `_.forIn` and `_.forOwn`.
   *
   * @private
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {Function} Returns the new base function.
   */

  function createBaseFor(fromRight) {
    return function (object, iteratee, keysFunc) {
      var index = -1,
          iterable = Object(object),
          props = keysFunc(object),
          length = props.length;

      while (length--) {
        var key = props[fromRight ? length : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object;
    };
  }

  /* harmony default export */__webpack_exports__["a"] = createBaseFor;

  /***/
},
/* 339 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseMatches_js__ = __webpack_require__(340);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__baseMatchesProperty_js__ = __webpack_require__(343);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__identity_js__ = __webpack_require__(85);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__isArray_js__ = __webpack_require__(6);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__property_js__ = __webpack_require__(348);

  /**
   * The base implementation of `_.iteratee`.
   *
   * @private
   * @param {*} [value=_.identity] The value to convert to an iteratee.
   * @returns {Function} Returns the iteratee.
   */
  function baseIteratee(value) {
    // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
    // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
    if (typeof value == 'function') {
      return value;
    }
    if (value == null) {
      return __WEBPACK_IMPORTED_MODULE_2__identity_js__["a" /* default */];
    }
    if ((typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'object') {
      return Object(__WEBPACK_IMPORTED_MODULE_3__isArray_js__["a" /* default */])(value) ? Object(__WEBPACK_IMPORTED_MODULE_1__baseMatchesProperty_js__["a" /* default */])(value[0], value[1]) : Object(__WEBPACK_IMPORTED_MODULE_0__baseMatches_js__["a" /* default */])(value);
    }
    return Object(__WEBPACK_IMPORTED_MODULE_4__property_js__["a" /* default */])(value);
  }

  /* harmony default export */__webpack_exports__["a"] = baseIteratee;

  /***/
},
/* 340 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseIsMatch_js__ = __webpack_require__(341);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__getMatchData_js__ = __webpack_require__(342);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__matchesStrictComparable_js__ = __webpack_require__(165);

  /**
   * The base implementation of `_.matches` which doesn't clone `source`.
   *
   * @private
   * @param {Object} source The object of property values to match.
   * @returns {Function} Returns the new spec function.
   */
  function baseMatches(source) {
    var matchData = Object(__WEBPACK_IMPORTED_MODULE_1__getMatchData_js__["a" /* default */])(source);
    if (matchData.length == 1 && matchData[0][2]) {
      return Object(__WEBPACK_IMPORTED_MODULE_2__matchesStrictComparable_js__["a" /* default */])(matchData[0][0], matchData[0][1]);
    }
    return function (object) {
      return object === source || Object(__WEBPACK_IMPORTED_MODULE_0__baseIsMatch_js__["a" /* default */])(object, source, matchData);
    };
  }

  /* harmony default export */__webpack_exports__["a"] = baseMatches;

  /***/
},
/* 341 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__Stack_js__ = __webpack_require__(75);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__baseIsEqual_js__ = __webpack_require__(74);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * The base implementation of `_.isMatch` without support for iteratee shorthands.
   *
   * @private
   * @param {Object} object The object to inspect.
   * @param {Object} source The object of property values to match.
   * @param {Array} matchData The property names, values, and compare flags to match.
   * @param {Function} [customizer] The function to customize comparisons.
   * @returns {boolean} Returns `true` if `object` is a match, else `false`.
   */
  function baseIsMatch(object, source, matchData, customizer) {
    var index = matchData.length,
        length = index,
        noCustomizer = !customizer;

    if (object == null) {
      return !length;
    }
    object = Object(object);
    while (index--) {
      var data = matchData[index];
      if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
        return false;
      }
    }
    while (++index < length) {
      data = matchData[index];
      var key = data[0],
          objValue = object[key],
          srcValue = data[1];

      if (noCustomizer && data[2]) {
        if (objValue === undefined && !(key in object)) {
          return false;
        }
      } else {
        var stack = new __WEBPACK_IMPORTED_MODULE_0__Stack_js__["a" /* default */]();
        if (customizer) {
          var result = customizer(objValue, srcValue, key, object, source, stack);
        }
        if (!(result === undefined ? Object(__WEBPACK_IMPORTED_MODULE_1__baseIsEqual_js__["a" /* default */])(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
          return false;
        }
      }
    }
    return true;
  }

  /* harmony default export */__webpack_exports__["a"] = baseIsMatch;

  /***/
},
/* 342 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isStrictComparable_js__ = __webpack_require__(164);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__keys_js__ = __webpack_require__(76);

  /**
   * Gets the property names, values, and compare flags of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the match data of `object`.
   */
  function getMatchData(object) {
    var result = Object(__WEBPACK_IMPORTED_MODULE_1__keys_js__["a" /* default */])(object),
        length = result.length;

    while (length--) {
      var key = result[length],
          value = object[key];

      result[length] = [key, value, Object(__WEBPACK_IMPORTED_MODULE_0__isStrictComparable_js__["a" /* default */])(value)];
    }
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = getMatchData;

  /***/
},
/* 343 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseIsEqual_js__ = __webpack_require__(74);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__get_js__ = __webpack_require__(344);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__hasIn_js__ = __webpack_require__(345);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__isKey_js__ = __webpack_require__(84);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__isStrictComparable_js__ = __webpack_require__(164);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__matchesStrictComparable_js__ = __webpack_require__(165);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__toKey_js__ = __webpack_require__(37);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
   *
   * @private
   * @param {string} path The path of the property to get.
   * @param {*} srcValue The value to match.
   * @returns {Function} Returns the new spec function.
   */
  function baseMatchesProperty(path, srcValue) {
    if (Object(__WEBPACK_IMPORTED_MODULE_3__isKey_js__["a" /* default */])(path) && Object(__WEBPACK_IMPORTED_MODULE_4__isStrictComparable_js__["a" /* default */])(srcValue)) {
      return Object(__WEBPACK_IMPORTED_MODULE_5__matchesStrictComparable_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_6__toKey_js__["a" /* default */])(path), srcValue);
    }
    return function (object) {
      var objValue = Object(__WEBPACK_IMPORTED_MODULE_1__get_js__["a" /* default */])(object, path);
      return objValue === undefined && objValue === srcValue ? Object(__WEBPACK_IMPORTED_MODULE_2__hasIn_js__["a" /* default */])(object, path) : Object(__WEBPACK_IMPORTED_MODULE_0__baseIsEqual_js__["a" /* default */])(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
    };
  }

  /* harmony default export */__webpack_exports__["a"] = baseMatchesProperty;

  /***/
},
/* 344 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseGet_js__ = __webpack_require__(166);

  /**
   * Gets the value at `path` of `object`. If the resolved value is
   * `undefined`, the `defaultValue` is returned in its place.
   *
   * @static
   * @memberOf _
   * @since 3.7.0
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the property to get.
   * @param {*} [defaultValue] The value returned for `undefined` resolved values.
   * @returns {*} Returns the resolved value.
   * @example
   *
   * var object = { 'a': [{ 'b': { 'c': 3 } }] };
   *
   * _.get(object, 'a[0].b.c');
   * // => 3
   *
   * _.get(object, ['a', '0', 'b', 'c']);
   * // => 3
   *
   * _.get(object, 'a.b.c', 'default');
   * // => 'default'
   */
  function get(object, path, defaultValue) {
    var result = object == null ? undefined : Object(__WEBPACK_IMPORTED_MODULE_0__baseGet_js__["a" /* default */])(object, path);
    return result === undefined ? defaultValue : result;
  }

  /* harmony default export */__webpack_exports__["a"] = get;

  /***/
},
/* 345 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseHasIn_js__ = __webpack_require__(346);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__hasPath_js__ = __webpack_require__(347);

  /**
   * Checks if `path` is a direct or inherited property of `object`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   * @example
   *
   * var object = _.create({ 'a': _.create({ 'b': 2 }) });
   *
   * _.hasIn(object, 'a');
   * // => true
   *
   * _.hasIn(object, 'a.b');
   * // => true
   *
   * _.hasIn(object, ['a', 'b']);
   * // => true
   *
   * _.hasIn(object, 'b');
   * // => false
   */
  function hasIn(object, path) {
    return object != null && Object(__WEBPACK_IMPORTED_MODULE_1__hasPath_js__["a" /* default */])(object, path, __WEBPACK_IMPORTED_MODULE_0__baseHasIn_js__["a" /* default */]);
  }

  /* harmony default export */__webpack_exports__["a"] = hasIn;

  /***/
},
/* 346 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * The base implementation of `_.hasIn` without support for deep paths.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {Array|string} key The key to check.
   * @returns {boolean} Returns `true` if `key` exists, else `false`.
   */

  function baseHasIn(object, key) {
    return object != null && key in Object(object);
  }

  /* harmony default export */__webpack_exports__["a"] = baseHasIn;

  /***/
},
/* 347 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__castPath_js__ = __webpack_require__(167);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isArguments_js__ = __webpack_require__(77);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isArray_js__ = __webpack_require__(6);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__isIndex_js__ = __webpack_require__(80);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__isLength_js__ = __webpack_require__(82);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__toKey_js__ = __webpack_require__(37);

  /**
   * Checks if `path` exists on `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @param {Function} hasFunc The function to check properties.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   */
  function hasPath(object, path, hasFunc) {
    path = Object(__WEBPACK_IMPORTED_MODULE_0__castPath_js__["a" /* default */])(path, object);

    var index = -1,
        length = path.length,
        result = false;

    while (++index < length) {
      var key = Object(__WEBPACK_IMPORTED_MODULE_5__toKey_js__["a" /* default */])(path[index]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result || ++index != length) {
      return result;
    }
    length = object == null ? 0 : object.length;
    return !!length && Object(__WEBPACK_IMPORTED_MODULE_4__isLength_js__["a" /* default */])(length) && Object(__WEBPACK_IMPORTED_MODULE_3__isIndex_js__["a" /* default */])(key, length) && (Object(__WEBPACK_IMPORTED_MODULE_2__isArray_js__["a" /* default */])(object) || Object(__WEBPACK_IMPORTED_MODULE_1__isArguments_js__["a" /* default */])(object));
  }

  /* harmony default export */__webpack_exports__["a"] = hasPath;

  /***/
},
/* 348 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseProperty_js__ = __webpack_require__(349);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__basePropertyDeep_js__ = __webpack_require__(350);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isKey_js__ = __webpack_require__(84);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__toKey_js__ = __webpack_require__(37);

  /**
   * Creates a function that returns the value at `path` of a given object.
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Util
   * @param {Array|string} path The path of the property to get.
   * @returns {Function} Returns the new accessor function.
   * @example
   *
   * var objects = [
   *   { 'a': { 'b': 2 } },
   *   { 'a': { 'b': 1 } }
   * ];
   *
   * _.map(objects, _.property('a.b'));
   * // => [2, 1]
   *
   * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
   * // => [1, 2]
   */
  function property(path) {
    return Object(__WEBPACK_IMPORTED_MODULE_2__isKey_js__["a" /* default */])(path) ? Object(__WEBPACK_IMPORTED_MODULE_0__baseProperty_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_3__toKey_js__["a" /* default */])(path)) : Object(__WEBPACK_IMPORTED_MODULE_1__basePropertyDeep_js__["a" /* default */])(path);
  }

  /* harmony default export */__webpack_exports__["a"] = property;

  /***/
},
/* 349 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */

  function baseProperty(key) {
    return function (object) {
      return object == null ? undefined : object[key];
    };
  }

  /* harmony default export */__webpack_exports__["a"] = baseProperty;

  /***/
},
/* 350 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseGet_js__ = __webpack_require__(166);

  /**
   * A specialized version of `baseProperty` which supports deep paths.
   *
   * @private
   * @param {Array|string} path The path of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyDeep(path) {
    return function (object) {
      return Object(__WEBPACK_IMPORTED_MODULE_0__baseGet_js__["a" /* default */])(object, path);
    };
  }

  /* harmony default export */__webpack_exports__["a"] = basePropertyDeep;

  /***/
},
/* 351 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  var createFieldArrayProps = function createFieldArrayProps(_ref2, name, form, sectionPrefix, getValue, _ref) {
    var getIn = _ref2.getIn;

    var arrayInsert = _ref.arrayInsert,
        arrayMove = _ref.arrayMove,
        arrayPop = _ref.arrayPop,
        arrayPush = _ref.arrayPush,
        arrayRemove = _ref.arrayRemove,
        arrayRemoveAll = _ref.arrayRemoveAll,
        arrayShift = _ref.arrayShift,
        arraySplice = _ref.arraySplice,
        arraySwap = _ref.arraySwap,
        arrayUnshift = _ref.arrayUnshift,
        asyncError = _ref.asyncError,
        dirty = _ref.dirty,
        length = _ref.length,
        pristine = _ref.pristine,
        submitError = _ref.submitError,
        state = _ref.state,
        submitFailed = _ref.submitFailed,
        submitting = _ref.submitting,
        syncError = _ref.syncError,
        syncWarning = _ref.syncWarning,
        value = _ref.value,
        props = _ref.props,
        rest = _objectWithoutProperties(_ref, ['arrayInsert', 'arrayMove', 'arrayPop', 'arrayPush', 'arrayRemove', 'arrayRemoveAll', 'arrayShift', 'arraySplice', 'arraySwap', 'arrayUnshift', 'asyncError', 'dirty', 'length', 'pristine', 'submitError', 'state', 'submitFailed', 'submitting', 'syncError', 'syncWarning', 'value', 'props']);

    var error = syncError || asyncError || submitError;
    var warning = syncWarning;
    var fieldName = sectionPrefix ? name.replace(sectionPrefix + '.', '') : name;
    var finalProps = _extends({
      fields: {
        _isFieldArray: true,
        forEach: function forEach(callback) {
          return (value || []).forEach(function (item, index) {
            return callback(fieldName + '[' + index + ']', index, finalProps.fields);
          });
        },
        get: getValue,
        getAll: function getAll() {
          return value;
        },
        insert: arrayInsert,
        length: length,
        map: function map(callback) {
          return (value || []).map(function (item, index) {
            return callback(fieldName + '[' + index + ']', index, finalProps.fields);
          });
        },
        move: arrayMove,
        name: name,
        pop: function pop() {
          arrayPop();
          return getIn(value, String(length - 1));
        },
        push: arrayPush,
        reduce: function reduce(callback, initial) {
          return (value || []).reduce(function (accumulator, item, index) {
            return callback(accumulator, fieldName + '[' + index + ']', index, finalProps.fields);
          }, initial);
        },
        remove: arrayRemove,
        removeAll: arrayRemoveAll,
        shift: function shift() {
          arrayShift();
          return getIn(value, '0');
        },
        swap: arraySwap,
        unshift: arrayUnshift
      },
      meta: {
        dirty: dirty,
        error: error,
        form: form,
        warning: warning,
        invalid: !!error,
        pristine: pristine,
        submitting: submitting,
        submitFailed: submitFailed,
        valid: !error
      }
    }, props, rest);
    return finalProps;
  };

  /* harmony default export */__webpack_exports__["a"] = createFieldArrayProps;

  /***/
},
/* 352 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__createFormValueSelector__ = __webpack_require__(353);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__createFormValueSelector__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 353 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_invariant__ = __webpack_require__(23);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_invariant__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  var createFormValueSelector = function createFormValueSelector(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      __WEBPACK_IMPORTED_MODULE_0_invariant___default()(form, 'Form value must be specified');
      var nonNullGetFormState = getFormState || function (state) {
        return getIn(state, 'form');
      };
      return function (state) {
        for (var _len = arguments.length, fields = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          fields[_key - 1] = arguments[_key];
        }

        __WEBPACK_IMPORTED_MODULE_0_invariant___default()(fields.length, 'No fields specified');
        return fields.length === 1 ? // only selecting one field, so return its value
        getIn(nonNullGetFormState(state), form + '.values.' + fields[0]) : // selecting many fields, so return an object of field values
        fields.reduce(function (accumulator, field) {
          var value = getIn(nonNullGetFormState(state), form + '.values.' + field);
          return value === undefined ? accumulator : __WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */].setIn(accumulator, field, value);
        }, {});
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createFormValueSelector;

  /***/
},
/* 354 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__createFormValues__ = __webpack_require__(355);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__createFormValues__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 355 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_react_redux__ = __webpack_require__(8);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__util_prefixName__ = __webpack_require__(35);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }return arr2;
    } else {
      return Array.from(arr);
    }
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var createValues = function createValues(_ref) {
    var getIn = _ref.getIn;
    return function (firstArg) {
      for (var _len = arguments.length, rest = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        rest[_key - 1] = arguments[_key];
      }

      // create a class that reads current form name and creates a selector
      // return
      return function (Component) {
        var FormValues = function (_React$Component) {
          _inherits(FormValues, _React$Component);

          function FormValues(props, context) {
            _classCallCheck(this, FormValues);

            var _this = _possibleConstructorReturn(this, (FormValues.__proto__ || Object.getPrototypeOf(FormValues)).call(this, props, context));

            if (!context._reduxForm) {
              throw new Error('formValues() must be used inside a React tree decorated with reduxForm()');
            }
            var valuesMap = void 0;
            var resolvedFirstArg = typeof firstArg === 'function' ? firstArg(props) : firstArg;
            if (typeof resolvedFirstArg === 'string') {
              valuesMap = [resolvedFirstArg].concat(_toConsumableArray(rest)).map(function (k) {
                return {
                  prop: k,
                  path: k
                };
              });
            } else {
              var config = resolvedFirstArg;
              valuesMap = Object.keys(config).map(function (k) {
                return {
                  prop: k,
                  path: config[k]
                };
              });
            }
            if (!valuesMap.length) {
              throw new Error('formValues(): You must specify values to get as formValues(name1, name2, ...) or formValues({propName1: propPath1, ...}) or formValues((props) => name) or formValues((props) => ({propName1: propPath1, ...}))');
            }
            var formValuesSelector = function formValuesSelector(_, _ref2) {
              var sectionPrefix = _ref2.sectionPrefix;

              // Yes, we're only using connect() for listening to updates.
              // The second argument needs to be there so that connect calls
              // the selector when props change
              var getValues = _this.context._reduxForm.getValues;

              var props = {};
              var values = getValues();
              valuesMap.forEach(function (_ref3) {
                var prop = _ref3.prop,
                    path = _ref3.path;
                return props[prop] = getIn(values, Object(__WEBPACK_IMPORTED_MODULE_3__util_prefixName__["a" /* default */])(_this.context, path));
              });
              return props;
            };
            _this.Component = Object(__WEBPACK_IMPORTED_MODULE_2_react_redux__["connect"])(formValuesSelector, function () {
              return {};
            } // ignore dispatch
            )(function (_ref4) {
              var sectionPrefix = _ref4.sectionPrefix,
                  otherProps = _objectWithoutProperties(_ref4, ['sectionPrefix']);

              return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Component, otherProps);
            });
            return _this;
          }

          _createClass(FormValues, [{
            key: 'render',
            value: function render() {
              var Component = this.Component;

              return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(Component
              // so that the connected component updates props when sectionPrefix has changed
              , _extends({ sectionPrefix: this.context._reduxForm.sectionPrefix
              }, this.props));
            }
          }]);

          return FormValues;
        }(__WEBPACK_IMPORTED_MODULE_0_react___default.a.Component);

        FormValues.contextTypes = {
          _reduxForm: __WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object
        };
        return FormValues;
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createValues;

  /***/
},
/* 356 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_getFormError__ = __webpack_require__(357);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_getFormError__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 357 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createGetFormError = function createGetFormError(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return getIn(nonNullGetFormState(state), form + '.error');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createGetFormError;

  /***/
},
/* 358 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_getFormNames__ = __webpack_require__(359);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_getFormNames__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 359 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  function createGetFormNames(_ref) {
    var getIn = _ref.getIn,
        keys = _ref.keys;

    return function (getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return keys(nonNullGetFormState(state));
      };
    };
  }

  /* harmony default export */__webpack_exports__["a"] = createGetFormNames;

  /***/
},
/* 360 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_getFormValues__ = __webpack_require__(361);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_getFormValues__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 361 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createGetFormValues = function createGetFormValues(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return getIn(nonNullGetFormState(state), form + '.values');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createGetFormValues;

  /***/
},
/* 362 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_getFormInitialValues__ = __webpack_require__(363);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_getFormInitialValues__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 363 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createGetFormInitialValues = function createGetFormInitialValues(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return getIn(nonNullGetFormState(state), form + '.initial');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createGetFormInitialValues;

  /***/
},
/* 364 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_getFormSyncErrors__ = __webpack_require__(365);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_getFormSyncErrors__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 365 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createGetFormSyncErrors = function createGetFormSyncErrors(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return getIn(nonNullGetFormState(state), form + '.syncErrors');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createGetFormSyncErrors;

  /***/
},
/* 366 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_getFormMeta__ = __webpack_require__(367);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_getFormMeta__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 367 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createGetFormMeta = function createGetFormMeta(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return getIn(nonNullGetFormState(state), form + '.fields');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createGetFormMeta;

  /***/
},
/* 368 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_getFormAsyncErrors__ = __webpack_require__(369);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_getFormAsyncErrors__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 369 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createGetFormAsyncErrors = function createGetFormAsyncErrors(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return getIn(nonNullGetFormState(state), form + '.asyncErrors');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createGetFormAsyncErrors;

  /***/
},
/* 370 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_getFormSyncWarnings__ = __webpack_require__(371);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_getFormSyncWarnings__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 371 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createGetFormSyncWarnings = function createGetFormSyncWarnings(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return getIn(nonNullGetFormState(state), form + '.syncWarnings');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createGetFormSyncWarnings;

  /***/
},
/* 372 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_getFormSubmitErrors__ = __webpack_require__(373);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_getFormSubmitErrors__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 373 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createGetFormSubmitErrors = function createGetFormSubmitErrors(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return getIn(nonNullGetFormState(state), form + '.submitErrors');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createGetFormSubmitErrors;

  /***/
},
/* 374 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_isDirty__ = __webpack_require__(375);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_isDirty__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 375 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isPristine__ = __webpack_require__(168);

  var createIsDirty = function createIsDirty(structure) {
    return function (form, getFormState) {
      var isPristine = Object(__WEBPACK_IMPORTED_MODULE_0__isPristine__["a" /* default */])(structure)(form, getFormState);
      return function (state) {
        return !isPristine(state);
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createIsDirty;

  /***/
},
/* 376 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_isInvalid__ = __webpack_require__(377);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_isInvalid__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 377 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isValid__ = __webpack_require__(86);

  var createIsInvalid = function createIsInvalid(structure) {
    return function (form, getFormState) {
      var isValid = Object(__WEBPACK_IMPORTED_MODULE_0__isValid__["a" /* default */])(structure)(form, getFormState);
      return function (state) {
        return !isValid(state);
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createIsInvalid;

  /***/
},
/* 378 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var getErrorKeys = function getErrorKeys(name, type) {
    switch (type) {
      case 'Field':
        return [name, name + '._error'];
      case 'FieldArray':
        return [name + '._error'];
      default:
        throw new Error('Unknown field type');
    }
  };

  var createHasError = function createHasError(_ref) {
    var getIn = _ref.getIn;

    var hasError = function hasError(field, syncErrors, asyncErrors, submitErrors) {
      if (!syncErrors && !asyncErrors && !submitErrors) {
        return false;
      }

      var name = getIn(field, 'name');
      var type = getIn(field, 'type');
      return getErrorKeys(name, type).some(function (key) {
        return getIn(syncErrors, key) || getIn(asyncErrors, key) || getIn(submitErrors, key);
      });
    };
    return hasError;
  };

  /* harmony default export */__webpack_exports__["a"] = createHasError;

  /***/
},
/* 379 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_isPristine__ = __webpack_require__(168);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_isPristine__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 380 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_isValid__ = __webpack_require__(86);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_isValid__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 381 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_isSubmitting__ = __webpack_require__(382);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_isSubmitting__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 382 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createIsSubmitting = function createIsSubmitting(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return !!getIn(nonNullGetFormState(state), form + '.submitting');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createIsSubmitting;

  /***/
},
/* 383 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_hasSubmitSucceeded__ = __webpack_require__(384);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_hasSubmitSucceeded__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 384 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createHasSubmitSucceeded = function createHasSubmitSucceeded(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return !!getIn(nonNullGetFormState(state), form + '.submitSucceeded');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createHasSubmitSucceeded;

  /***/
},
/* 385 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__selectors_hasSubmitFailed__ = __webpack_require__(386);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__selectors_hasSubmitFailed__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 386 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var createHasSubmitFailed = function createHasSubmitFailed(_ref) {
    var getIn = _ref.getIn;
    return function (form, getFormState) {
      return function (state) {
        var nonNullGetFormState = getFormState || function (state) {
          return getIn(state, 'form');
        };
        return !!getIn(nonNullGetFormState(state), form + '.submitFailed');
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createHasSubmitFailed;

  /***/
},
/* 387 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__createReduxForm__ = __webpack_require__(388);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__createReduxForm__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 388 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_lodash_es_merge__ = __webpack_require__(389);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1_lodash_es_mapValues__ = __webpack_require__(161);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics__ = __webpack_require__(130);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3_invariant__ = __webpack_require__(23);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3_invariant___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_invariant__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4_is_promise__ = __webpack_require__(87);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4_is_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_is_promise__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5_prop_types__ = __webpack_require__(2);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_prop_types__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6_react__ = __webpack_require__(0);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_react__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_7_react_redux__ = __webpack_require__(8);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_8_redux__ = __webpack_require__(24);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_9__actions__ = __webpack_require__(141);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_10__asyncValidation__ = __webpack_require__(412);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_11__defaultShouldAsyncValidate__ = __webpack_require__(142);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_12__defaultShouldValidate__ = __webpack_require__(143);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_13__defaultShouldError__ = __webpack_require__(144);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_14__defaultShouldWarn__ = __webpack_require__(145);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_15__events_silenceEvent__ = __webpack_require__(171);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_16__events_silenceEvents__ = __webpack_require__(413);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_17__generateValidator__ = __webpack_require__(414);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_18__handleSubmit__ = __webpack_require__(415);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_19__selectors_isValid__ = __webpack_require__(86);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_20__structure_plain__ = __webpack_require__(1);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_21__util_getDisplayName__ = __webpack_require__(416);

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _typeof = typeof Symbol === "function" && _typeof4(Symbol.iterator) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  };

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }return obj;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }return arr2;
    } else {
      return Array.from(arr);
    }
  }

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  var isClassComponent = function isClassComponent(Component) {
    return Boolean(Component && Component.prototype && _typeof(Component.prototype.isReactComponent) === 'object');
  };

  // extract field-specific actions

  var arrayInsert = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arrayInsert,
      arrayMove = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arrayMove,
      arrayPop = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arrayPop,
      arrayPush = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arrayPush,
      arrayRemove = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arrayRemove,
      arrayRemoveAll = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arrayRemoveAll,
      arrayShift = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arrayShift,
      arraySplice = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arraySplice,
      arraySwap = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arraySwap,
      arrayUnshift = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].arrayUnshift,
      blur = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].blur,
      change = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].change,
      focus = __WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */].focus,
      formActions = _objectWithoutProperties(__WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */], ['arrayInsert', 'arrayMove', 'arrayPop', 'arrayPush', 'arrayRemove', 'arrayRemoveAll', 'arrayShift', 'arraySplice', 'arraySwap', 'arrayUnshift', 'blur', 'change', 'focus']);

  var arrayActions = {
    arrayInsert: arrayInsert,
    arrayMove: arrayMove,
    arrayPop: arrayPop,
    arrayPush: arrayPush,
    arrayRemove: arrayRemove,
    arrayRemoveAll: arrayRemoveAll,
    arrayShift: arrayShift,
    arraySplice: arraySplice,
    arraySwap: arraySwap,
    arrayUnshift: arrayUnshift
  };

  var propsToNotUpdateFor = [].concat(_toConsumableArray(Object.keys(__WEBPACK_IMPORTED_MODULE_9__actions__["a" /* default */])), ['array', 'asyncErrors', 'initialValues', 'syncErrors', 'syncWarnings', 'values', 'registeredFields']);

  var checkSubmit = function checkSubmit(submit) {
    if (!submit || typeof submit !== 'function') {
      throw new Error('You must either pass handleSubmit() an onSubmit function or pass onSubmit as a prop');
    }
    return submit;
  };

  /**
   * The decorator that is the main API to redux-form
   */
  var createReduxForm = function createReduxForm(structure) {
    var deepEqual = structure.deepEqual,
        empty = structure.empty,
        getIn = structure.getIn,
        setIn = structure.setIn,
        keys = structure.keys,
        fromJS = structure.fromJS;

    var isValid = Object(__WEBPACK_IMPORTED_MODULE_19__selectors_isValid__["a" /* default */])(structure);
    return function (initialConfig) {
      var config = _extends({
        touchOnBlur: true,
        touchOnChange: false,
        persistentSubmitErrors: false,
        destroyOnUnmount: true,
        shouldAsyncValidate: __WEBPACK_IMPORTED_MODULE_11__defaultShouldAsyncValidate__["a" /* default */],
        shouldValidate: __WEBPACK_IMPORTED_MODULE_12__defaultShouldValidate__["a" /* default */],
        shouldError: __WEBPACK_IMPORTED_MODULE_13__defaultShouldError__["a" /* default */],
        shouldWarn: __WEBPACK_IMPORTED_MODULE_14__defaultShouldWarn__["a" /* default */],
        enableReinitialize: false,
        keepDirtyOnReinitialize: false,
        getFormState: function getFormState(state) {
          return getIn(state, 'form');
        },
        pure: true,
        forceUnregisterOnUnmount: false
      }, initialConfig);

      return function (WrappedComponent) {
        var Form = function (_Component) {
          _inherits(Form, _Component);

          function Form() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Form);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Form.__proto__ || Object.getPrototypeOf(Form)).call.apply(_ref, [this].concat(args))), _this), _this.destroyed = false, _this.fieldValidators = {}, _this.lastFieldValidatorKeys = [], _this.fieldWarners = {}, _this.lastFieldWarnerKeys = [], _this.innerOnSubmit = undefined, _this.submitPromise = undefined, _this.getValues = function () {
              return _this.props.values;
            }, _this.isValid = function () {
              return _this.props.valid;
            }, _this.isPristine = function () {
              return _this.props.pristine;
            }, _this.register = function (name, type, getValidator, getWarner) {
              _this.props.registerField(name, type);
              if (getValidator) {
                _this.fieldValidators[name] = getValidator;
              }
              if (getWarner) {
                _this.fieldWarners[name] = getWarner;
              }
            }, _this.unregister = function (name) {
              if (!_this.destroyed) {
                if (_this.props.destroyOnUnmount || _this.props.forceUnregisterOnUnmount) {
                  _this.props.unregisterField(name);
                  delete _this.fieldValidators[name];
                  delete _this.fieldWarners[name];
                } else {
                  _this.props.unregisterField(name, false);
                }
              }
            }, _this.getFieldList = function (options) {
              var registeredFields = _this.props.registeredFields;
              var list = [];
              if (!registeredFields) {
                return list;
              }
              var keySeq = keys(registeredFields);
              if (options && options.excludeFieldArray) {
                keySeq = keySeq.filter(function (name) {
                  return getIn(registeredFields, '[\'' + name + '\'].type') !== 'FieldArray';
                });
              }
              return fromJS(keySeq.reduce(function (acc, key) {
                acc.push(key);
                return acc;
              }, list));
            }, _this.getValidators = function () {
              var validators = {};
              Object.keys(_this.fieldValidators).forEach(function (name) {
                var validator = _this.fieldValidators[name]();
                if (validator) {
                  validators[name] = validator;
                }
              });
              return validators;
            }, _this.generateValidator = function () {
              var validators = _this.getValidators();
              return Object.keys(validators).length ? Object(__WEBPACK_IMPORTED_MODULE_17__generateValidator__["a" /* default */])(validators, structure) : undefined;
            }, _this.getWarners = function () {
              var warners = {};
              Object.keys(_this.fieldWarners).forEach(function (name) {
                var warner = _this.fieldWarners[name]();
                if (warner) {
                  warners[name] = warner;
                }
              });
              return warners;
            }, _this.generateWarner = function () {
              var warners = _this.getWarners();
              return Object.keys(warners).length ? Object(__WEBPACK_IMPORTED_MODULE_17__generateValidator__["a" /* default */])(warners, structure) : undefined;
            }, _this.asyncValidate = function (name, value) {
              var _this$props = _this.props,
                  asyncBlurFields = _this$props.asyncBlurFields,
                  asyncErrors = _this$props.asyncErrors,
                  asyncValidate = _this$props.asyncValidate,
                  dispatch = _this$props.dispatch,
                  initialized = _this$props.initialized,
                  pristine = _this$props.pristine,
                  shouldAsyncValidate = _this$props.shouldAsyncValidate,
                  startAsyncValidation = _this$props.startAsyncValidation,
                  stopAsyncValidation = _this$props.stopAsyncValidation,
                  syncErrors = _this$props.syncErrors,
                  values = _this$props.values;

              var submitting = !name;
              if (asyncValidate) {
                var valuesToValidate = submitting ? values : setIn(values, name, value);
                var syncValidationPasses = submitting || !getIn(syncErrors, name);
                var isBlurredField = !submitting && (!asyncBlurFields || ~asyncBlurFields.indexOf(name.replace(/\[[0-9]+\]/g, '[]')));
                if ((isBlurredField || submitting) && shouldAsyncValidate({
                  asyncErrors: asyncErrors,
                  initialized: initialized,
                  trigger: submitting ? 'submit' : 'blur',
                  blurredField: name,
                  pristine: pristine,
                  syncValidationPasses: syncValidationPasses
                })) {
                  return Object(__WEBPACK_IMPORTED_MODULE_10__asyncValidation__["a" /* default */])(function () {
                    return asyncValidate(valuesToValidate, dispatch, _this.props, name);
                  }, startAsyncValidation, stopAsyncValidation, name);
                }
              }
            }, _this.submitCompleted = function (result) {
              delete _this.submitPromise;
              return result;
            }, _this.submitFailed = function (error) {
              delete _this.submitPromise;
              return error;
            }, _this.listenToSubmit = function (promise) {
              if (!__WEBPACK_IMPORTED_MODULE_4_is_promise___default()(promise)) {
                return promise;
              }
              _this.submitPromise = promise;
              return promise.then(_this.submitCompleted, _this.submitFailed);
            }, _this.submit = function (submitOrEvent) {
              var _this$props2 = _this.props,
                  onSubmit = _this$props2.onSubmit,
                  blur = _this$props2.blur,
                  change = _this$props2.change,
                  dispatch = _this$props2.dispatch;

              if (!submitOrEvent || Object(__WEBPACK_IMPORTED_MODULE_15__events_silenceEvent__["a" /* default */])(submitOrEvent)) {
                // submitOrEvent is an event: fire submit if not already submitting
                if (!_this.submitPromise) {
                  // avoid recursive stack trace if use Form with onSubmit as handleSubmit
                  if (_this.innerOnSubmit && _this.innerOnSubmit !== _this.submit) {
                    // will call "submitOrEvent is the submit function" block below
                    return _this.innerOnSubmit();
                  } else {
                    return _this.listenToSubmit(Object(__WEBPACK_IMPORTED_MODULE_18__handleSubmit__["a" /* default */])(checkSubmit(onSubmit), _extends({}, _this.props, Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])({ blur: blur, change: change }, dispatch)), _this.props.validExceptSubmit, _this.asyncValidate, _this.getFieldList({ excludeFieldArray: true })));
                  }
                }
              } else {
                // submitOrEvent is the submit function: return deferred submit thunk
                return Object(__WEBPACK_IMPORTED_MODULE_16__events_silenceEvents__["a" /* default */])(function () {
                  return !_this.submitPromise && _this.listenToSubmit(Object(__WEBPACK_IMPORTED_MODULE_18__handleSubmit__["a" /* default */])(checkSubmit(submitOrEvent), _extends({}, _this.props, Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])({ blur: blur, change: change }, dispatch)), _this.props.validExceptSubmit, _this.asyncValidate, _this.getFieldList({ excludeFieldArray: true })));
                });
              }
            }, _this.reset = function () {
              return _this.props.reset();
            }, _temp), _possibleConstructorReturn(_this, _ret);
          }

          _createClass(Form, [{
            key: 'getChildContext',
            value: function getChildContext() {
              var _this2 = this;

              return {
                _reduxForm: _extends({}, this.props, {
                  getFormState: function getFormState(state) {
                    return getIn(_this2.props.getFormState(state), _this2.props.form);
                  },
                  asyncValidate: this.asyncValidate,
                  getValues: this.getValues,
                  sectionPrefix: undefined,
                  register: this.register,
                  unregister: this.unregister,
                  registerInnerOnSubmit: function registerInnerOnSubmit(innerOnSubmit) {
                    return _this2.innerOnSubmit = innerOnSubmit;
                  }
                })
              };
            }
          }, {
            key: 'initIfNeeded',
            value: function initIfNeeded(nextProps) {
              var enableReinitialize = this.props.enableReinitialize;

              if (nextProps) {
                if ((enableReinitialize || !nextProps.initialized) && !deepEqual(this.props.initialValues, nextProps.initialValues)) {
                  var _keepDirty = nextProps.initialized && this.props.keepDirtyOnReinitialize;
                  this.props.initialize(nextProps.initialValues, _keepDirty, {
                    lastInitialValues: this.props.initialValues
                  });
                }
              } else if (this.props.initialValues && (!this.props.initialized || enableReinitialize)) {
                this.props.initialize(this.props.initialValues, this.props.keepDirtyOnReinitialize);
              }
            }
          }, {
            key: 'updateSyncErrorsIfNeeded',
            value: function updateSyncErrorsIfNeeded(nextSyncErrors, nextError, lastSyncErrors) {
              var _props = this.props,
                  error = _props.error,
                  updateSyncErrors = _props.updateSyncErrors;

              var noErrors = (!lastSyncErrors || !Object.keys(lastSyncErrors).length) && !error;
              var nextNoErrors = (!nextSyncErrors || !Object.keys(nextSyncErrors).length) && !nextError;
              if (!(noErrors && nextNoErrors) && (!__WEBPACK_IMPORTED_MODULE_20__structure_plain__["a" /* default */].deepEqual(lastSyncErrors, nextSyncErrors) || !__WEBPACK_IMPORTED_MODULE_20__structure_plain__["a" /* default */].deepEqual(error, nextError))) {
                updateSyncErrors(nextSyncErrors, nextError);
              }
            }
          }, {
            key: 'clearSubmitPromiseIfNeeded',
            value: function clearSubmitPromiseIfNeeded(nextProps) {
              var submitting = this.props.submitting;

              if (this.submitPromise && submitting && !nextProps.submitting) {
                delete this.submitPromise;
              }
            }
          }, {
            key: 'submitIfNeeded',
            value: function submitIfNeeded(nextProps) {
              var _props2 = this.props,
                  clearSubmit = _props2.clearSubmit,
                  triggerSubmit = _props2.triggerSubmit;

              if (!triggerSubmit && nextProps.triggerSubmit) {
                clearSubmit();
                this.submit();
              }
            }
          }, {
            key: 'validateIfNeeded',
            value: function validateIfNeeded(nextProps) {
              var _props3 = this.props,
                  shouldValidate = _props3.shouldValidate,
                  shouldError = _props3.shouldError,
                  validate = _props3.validate,
                  values = _props3.values;

              var fieldLevelValidate = this.generateValidator();
              if (validate || fieldLevelValidate) {
                var initialRender = nextProps === undefined;
                var fieldValidatorKeys = Object.keys(this.getValidators());
                var validateParams = {
                  values: values,
                  nextProps: nextProps,
                  props: this.props,
                  initialRender: initialRender,
                  lastFieldValidatorKeys: this.lastFieldValidatorKeys,
                  fieldValidatorKeys: fieldValidatorKeys,
                  structure: structure
                };
                var shouldValidateResult = shouldValidate(validateParams);
                var shouldErrorResult = shouldError(validateParams);

                if (shouldValidateResult || shouldErrorResult) {
                  var propsToValidate = initialRender || !nextProps ? this.props : nextProps;

                  var _merge2 = Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_merge__["a" /* default */])(validate ? validate(propsToValidate.values, propsToValidate) || {} : {}, fieldLevelValidate ? fieldLevelValidate(propsToValidate.values, propsToValidate) || {} : {}),
                      _error = _merge2._error,
                      nextSyncErrors = _objectWithoutProperties(_merge2, ['_error']);

                  this.lastFieldValidatorKeys = fieldValidatorKeys;
                  this.updateSyncErrorsIfNeeded(nextSyncErrors, _error, propsToValidate.syncErrors);
                }
              }
            }
          }, {
            key: 'updateSyncWarningsIfNeeded',
            value: function updateSyncWarningsIfNeeded(nextSyncWarnings, nextWarning, lastSyncWarnings) {
              var _props4 = this.props,
                  warning = _props4.warning,
                  syncWarnings = _props4.syncWarnings,
                  updateSyncWarnings = _props4.updateSyncWarnings;

              var noWarnings = (!syncWarnings || !Object.keys(syncWarnings).length) && !warning;
              var nextNoWarnings = (!nextSyncWarnings || !Object.keys(nextSyncWarnings).length) && !nextWarning;
              if (!(noWarnings && nextNoWarnings) && (!__WEBPACK_IMPORTED_MODULE_20__structure_plain__["a" /* default */].deepEqual(lastSyncWarnings, nextSyncWarnings) || !__WEBPACK_IMPORTED_MODULE_20__structure_plain__["a" /* default */].deepEqual(warning, nextWarning))) {
                updateSyncWarnings(nextSyncWarnings, nextWarning);
              }
            }
          }, {
            key: 'warnIfNeeded',
            value: function warnIfNeeded(nextProps) {
              var _props5 = this.props,
                  shouldValidate = _props5.shouldValidate,
                  shouldWarn = _props5.shouldWarn,
                  warn = _props5.warn,
                  values = _props5.values;

              var fieldLevelWarn = this.generateWarner();
              if (warn || fieldLevelWarn) {
                var initialRender = nextProps === undefined;
                var fieldWarnerKeys = Object.keys(this.getWarners());
                var validateParams = {
                  values: values,
                  nextProps: nextProps,
                  props: this.props,
                  initialRender: initialRender,
                  lastFieldValidatorKeys: this.lastFieldWarnerKeys,
                  fieldValidatorKeys: fieldWarnerKeys,
                  structure: structure
                };
                var shouldWarnResult = shouldWarn(validateParams);
                var shouldValidateResult = shouldValidate(validateParams);

                if (shouldValidateResult || shouldWarnResult) {
                  var propsToWarn = initialRender || !nextProps ? this.props : nextProps;

                  var _merge3 = Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_merge__["a" /* default */])(warn ? warn(propsToWarn.values, propsToWarn) : {}, fieldLevelWarn ? fieldLevelWarn(propsToWarn.values, propsToWarn) : {}),
                      _warning = _merge3._warning,
                      nextSyncWarnings = _objectWithoutProperties(_merge3, ['_warning']);

                  this.lastFieldWarnerKeys = fieldWarnerKeys;
                  this.updateSyncWarningsIfNeeded(nextSyncWarnings, _warning, propsToWarn.syncWarnings);
                }
              }
            }
          }, {
            key: 'componentWillMount',
            value: function componentWillMount() {
              this.initIfNeeded();
              this.validateIfNeeded();
              this.warnIfNeeded();
              __WEBPACK_IMPORTED_MODULE_3_invariant___default()(this.props.shouldValidate, 'shouldValidate() is deprecated and will be removed in v8.0.0. Use shouldWarn() or shouldError() instead.');
            }
          }, {
            key: 'componentWillReceiveProps',
            value: function componentWillReceiveProps(nextProps) {
              this.initIfNeeded(nextProps);
              this.validateIfNeeded(nextProps);
              this.warnIfNeeded(nextProps);
              this.clearSubmitPromiseIfNeeded(nextProps);
              this.submitIfNeeded(nextProps);
              var onChange = nextProps.onChange,
                  values = nextProps.values,
                  dispatch = nextProps.dispatch;

              if (onChange && !deepEqual(values, this.props.values)) {
                onChange(values, dispatch, nextProps);
              }
            }
          }, {
            key: 'shouldComponentUpdate',
            value: function shouldComponentUpdate(nextProps) {
              var _this3 = this;

              if (!this.props.pure) return true;
              var _config$immutableProp = config.immutableProps,
                  immutableProps = _config$immutableProp === undefined ? [] : _config$immutableProp;
              // if we have children, we MUST update in React 16
              // https://twitter.com/erikras/status/915866544558788608

              return !!(this.props.children || nextProps.children || Object.keys(nextProps).some(function (prop) {
                // useful to debug rerenders
                // if (!plain.deepEqual(this.props[ prop ], nextProps[ prop ])) {
                //   console.info(prop, 'changed', this.props[ prop ], '==>', nextProps[ prop ])
                // }
                if (~immutableProps.indexOf(prop)) {
                  return _this3.props[prop] !== nextProps[prop];
                }
                return !~propsToNotUpdateFor.indexOf(prop) && !deepEqual(_this3.props[prop], nextProps[prop]);
              }));
            }
          }, {
            key: 'componentWillUnmount',
            value: function componentWillUnmount() {
              var _props6 = this.props,
                  destroyOnUnmount = _props6.destroyOnUnmount,
                  destroy = _props6.destroy;

              if (destroyOnUnmount) {
                this.destroyed = true;
                destroy();
              }
            }
          }, {
            key: 'render',
            value: function render() {
              // remove some redux-form config-only props
              /* eslint-disable no-unused-vars */
              var _props7 = this.props,
                  anyTouched = _props7.anyTouched,
                  arrayInsert = _props7.arrayInsert,
                  arrayMove = _props7.arrayMove,
                  arrayPop = _props7.arrayPop,
                  arrayPush = _props7.arrayPush,
                  arrayRemove = _props7.arrayRemove,
                  arrayRemoveAll = _props7.arrayRemoveAll,
                  arrayShift = _props7.arrayShift,
                  arraySplice = _props7.arraySplice,
                  arraySwap = _props7.arraySwap,
                  arrayUnshift = _props7.arrayUnshift,
                  asyncErrors = _props7.asyncErrors,
                  asyncValidate = _props7.asyncValidate,
                  asyncValidating = _props7.asyncValidating,
                  blur = _props7.blur,
                  change = _props7.change,
                  clearSubmit = _props7.clearSubmit,
                  destroy = _props7.destroy,
                  destroyOnUnmount = _props7.destroyOnUnmount,
                  forceUnregisterOnUnmount = _props7.forceUnregisterOnUnmount,
                  dirty = _props7.dirty,
                  dispatch = _props7.dispatch,
                  enableReinitialize = _props7.enableReinitialize,
                  error = _props7.error,
                  focus = _props7.focus,
                  form = _props7.form,
                  getFormState = _props7.getFormState,
                  initialize = _props7.initialize,
                  initialized = _props7.initialized,
                  initialValues = _props7.initialValues,
                  invalid = _props7.invalid,
                  keepDirtyOnReinitialize = _props7.keepDirtyOnReinitialize,
                  pristine = _props7.pristine,
                  propNamespace = _props7.propNamespace,
                  registeredFields = _props7.registeredFields,
                  registerField = _props7.registerField,
                  reset = _props7.reset,
                  setSubmitFailed = _props7.setSubmitFailed,
                  setSubmitSucceeded = _props7.setSubmitSucceeded,
                  shouldAsyncValidate = _props7.shouldAsyncValidate,
                  shouldValidate = _props7.shouldValidate,
                  shouldError = _props7.shouldError,
                  shouldWarn = _props7.shouldWarn,
                  startAsyncValidation = _props7.startAsyncValidation,
                  startSubmit = _props7.startSubmit,
                  stopAsyncValidation = _props7.stopAsyncValidation,
                  stopSubmit = _props7.stopSubmit,
                  submitting = _props7.submitting,
                  submitFailed = _props7.submitFailed,
                  submitSucceeded = _props7.submitSucceeded,
                  touch = _props7.touch,
                  touchOnBlur = _props7.touchOnBlur,
                  touchOnChange = _props7.touchOnChange,
                  persistentSubmitErrors = _props7.persistentSubmitErrors,
                  syncErrors = _props7.syncErrors,
                  syncWarnings = _props7.syncWarnings,
                  unregisterField = _props7.unregisterField,
                  untouch = _props7.untouch,
                  updateSyncErrors = _props7.updateSyncErrors,
                  updateSyncWarnings = _props7.updateSyncWarnings,
                  valid = _props7.valid,
                  validExceptSubmit = _props7.validExceptSubmit,
                  values = _props7.values,
                  warning = _props7.warning,
                  rest = _objectWithoutProperties(_props7, ['anyTouched', 'arrayInsert', 'arrayMove', 'arrayPop', 'arrayPush', 'arrayRemove', 'arrayRemoveAll', 'arrayShift', 'arraySplice', 'arraySwap', 'arrayUnshift', 'asyncErrors', 'asyncValidate', 'asyncValidating', 'blur', 'change', 'clearSubmit', 'destroy', 'destroyOnUnmount', 'forceUnregisterOnUnmount', 'dirty', 'dispatch', 'enableReinitialize', 'error', 'focus', 'form', 'getFormState', 'initialize', 'initialized', 'initialValues', 'invalid', 'keepDirtyOnReinitialize', 'pristine', 'propNamespace', 'registeredFields', 'registerField', 'reset', 'setSubmitFailed', 'setSubmitSucceeded', 'shouldAsyncValidate', 'shouldValidate', 'shouldError', 'shouldWarn', 'startAsyncValidation', 'startSubmit', 'stopAsyncValidation', 'stopSubmit', 'submitting', 'submitFailed', 'submitSucceeded', 'touch', 'touchOnBlur', 'touchOnChange', 'persistentSubmitErrors', 'syncErrors', 'syncWarnings', 'unregisterField', 'untouch', 'updateSyncErrors', 'updateSyncWarnings', 'valid', 'validExceptSubmit', 'values', 'warning']);
              /* eslint-enable no-unused-vars */

              var reduxFormProps = _extends({
                anyTouched: anyTouched,
                asyncValidate: this.asyncValidate,
                asyncValidating: asyncValidating
              }, Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])({ blur: blur, change: change }, dispatch), {
                clearSubmit: clearSubmit,
                destroy: destroy,
                dirty: dirty,
                dispatch: dispatch,
                error: error,
                form: form,
                handleSubmit: this.submit,
                initialize: initialize,
                initialized: initialized,
                initialValues: initialValues,
                invalid: invalid,
                pristine: pristine,
                reset: reset,
                submitting: submitting,
                submitFailed: submitFailed,
                submitSucceeded: submitSucceeded,
                touch: touch,
                untouch: untouch,
                valid: valid,
                warning: warning
              });
              var propsToPass = _extends({}, propNamespace ? _defineProperty({}, propNamespace, reduxFormProps) : reduxFormProps, rest);
              if (isClassComponent(WrappedComponent)) {
                propsToPass.ref = 'wrapped';
              }
              return Object(__WEBPACK_IMPORTED_MODULE_6_react__["createElement"])(WrappedComponent, propsToPass);
            }
          }]);

          return Form;
        }(__WEBPACK_IMPORTED_MODULE_6_react__["Component"]);

        Form.displayName = 'Form(' + Object(__WEBPACK_IMPORTED_MODULE_21__util_getDisplayName__["a" /* default */])(WrappedComponent) + ')';
        Form.WrappedComponent = WrappedComponent;
        Form.childContextTypes = {
          _reduxForm: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.object.isRequired
        };
        Form.propTypes = {
          destroyOnUnmount: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.bool,
          forceUnregisterOnUnmount: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.bool,
          form: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.string.isRequired,
          initialValues: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.oneOfType([__WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.array, __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.object]),
          getFormState: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.func,
          onSubmitFail: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.func,
          onSubmitSuccess: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.func,
          propNamespace: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.string,
          validate: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.func,
          warn: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.func,
          touchOnBlur: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.bool,
          touchOnChange: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.bool,
          triggerSubmit: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.bool,
          persistentSubmitErrors: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.bool,
          registeredFields: __WEBPACK_IMPORTED_MODULE_5_prop_types___default.a.any
        };

        var connector = Object(__WEBPACK_IMPORTED_MODULE_7_react_redux__["connect"])(function (state, props) {
          var form = props.form,
              getFormState = props.getFormState,
              initialValues = props.initialValues,
              enableReinitialize = props.enableReinitialize,
              keepDirtyOnReinitialize = props.keepDirtyOnReinitialize;

          var formState = getIn(getFormState(state) || empty, form) || empty;
          var stateInitial = getIn(formState, 'initial');
          var initialized = !!stateInitial;

          var shouldUpdateInitialValues = enableReinitialize && initialized && !deepEqual(initialValues, stateInitial);
          var shouldResetValues = shouldUpdateInitialValues && !keepDirtyOnReinitialize;

          var initial = initialValues || stateInitial || empty;

          if (shouldUpdateInitialValues) {
            initial = stateInitial || empty;
          }

          var values = getIn(formState, 'values') || initial;

          if (shouldResetValues) {
            values = initial;
          }

          var pristine = shouldResetValues || deepEqual(initial, values);
          var asyncErrors = getIn(formState, 'asyncErrors');
          var syncErrors = getIn(formState, 'syncErrors') || {};
          var syncWarnings = getIn(formState, 'syncWarnings') || {};
          var registeredFields = getIn(formState, 'registeredFields');
          var valid = isValid(form, getFormState, false)(state);
          var validExceptSubmit = isValid(form, getFormState, true)(state);
          var anyTouched = !!getIn(formState, 'anyTouched');
          var submitting = !!getIn(formState, 'submitting');
          var submitFailed = !!getIn(formState, 'submitFailed');
          var submitSucceeded = !!getIn(formState, 'submitSucceeded');
          var error = getIn(formState, 'error');
          var warning = getIn(formState, 'warning');
          var triggerSubmit = getIn(formState, 'triggerSubmit');
          return {
            anyTouched: anyTouched,
            asyncErrors: asyncErrors,
            asyncValidating: getIn(formState, 'asyncValidating') || false,
            dirty: !pristine,
            error: error,
            initialized: initialized,
            invalid: !valid,
            pristine: pristine,
            registeredFields: registeredFields,
            submitting: submitting,
            submitFailed: submitFailed,
            submitSucceeded: submitSucceeded,
            syncErrors: syncErrors,
            syncWarnings: syncWarnings,
            triggerSubmit: triggerSubmit,
            values: values,
            valid: valid,
            validExceptSubmit: validExceptSubmit,
            warning: warning
          };
        }, function (dispatch, initialProps) {
          var bindForm = function bindForm(actionCreator) {
            return actionCreator.bind(null, initialProps.form);
          };

          // Bind the first parameter on `props.form`
          var boundFormACs = Object(__WEBPACK_IMPORTED_MODULE_1_lodash_es_mapValues__["a" /* default */])(formActions, bindForm);
          var boundArrayACs = Object(__WEBPACK_IMPORTED_MODULE_1_lodash_es_mapValues__["a" /* default */])(arrayActions, bindForm);
          var boundBlur = function boundBlur(field, value) {
            return blur(initialProps.form, field, value, !!initialProps.touchOnBlur);
          };
          var boundChange = function boundChange(field, value) {
            return change(initialProps.form, field, value, !!initialProps.touchOnChange, !!initialProps.persistentSubmitErrors);
          };
          var boundFocus = bindForm(focus);

          // Wrap action creators with `dispatch`
          var connectedFormACs = Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundFormACs, dispatch);
          var connectedArrayACs = {
            insert: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arrayInsert, dispatch),
            move: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arrayMove, dispatch),
            pop: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arrayPop, dispatch),
            push: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arrayPush, dispatch),
            remove: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arrayRemove, dispatch),
            removeAll: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arrayRemoveAll, dispatch),
            shift: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arrayShift, dispatch),
            splice: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arraySplice, dispatch),
            swap: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arraySwap, dispatch),
            unshift: Object(__WEBPACK_IMPORTED_MODULE_8_redux__["bindActionCreators"])(boundArrayACs.arrayUnshift, dispatch)
          };

          var computedActions = _extends({}, connectedFormACs, boundArrayACs, {
            blur: boundBlur,
            change: boundChange,
            array: connectedArrayACs,
            focus: boundFocus,
            dispatch: dispatch
          });

          return function () {
            return computedActions;
          };
        }, undefined, { withRef: true });
        var ConnectedForm = __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default()(connector(Form), WrappedComponent);
        ConnectedForm.defaultProps = config;

        // build outer component to expose instance api

        var ReduxForm = function (_Component2) {
          _inherits(ReduxForm, _Component2);

          function ReduxForm() {
            _classCallCheck(this, ReduxForm);

            return _possibleConstructorReturn(this, (ReduxForm.__proto__ || Object.getPrototypeOf(ReduxForm)).apply(this, arguments));
          }

          _createClass(ReduxForm, [{
            key: 'submit',
            value: function submit() {
              return this.ref && this.ref.getWrappedInstance().submit();
            }
          }, {
            key: 'reset',
            value: function reset() {
              if (this.ref) {
                this.ref.getWrappedInstance().reset();
              }
            }
          }, {
            key: 'render',
            value: function render() {
              var _this5 = this;

              var _props8 = this.props,
                  initialValues = _props8.initialValues,
                  rest = _objectWithoutProperties(_props8, ['initialValues']);

              return Object(__WEBPACK_IMPORTED_MODULE_6_react__["createElement"])(ConnectedForm, _extends({}, rest, {
                ref: function ref(_ref3) {
                  return _this5.ref = _ref3;
                },
                // convert initialValues if need to
                initialValues: fromJS(initialValues)
              }));
            }
          }, {
            key: 'valid',
            get: function get() {
              return !!(this.ref && this.ref.getWrappedInstance().isValid());
            }
          }, {
            key: 'invalid',
            get: function get() {
              return !this.valid;
            }
          }, {
            key: 'pristine',
            get: function get() {
              return !!(this.ref && this.ref.getWrappedInstance().isPristine());
            }
          }, {
            key: 'dirty',
            get: function get() {
              return !this.pristine;
            }
          }, {
            key: 'values',
            get: function get() {
              return this.ref ? this.ref.getWrappedInstance().getValues() : empty;
            }
          }, {
            key: 'fieldList',
            get: function get() {
              // mainly provided for testing
              return this.ref ? this.ref.getWrappedInstance().getFieldList() : [];
            }
          }, {
            key: 'wrappedInstance',
            get: function get() {
              // for testing
              return this.ref && this.ref.getWrappedInstance().refs.wrapped;
            }
          }]);

          return ReduxForm;
        }(__WEBPACK_IMPORTED_MODULE_6_react__["Component"]);

        return __WEBPACK_IMPORTED_MODULE_2_hoist_non_react_statics___default()(ReduxForm, WrappedComponent);
      };
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createReduxForm;

  /***/
},
/* 389 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseMerge_js__ = __webpack_require__(390);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__createAssigner_js__ = __webpack_require__(403);

  /**
   * This method is like `_.assign` except that it recursively merges own and
   * inherited enumerable string keyed properties of source objects into the
   * destination object. Source properties that resolve to `undefined` are
   * skipped if a destination value exists. Array and plain object properties
   * are merged recursively. Other objects and value types are overridden by
   * assignment. Source objects are applied from left to right. Subsequent
   * sources overwrite property assignments of previous sources.
   *
   * **Note:** This method mutates `object`.
   *
   * @static
   * @memberOf _
   * @since 0.5.0
   * @category Object
   * @param {Object} object The destination object.
   * @param {...Object} [sources] The source objects.
   * @returns {Object} Returns `object`.
   * @example
   *
   * var object = {
   *   'a': [{ 'b': 2 }, { 'd': 4 }]
   * };
   *
   * var other = {
   *   'a': [{ 'c': 3 }, { 'e': 5 }]
   * };
   *
   * _.merge(object, other);
   * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
   */
  var merge = Object(__WEBPACK_IMPORTED_MODULE_1__createAssigner_js__["a" /* default */])(function (object, source, srcIndex) {
    Object(__WEBPACK_IMPORTED_MODULE_0__baseMerge_js__["a" /* default */])(object, source, srcIndex);
  });

  /* harmony default export */__webpack_exports__["a"] = merge;

  /***/
},
/* 390 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__Stack_js__ = __webpack_require__(75);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__assignMergeValue_js__ = __webpack_require__(169);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__baseFor_js__ = __webpack_require__(163);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__baseMergeDeep_js__ = __webpack_require__(391);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__isObject_js__ = __webpack_require__(13);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__keysIn_js__ = __webpack_require__(170);

  /**
   * The base implementation of `_.merge` without support for multiple sources.
   *
   * @private
   * @param {Object} object The destination object.
   * @param {Object} source The source object.
   * @param {number} srcIndex The index of `source`.
   * @param {Function} [customizer] The function to customize merged values.
   * @param {Object} [stack] Tracks traversed source values and their merged
   *  counterparts.
   */
  function baseMerge(object, source, srcIndex, customizer, stack) {
    if (object === source) {
      return;
    }
    Object(__WEBPACK_IMPORTED_MODULE_2__baseFor_js__["a" /* default */])(source, function (srcValue, key) {
      if (Object(__WEBPACK_IMPORTED_MODULE_4__isObject_js__["a" /* default */])(srcValue)) {
        stack || (stack = new __WEBPACK_IMPORTED_MODULE_0__Stack_js__["a" /* default */]());
        Object(__WEBPACK_IMPORTED_MODULE_3__baseMergeDeep_js__["a" /* default */])(object, source, key, srcIndex, baseMerge, customizer, stack);
      } else {
        var newValue = customizer ? customizer(object[key], srcValue, key + '', object, source, stack) : undefined;

        if (newValue === undefined) {
          newValue = srcValue;
        }
        Object(__WEBPACK_IMPORTED_MODULE_1__assignMergeValue_js__["a" /* default */])(object, key, newValue);
      }
    }, __WEBPACK_IMPORTED_MODULE_5__keysIn_js__["a" /* default */]);
  }

  /* harmony default export */__webpack_exports__["a"] = baseMerge;

  /***/
},
/* 391 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__assignMergeValue_js__ = __webpack_require__(169);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__cloneBuffer_js__ = __webpack_require__(392);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__cloneTypedArray_js__ = __webpack_require__(393);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__copyArray_js__ = __webpack_require__(152);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_4__initCloneObject_js__ = __webpack_require__(395);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_5__isArguments_js__ = __webpack_require__(77);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_6__isArray_js__ = __webpack_require__(6);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_7__isArrayLikeObject_js__ = __webpack_require__(397);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_8__isBuffer_js__ = __webpack_require__(78);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_9__isFunction_js__ = __webpack_require__(72);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_10__isObject_js__ = __webpack_require__(13);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_11__isPlainObject_js__ = __webpack_require__(45);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_12__isTypedArray_js__ = __webpack_require__(81);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_13__toPlainObject_js__ = __webpack_require__(398);

  /**
   * A specialized version of `baseMerge` for arrays and objects which performs
   * deep merges and tracks traversed objects enabling objects with circular
   * references to be merged.
   *
   * @private
   * @param {Object} object The destination object.
   * @param {Object} source The source object.
   * @param {string} key The key of the value to merge.
   * @param {number} srcIndex The index of `source`.
   * @param {Function} mergeFunc The function to merge values.
   * @param {Function} [customizer] The function to customize assigned values.
   * @param {Object} [stack] Tracks traversed source values and their merged
   *  counterparts.
   */
  function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
    var objValue = object[key],
        srcValue = source[key],
        stacked = stack.get(srcValue);

    if (stacked) {
      Object(__WEBPACK_IMPORTED_MODULE_0__assignMergeValue_js__["a" /* default */])(object, key, stacked);
      return;
    }
    var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;

    var isCommon = newValue === undefined;

    if (isCommon) {
      var isArr = Object(__WEBPACK_IMPORTED_MODULE_6__isArray_js__["a" /* default */])(srcValue),
          isBuff = !isArr && Object(__WEBPACK_IMPORTED_MODULE_8__isBuffer_js__["a" /* default */])(srcValue),
          isTyped = !isArr && !isBuff && Object(__WEBPACK_IMPORTED_MODULE_12__isTypedArray_js__["a" /* default */])(srcValue);

      newValue = srcValue;
      if (isArr || isBuff || isTyped) {
        if (Object(__WEBPACK_IMPORTED_MODULE_6__isArray_js__["a" /* default */])(objValue)) {
          newValue = objValue;
        } else if (Object(__WEBPACK_IMPORTED_MODULE_7__isArrayLikeObject_js__["a" /* default */])(objValue)) {
          newValue = Object(__WEBPACK_IMPORTED_MODULE_3__copyArray_js__["a" /* default */])(objValue);
        } else if (isBuff) {
          isCommon = false;
          newValue = Object(__WEBPACK_IMPORTED_MODULE_1__cloneBuffer_js__["a" /* default */])(srcValue, true);
        } else if (isTyped) {
          isCommon = false;
          newValue = Object(__WEBPACK_IMPORTED_MODULE_2__cloneTypedArray_js__["a" /* default */])(srcValue, true);
        } else {
          newValue = [];
        }
      } else if (Object(__WEBPACK_IMPORTED_MODULE_11__isPlainObject_js__["a" /* default */])(srcValue) || Object(__WEBPACK_IMPORTED_MODULE_5__isArguments_js__["a" /* default */])(srcValue)) {
        newValue = objValue;
        if (Object(__WEBPACK_IMPORTED_MODULE_5__isArguments_js__["a" /* default */])(objValue)) {
          newValue = Object(__WEBPACK_IMPORTED_MODULE_13__toPlainObject_js__["a" /* default */])(objValue);
        } else if (!Object(__WEBPACK_IMPORTED_MODULE_10__isObject_js__["a" /* default */])(objValue) || srcIndex && Object(__WEBPACK_IMPORTED_MODULE_9__isFunction_js__["a" /* default */])(objValue)) {
          newValue = Object(__WEBPACK_IMPORTED_MODULE_4__initCloneObject_js__["a" /* default */])(srcValue);
        }
      } else {
        isCommon = false;
      }
    }
    if (isCommon) {
      // Recursively merge objects and arrays (susceptible to call stack limits).
      stack.set(srcValue, newValue);
      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
      stack['delete'](srcValue);
    }
    Object(__WEBPACK_IMPORTED_MODULE_0__assignMergeValue_js__["a" /* default */])(object, key, newValue);
  }

  /* harmony default export */__webpack_exports__["a"] = baseMergeDeep;

  /***/
},
/* 392 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* WEBPACK VAR INJECTION */
  (function (module) {
    /* harmony import */var __WEBPACK_IMPORTED_MODULE_0__root_js__ = __webpack_require__(5);

    /** Detect free variable `exports`. */
    var freeExports = (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) == 'object' && exports && !exports.nodeType && exports;

    /** Detect free variable `module`. */
    var freeModule = freeExports && (typeof module === "undefined" ? "undefined" : _typeof4(module)) == 'object' && module && !module.nodeType && module;

    /** Detect the popular CommonJS extension `module.exports`. */
    var moduleExports = freeModule && freeModule.exports === freeExports;

    /** Built-in value references. */
    var Buffer = moduleExports ? __WEBPACK_IMPORTED_MODULE_0__root_js__["a" /* default */].Buffer : undefined,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /* harmony default export */__webpack_exports__["a"] = cloneBuffer;

    /* WEBPACK VAR INJECTION */
  }).call(__webpack_exports__, __webpack_require__(79)(module));

  /***/
},
/* 393 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__cloneArrayBuffer_js__ = __webpack_require__(394);

  /**
   * Creates a clone of `typedArray`.
   *
   * @private
   * @param {Object} typedArray The typed array to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned typed array.
   */
  function cloneTypedArray(typedArray, isDeep) {
    var buffer = isDeep ? Object(__WEBPACK_IMPORTED_MODULE_0__cloneArrayBuffer_js__["a" /* default */])(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }

  /* harmony default export */__webpack_exports__["a"] = cloneTypedArray;

  /***/
},
/* 394 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__Uint8Array_js__ = __webpack_require__(158);

  /**
   * Creates a clone of `arrayBuffer`.
   *
   * @private
   * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
   * @returns {ArrayBuffer} Returns the cloned array buffer.
   */
  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new __WEBPACK_IMPORTED_MODULE_0__Uint8Array_js__["a" /* default */](result).set(new __WEBPACK_IMPORTED_MODULE_0__Uint8Array_js__["a" /* default */](arrayBuffer));
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = cloneArrayBuffer;

  /***/
},
/* 395 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseCreate_js__ = __webpack_require__(396);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__getPrototype_js__ = __webpack_require__(133);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isPrototype_js__ = __webpack_require__(83);

  /**
   * Initializes an object clone.
   *
   * @private
   * @param {Object} object The object to clone.
   * @returns {Object} Returns the initialized clone.
   */
  function initCloneObject(object) {
    return typeof object.constructor == 'function' && !Object(__WEBPACK_IMPORTED_MODULE_2__isPrototype_js__["a" /* default */])(object) ? Object(__WEBPACK_IMPORTED_MODULE_0__baseCreate_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_1__getPrototype_js__["a" /* default */])(object)) : {};
  }

  /* harmony default export */__webpack_exports__["a"] = initCloneObject;

  /***/
},
/* 396 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isObject_js__ = __webpack_require__(13);

  /** Built-in value references. */
  var objectCreate = Object.create;

  /**
   * The base implementation of `_.create` without support for assigning
   * properties to the created object.
   *
   * @private
   * @param {Object} proto The object to inherit from.
   * @returns {Object} Returns the new object.
   */
  var baseCreate = function () {
    function object() {}
    return function (proto) {
      if (!Object(__WEBPACK_IMPORTED_MODULE_0__isObject_js__["a" /* default */])(proto)) {
        return {};
      }
      if (objectCreate) {
        return objectCreate(proto);
      }
      object.prototype = proto;
      var result = new object();
      object.prototype = undefined;
      return result;
    };
  }();

  /* harmony default export */__webpack_exports__["a"] = baseCreate;

  /***/
},
/* 397 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__ = __webpack_require__(53);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__ = __webpack_require__(17);

  /**
   * This method is like `_.isArrayLike` except that it also checks if `value`
   * is an object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array-like object,
   *  else `false`.
   * @example
   *
   * _.isArrayLikeObject([1, 2, 3]);
   * // => true
   *
   * _.isArrayLikeObject(document.body.children);
   * // => true
   *
   * _.isArrayLikeObject('abc');
   * // => false
   *
   * _.isArrayLikeObject(_.noop);
   * // => false
   */
  function isArrayLikeObject(value) {
    return Object(__WEBPACK_IMPORTED_MODULE_1__isObjectLike_js__["a" /* default */])(value) && Object(__WEBPACK_IMPORTED_MODULE_0__isArrayLike_js__["a" /* default */])(value);
  }

  /* harmony default export */__webpack_exports__["a"] = isArrayLikeObject;

  /***/
},
/* 398 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__copyObject_js__ = __webpack_require__(399);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__keysIn_js__ = __webpack_require__(170);

  /**
   * Converts `value` to a plain object flattening inherited enumerable string
   * keyed properties of `value` to own properties of the plain object.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {Object} Returns the converted plain object.
   * @example
   *
   * function Foo() {
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.assign({ 'a': 1 }, new Foo);
   * // => { 'a': 1, 'b': 2 }
   *
   * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
   * // => { 'a': 1, 'b': 2, 'c': 3 }
   */
  function toPlainObject(value) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__copyObject_js__["a" /* default */])(value, Object(__WEBPACK_IMPORTED_MODULE_1__keysIn_js__["a" /* default */])(value));
  }

  /* harmony default export */__webpack_exports__["a"] = toPlainObject;

  /***/
},
/* 399 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__assignValue_js__ = __webpack_require__(400);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__baseAssignValue_js__ = __webpack_require__(54);

  /**
   * Copies properties of `source` to `object`.
   *
   * @private
   * @param {Object} source The object to copy properties from.
   * @param {Array} props The property identifiers to copy.
   * @param {Object} [object={}] The object to copy properties to.
   * @param {Function} [customizer] The function to customize copied values.
   * @returns {Object} Returns `object`.
   */
  function copyObject(source, props, object, customizer) {
    var isNew = !object;
    object || (object = {});

    var index = -1,
        length = props.length;

    while (++index < length) {
      var key = props[index];

      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;

      if (newValue === undefined) {
        newValue = source[key];
      }
      if (isNew) {
        Object(__WEBPACK_IMPORTED_MODULE_1__baseAssignValue_js__["a" /* default */])(object, key, newValue);
      } else {
        Object(__WEBPACK_IMPORTED_MODULE_0__assignValue_js__["a" /* default */])(object, key, newValue);
      }
    }
    return object;
  }

  /* harmony default export */__webpack_exports__["a"] = copyObject;

  /***/
},
/* 400 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseAssignValue_js__ = __webpack_require__(54);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__eq_js__ = __webpack_require__(36);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Assigns `value` to `key` of `object` if the existing value is not equivalent
   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {string} key The key of the property to assign.
   * @param {*} value The value to assign.
   */
  function assignValue(object, key, value) {
    var objValue = object[key];
    if (!(hasOwnProperty.call(object, key) && Object(__WEBPACK_IMPORTED_MODULE_1__eq_js__["a" /* default */])(objValue, value)) || value === undefined && !(key in object)) {
      Object(__WEBPACK_IMPORTED_MODULE_0__baseAssignValue_js__["a" /* default */])(object, key, value);
    }
  }

  /* harmony default export */__webpack_exports__["a"] = assignValue;

  /***/
},
/* 401 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__isObject_js__ = __webpack_require__(13);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isPrototype_js__ = __webpack_require__(83);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__nativeKeysIn_js__ = __webpack_require__(402);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeysIn(object) {
    if (!Object(__WEBPACK_IMPORTED_MODULE_0__isObject_js__["a" /* default */])(object)) {
      return Object(__WEBPACK_IMPORTED_MODULE_2__nativeKeysIn_js__["a" /* default */])(object);
    }
    var isProto = Object(__WEBPACK_IMPORTED_MODULE_1__isPrototype_js__["a" /* default */])(object),
        result = [];

    for (var key in object) {
      if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
        result.push(key);
      }
    }
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = baseKeysIn;

  /***/
},
/* 402 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * This function is like
   * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * except that it includes inherited enumerable properties.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */

  function nativeKeysIn(object) {
    var result = [];
    if (object != null) {
      for (var key in Object(object)) {
        result.push(key);
      }
    }
    return result;
  }

  /* harmony default export */__webpack_exports__["a"] = nativeKeysIn;

  /***/
},
/* 403 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseRest_js__ = __webpack_require__(404);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isIterateeCall_js__ = __webpack_require__(411);

  /**
   * Creates a function like `_.assign`.
   *
   * @private
   * @param {Function} assigner The function to assign values.
   * @returns {Function} Returns the new assigner function.
   */
  function createAssigner(assigner) {
    return Object(__WEBPACK_IMPORTED_MODULE_0__baseRest_js__["a" /* default */])(function (object, sources) {
      var index = -1,
          length = sources.length,
          customizer = length > 1 ? sources[length - 1] : undefined,
          guard = length > 2 ? sources[2] : undefined;

      customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;

      if (guard && Object(__WEBPACK_IMPORTED_MODULE_1__isIterateeCall_js__["a" /* default */])(sources[0], sources[1], guard)) {
        customizer = length < 3 ? undefined : customizer;
        length = 1;
      }
      object = Object(object);
      while (++index < length) {
        var source = sources[index];
        if (source) {
          assigner(object, source, index, customizer);
        }
      }
      return object;
    });
  }

  /* harmony default export */__webpack_exports__["a"] = createAssigner;

  /***/
},
/* 404 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__identity_js__ = __webpack_require__(85);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__overRest_js__ = __webpack_require__(405);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__setToString_js__ = __webpack_require__(407);

  /**
   * The base implementation of `_.rest` which doesn't validate or coerce arguments.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @returns {Function} Returns the new function.
   */
  function baseRest(func, start) {
    return Object(__WEBPACK_IMPORTED_MODULE_2__setToString_js__["a" /* default */])(Object(__WEBPACK_IMPORTED_MODULE_1__overRest_js__["a" /* default */])(func, start, __WEBPACK_IMPORTED_MODULE_0__identity_js__["a" /* default */]), func + '');
  }

  /* harmony default export */__webpack_exports__["a"] = baseRest;

  /***/
},
/* 405 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__apply_js__ = __webpack_require__(406);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * A specialized version of `baseRest` which transforms the rest array.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @param {Function} transform The rest array transform.
   * @returns {Function} Returns the new function.
   */
  function overRest(func, start, transform) {
    start = nativeMax(start === undefined ? func.length - 1 : start, 0);
    return function () {
      var args = arguments,
          index = -1,
          length = nativeMax(args.length - start, 0),
          array = Array(length);

      while (++index < length) {
        array[index] = args[start + index];
      }
      index = -1;
      var otherArgs = Array(start + 1);
      while (++index < start) {
        otherArgs[index] = args[index];
      }
      otherArgs[start] = transform(array);
      return Object(__WEBPACK_IMPORTED_MODULE_0__apply_js__["a" /* default */])(func, this, otherArgs);
    };
  }

  /* harmony default export */__webpack_exports__["a"] = overRest;

  /***/
},
/* 406 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */

  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /* harmony default export */__webpack_exports__["a"] = apply;

  /***/
},
/* 407 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__baseSetToString_js__ = __webpack_require__(408);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__shortOut_js__ = __webpack_require__(410);

  /**
   * Sets the `toString` method of `func` to return `string`.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var setToString = Object(__WEBPACK_IMPORTED_MODULE_1__shortOut_js__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_0__baseSetToString_js__["a" /* default */]);

  /* harmony default export */__webpack_exports__["a"] = setToString;

  /***/
},
/* 408 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__constant_js__ = __webpack_require__(409);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__defineProperty_js__ = __webpack_require__(162);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__identity_js__ = __webpack_require__(85);

  /**
   * The base implementation of `setToString` without support for hot loop shorting.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var baseSetToString = !__WEBPACK_IMPORTED_MODULE_1__defineProperty_js__["a" /* default */] ? __WEBPACK_IMPORTED_MODULE_2__identity_js__["a" /* default */] : function (func, string) {
    return Object(__WEBPACK_IMPORTED_MODULE_1__defineProperty_js__["a" /* default */])(func, 'toString', {
      'configurable': true,
      'enumerable': false,
      'value': Object(__WEBPACK_IMPORTED_MODULE_0__constant_js__["a" /* default */])(string),
      'writable': true
    });
  };

  /* harmony default export */__webpack_exports__["a"] = baseSetToString;

  /***/
},
/* 409 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /**
   * Creates a function that returns `value`.
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Util
   * @param {*} value The value to return from the new function.
   * @returns {Function} Returns the new constant function.
   * @example
   *
   * var objects = _.times(2, _.constant({ 'a': 1 }));
   *
   * console.log(objects);
   * // => [{ 'a': 1 }, { 'a': 1 }]
   *
   * console.log(objects[0] === objects[1]);
   * // => true
   */

  function constant(value) {
    return function () {
      return value;
    };
  }

  /* harmony default export */__webpack_exports__["a"] = constant;

  /***/
},
/* 410 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /** Used to detect hot functions by number of calls within a span of milliseconds. */

  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeNow = Date.now;

  /**
   * Creates a function that'll short out and invoke `identity` instead
   * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
   * milliseconds.
   *
   * @private
   * @param {Function} func The function to restrict.
   * @returns {Function} Returns the new shortable function.
   */
  function shortOut(func) {
    var count = 0,
        lastCalled = 0;

    return function () {
      var stamp = nativeNow(),
          remaining = HOT_SPAN - (stamp - lastCalled);

      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(undefined, arguments);
    };
  }

  /* harmony default export */__webpack_exports__["a"] = shortOut;

  /***/
},
/* 411 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__eq_js__ = __webpack_require__(36);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__ = __webpack_require__(53);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__isIndex_js__ = __webpack_require__(80);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_3__isObject_js__ = __webpack_require__(13);

  /**
   * Checks if the given arguments are from an iteratee call.
   *
   * @private
   * @param {*} value The potential iteratee value argument.
   * @param {*} index The potential iteratee index or key argument.
   * @param {*} object The potential iteratee object argument.
   * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
   *  else `false`.
   */
  function isIterateeCall(value, index, object) {
    if (!Object(__WEBPACK_IMPORTED_MODULE_3__isObject_js__["a" /* default */])(object)) {
      return false;
    }
    var type = typeof index === "undefined" ? "undefined" : _typeof4(index);
    if (type == 'number' ? Object(__WEBPACK_IMPORTED_MODULE_1__isArrayLike_js__["a" /* default */])(object) && Object(__WEBPACK_IMPORTED_MODULE_2__isIndex_js__["a" /* default */])(index, object.length) : type == 'string' && index in object) {
      return Object(__WEBPACK_IMPORTED_MODULE_0__eq_js__["a" /* default */])(object[index], value);
    }
    return false;
  }

  /* harmony default export */__webpack_exports__["a"] = isIterateeCall;

  /***/
},
/* 412 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_is_promise__ = __webpack_require__(87);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_is_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_is_promise__);

  var asyncValidation = function asyncValidation(fn, start, stop, field) {
    start(field);
    var promise = fn();
    if (!__WEBPACK_IMPORTED_MODULE_0_is_promise___default()(promise)) {
      throw new Error('asyncValidate function passed to reduxForm must return a promise');
    }
    var handleErrors = function handleErrors(rejected) {
      return function (errors) {
        if (errors && Object.keys(errors).length) {
          stop(errors);
          return errors;
        } else if (rejected) {
          stop();
          throw new Error('Asynchronous validation promise was rejected without errors.');
        }
        stop();
        return Promise.resolve();
      };
    };
    return promise.then(handleErrors(false), handleErrors(true));
  };

  /* harmony default export */__webpack_exports__["a"] = asyncValidation;

  /***/
},
/* 413 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__silenceEvent__ = __webpack_require__(171);

  var silenceEvents = function silenceEvents(fn) {
    return function (event) {
      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return Object(__WEBPACK_IMPORTED_MODULE_0__silenceEvent__["a" /* default */])(event) ? fn.apply(undefined, args) : fn.apply(undefined, [event].concat(args));
    };
  };

  /* harmony default export */__webpack_exports__["a"] = silenceEvents;

  /***/
},
/* 414 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__structure_plain__ = __webpack_require__(1);

  var toArray = function toArray(value) {
    return Array.isArray(value) ? value : [value];
  };

  var getError = function getError(value, values, props, validators, name) {
    var array = toArray(validators);
    for (var i = 0; i < array.length; i++) {
      var error = array[i](value, values, props, name);
      if (error) {
        return error;
      }
    }
  };

  var generateValidator = function generateValidator(validators, _ref) {
    var getIn = _ref.getIn;
    return function (values, props) {
      var errors = {};
      Object.keys(validators).forEach(function (name) {
        var value = getIn(values, name);
        var error = getError(value, values, props, validators[name], name);
        if (error) {
          errors = __WEBPACK_IMPORTED_MODULE_0__structure_plain__["a" /* default */].setIn(errors, name, error);
        }
      });
      return errors;
    };
  };

  /* harmony default export */__webpack_exports__["a"] = generateValidator;

  /***/
},
/* 415 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_is_promise__ = __webpack_require__(87);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_0_is_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_is_promise__);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__SubmissionError__ = __webpack_require__(146);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }return arr2;
    } else {
      return Array.from(arr);
    }
  }

  var handleSubmit = function handleSubmit(submit, props, valid, asyncValidate, fields) {
    var dispatch = props.dispatch,
        onSubmitFail = props.onSubmitFail,
        onSubmitSuccess = props.onSubmitSuccess,
        startSubmit = props.startSubmit,
        stopSubmit = props.stopSubmit,
        setSubmitFailed = props.setSubmitFailed,
        setSubmitSucceeded = props.setSubmitSucceeded,
        syncErrors = props.syncErrors,
        asyncErrors = props.asyncErrors,
        touch = props.touch,
        values = props.values,
        persistentSubmitErrors = props.persistentSubmitErrors;

    touch.apply(undefined, _toConsumableArray(fields)); // mark all fields as touched

    if (valid || persistentSubmitErrors) {
      var doSubmit = function doSubmit() {
        var result = void 0;
        try {
          result = submit(values, dispatch, props);
        } catch (submitError) {
          var error = submitError instanceof __WEBPACK_IMPORTED_MODULE_1__SubmissionError__["a" /* default */] ? submitError.errors : undefined;
          stopSubmit(error);
          setSubmitFailed.apply(undefined, _toConsumableArray(fields));
          if (onSubmitFail) {
            onSubmitFail(error, dispatch, submitError, props);
          }
          if (error || onSubmitFail) {
            // if you've provided an onSubmitFail callback, don't re-throw the error
            return error;
          } else {
            throw submitError;
          }
        }
        if (__WEBPACK_IMPORTED_MODULE_0_is_promise___default()(result)) {
          startSubmit();
          return result.then(function (submitResult) {
            stopSubmit();
            setSubmitSucceeded();
            if (onSubmitSuccess) {
              onSubmitSuccess(submitResult, dispatch, props);
            }
            return submitResult;
          }, function (submitError) {
            var error = submitError instanceof __WEBPACK_IMPORTED_MODULE_1__SubmissionError__["a" /* default */] ? submitError.errors : undefined;
            stopSubmit(error);
            setSubmitFailed.apply(undefined, _toConsumableArray(fields));
            if (onSubmitFail) {
              onSubmitFail(error, dispatch, submitError, props);
            }
            if (error || onSubmitFail) {
              // if you've provided an onSubmitFail callback, don't re-throw the error
              return error;
            } else {
              throw submitError;
            }
          });
        } else {
          setSubmitSucceeded();
          if (onSubmitSuccess) {
            onSubmitSuccess(result, dispatch, props);
          }
        }
        return result;
      };

      var asyncValidateResult = asyncValidate && asyncValidate();
      if (asyncValidateResult) {
        return asyncValidateResult.then(function (asyncErrors) {
          if (asyncErrors) {
            throw asyncErrors;
          }
          return doSubmit();
        }).catch(function (asyncErrors) {
          setSubmitFailed.apply(undefined, _toConsumableArray(fields));
          if (onSubmitFail) {
            onSubmitFail(asyncErrors, dispatch, null, props);
          }
          return Promise.reject(asyncErrors);
        });
      } else {
        return doSubmit();
      }
    } else {
      setSubmitFailed.apply(undefined, _toConsumableArray(fields));
      var errors = _extends({}, asyncErrors, syncErrors);
      if (onSubmitFail) {
        onSubmitFail(errors, dispatch, null, props);
      }
      return errors;
    }
  };

  /* harmony default export */__webpack_exports__["a"] = handleSubmit;

  /***/
},
/* 416 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";

  var getDisplayName = function getDisplayName(Comp) {
    return Comp.displayName || Comp.name || 'Component';
  };

  /* harmony default export */__webpack_exports__["a"] = getDisplayName;

  /***/
},
/* 417 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__createReducer__ = __webpack_require__(418);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__createReducer__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 418 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__actionTypes__ = __webpack_require__(70);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__deleteInWithCleanUp__ = __webpack_require__(419);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_2__structure_plain__ = __webpack_require__(1);
  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }return obj;
  }

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  var isReduxFormAction = function isReduxFormAction(action) {
    return action && action.type && action.type.length > __WEBPACK_IMPORTED_MODULE_0__actionTypes__["prefix"].length && action.type.substring(0, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["prefix"].length) === __WEBPACK_IMPORTED_MODULE_0__actionTypes__["prefix"];
  };

  function createReducer(structure) {
    var _behaviors;

    var deepEqual = structure.deepEqual,
        empty = structure.empty,
        forEach = structure.forEach,
        getIn = structure.getIn,
        setIn = structure.setIn,
        deleteIn = structure.deleteIn,
        fromJS = structure.fromJS,
        keys = structure.keys,
        size = structure.size,
        some = structure.some,
        splice = structure.splice;

    var deleteInWithCleanUp = Object(__WEBPACK_IMPORTED_MODULE_1__deleteInWithCleanUp__["a" /* default */])(structure);
    var plainDeleteInWithCleanUp = Object(__WEBPACK_IMPORTED_MODULE_1__deleteInWithCleanUp__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_2__structure_plain__["a" /* default */]);
    var doSplice = function doSplice(state, key, field, index, removeNum, value, force) {
      var existing = getIn(state, key + '.' + field);
      return existing || force ? setIn(state, key + '.' + field, splice(existing, index, removeNum, value)) : state;
    };
    var doPlainSplice = function doPlainSplice(state, key, field, index, removeNum, value, force) {
      var slice = getIn(state, key);
      var existing = __WEBPACK_IMPORTED_MODULE_2__structure_plain__["a" /* default */].getIn(slice, field);
      return existing || force ? setIn(state, key, __WEBPACK_IMPORTED_MODULE_2__structure_plain__["a" /* default */].setIn(slice, field, __WEBPACK_IMPORTED_MODULE_2__structure_plain__["a" /* default */].splice(existing, index, removeNum, value))) : state;
    };
    var rootKeys = ['values', 'fields', 'submitErrors', 'asyncErrors'];
    var arraySplice = function arraySplice(state, field, index, removeNum, value) {
      var result = state;
      var nonValuesValue = value != null ? empty : undefined;
      result = doSplice(result, 'values', field, index, removeNum, value, true);
      result = doSplice(result, 'fields', field, index, removeNum, nonValuesValue);
      result = doPlainSplice(result, 'syncErrors', field, index, removeNum, undefined);
      result = doPlainSplice(result, 'syncWarnings', field, index, removeNum, undefined);
      result = doSplice(result, 'submitErrors', field, index, removeNum, undefined);
      result = doSplice(result, 'asyncErrors', field, index, removeNum, undefined);
      return result;
    };

    var behaviors = (_behaviors = {}, _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_INSERT"], function (state, _ref) {
      var _ref$meta = _ref.meta,
          field = _ref$meta.field,
          index = _ref$meta.index,
          payload = _ref.payload;

      return arraySplice(state, field, index, 0, payload);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_MOVE"], function (state, _ref2) {
      var _ref2$meta = _ref2.meta,
          field = _ref2$meta.field,
          from = _ref2$meta.from,
          to = _ref2$meta.to;

      var array = getIn(state, 'values.' + field);
      var length = array ? size(array) : 0;
      var result = state;
      if (length) {
        rootKeys.forEach(function (key) {
          var path = key + '.' + field;
          if (getIn(result, path)) {
            var value = getIn(result, path + '[' + from + ']');
            result = setIn(result, path, splice(getIn(result, path), from, 1)); // remove
            result = setIn(result, path, splice(getIn(result, path), to, 0, value)); // insert
          }
        });
      }
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_POP"], function (state, _ref3) {
      var field = _ref3.meta.field;

      var array = getIn(state, 'values.' + field);
      var length = array ? size(array) : 0;
      return length ? arraySplice(state, field, length - 1, 1) : state;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_PUSH"], function (state, _ref4) {
      var field = _ref4.meta.field,
          payload = _ref4.payload;

      var array = getIn(state, 'values.' + field);
      var length = array ? size(array) : 0;
      return arraySplice(state, field, length, 0, payload);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_REMOVE"], function (state, _ref5) {
      var _ref5$meta = _ref5.meta,
          field = _ref5$meta.field,
          index = _ref5$meta.index;

      return arraySplice(state, field, index, 1);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_REMOVE_ALL"], function (state, _ref6) {
      var field = _ref6.meta.field;

      var array = getIn(state, 'values.' + field);
      var length = array ? size(array) : 0;
      return length ? arraySplice(state, field, 0, length) : state;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_SHIFT"], function (state, _ref7) {
      var field = _ref7.meta.field;

      return arraySplice(state, field, 0, 1);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_SPLICE"], function (state, _ref8) {
      var _ref8$meta = _ref8.meta,
          field = _ref8$meta.field,
          index = _ref8$meta.index,
          removeNum = _ref8$meta.removeNum,
          payload = _ref8.payload;

      return arraySplice(state, field, index, removeNum, payload);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_SWAP"], function (state, _ref9) {
      var _ref9$meta = _ref9.meta,
          field = _ref9$meta.field,
          indexA = _ref9$meta.indexA,
          indexB = _ref9$meta.indexB;

      var result = state;
      rootKeys.forEach(function (key) {
        var valueA = getIn(result, key + '.' + field + '[' + indexA + ']');
        var valueB = getIn(result, key + '.' + field + '[' + indexB + ']');
        if (valueA !== undefined || valueB !== undefined) {
          result = setIn(result, key + '.' + field + '[' + indexA + ']', valueB);
          result = setIn(result, key + '.' + field + '[' + indexB + ']', valueA);
        }
      });
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["ARRAY_UNSHIFT"], function (state, _ref10) {
      var field = _ref10.meta.field,
          payload = _ref10.payload;

      return arraySplice(state, field, 0, 0, payload);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["AUTOFILL"], function (state, _ref11) {
      var field = _ref11.meta.field,
          payload = _ref11.payload;

      var result = state;
      result = deleteInWithCleanUp(result, 'asyncErrors.' + field);
      result = deleteInWithCleanUp(result, 'submitErrors.' + field);
      result = setIn(result, 'fields.' + field + '.autofilled', true);
      result = setIn(result, 'values.' + field, payload);
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["BLUR"], function (state, _ref12) {
      var _ref12$meta = _ref12.meta,
          field = _ref12$meta.field,
          touch = _ref12$meta.touch,
          payload = _ref12.payload;

      var result = state;
      var initial = getIn(result, 'initial.' + field);
      if (initial === undefined && payload === '') {
        result = deleteInWithCleanUp(result, 'values.' + field);
      } else if (payload !== undefined) {
        result = setIn(result, 'values.' + field, payload);
      }
      if (field === getIn(result, 'active')) {
        result = deleteIn(result, 'active');
      }
      result = deleteIn(result, 'fields.' + field + '.active');
      if (touch) {
        result = setIn(result, 'fields.' + field + '.touched', true);
        result = setIn(result, 'anyTouched', true);
      }
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["CHANGE"], function (state, _ref13) {
      var _ref13$meta = _ref13.meta,
          field = _ref13$meta.field,
          touch = _ref13$meta.touch,
          persistentSubmitErrors = _ref13$meta.persistentSubmitErrors,
          payload = _ref13.payload;

      var result = state;
      var initial = getIn(result, 'initial.' + field);
      if (initial === undefined && payload === '') {
        result = deleteInWithCleanUp(result, 'values.' + field);
      } else if (payload !== undefined) {
        result = setIn(result, 'values.' + field, payload);
      }
      result = deleteInWithCleanUp(result, 'asyncErrors.' + field);
      if (!persistentSubmitErrors) {
        result = deleteInWithCleanUp(result, 'submitErrors.' + field);
      }
      result = deleteInWithCleanUp(result, 'fields.' + field + '.autofilled');
      if (touch) {
        result = setIn(result, 'fields.' + field + '.touched', true);
        result = setIn(result, 'anyTouched', true);
      }
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["CLEAR_SUBMIT"], function (state) {
      return deleteIn(state, 'triggerSubmit');
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["CLEAR_SUBMIT_ERRORS"], function (state) {
      var result = state;
      result = deleteInWithCleanUp(result, 'submitErrors');
      result = deleteIn(result, 'error');
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["CLEAR_ASYNC_ERROR"], function (state, _ref14) {
      var field = _ref14.meta.field;

      return deleteIn(state, 'asyncErrors.' + field);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["FOCUS"], function (state, _ref15) {
      var field = _ref15.meta.field;

      var result = state;
      var previouslyActive = getIn(state, 'active');
      result = deleteIn(result, 'fields.' + previouslyActive + '.active');
      result = setIn(result, 'fields.' + field + '.visited', true);
      result = setIn(result, 'fields.' + field + '.active', true);
      result = setIn(result, 'active', field);
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["INITIALIZE"], function (state, _ref16) {
      var payload = _ref16.payload,
          _ref16$meta = _ref16.meta,
          keepDirty = _ref16$meta.keepDirty,
          keepSubmitSucceeded = _ref16$meta.keepSubmitSucceeded;

      var mapData = fromJS(payload);
      var result = empty; // clean all field state

      // persist old warnings, they will get recalculated if the new form values are different from the old values
      var warning = getIn(state, 'warning');
      if (warning) {
        result = setIn(result, 'warning', warning);
      }
      var syncWarnings = getIn(state, 'syncWarnings');
      if (syncWarnings) {
        result = setIn(result, 'syncWarnings', syncWarnings);
      }

      // persist old errors, they will get recalculated if the new form values are different from the old values
      var error = getIn(state, 'error');
      if (error) {
        result = setIn(result, 'error', error);
      }
      var syncErrors = getIn(state, 'syncErrors');
      if (syncErrors) {
        result = setIn(result, 'syncErrors', syncErrors);
      }

      var registeredFields = getIn(state, 'registeredFields');
      if (registeredFields) {
        result = setIn(result, 'registeredFields', registeredFields);
      }

      var previousValues = getIn(state, 'values');
      var previousInitialValues = getIn(state, 'initial');
      var newInitialValues = mapData;

      var newValues = previousValues;

      if (keepDirty && registeredFields) {
        if (!deepEqual(newInitialValues, previousInitialValues)) {
          //
          // Keep the value of dirty fields while updating the value of
          // pristine fields. This way, apps can reinitialize forms while
          // avoiding stomping on user edits.
          //
          // Note 1: The initialize action replaces all initial values
          // regardless of keepDirty.
          //
          // Note 2: When a field is dirty, keepDirty is enabled, and the field
          // value is the same as the new initial value for the field, the
          // initialize action causes the field to become pristine. That effect
          // is what we want.
          //
          forEach(keys(registeredFields), function (name) {
            var previousInitialValue = getIn(previousInitialValues, name);
            var previousValue = getIn(previousValues, name);

            if (deepEqual(previousValue, previousInitialValue)) {
              // Overwrite the old pristine value with the new pristine value
              var newInitialValue = getIn(newInitialValues, name);

              // This check prevents any 'setIn' call that would create useless
              // nested objects, since the path to the new field value would
              // evaluate to the same (especially for undefined values)
              if (getIn(newValues, name) !== newInitialValue) {
                newValues = setIn(newValues, name, newInitialValue);
              }
            }
          });

          forEach(keys(newInitialValues), function (name) {
            var previousInitialValue = getIn(previousInitialValues, name);
            if (typeof previousInitialValue === 'undefined') {
              // Add new values at the root level.
              var newInitialValue = getIn(newInitialValues, name);
              newValues = setIn(newValues, name, newInitialValue);
            }
          });
        }
      } else {
        newValues = newInitialValues;
      }

      if (keepSubmitSucceeded && getIn(state, 'submitSucceeded')) {
        result = setIn(result, 'submitSucceeded', true);
      }
      result = setIn(result, 'values', newValues);
      result = setIn(result, 'initial', newInitialValues);
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["REGISTER_FIELD"], function (state, _ref17) {
      var _ref17$payload = _ref17.payload,
          name = _ref17$payload.name,
          type = _ref17$payload.type;

      var key = 'registeredFields[\'' + name + '\']';
      var field = getIn(state, key);
      if (field) {
        var count = getIn(field, 'count') + 1;
        field = setIn(field, 'count', count);
      } else {
        field = fromJS({ name: name, type: type, count: 1 });
      }
      return setIn(state, key, field);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["RESET"], function (state) {
      var result = empty;
      var registeredFields = getIn(state, 'registeredFields');
      if (registeredFields) {
        result = setIn(result, 'registeredFields', registeredFields);
      }
      var values = getIn(state, 'initial');
      if (values) {
        result = setIn(result, 'values', values);
        result = setIn(result, 'initial', values);
      }
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["SUBMIT"], function (state) {
      return setIn(state, 'triggerSubmit', true);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["START_ASYNC_VALIDATION"], function (state, _ref18) {
      var field = _ref18.meta.field;

      return setIn(state, 'asyncValidating', field || true);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["START_SUBMIT"], function (state) {
      return setIn(state, 'submitting', true);
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["STOP_ASYNC_VALIDATION"], function (state, _ref19) {
      var payload = _ref19.payload;

      var result = state;
      result = deleteIn(result, 'asyncValidating');
      if (payload && Object.keys(payload).length) {
        var _error = payload._error,
            fieldErrors = _objectWithoutProperties(payload, ['_error']);

        if (_error) {
          result = setIn(result, 'error', _error);
        }
        if (Object.keys(fieldErrors).length) {
          result = setIn(result, 'asyncErrors', fromJS(fieldErrors));
        }
      } else {
        result = deleteIn(result, 'error');
      }
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["STOP_SUBMIT"], function (state, _ref20) {
      var payload = _ref20.payload;

      var result = state;
      result = deleteIn(result, 'submitting');
      result = deleteIn(result, 'submitFailed');
      result = deleteIn(result, 'submitSucceeded');
      if (payload && Object.keys(payload).length) {
        var _error = payload._error,
            fieldErrors = _objectWithoutProperties(payload, ['_error']);

        if (_error) {
          result = setIn(result, 'error', _error);
        } else {
          result = deleteIn(result, 'error');
        }
        if (Object.keys(fieldErrors).length) {
          result = setIn(result, 'submitErrors', fromJS(fieldErrors));
        } else {
          result = deleteIn(result, 'submitErrors');
        }
        result = setIn(result, 'submitFailed', true);
      } else {
        result = setIn(result, 'submitSucceeded', true);
        result = deleteIn(result, 'error');
        result = deleteIn(result, 'submitErrors');
      }
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["SET_SUBMIT_FAILED"], function (state, _ref21) {
      var fields = _ref21.meta.fields;

      var result = state;
      result = setIn(result, 'submitFailed', true);
      result = deleteIn(result, 'submitSucceeded');
      result = deleteIn(result, 'submitting');
      fields.forEach(function (field) {
        return result = setIn(result, 'fields.' + field + '.touched', true);
      });
      if (fields.length) {
        result = setIn(result, 'anyTouched', true);
      }
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["SET_SUBMIT_SUCCEEDED"], function (state) {
      var result = state;
      result = deleteIn(result, 'submitFailed');
      result = setIn(result, 'submitSucceeded', true);
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["TOUCH"], function (state, _ref22) {
      var fields = _ref22.meta.fields;

      var result = state;
      fields.forEach(function (field) {
        return result = setIn(result, 'fields.' + field + '.touched', true);
      });
      result = setIn(result, 'anyTouched', true);
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["UNREGISTER_FIELD"], function (state, _ref23) {
      var _ref23$payload = _ref23.payload,
          name = _ref23$payload.name,
          destroyOnUnmount = _ref23$payload.destroyOnUnmount;

      var result = state;
      var key = 'registeredFields[\'' + name + '\']';
      var field = getIn(result, key);
      if (!field) {
        return result;
      }

      var count = getIn(field, 'count') - 1;
      if (count <= 0 && destroyOnUnmount) {
        // Note: Cannot use deleteWithCleanUp here because of the flat nature of registeredFields
        result = deleteIn(result, key);
        if (deepEqual(getIn(result, 'registeredFields'), empty)) {
          result = deleteIn(result, 'registeredFields');
        }
        var syncErrors = getIn(result, 'syncErrors');
        if (syncErrors) {
          syncErrors = plainDeleteInWithCleanUp(syncErrors, name);
          if (__WEBPACK_IMPORTED_MODULE_2__structure_plain__["a" /* default */].deepEqual(syncErrors, __WEBPACK_IMPORTED_MODULE_2__structure_plain__["a" /* default */].empty)) {
            result = deleteIn(result, 'syncErrors');
          } else {
            result = setIn(result, 'syncErrors', syncErrors);
          }
        }
        var syncWarnings = getIn(result, 'syncWarnings');
        if (syncWarnings) {
          syncWarnings = plainDeleteInWithCleanUp(syncWarnings, name);
          if (__WEBPACK_IMPORTED_MODULE_2__structure_plain__["a" /* default */].deepEqual(syncWarnings, __WEBPACK_IMPORTED_MODULE_2__structure_plain__["a" /* default */].empty)) {
            result = deleteIn(result, 'syncWarnings');
          } else {
            result = setIn(result, 'syncWarnings', syncWarnings);
          }
        }
        result = deleteInWithCleanUp(result, 'submitErrors.' + name);
        result = deleteInWithCleanUp(result, 'asyncErrors.' + name);
      } else {
        field = setIn(field, 'count', count);
        result = setIn(result, key, field);
      }
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["UNTOUCH"], function (state, _ref24) {
      var fields = _ref24.meta.fields;

      var result = state;
      fields.forEach(function (field) {
        return result = deleteIn(result, 'fields.' + field + '.touched');
      });
      var anyTouched = some(keys(getIn(result, 'registeredFields')), function (key) {
        return getIn(result, 'fields.' + key + '.touched');
      });
      result = anyTouched ? setIn(result, 'anyTouched', true) : deleteIn(result, 'anyTouched');
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["UPDATE_SYNC_ERRORS"], function (state, _ref25) {
      var _ref25$payload = _ref25.payload,
          syncErrors = _ref25$payload.syncErrors,
          error = _ref25$payload.error;

      var result = state;
      if (error) {
        result = setIn(result, 'error', error);
        result = setIn(result, 'syncError', true);
      } else {
        result = deleteIn(result, 'error');
        result = deleteIn(result, 'syncError');
      }
      if (Object.keys(syncErrors).length) {
        result = setIn(result, 'syncErrors', syncErrors);
      } else {
        result = deleteIn(result, 'syncErrors');
      }
      return result;
    }), _defineProperty(_behaviors, __WEBPACK_IMPORTED_MODULE_0__actionTypes__["UPDATE_SYNC_WARNINGS"], function (state, _ref26) {
      var _ref26$payload = _ref26.payload,
          syncWarnings = _ref26$payload.syncWarnings,
          warning = _ref26$payload.warning;

      var result = state;
      if (warning) {
        result = setIn(result, 'warning', warning);
      } else {
        result = deleteIn(result, 'warning');
      }
      if (Object.keys(syncWarnings).length) {
        result = setIn(result, 'syncWarnings', syncWarnings);
      } else {
        result = deleteIn(result, 'syncWarnings');
      }
      return result;
    }), _behaviors);

    var reducer = function reducer() {
      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : empty;
      var action = arguments[1];

      var behavior = behaviors[action.type];
      return behavior ? behavior(state, action) : state;
    };

    var byForm = function byForm(reducer) {
      return function () {
        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : empty;
        var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { type: 'NONE' };

        var form = action && action.meta && action.meta.form;
        if (!form || !isReduxFormAction(action)) {
          return state;
        }
        if (action.type === __WEBPACK_IMPORTED_MODULE_0__actionTypes__["DESTROY"] && action.meta && action.meta.form) {
          return action.meta.form.reduce(function (result, form) {
            return deleteInWithCleanUp(result, form);
          }, state);
        }
        var formState = getIn(state, form);
        var result = reducer(formState, action);
        return result === formState ? state : setIn(state, form, result);
      };
    };

    /**
     * Adds additional functionality to the reducer
     */
    function decorate(target) {
      target.plugin = function (reducers) {
        var _this = this;

        // use 'function' keyword to enable 'this'
        return decorate(function () {
          var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : empty;
          var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { type: 'NONE' };

          var callPlugin = function callPlugin(processed, key) {
            var previousState = getIn(processed, key);
            var nextState = reducers[key](previousState, action, getIn(state, key));
            return nextState !== previousState ? setIn(processed, key, nextState) : processed;
          };

          var processed = _this(state, action); // run through redux-form reducer
          var form = action && action.meta && action.meta.form;

          if (form) {
            // this is an action aimed at forms, so only give it to the specified form's plugin
            return reducers[form] ? callPlugin(processed, form) : processed;
          } else {
            // this is not a form-specific action, so send it to all the plugins
            return Object.keys(reducers).reduce(callPlugin, processed);
          }
        });
      };

      return target;
    }

    return decorate(byForm(reducer));
  }

  /* harmony default export */__webpack_exports__["a"] = createReducer;

  /***/
},
/* 419 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_lodash_es_toPath__ = __webpack_require__(47);

  function createDeleteInWithCleanUp(_ref) {
    var deepEqual = _ref.deepEqual,
        empty = _ref.empty,
        getIn = _ref.getIn,
        deleteIn = _ref.deleteIn,
        setIn = _ref.setIn;

    var deleteInWithCleanUp = function deleteInWithCleanUp(state, path) {
      if (path[path.length - 1] === ']') {
        // array path
        var pathTokens = Object(__WEBPACK_IMPORTED_MODULE_0_lodash_es_toPath__["a" /* default */])(path);
        pathTokens.pop();
        var parent = getIn(state, pathTokens.join('.'));
        return parent ? setIn(state, path) : state;
      }

      var result = state;
      if (getIn(state, path) !== undefined) {
        result = deleteIn(state, path);
      }

      var dotIndex = path.lastIndexOf('.');
      if (dotIndex > 0) {
        var parentPath = path.substring(0, dotIndex);
        if (parentPath[parentPath.length - 1] !== ']') {
          var _parent = getIn(result, parentPath);
          if (deepEqual(_parent, empty)) {
            return deleteInWithCleanUp(result, parentPath);
          }
        }
      }
      return result;
    };

    return deleteInWithCleanUp;
  }

  /* harmony default export */__webpack_exports__["a"] = createDeleteInWithCleanUp;

  /***/
},
/* 420 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0__createValues__ = __webpack_require__(421);
  /* harmony import */var __WEBPACK_IMPORTED_MODULE_1__structure_plain__ = __webpack_require__(1);

  /* harmony default export */__webpack_exports__["a"] = Object(__WEBPACK_IMPORTED_MODULE_0__createValues__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_1__structure_plain__["a" /* default */]);

  /***/
},
/* 421 */
/***/function (module, __webpack_exports__, __webpack_require__) {

  "use strict";
  /* harmony import */
  var __WEBPACK_IMPORTED_MODULE_0_react_redux__ = __webpack_require__(8);
  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
    } else {
      obj[key] = value;
    }return obj;
  }

  var createValues = function createValues(_ref) {
    var getIn = _ref.getIn;
    return function (config) {
      var _prop$getFormState$co = _extends({
        prop: 'values',
        getFormState: function getFormState(state) {
          return getIn(state, 'form');
        }
      }, config),
          form = _prop$getFormState$co.form,
          prop = _prop$getFormState$co.prop,
          getFormState = _prop$getFormState$co.getFormState;

      return Object(__WEBPACK_IMPORTED_MODULE_0_react_redux__["connect"])(function (state) {
        return _defineProperty({}, prop, getIn(getFormState(state), form + '.values'));
      }
      // ignore dispatch
      );
    };
  };

  /* harmony default export */__webpack_exports__["a"] = createValues;

  /***/
},
/* 422 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = modalReducer;

  var _ActionTypes = __webpack_require__(172);

  var ActionTypes = _interopRequireWildcard(_ActionTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function modalReducer() {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
    var action = arguments[1];

    switch (action.type) {
      case ActionTypes.MODAL_OPEN:
        return { show: action.show };
      default:
        return state;
    }
  }

  /***/
},
/* 423 */
/***/function (module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function (global) {
    !function (e, t) {
      true ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t(e.reduxLogger = e.reduxLogger || {});
    }(this, function (e) {
      "use strict";
      function t(e, t) {
        e.super_ = t, e.prototype = Object.create(t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } });
      }function r(e, t) {
        Object.defineProperty(this, "kind", { value: e, enumerable: !0 }), t && t.length && Object.defineProperty(this, "path", { value: t, enumerable: !0 });
      }function n(e, t, r) {
        n.super_.call(this, "E", e), Object.defineProperty(this, "lhs", { value: t, enumerable: !0 }), Object.defineProperty(this, "rhs", { value: r, enumerable: !0 });
      }function o(e, t) {
        o.super_.call(this, "N", e), Object.defineProperty(this, "rhs", { value: t, enumerable: !0 });
      }function i(e, t) {
        i.super_.call(this, "D", e), Object.defineProperty(this, "lhs", { value: t, enumerable: !0 });
      }function a(e, t, r) {
        a.super_.call(this, "A", e), Object.defineProperty(this, "index", { value: t, enumerable: !0 }), Object.defineProperty(this, "item", { value: r, enumerable: !0 });
      }function f(e, t, r) {
        var n = e.slice((r || t) + 1 || e.length);return e.length = t < 0 ? e.length + t : t, e.push.apply(e, n), e;
      }function u(e) {
        var t = "undefined" == typeof e ? "undefined" : N(e);return "object" !== t ? t : e === Math ? "math" : null === e ? "null" : Array.isArray(e) ? "array" : "[object Date]" === Object.prototype.toString.call(e) ? "date" : "function" == typeof e.toString && /^\/.*\//.test(e.toString()) ? "regexp" : "object";
      }function l(e, t, r, c, s, d, p) {
        s = s || [], p = p || [];var g = s.slice(0);if ("undefined" != typeof d) {
          if (c) {
            if ("function" == typeof c && c(g, d)) return;if ("object" === ("undefined" == typeof c ? "undefined" : N(c))) {
              if (c.prefilter && c.prefilter(g, d)) return;if (c.normalize) {
                var h = c.normalize(g, d, e, t);h && (e = h[0], t = h[1]);
              }
            }
          }g.push(d);
        }"regexp" === u(e) && "regexp" === u(t) && (e = e.toString(), t = t.toString());var y = "undefined" == typeof e ? "undefined" : N(e),
            v = "undefined" == typeof t ? "undefined" : N(t),
            b = "undefined" !== y || p && p[p.length - 1].lhs && p[p.length - 1].lhs.hasOwnProperty(d),
            m = "undefined" !== v || p && p[p.length - 1].rhs && p[p.length - 1].rhs.hasOwnProperty(d);if (!b && m) r(new o(g, t));else if (!m && b) r(new i(g, e));else if (u(e) !== u(t)) r(new n(g, e, t));else if ("date" === u(e) && e - t !== 0) r(new n(g, e, t));else if ("object" === y && null !== e && null !== t) {
          if (p.filter(function (t) {
            return t.lhs === e;
          }).length) e !== t && r(new n(g, e, t));else {
            if (p.push({ lhs: e, rhs: t }), Array.isArray(e)) {
              var w;e.length;for (w = 0; w < e.length; w++) {
                w >= t.length ? r(new a(g, w, new i(void 0, e[w]))) : l(e[w], t[w], r, c, g, w, p);
              }for (; w < t.length;) {
                r(new a(g, w, new o(void 0, t[w++])));
              }
            } else {
              var x = Object.keys(e),
                  S = Object.keys(t);x.forEach(function (n, o) {
                var i = S.indexOf(n);i >= 0 ? (l(e[n], t[n], r, c, g, n, p), S = f(S, i)) : l(e[n], void 0, r, c, g, n, p);
              }), S.forEach(function (e) {
                l(void 0, t[e], r, c, g, e, p);
              });
            }p.length = p.length - 1;
          }
        } else e !== t && ("number" === y && isNaN(e) && isNaN(t) || r(new n(g, e, t)));
      }function c(e, t, r, n) {
        return n = n || [], l(e, t, function (e) {
          e && n.push(e);
        }, r), n.length ? n : void 0;
      }function s(e, t, r) {
        if (r.path && r.path.length) {
          var n,
              o = e[t],
              i = r.path.length - 1;for (n = 0; n < i; n++) {
            o = o[r.path[n]];
          }switch (r.kind) {case "A":
              s(o[r.path[n]], r.index, r.item);break;case "D":
              delete o[r.path[n]];break;case "E":case "N":
              o[r.path[n]] = r.rhs;}
        } else switch (r.kind) {case "A":
            s(e[t], r.index, r.item);break;case "D":
            e = f(e, t);break;case "E":case "N":
            e[t] = r.rhs;}return e;
      }function d(e, t, r) {
        if (e && t && r && r.kind) {
          for (var n = e, o = -1, i = r.path ? r.path.length - 1 : 0; ++o < i;) {
            "undefined" == typeof n[r.path[o]] && (n[r.path[o]] = "number" == typeof r.path[o] ? [] : {}), n = n[r.path[o]];
          }switch (r.kind) {case "A":
              s(r.path ? n[r.path[o]] : n, r.index, r.item);break;case "D":
              delete n[r.path[o]];break;case "E":case "N":
              n[r.path[o]] = r.rhs;}
        }
      }function p(e, t, r) {
        if (r.path && r.path.length) {
          var n,
              o = e[t],
              i = r.path.length - 1;for (n = 0; n < i; n++) {
            o = o[r.path[n]];
          }switch (r.kind) {case "A":
              p(o[r.path[n]], r.index, r.item);break;case "D":
              o[r.path[n]] = r.lhs;break;case "E":
              o[r.path[n]] = r.lhs;break;case "N":
              delete o[r.path[n]];}
        } else switch (r.kind) {case "A":
            p(e[t], r.index, r.item);break;case "D":
            e[t] = r.lhs;break;case "E":
            e[t] = r.lhs;break;case "N":
            e = f(e, t);}return e;
      }function g(e, t, r) {
        if (e && t && r && r.kind) {
          var n,
              o,
              i = e;for (o = r.path.length - 1, n = 0; n < o; n++) {
            "undefined" == typeof i[r.path[n]] && (i[r.path[n]] = {}), i = i[r.path[n]];
          }switch (r.kind) {case "A":
              p(i[r.path[n]], r.index, r.item);break;case "D":
              i[r.path[n]] = r.lhs;break;case "E":
              i[r.path[n]] = r.lhs;break;case "N":
              delete i[r.path[n]];}
        }
      }function h(e, t, r) {
        if (e && t) {
          var n = function n(_n2) {
            r && !r(e, t, _n2) || d(e, t, _n2);
          };l(e, t, n);
        }
      }function y(e) {
        return "color: " + F[e].color + "; font-weight: bold";
      }function v(e) {
        var t = e.kind,
            r = e.path,
            n = e.lhs,
            o = e.rhs,
            i = e.index,
            a = e.item;switch (t) {case "E":
            return [r.join("."), n, "→", o];case "N":
            return [r.join("."), o];case "D":
            return [r.join(".")];case "A":
            return [r.join(".") + "[" + i + "]", a];default:
            return [];}
      }function b(e, t, r, n) {
        var o = c(e, t);try {
          n ? r.groupCollapsed("diff") : r.group("diff");
        } catch (e) {
          r.log("diff");
        }o ? o.forEach(function (e) {
          var t = e.kind,
              n = v(e);r.log.apply(r, ["%c " + F[t].text, y(t)].concat(P(n)));
        }) : r.log("—— no diff ——");try {
          r.groupEnd();
        } catch (e) {
          r.log("—— diff end —— ");
        }
      }function m(e, t, r, n) {
        switch ("undefined" == typeof e ? "undefined" : N(e)) {case "object":
            return "function" == typeof e[n] ? e[n].apply(e, P(r)) : e[n];case "function":
            return e(t);default:
            return e;}
      }function w(e) {
        var t = e.timestamp,
            r = e.duration;return function (e, n, o) {
          var i = ["action"];return i.push("%c" + String(e.type)), t && i.push("%c@ " + n), r && i.push("%c(in " + o.toFixed(2) + " ms)"), i.join(" ");
        };
      }function x(e, t) {
        var r = t.logger,
            n = t.actionTransformer,
            o = t.titleFormatter,
            i = void 0 === o ? w(t) : o,
            a = t.collapsed,
            f = t.colors,
            u = t.level,
            l = t.diff,
            c = "undefined" == typeof t.titleFormatter;e.forEach(function (o, s) {
          var d = o.started,
              p = o.startedTime,
              g = o.action,
              h = o.prevState,
              y = o.error,
              v = o.took,
              w = o.nextState,
              x = e[s + 1];x && (w = x.prevState, v = x.started - d);var S = n(g),
              k = "function" == typeof a ? a(function () {
            return w;
          }, g, o) : a,
              j = D(p),
              E = f.title ? "color: " + f.title(S) + ";" : "",
              A = ["color: gray; font-weight: lighter;"];A.push(E), t.timestamp && A.push("color: gray; font-weight: lighter;"), t.duration && A.push("color: gray; font-weight: lighter;");var O = i(S, j, v);try {
            k ? f.title && c ? r.groupCollapsed.apply(r, ["%c " + O].concat(A)) : r.groupCollapsed(O) : f.title && c ? r.group.apply(r, ["%c " + O].concat(A)) : r.group(O);
          } catch (e) {
            r.log(O);
          }var N = m(u, S, [h], "prevState"),
              P = m(u, S, [S], "action"),
              C = m(u, S, [y, h], "error"),
              F = m(u, S, [w], "nextState");if (N) if (f.prevState) {
            var L = "color: " + f.prevState(h) + "; font-weight: bold";r[N]("%c prev state", L, h);
          } else r[N]("prev state", h);if (P) if (f.action) {
            var T = "color: " + f.action(S) + "; font-weight: bold";r[P]("%c action    ", T, S);
          } else r[P]("action    ", S);if (y && C) if (f.error) {
            var M = "color: " + f.error(y, h) + "; font-weight: bold;";r[C]("%c error     ", M, y);
          } else r[C]("error     ", y);if (F) if (f.nextState) {
            var _ = "color: " + f.nextState(w) + "; font-weight: bold";r[F]("%c next state", _, w);
          } else r[F]("next state", w);l && b(h, w, r, k);try {
            r.groupEnd();
          } catch (e) {
            r.log("—— log end ——");
          }
        });
      }function S() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = Object.assign({}, L, e),
            r = t.logger,
            n = t.stateTransformer,
            o = t.errorTransformer,
            i = t.predicate,
            a = t.logErrors,
            f = t.diffPredicate;if ("undefined" == typeof r) return function () {
          return function (e) {
            return function (t) {
              return e(t);
            };
          };
        };if (e.getState && e.dispatch) return console.error("[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:\n// Logger with default options\nimport { logger } from 'redux-logger'\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n// Or you can create your own logger with custom options http://bit.ly/redux-logger-options\nimport createLogger from 'redux-logger'\nconst logger = createLogger({\n  // ...options\n});\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger)\n)\n"), function () {
          return function (e) {
            return function (t) {
              return e(t);
            };
          };
        };var u = [];return function (e) {
          var r = e.getState;return function (e) {
            return function (l) {
              if ("function" == typeof i && !i(r, l)) return e(l);var c = {};u.push(c), c.started = O.now(), c.startedTime = new Date(), c.prevState = n(r()), c.action = l;var s = void 0;if (a) try {
                s = e(l);
              } catch (e) {
                c.error = o(e);
              } else s = e(l);c.took = O.now() - c.started, c.nextState = n(r());var d = t.diff && "function" == typeof f ? f(r, l) : t.diff;if (x(u, Object.assign({}, t, { diff: d })), u.length = 0, c.error) throw c.error;return s;
            };
          };
        };
      }var k,
          j,
          E = function E(e, t) {
        return new Array(t + 1).join(e);
      },
          A = function A(e, t) {
        return E("0", t - e.toString().length) + e;
      },
          D = function D(e) {
        return A(e.getHours(), 2) + ":" + A(e.getMinutes(), 2) + ":" + A(e.getSeconds(), 2) + "." + A(e.getMilliseconds(), 3);
      },
          O = "undefined" != typeof performance && null !== performance && "function" == typeof performance.now ? performance : Date,
          N = "function" == typeof Symbol && "symbol" == _typeof4(Symbol.iterator) ? function (e) {
        return typeof e === "undefined" ? "undefined" : _typeof4(e);
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof4(e);
      },
          P = function P(e) {
        if (Array.isArray(e)) {
          for (var t = 0, r = Array(e.length); t < e.length; t++) {
            r[t] = e[t];
          }return r;
        }return Array.from(e);
      },
          C = [];k = "object" === ("undefined" == typeof global ? "undefined" : N(global)) && global ? global : "undefined" != typeof window ? window : {}, j = k.DeepDiff, j && C.push(function () {
        "undefined" != typeof j && k.DeepDiff === c && (k.DeepDiff = j, j = void 0);
      }), t(n, r), t(o, r), t(i, r), t(a, r), Object.defineProperties(c, { diff: { value: c, enumerable: !0 }, observableDiff: { value: l, enumerable: !0 }, applyDiff: { value: h, enumerable: !0 }, applyChange: { value: d, enumerable: !0 }, revertChange: { value: g, enumerable: !0 }, isConflict: { value: function value() {
            return "undefined" != typeof j;
          }, enumerable: !0 }, noConflict: { value: function value() {
            return C && (C.forEach(function (e) {
              e();
            }), C = null), c;
          }, enumerable: !0 } });var F = { E: { color: "#2196F3", text: "CHANGED:" }, N: { color: "#4CAF50", text: "ADDED:" }, D: { color: "#F44336", text: "DELETED:" }, A: { color: "#2196F3", text: "ARRAY:" } },
          L = { level: "log", logger: console, logErrors: !0, collapsed: void 0, predicate: void 0, duration: !1, timestamp: !0, stateTransformer: function stateTransformer(e) {
          return e;
        }, actionTransformer: function actionTransformer(e) {
          return e;
        }, errorTransformer: function errorTransformer(e) {
          return e;
        }, colors: { title: function title() {
            return "inherit";
          }, prevState: function prevState() {
            return "#9E9E9E";
          }, action: function action() {
            return "#03A9F4";
          }, nextState: function nextState() {
            return "#4CAF50";
          }, error: function error() {
            return "#F20404";
          } }, diff: !1, diffPredicate: void 0, transformer: void 0 },
          T = function T() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.dispatch,
            r = e.getState;return "function" == typeof t || "function" == typeof r ? S()({ dispatch: t, getState: r }) : void console.error("\n[redux-logger v3] BREAKING CHANGE\n[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.\n[redux-logger v3] Change\n[redux-logger v3] import createLogger from 'redux-logger'\n[redux-logger v3] to\n[redux-logger v3] import { createLogger } from 'redux-logger'\n");
      };e.defaults = L, e.createLogger = S, e.logger = T, e.default = T, Object.defineProperty(e, "__esModule", { value: !0 });
    });

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(16));

  /***/
},
/* 424 */
/***/function (module, exports, __webpack_require__) {

  var baseDifference = __webpack_require__(425),
      baseFlatten = __webpack_require__(183),
      baseRest = __webpack_require__(185),
      isArrayLikeObject = __webpack_require__(187);

  /**
   * Creates an array of `array` values not included in the other given arrays
   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons. The order and references of result values are
   * determined by the first array.
   *
   * **Note:** Unlike `_.pullAll`, this method returns a new array.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {Array} array The array to inspect.
   * @param {...Array} [values] The values to exclude.
   * @returns {Array} Returns the new array of filtered values.
   * @see _.without, _.xor
   * @example
   *
   * _.difference([2, 1], [2, 3]);
   * // => [1]
   */
  var difference = baseRest(function (array, values) {
    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
  });

  module.exports = difference;

  /***/
},
/* 425 */
/***/function (module, exports, __webpack_require__) {

  var SetCache = __webpack_require__(89),
      arrayIncludes = __webpack_require__(179),
      arrayIncludesWith = __webpack_require__(180),
      arrayMap = __webpack_require__(181),
      baseUnary = __webpack_require__(182),
      cacheHas = __webpack_require__(93);

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * The base implementation of methods like `_.difference` without support
   * for excluding multiple arrays or iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Array} values The values to exclude.
   * @param {Function} [iteratee] The iteratee invoked per element.
   * @param {Function} [comparator] The comparator invoked per element.
   * @returns {Array} Returns the new array of filtered values.
   */
  function baseDifference(array, values, iteratee, comparator) {
    var index = -1,
        includes = arrayIncludes,
        isCommon = true,
        length = array.length,
        result = [],
        valuesLength = values.length;

    if (!length) {
      return result;
    }
    if (iteratee) {
      values = arrayMap(values, baseUnary(iteratee));
    }
    if (comparator) {
      includes = arrayIncludesWith;
      isCommon = false;
    } else if (values.length >= LARGE_ARRAY_SIZE) {
      includes = cacheHas;
      isCommon = false;
      values = new SetCache(values);
    }
    outer: while (++index < length) {
      var value = array[index],
          computed = iteratee == null ? value : iteratee(value);

      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed === computed) {
        var valuesIndex = valuesLength;
        while (valuesIndex--) {
          if (values[valuesIndex] === computed) {
            continue outer;
          }
        }
        result.push(value);
      } else if (!includes(values, computed, comparator)) {
        result.push(value);
      }
    }
    return result;
  }

  module.exports = baseDifference;

  /***/
},
/* 426 */
/***/function (module, exports, __webpack_require__) {

  var Hash = __webpack_require__(427),
      ListCache = __webpack_require__(56),
      Map = __webpack_require__(92);

  /**
   * Removes all key-value entries from the map.
   *
   * @private
   * @name clear
   * @memberOf MapCache
   */
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      'hash': new Hash(),
      'map': new (Map || ListCache)(),
      'string': new Hash()
    };
  }

  module.exports = mapCacheClear;

  /***/
},
/* 427 */
/***/function (module, exports, __webpack_require__) {

  var hashClear = __webpack_require__(428),
      hashDelete = __webpack_require__(435),
      hashGet = __webpack_require__(436),
      hashHas = __webpack_require__(437),
      hashSet = __webpack_require__(438);

  /**
   * Creates a hash object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  // Add methods to `Hash`.
  Hash.prototype.clear = hashClear;
  Hash.prototype['delete'] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;

  module.exports = Hash;

  /***/
},
/* 428 */
/***/function (module, exports, __webpack_require__) {

  var nativeCreate = __webpack_require__(55);

  /**
   * Removes all key-value entries from the hash.
   *
   * @private
   * @name clear
   * @memberOf Hash
   */
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
  }

  module.exports = hashClear;

  /***/
},
/* 429 */
/***/function (module, exports, __webpack_require__) {

  var isFunction = __webpack_require__(175),
      isMasked = __webpack_require__(432),
      isObject = __webpack_require__(91),
      toSource = __webpack_require__(177);

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

  /**
   * The base implementation of `_.isNative` without bad shim checks.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function,
   *  else `false`.
   */
  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }

  module.exports = baseIsNative;

  /***/
},
/* 430 */
/***/function (module, exports, __webpack_require__) {

  var _Symbol6 = __webpack_require__(38);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /** Built-in value references. */
  var symToStringTag = _Symbol6 ? _Symbol6.toStringTag : undefined;

  /**
   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the raw `toStringTag`.
   */
  function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag),
        tag = value[symToStringTag];

    try {
      value[symToStringTag] = undefined;
      var unmasked = true;
    } catch (e) {}

    var result = nativeObjectToString.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }

  module.exports = getRawTag;

  /***/
},
/* 431 */
/***/function (module, exports) {

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /**
   * Converts `value` to a string using `Object.prototype.toString`.
   *
   * @private
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   */
  function objectToString(value) {
    return nativeObjectToString.call(value);
  }

  module.exports = objectToString;

  /***/
},
/* 432 */
/***/function (module, exports, __webpack_require__) {

  var coreJsData = __webpack_require__(433);

  /** Used to detect methods masquerading as native. */
  var maskSrcKey = function () {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? 'Symbol(src)_1.' + uid : '';
  }();

  /**
   * Checks if `func` has its source masked.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` is masked, else `false`.
   */
  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }

  module.exports = isMasked;

  /***/
},
/* 433 */
/***/function (module, exports, __webpack_require__) {

  var root = __webpack_require__(9);

  /** Used to detect overreaching core-js shims. */
  var coreJsData = root['__core-js_shared__'];

  module.exports = coreJsData;

  /***/
},
/* 434 */
/***/function (module, exports) {

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  module.exports = getValue;

  /***/
},
/* 435 */
/***/function (module, exports) {

  /**
   * Removes `key` and its value from the hash.
   *
   * @private
   * @name delete
   * @memberOf Hash
   * @param {Object} hash The hash to modify.
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }

  module.exports = hashDelete;

  /***/
},
/* 436 */
/***/function (module, exports, __webpack_require__) {

  var nativeCreate = __webpack_require__(55);

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Gets the hash value for `key`.
   *
   * @private
   * @name get
   * @memberOf Hash
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }

  module.exports = hashGet;

  /***/
},
/* 437 */
/***/function (module, exports, __webpack_require__) {

  var nativeCreate = __webpack_require__(55);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Checks if a hash value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Hash
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }

  module.exports = hashHas;

  /***/
},
/* 438 */
/***/function (module, exports, __webpack_require__) {

  var nativeCreate = __webpack_require__(55);

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /**
   * Sets the hash `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Hash
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the hash instance.
   */
  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
    return this;
  }

  module.exports = hashSet;

  /***/
},
/* 439 */
/***/function (module, exports) {

  /**
   * Removes all key-value entries from the list cache.
   *
   * @private
   * @name clear
   * @memberOf ListCache
   */
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }

  module.exports = listCacheClear;

  /***/
},
/* 440 */
/***/function (module, exports, __webpack_require__) {

  var assocIndexOf = __webpack_require__(57);

  /** Used for built-in method references. */
  var arrayProto = Array.prototype;

  /** Built-in value references. */
  var splice = arrayProto.splice;

  /**
   * Removes `key` and its value from the list cache.
   *
   * @private
   * @name delete
   * @memberOf ListCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function listCacheDelete(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    --this.size;
    return true;
  }

  module.exports = listCacheDelete;

  /***/
},
/* 441 */
/***/function (module, exports, __webpack_require__) {

  var assocIndexOf = __webpack_require__(57);

  /**
   * Gets the list cache value for `key`.
   *
   * @private
   * @name get
   * @memberOf ListCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function listCacheGet(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    return index < 0 ? undefined : data[index][1];
  }

  module.exports = listCacheGet;

  /***/
},
/* 442 */
/***/function (module, exports, __webpack_require__) {

  var assocIndexOf = __webpack_require__(57);

  /**
   * Checks if a list cache value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf ListCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }

  module.exports = listCacheHas;

  /***/
},
/* 443 */
/***/function (module, exports, __webpack_require__) {

  var assocIndexOf = __webpack_require__(57);

  /**
   * Sets the list cache `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf ListCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the list cache instance.
   */
  function listCacheSet(key, value) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }

  module.exports = listCacheSet;

  /***/
},
/* 444 */
/***/function (module, exports, __webpack_require__) {

  var getMapData = __webpack_require__(58);

  /**
   * Removes `key` and its value from the map.
   *
   * @private
   * @name delete
   * @memberOf MapCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
  }

  module.exports = mapCacheDelete;

  /***/
},
/* 445 */
/***/function (module, exports) {

  /**
   * Checks if `value` is suitable for use as unique object key.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
   */
  function isKeyable(value) {
    var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
    return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;
  }

  module.exports = isKeyable;

  /***/
},
/* 446 */
/***/function (module, exports, __webpack_require__) {

  var getMapData = __webpack_require__(58);

  /**
   * Gets the map value for `key`.
   *
   * @private
   * @name get
   * @memberOf MapCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }

  module.exports = mapCacheGet;

  /***/
},
/* 447 */
/***/function (module, exports, __webpack_require__) {

  var getMapData = __webpack_require__(58);

  /**
   * Checks if a map value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf MapCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }

  module.exports = mapCacheHas;

  /***/
},
/* 448 */
/***/function (module, exports, __webpack_require__) {

  var getMapData = __webpack_require__(58);

  /**
   * Sets the map `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf MapCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the map cache instance.
   */
  function mapCacheSet(key, value) {
    var data = getMapData(this, key),
        size = data.size;

    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }

  module.exports = mapCacheSet;

  /***/
},
/* 449 */
/***/function (module, exports) {

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /**
   * Adds `value` to the array cache.
   *
   * @private
   * @name add
   * @memberOf SetCache
   * @alias push
   * @param {*} value The value to cache.
   * @returns {Object} Returns the cache instance.
   */
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }

  module.exports = setCacheAdd;

  /***/
},
/* 450 */
/***/function (module, exports) {

  /**
   * Checks if `value` is in the array cache.
   *
   * @private
   * @name has
   * @memberOf SetCache
   * @param {*} value The value to search for.
   * @returns {number} Returns `true` if `value` is found, else `false`.
   */
  function setCacheHas(value) {
    return this.__data__.has(value);
  }

  module.exports = setCacheHas;

  /***/
},
/* 451 */
/***/function (module, exports, __webpack_require__) {

  var baseFindIndex = __webpack_require__(452),
      baseIsNaN = __webpack_require__(453),
      strictIndexOf = __webpack_require__(454);

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  module.exports = baseIndexOf;

  /***/
},
/* 452 */
/***/function (module, exports) {

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while (fromRight ? index-- : ++index < length) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  module.exports = baseFindIndex;

  /***/
},
/* 453 */
/***/function (module, exports) {

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  module.exports = baseIsNaN;

  /***/
},
/* 454 */
/***/function (module, exports) {

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  module.exports = strictIndexOf;

  /***/
},
/* 455 */
/***/function (module, exports, __webpack_require__) {

  var _Symbol7 = __webpack_require__(38),
      isArguments = __webpack_require__(94),
      isArray = __webpack_require__(10);

  /** Built-in value references. */
  var spreadableSymbol = _Symbol7 ? _Symbol7.isConcatSpreadable : undefined;

  /**
   * Checks if `value` is a flattenable `arguments` object or array.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
   */
  function isFlattenable(value) {
    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
  }

  module.exports = isFlattenable;

  /***/
},
/* 456 */
/***/function (module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(26),
      isObjectLike = __webpack_require__(20);

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]';

  /**
   * The base implementation of `_.isArguments`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   */
  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
  }

  module.exports = baseIsArguments;

  /***/
},
/* 457 */
/***/function (module, exports, __webpack_require__) {

  var apply = __webpack_require__(458);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max;

  /**
   * A specialized version of `baseRest` which transforms the rest array.
   *
   * @private
   * @param {Function} func The function to apply a rest parameter to.
   * @param {number} [start=func.length-1] The start position of the rest parameter.
   * @param {Function} transform The rest array transform.
   * @returns {Function} Returns the new function.
   */
  function overRest(func, start, transform) {
    start = nativeMax(start === undefined ? func.length - 1 : start, 0);
    return function () {
      var args = arguments,
          index = -1,
          length = nativeMax(args.length - start, 0),
          array = Array(length);

      while (++index < length) {
        array[index] = args[start + index];
      }
      index = -1;
      var otherArgs = Array(start + 1);
      while (++index < start) {
        otherArgs[index] = args[index];
      }
      otherArgs[start] = transform(array);
      return apply(func, this, otherArgs);
    };
  }

  module.exports = overRest;

  /***/
},
/* 458 */
/***/function (module, exports) {

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args[0]);
      case 2:
        return func.call(thisArg, args[0], args[1]);
      case 3:
        return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  module.exports = apply;

  /***/
},
/* 459 */
/***/function (module, exports, __webpack_require__) {

  var baseSetToString = __webpack_require__(460),
      shortOut = __webpack_require__(462);

  /**
   * Sets the `toString` method of `func` to return `string`.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var setToString = shortOut(baseSetToString);

  module.exports = setToString;

  /***/
},
/* 460 */
/***/function (module, exports, __webpack_require__) {

  var constant = __webpack_require__(461),
      defineProperty = __webpack_require__(186),
      identity = __webpack_require__(59);

  /**
   * The base implementation of `setToString` without support for hot loop shorting.
   *
   * @private
   * @param {Function} func The function to modify.
   * @param {Function} string The `toString` result.
   * @returns {Function} Returns `func`.
   */
  var baseSetToString = !defineProperty ? identity : function (func, string) {
    return defineProperty(func, 'toString', {
      'configurable': true,
      'enumerable': false,
      'value': constant(string),
      'writable': true
    });
  };

  module.exports = baseSetToString;

  /***/
},
/* 461 */
/***/function (module, exports) {

  /**
   * Creates a function that returns `value`.
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Util
   * @param {*} value The value to return from the new function.
   * @returns {Function} Returns the new constant function.
   * @example
   *
   * var objects = _.times(2, _.constant({ 'a': 1 }));
   *
   * console.log(objects);
   * // => [{ 'a': 1 }, { 'a': 1 }]
   *
   * console.log(objects[0] === objects[1]);
   * // => true
   */
  function constant(value) {
    return function () {
      return value;
    };
  }

  module.exports = constant;

  /***/
},
/* 462 */
/***/function (module, exports) {

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeNow = Date.now;

  /**
   * Creates a function that'll short out and invoke `identity` instead
   * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
   * milliseconds.
   *
   * @private
   * @param {Function} func The function to restrict.
   * @returns {Function} Returns the new shortable function.
   */
  function shortOut(func) {
    var count = 0,
        lastCalled = 0;

    return function () {
      var stamp = nativeNow(),
          remaining = HOT_SPAN - (stamp - lastCalled);

      lastCalled = stamp;
      if (remaining > 0) {
        if (++count >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count = 0;
      }
      return func.apply(undefined, arguments);
    };
  }

  module.exports = shortOut;

  /***/
},
/* 463 */
/***/function (module, exports, __webpack_require__) {

  var baseFlatten = __webpack_require__(183),
      baseRest = __webpack_require__(185),
      baseUniq = __webpack_require__(464),
      isArrayLikeObject = __webpack_require__(187);

  /**
   * Creates an array of unique values, in order, from all given arrays using
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Array
   * @param {...Array} [arrays] The arrays to inspect.
   * @returns {Array} Returns the new array of combined values.
   * @example
   *
   * _.union([2], [1, 2]);
   * // => [2, 1]
   */
  var union = baseRest(function (arrays) {
    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
  });

  module.exports = union;

  /***/
},
/* 464 */
/***/function (module, exports, __webpack_require__) {

  var SetCache = __webpack_require__(89),
      arrayIncludes = __webpack_require__(179),
      arrayIncludesWith = __webpack_require__(180),
      cacheHas = __webpack_require__(93),
      createSet = __webpack_require__(465),
      setToArray = __webpack_require__(96);

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * The base implementation of `_.uniqBy` without support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} [iteratee] The iteratee invoked per element.
   * @param {Function} [comparator] The comparator invoked per element.
   * @returns {Array} Returns the new duplicate free array.
   */
  function baseUniq(array, iteratee, comparator) {
    var index = -1,
        includes = arrayIncludes,
        length = array.length,
        isCommon = true,
        result = [],
        seen = result;

    if (comparator) {
      isCommon = false;
      includes = arrayIncludesWith;
    } else if (length >= LARGE_ARRAY_SIZE) {
      var set = iteratee ? null : createSet(array);
      if (set) {
        return setToArray(set);
      }
      isCommon = false;
      includes = cacheHas;
      seen = new SetCache();
    } else {
      seen = iteratee ? [] : result;
    }
    outer: while (++index < length) {
      var value = array[index],
          computed = iteratee ? iteratee(value) : value;

      value = comparator || value !== 0 ? value : 0;
      if (isCommon && computed === computed) {
        var seenIndex = seen.length;
        while (seenIndex--) {
          if (seen[seenIndex] === computed) {
            continue outer;
          }
        }
        if (iteratee) {
          seen.push(computed);
        }
        result.push(value);
      } else if (!includes(seen, computed, comparator)) {
        if (seen !== result) {
          seen.push(computed);
        }
        result.push(value);
      }
    }
    return result;
  }

  module.exports = baseUniq;

  /***/
},
/* 465 */
/***/function (module, exports, __webpack_require__) {

  var Set = __webpack_require__(189),
      noop = __webpack_require__(466),
      setToArray = __webpack_require__(96);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /**
   * Creates a set object of `values`.
   *
   * @private
   * @param {Array} values The values to add to the set.
   * @returns {Object} Returns the new set.
   */
  var createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {
    return new Set(values);
  };

  module.exports = createSet;

  /***/
},
/* 466 */
/***/function (module, exports) {

  /**
   * This method returns `undefined`.
   *
   * @static
   * @memberOf _
   * @since 2.3.0
   * @category Util
   * @example
   *
   * _.times(2, _.noop);
   * // => [undefined, undefined]
   */
  function noop() {
    // No operation performed.
  }

  module.exports = noop;

  /***/
},
/* 467 */
/***/function (module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(26),
      getPrototype = __webpack_require__(468),
      isObjectLike = __webpack_require__(20);

  /** `Object#toString` result references. */
  var objectTag = '[object Object]';

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to infer the `Object` constructor. */
  var objectCtorString = funcToString.call(Object);

  /**
   * Checks if `value` is a plain object, that is, an object created by the
   * `Object` constructor or one with a `[[Prototype]]` of `null`.
   *
   * @static
   * @memberOf _
   * @since 0.8.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   * }
   *
   * _.isPlainObject(new Foo);
   * // => false
   *
   * _.isPlainObject([1, 2, 3]);
   * // => false
   *
   * _.isPlainObject({ 'x': 0, 'y': 0 });
   * // => true
   *
   * _.isPlainObject(Object.create(null));
   * // => true
   */
  function isPlainObject(value) {
    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
      return false;
    }
    var proto = getPrototype(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }

  module.exports = isPlainObject;

  /***/
},
/* 468 */
/***/function (module, exports, __webpack_require__) {

  var overArg = __webpack_require__(190);

  /** Built-in value references. */
  var getPrototype = overArg(Object.getPrototypeOf, Object);

  module.exports = getPrototype;

  /***/
},
/* 469 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  exports.default = persistState;

  var _mapValues = __webpack_require__(470);

  var _mapValues2 = _interopRequireDefault(_mapValues);

  var _identity = __webpack_require__(59);

  var _identity2 = _interopRequireDefault(_identity);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function persistState(sessionId) {
    var deserializeState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _identity2.default;
    var deserializeAction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _identity2.default;

    if (!sessionId) {
      return function (next) {
        return function () {
          return next.apply(undefined, arguments);
        };
      };
    }

    function deserialize(state) {
      return _extends({}, state, {
        actionsById: (0, _mapValues2.default)(state.actionsById, function (liftedAction) {
          return _extends({}, liftedAction, {
            action: deserializeAction(liftedAction.action)
          });
        }),
        committedState: deserializeState(state.committedState),
        computedStates: state.computedStates.map(function (computedState) {
          return _extends({}, computedState, {
            state: deserializeState(computedState.state)
          });
        })
      });
    }

    return function (next) {
      return function (reducer, initialState, enhancer) {
        var key = 'redux-dev-session-' + sessionId;

        var finalInitialState = void 0;
        try {
          var json = localStorage.getItem(key);
          if (json) {
            finalInitialState = deserialize(JSON.parse(json)) || initialState;
            next(reducer, initialState);
          }
        } catch (e) {
          console.warn('Could not read debug session from localStorage:', e);
          try {
            localStorage.removeItem(key);
          } finally {
            finalInitialState = undefined;
          }
        }

        var store = next(reducer, finalInitialState, enhancer);

        return _extends({}, store, {
          dispatch: function dispatch(action) {
            store.dispatch(action);

            try {
              localStorage.setItem(key, JSON.stringify(store.getState()));
            } catch (e) {
              console.warn('Could not write debug session to localStorage:', e);
            }

            return action;
          }
        });
      };
    };
  }

  /***/
},
/* 470 */
/***/function (module, exports, __webpack_require__) {

  var baseAssignValue = __webpack_require__(471),
      baseForOwn = __webpack_require__(472),
      baseIteratee = __webpack_require__(483);

  /**
   * Creates an object with the same keys as `object` and values generated
   * by running each own enumerable string keyed property of `object` thru
   * `iteratee`. The iteratee is invoked with three arguments:
   * (value, key, object).
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Object
   * @param {Object} object The object to iterate over.
   * @param {Function} [iteratee=_.identity] The function invoked per iteration.
   * @returns {Object} Returns the new mapped object.
   * @see _.mapKeys
   * @example
   *
   * var users = {
   *   'fred':    { 'user': 'fred',    'age': 40 },
   *   'pebbles': { 'user': 'pebbles', 'age': 1 }
   * };
   *
   * _.mapValues(users, function(o) { return o.age; });
   * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
   *
   * // The `_.property` iteratee shorthand.
   * _.mapValues(users, 'age');
   * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
   */
  function mapValues(object, iteratee) {
    var result = {};
    iteratee = baseIteratee(iteratee, 3);

    baseForOwn(object, function (value, key, object) {
      baseAssignValue(result, key, iteratee(value, key, object));
    });
    return result;
  }

  module.exports = mapValues;

  /***/
},
/* 471 */
/***/function (module, exports, __webpack_require__) {

  var defineProperty = __webpack_require__(186);

  /**
   * The base implementation of `assignValue` and `assignMergeValue` without
   * value checks.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {string} key The key of the property to assign.
   * @param {*} value The value to assign.
   */
  function baseAssignValue(object, key, value) {
    if (key == '__proto__' && defineProperty) {
      defineProperty(object, key, {
        'configurable': true,
        'enumerable': true,
        'value': value,
        'writable': true
      });
    } else {
      object[key] = value;
    }
  }

  module.exports = baseAssignValue;

  /***/
},
/* 472 */
/***/function (module, exports, __webpack_require__) {

  var baseFor = __webpack_require__(473),
      keys = __webpack_require__(97);

  /**
   * The base implementation of `_.forOwn` without support for iteratee shorthands.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Object} Returns `object`.
   */
  function baseForOwn(object, iteratee) {
    return object && baseFor(object, iteratee, keys);
  }

  module.exports = baseForOwn;

  /***/
},
/* 473 */
/***/function (module, exports, __webpack_require__) {

  var createBaseFor = __webpack_require__(474);

  /**
   * The base implementation of `baseForOwn` which iterates over `object`
   * properties returned by `keysFunc` and invokes `iteratee` for each property.
   * Iteratee functions may exit iteration early by explicitly returning `false`.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @returns {Object} Returns `object`.
   */
  var baseFor = createBaseFor();

  module.exports = baseFor;

  /***/
},
/* 474 */
/***/function (module, exports) {

  /**
   * Creates a base function for methods like `_.forIn` and `_.forOwn`.
   *
   * @private
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {Function} Returns the new base function.
   */
  function createBaseFor(fromRight) {
    return function (object, iteratee, keysFunc) {
      var index = -1,
          iterable = Object(object),
          props = keysFunc(object),
          length = props.length;

      while (length--) {
        var key = props[fromRight ? length : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object;
    };
  }

  module.exports = createBaseFor;

  /***/
},
/* 475 */
/***/function (module, exports, __webpack_require__) {

  var baseTimes = __webpack_require__(476),
      isArguments = __webpack_require__(94),
      isArray = __webpack_require__(10),
      isBuffer = __webpack_require__(191),
      isIndex = __webpack_require__(192),
      isTypedArray = __webpack_require__(193);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value),
        isArg = !isArr && isArguments(value),
        isBuff = !isArr && !isArg && isBuffer(value),
        isType = !isArr && !isArg && !isBuff && isTypedArray(value),
        skipIndexes = isArr || isArg || isBuff || isType,
        result = skipIndexes ? baseTimes(value.length, String) : [],
        length = result.length;

    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (
      // Safari 9 has enumerable `arguments.length` in strict mode.
      key == 'length' ||
      // Node.js 0.10 has enumerable non-index properties on buffers.
      isBuff && (key == 'offset' || key == 'parent') ||
      // PhantomJS 2 has enumerable non-index properties on typed arrays.
      isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') ||
      // Skip index properties.
      isIndex(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = arrayLikeKeys;

  /***/
},
/* 476 */
/***/function (module, exports) {

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  module.exports = baseTimes;

  /***/
},
/* 477 */
/***/function (module, exports) {

  /**
   * This method returns `false`.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {boolean} Returns `false`.
   * @example
   *
   * _.times(2, _.stubFalse);
   * // => [false, false]
   */
  function stubFalse() {
    return false;
  }

  module.exports = stubFalse;

  /***/
},
/* 478 */
/***/function (module, exports, __webpack_require__) {

  var baseGetTag = __webpack_require__(26),
      isLength = __webpack_require__(95),
      isObjectLike = __webpack_require__(20);

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      weakMapTag = '[object WeakMap]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;

  /**
   * The base implementation of `_.isTypedArray` without Node.js optimizations.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   */
  function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
  }

  module.exports = baseIsTypedArray;

  /***/
},
/* 479 */
/***/function (module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function (module) {
    var freeGlobal = __webpack_require__(176);

    /** Detect free variable `exports`. */
    var freeExports = (typeof exports === "undefined" ? "undefined" : _typeof4(exports)) == 'object' && exports && !exports.nodeType && exports;

    /** Detect free variable `module`. */
    var freeModule = freeExports && (typeof module === "undefined" ? "undefined" : _typeof4(module)) == 'object' && module && !module.nodeType && module;

    /** Detect the popular CommonJS extension `module.exports`. */
    var moduleExports = freeModule && freeModule.exports === freeExports;

    /** Detect free variable `process` from Node.js. */
    var freeProcess = moduleExports && freeGlobal.process;

    /** Used to access faster Node.js helpers. */
    var nodeUtil = function () {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding('util');
      } catch (e) {}
    }();

    module.exports = nodeUtil;

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(69)(module));

  /***/
},
/* 480 */
/***/function (module, exports, __webpack_require__) {

  var isPrototype = __webpack_require__(481),
      nativeKeys = __webpack_require__(482);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  module.exports = baseKeys;

  /***/
},
/* 481 */
/***/function (module, exports) {

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;

    return value === proto;
  }

  module.exports = isPrototype;

  /***/
},
/* 482 */
/***/function (module, exports, __webpack_require__) {

  var overArg = __webpack_require__(190);

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeKeys = overArg(Object.keys, Object);

  module.exports = nativeKeys;

  /***/
},
/* 483 */
/***/function (module, exports, __webpack_require__) {

  var baseMatches = __webpack_require__(484),
      baseMatchesProperty = __webpack_require__(507),
      identity = __webpack_require__(59),
      isArray = __webpack_require__(10),
      property = __webpack_require__(517);

  /**
   * The base implementation of `_.iteratee`.
   *
   * @private
   * @param {*} [value=_.identity] The value to convert to an iteratee.
   * @returns {Function} Returns the iteratee.
   */
  function baseIteratee(value) {
    // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
    // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
    if (typeof value == 'function') {
      return value;
    }
    if (value == null) {
      return identity;
    }
    if ((typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'object') {
      return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
    }
    return property(value);
  }

  module.exports = baseIteratee;

  /***/
},
/* 484 */
/***/function (module, exports, __webpack_require__) {

  var baseIsMatch = __webpack_require__(485),
      getMatchData = __webpack_require__(506),
      matchesStrictComparable = __webpack_require__(198);

  /**
   * The base implementation of `_.matches` which doesn't clone `source`.
   *
   * @private
   * @param {Object} source The object of property values to match.
   * @returns {Function} Returns the new spec function.
   */
  function baseMatches(source) {
    var matchData = getMatchData(source);
    if (matchData.length == 1 && matchData[0][2]) {
      return matchesStrictComparable(matchData[0][0], matchData[0][1]);
    }
    return function (object) {
      return object === source || baseIsMatch(object, source, matchData);
    };
  }

  module.exports = baseMatches;

  /***/
},
/* 485 */
/***/function (module, exports, __webpack_require__) {

  var Stack = __webpack_require__(194),
      baseIsEqual = __webpack_require__(195);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * The base implementation of `_.isMatch` without support for iteratee shorthands.
   *
   * @private
   * @param {Object} object The object to inspect.
   * @param {Object} source The object of property values to match.
   * @param {Array} matchData The property names, values, and compare flags to match.
   * @param {Function} [customizer] The function to customize comparisons.
   * @returns {boolean} Returns `true` if `object` is a match, else `false`.
   */
  function baseIsMatch(object, source, matchData, customizer) {
    var index = matchData.length,
        length = index,
        noCustomizer = !customizer;

    if (object == null) {
      return !length;
    }
    object = Object(object);
    while (index--) {
      var data = matchData[index];
      if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
        return false;
      }
    }
    while (++index < length) {
      data = matchData[index];
      var key = data[0],
          objValue = object[key],
          srcValue = data[1];

      if (noCustomizer && data[2]) {
        if (objValue === undefined && !(key in object)) {
          return false;
        }
      } else {
        var stack = new Stack();
        if (customizer) {
          var result = customizer(objValue, srcValue, key, object, source, stack);
        }
        if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
          return false;
        }
      }
    }
    return true;
  }

  module.exports = baseIsMatch;

  /***/
},
/* 486 */
/***/function (module, exports, __webpack_require__) {

  var ListCache = __webpack_require__(56);

  /**
   * Removes all key-value entries from the stack.
   *
   * @private
   * @name clear
   * @memberOf Stack
   */
  function stackClear() {
    this.__data__ = new ListCache();
    this.size = 0;
  }

  module.exports = stackClear;

  /***/
},
/* 487 */
/***/function (module, exports) {

  /**
   * Removes `key` and its value from the stack.
   *
   * @private
   * @name delete
   * @memberOf Stack
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function stackDelete(key) {
    var data = this.__data__,
        result = data['delete'](key);

    this.size = data.size;
    return result;
  }

  module.exports = stackDelete;

  /***/
},
/* 488 */
/***/function (module, exports) {

  /**
   * Gets the stack value for `key`.
   *
   * @private
   * @name get
   * @memberOf Stack
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function stackGet(key) {
    return this.__data__.get(key);
  }

  module.exports = stackGet;

  /***/
},
/* 489 */
/***/function (module, exports) {

  /**
   * Checks if a stack value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Stack
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function stackHas(key) {
    return this.__data__.has(key);
  }

  module.exports = stackHas;

  /***/
},
/* 490 */
/***/function (module, exports, __webpack_require__) {

  var ListCache = __webpack_require__(56),
      Map = __webpack_require__(92),
      MapCache = __webpack_require__(90);

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /**
   * Sets the stack `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Stack
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the stack cache instance.
   */
  function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
      var pairs = data.__data__;
      if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }

  module.exports = stackSet;

  /***/
},
/* 491 */
/***/function (module, exports, __webpack_require__) {

  var Stack = __webpack_require__(194),
      equalArrays = __webpack_require__(196),
      equalByTag = __webpack_require__(493),
      equalObjects = __webpack_require__(496),
      getTag = __webpack_require__(502),
      isArray = __webpack_require__(10),
      isBuffer = __webpack_require__(191),
      isTypedArray = __webpack_require__(193);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      objectTag = '[object Object]';

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * A specialized version of `baseIsEqual` for arrays and objects which performs
   * deep comparisons and tracks traversed objects enabling objects with circular
   * references to be compared.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} [stack] Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object),
        othIsArr = isArray(other),
        objTag = objIsArr ? arrayTag : getTag(object),
        othTag = othIsArr ? arrayTag : getTag(other);

    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;

    var objIsObj = objTag == objectTag,
        othIsObj = othTag == objectTag,
        isSameTag = objTag == othTag;

    if (isSameTag && isBuffer(object)) {
      if (!isBuffer(other)) {
        return false;
      }
      objIsArr = true;
      objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack());
      return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object,
            othUnwrapped = othIsWrapped ? other.value() : other;

        stack || (stack = new Stack());
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new Stack());
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }

  module.exports = baseIsEqualDeep;

  /***/
},
/* 492 */
/***/function (module, exports) {

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  module.exports = arraySome;

  /***/
},
/* 493 */
/***/function (module, exports, __webpack_require__) {

  var _Symbol8 = __webpack_require__(38),
      Uint8Array = __webpack_require__(494),
      eq = __webpack_require__(178),
      equalArrays = __webpack_require__(196),
      mapToArray = __webpack_require__(495),
      setToArray = __webpack_require__(96);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** `Object#toString` result references. */
  var boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]';

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = _Symbol8 ? _Symbol8.prototype : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  /**
   * A specialized version of `baseIsEqualDeep` for comparing objects of
   * the same `toStringTag`.
   *
   * **Note:** This function only supports comparing values with tags of
   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {string} tag The `toStringTag` of the objects to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag:
        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;

      case arrayBufferTag:
        if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
          return false;
        }
        return true;

      case boolTag:
      case dateTag:
      case numberTag:
        // Coerce booleans to `1` or `0` and dates to milliseconds.
        // Invalid dates are coerced to `NaN`.
        return eq(+object, +other);

      case errorTag:
        return object.name == other.name && object.message == other.message;

      case regexpTag:
      case stringTag:
        // Coerce regexes to strings and treat strings, primitives and objects,
        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
        // for more details.
        return object == other + '';

      case mapTag:
        var convert = mapToArray;

      case setTag:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
        convert || (convert = setToArray);

        if (object.size != other.size && !isPartial) {
          return false;
        }
        // Assume cyclic values are equal.
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= COMPARE_UNORDERED_FLAG;

        // Recursively compare objects (susceptible to call stack limits).
        stack.set(object, other);
        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack['delete'](object);
        return result;

      case symbolTag:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }
    }
    return false;
  }

  module.exports = equalByTag;

  /***/
},
/* 494 */
/***/function (module, exports, __webpack_require__) {

  var root = __webpack_require__(9);

  /** Built-in value references. */
  var Uint8Array = root.Uint8Array;

  module.exports = Uint8Array;

  /***/
},
/* 495 */
/***/function (module, exports) {

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function (value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  module.exports = mapToArray;

  /***/
},
/* 496 */
/***/function (module, exports, __webpack_require__) {

  var getAllKeys = __webpack_require__(497);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1;

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * A specialized version of `baseIsEqualDeep` for objects with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        objProps = getAllKeys(object),
        objLength = objProps.length,
        othProps = getAllKeys(other),
        othLength = othProps.length;

    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
        return false;
      }
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(object);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);

    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key],
          othValue = other[key];

      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
      }
      // Recursively compare objects (susceptible to call stack limits).
      if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor,
          othCtor = other.constructor;

      // Non `Object` object instances with different constructors are not equal.
      if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
  }

  module.exports = equalObjects;

  /***/
},
/* 497 */
/***/function (module, exports, __webpack_require__) {

  var baseGetAllKeys = __webpack_require__(498),
      getSymbols = __webpack_require__(499),
      keys = __webpack_require__(97);

  /**
   * Creates an array of own enumerable property names and symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  }

  module.exports = getAllKeys;

  /***/
},
/* 498 */
/***/function (module, exports, __webpack_require__) {

  var arrayPush = __webpack_require__(184),
      isArray = __webpack_require__(10);

  /**
   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
   * `keysFunc` and `symbolsFunc` to get the enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @param {Function} symbolsFunc The function to get the symbols of `object`.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  }

  module.exports = baseGetAllKeys;

  /***/
},
/* 499 */
/***/function (module, exports, __webpack_require__) {

  var arrayFilter = __webpack_require__(500),
      stubArray = __webpack_require__(501);

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /** Built-in value references. */
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols;

  /**
   * Creates an array of the own enumerable symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbols = !nativeGetSymbols ? stubArray : function (object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function (symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };

  module.exports = getSymbols;

  /***/
},
/* 500 */
/***/function (module, exports) {

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  module.exports = arrayFilter;

  /***/
},
/* 501 */
/***/function (module, exports) {

  /**
   * This method returns a new empty array.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {Array} Returns the new empty array.
   * @example
   *
   * var arrays = _.times(2, _.stubArray);
   *
   * console.log(arrays);
   * // => [[], []]
   *
   * console.log(arrays[0] === arrays[1]);
   * // => false
   */
  function stubArray() {
    return [];
  }

  module.exports = stubArray;

  /***/
},
/* 502 */
/***/function (module, exports, __webpack_require__) {

  var DataView = __webpack_require__(503),
      Map = __webpack_require__(92),
      Promise = __webpack_require__(504),
      Set = __webpack_require__(189),
      WeakMap = __webpack_require__(505),
      baseGetTag = __webpack_require__(26),
      toSource = __webpack_require__(177);

  /** `Object#toString` result references. */
  var mapTag = '[object Map]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      setTag = '[object Set]',
      weakMapTag = '[object WeakMap]';

  var dataViewTag = '[object DataView]';

  /** Used to detect maps, sets, and weakmaps. */
  var dataViewCtorString = toSource(DataView),
      mapCtorString = toSource(Map),
      promiseCtorString = toSource(Promise),
      setCtorString = toSource(Set),
      weakMapCtorString = toSource(WeakMap);

  /**
   * Gets the `toStringTag` of `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  var getTag = baseGetTag;

  // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
  if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
    getTag = function getTag(value) {
      var result = baseGetTag(value),
          Ctor = result == objectTag ? value.constructor : undefined,
          ctorString = Ctor ? toSource(Ctor) : '';

      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;
          case mapCtorString:
            return mapTag;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag;
          case weakMapCtorString:
            return weakMapTag;
        }
      }
      return result;
    };
  }

  module.exports = getTag;

  /***/
},
/* 503 */
/***/function (module, exports, __webpack_require__) {

  var getNative = __webpack_require__(19),
      root = __webpack_require__(9);

  /* Built-in method references that are verified to be native. */
  var DataView = getNative(root, 'DataView');

  module.exports = DataView;

  /***/
},
/* 504 */
/***/function (module, exports, __webpack_require__) {

  var getNative = __webpack_require__(19),
      root = __webpack_require__(9);

  /* Built-in method references that are verified to be native. */
  var Promise = getNative(root, 'Promise');

  module.exports = Promise;

  /***/
},
/* 505 */
/***/function (module, exports, __webpack_require__) {

  var getNative = __webpack_require__(19),
      root = __webpack_require__(9);

  /* Built-in method references that are verified to be native. */
  var WeakMap = getNative(root, 'WeakMap');

  module.exports = WeakMap;

  /***/
},
/* 506 */
/***/function (module, exports, __webpack_require__) {

  var isStrictComparable = __webpack_require__(197),
      keys = __webpack_require__(97);

  /**
   * Gets the property names, values, and compare flags of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the match data of `object`.
   */
  function getMatchData(object) {
    var result = keys(object),
        length = result.length;

    while (length--) {
      var key = result[length],
          value = object[key];

      result[length] = [key, value, isStrictComparable(value)];
    }
    return result;
  }

  module.exports = getMatchData;

  /***/
},
/* 507 */
/***/function (module, exports, __webpack_require__) {

  var baseIsEqual = __webpack_require__(195),
      get = __webpack_require__(508),
      hasIn = __webpack_require__(514),
      isKey = __webpack_require__(98),
      isStrictComparable = __webpack_require__(197),
      matchesStrictComparable = __webpack_require__(198),
      toKey = __webpack_require__(60);

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /**
   * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
   *
   * @private
   * @param {string} path The path of the property to get.
   * @param {*} srcValue The value to match.
   * @returns {Function} Returns the new spec function.
   */
  function baseMatchesProperty(path, srcValue) {
    if (isKey(path) && isStrictComparable(srcValue)) {
      return matchesStrictComparable(toKey(path), srcValue);
    }
    return function (object) {
      var objValue = get(object, path);
      return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
    };
  }

  module.exports = baseMatchesProperty;

  /***/
},
/* 508 */
/***/function (module, exports, __webpack_require__) {

  var baseGet = __webpack_require__(199);

  /**
   * Gets the value at `path` of `object`. If the resolved value is
   * `undefined`, the `defaultValue` is returned in its place.
   *
   * @static
   * @memberOf _
   * @since 3.7.0
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path of the property to get.
   * @param {*} [defaultValue] The value returned for `undefined` resolved values.
   * @returns {*} Returns the resolved value.
   * @example
   *
   * var object = { 'a': [{ 'b': { 'c': 3 } }] };
   *
   * _.get(object, 'a[0].b.c');
   * // => 3
   *
   * _.get(object, ['a', '0', 'b', 'c']);
   * // => 3
   *
   * _.get(object, 'a.b.c', 'default');
   * // => 'default'
   */
  function get(object, path, defaultValue) {
    var result = object == null ? undefined : baseGet(object, path);
    return result === undefined ? defaultValue : result;
  }

  module.exports = get;

  /***/
},
/* 509 */
/***/function (module, exports, __webpack_require__) {

  var memoizeCapped = __webpack_require__(510);

  /** Used to match property names within property paths. */
  var reLeadingDot = /^\./,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Converts `string` to a property path array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the property path array.
   */
  var stringToPath = memoizeCapped(function (string) {
    var result = [];
    if (reLeadingDot.test(string)) {
      result.push('');
    }
    string.replace(rePropName, function (match, number, quote, string) {
      result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);
    });
    return result;
  });

  module.exports = stringToPath;

  /***/
},
/* 510 */
/***/function (module, exports, __webpack_require__) {

  var memoize = __webpack_require__(511);

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /**
   * A specialized version of `_.memoize` which clears the memoized function's
   * cache when it exceeds `MAX_MEMOIZE_SIZE`.
   *
   * @private
   * @param {Function} func The function to have its output memoized.
   * @returns {Function} Returns the new memoized function.
   */
  function memoizeCapped(func) {
    var result = memoize(func, function (key) {
      if (cache.size === MAX_MEMOIZE_SIZE) {
        cache.clear();
      }
      return key;
    });

    var cache = result.cache;
    return result;
  }

  module.exports = memoizeCapped;

  /***/
},
/* 511 */
/***/function (module, exports, __webpack_require__) {

  var MapCache = __webpack_require__(90);

  /** Error message constants. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /**
   * Creates a function that memoizes the result of `func`. If `resolver` is
   * provided, it determines the cache key for storing the result based on the
   * arguments provided to the memoized function. By default, the first argument
   * provided to the memoized function is used as the map cache key. The `func`
   * is invoked with the `this` binding of the memoized function.
   *
   * **Note:** The cache is exposed as the `cache` property on the memoized
   * function. Its creation may be customized by replacing the `_.memoize.Cache`
   * constructor with one whose instances implement the
   * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
   * method interface of `clear`, `delete`, `get`, `has`, and `set`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to have its output memoized.
   * @param {Function} [resolver] The function to resolve the cache key.
   * @returns {Function} Returns the new memoized function.
   * @example
   *
   * var object = { 'a': 1, 'b': 2 };
   * var other = { 'c': 3, 'd': 4 };
   *
   * var values = _.memoize(_.values);
   * values(object);
   * // => [1, 2]
   *
   * values(other);
   * // => [3, 4]
   *
   * object.a = 2;
   * values(object);
   * // => [1, 2]
   *
   * // Modify the result cache.
   * values.cache.set(object, ['a', 'b']);
   * values(object);
   * // => ['a', 'b']
   *
   * // Replace `_.memoize.Cache`.
   * _.memoize.Cache = WeakMap;
   */
  function memoize(func, resolver) {
    if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function memoized() {
      var args = arguments,
          key = resolver ? resolver.apply(this, args) : args[0],
          cache = memoized.cache;

      if (cache.has(key)) {
        return cache.get(key);
      }
      var result = func.apply(this, args);
      memoized.cache = cache.set(key, result) || cache;
      return result;
    };
    memoized.cache = new (memoize.Cache || MapCache)();
    return memoized;
  }

  // Expose `MapCache`.
  memoize.Cache = MapCache;

  module.exports = memoize;

  /***/
},
/* 512 */
/***/function (module, exports, __webpack_require__) {

  var baseToString = __webpack_require__(513);

  /**
   * Converts `value` to a string. An empty string is returned for `null`
   * and `undefined` values. The sign of `-0` is preserved.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   * @example
   *
   * _.toString(null);
   * // => ''
   *
   * _.toString(-0);
   * // => '-0'
   *
   * _.toString([1, 2, 3]);
   * // => '1,2,3'
   */
  function toString(value) {
    return value == null ? '' : baseToString(value);
  }

  module.exports = toString;

  /***/
},
/* 513 */
/***/function (module, exports, __webpack_require__) {

  var _Symbol9 = __webpack_require__(38),
      arrayMap = __webpack_require__(181),
      isArray = __webpack_require__(10),
      isSymbol = __webpack_require__(99);

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = _Symbol9 ? _Symbol9.prototype : undefined,
      symbolToString = symbolProto ? symbolProto.toString : undefined;

  /**
   * The base implementation of `_.toString` which doesn't convert nullish
   * values to empty strings.
   *
   * @private
   * @param {*} value The value to process.
   * @returns {string} Returns the string.
   */
  function baseToString(value) {
    // Exit early for strings to avoid a performance hit in some environments.
    if (typeof value == 'string') {
      return value;
    }
    if (isArray(value)) {
      // Recursively convert values (susceptible to call stack limits).
      return arrayMap(value, baseToString) + '';
    }
    if (isSymbol(value)) {
      return symbolToString ? symbolToString.call(value) : '';
    }
    var result = value + '';
    return result == '0' && 1 / value == -INFINITY ? '-0' : result;
  }

  module.exports = baseToString;

  /***/
},
/* 514 */
/***/function (module, exports, __webpack_require__) {

  var baseHasIn = __webpack_require__(515),
      hasPath = __webpack_require__(516);

  /**
   * Checks if `path` is a direct or inherited property of `object`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Object
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   * @example
   *
   * var object = _.create({ 'a': _.create({ 'b': 2 }) });
   *
   * _.hasIn(object, 'a');
   * // => true
   *
   * _.hasIn(object, 'a.b');
   * // => true
   *
   * _.hasIn(object, ['a', 'b']);
   * // => true
   *
   * _.hasIn(object, 'b');
   * // => false
   */
  function hasIn(object, path) {
    return object != null && hasPath(object, path, baseHasIn);
  }

  module.exports = hasIn;

  /***/
},
/* 515 */
/***/function (module, exports) {

  /**
   * The base implementation of `_.hasIn` without support for deep paths.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {Array|string} key The key to check.
   * @returns {boolean} Returns `true` if `key` exists, else `false`.
   */
  function baseHasIn(object, key) {
    return object != null && key in Object(object);
  }

  module.exports = baseHasIn;

  /***/
},
/* 516 */
/***/function (module, exports, __webpack_require__) {

  var castPath = __webpack_require__(200),
      isArguments = __webpack_require__(94),
      isArray = __webpack_require__(10),
      isIndex = __webpack_require__(192),
      isLength = __webpack_require__(95),
      toKey = __webpack_require__(60);

  /**
   * Checks if `path` exists on `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array|string} path The path to check.
   * @param {Function} hasFunc The function to check properties.
   * @returns {boolean} Returns `true` if `path` exists, else `false`.
   */
  function hasPath(object, path, hasFunc) {
    path = castPath(path, object);

    var index = -1,
        length = path.length,
        result = false;

    while (++index < length) {
      var key = toKey(path[index]);
      if (!(result = object != null && hasFunc(object, key))) {
        break;
      }
      object = object[key];
    }
    if (result || ++index != length) {
      return result;
    }
    length = object == null ? 0 : object.length;
    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
  }

  module.exports = hasPath;

  /***/
},
/* 517 */
/***/function (module, exports, __webpack_require__) {

  var baseProperty = __webpack_require__(518),
      basePropertyDeep = __webpack_require__(519),
      isKey = __webpack_require__(98),
      toKey = __webpack_require__(60);

  /**
   * Creates a function that returns the value at `path` of a given object.
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Util
   * @param {Array|string} path The path of the property to get.
   * @returns {Function} Returns the new accessor function.
   * @example
   *
   * var objects = [
   *   { 'a': { 'b': 2 } },
   *   { 'a': { 'b': 1 } }
   * ];
   *
   * _.map(objects, _.property('a.b'));
   * // => [2, 1]
   *
   * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
   * // => [1, 2]
   */
  function property(path) {
    return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
  }

  module.exports = property;

  /***/
},
/* 518 */
/***/function (module, exports) {

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function (object) {
      return object == null ? undefined : object[key];
    };
  }

  module.exports = baseProperty;

  /***/
},
/* 519 */
/***/function (module, exports, __webpack_require__) {

  var baseGet = __webpack_require__(199);

  /**
   * A specialized version of `baseProperty` which supports deep paths.
   *
   * @private
   * @param {Array|string} path The path of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyDeep(path) {
    return function (object) {
      return baseGet(object, path);
    };
  }

  module.exports = basePropertyDeep;

  /***/
},
/* 520 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  exports.default = createDevTools;

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _reactRedux = __webpack_require__(8);

  var _reduxDevtoolsInstrument = __webpack_require__(174);

  var _reduxDevtoolsInstrument2 = _interopRequireDefault(_reduxDevtoolsInstrument);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function createDevTools(children) {
    var _class, _temp;

    var monitorElement = _react.Children.only(children);
    var monitorProps = monitorElement.props;
    var Monitor = monitorElement.type;
    var ConnectedMonitor = (0, _reactRedux.connect)(function (state) {
      return state;
    })(Monitor);

    return _temp = _class = function (_Component) {
      _inherits(DevTools, _Component);

      function DevTools(props, context) {
        _classCallCheck(this, DevTools);

        var _this = _possibleConstructorReturn(this, _Component.call(this, props, context));

        if (!props.store && !context.store) {
          console.error('Redux DevTools could not render. You must pass the Redux store ' + 'to <DevTools> either as a "store" prop or by wrapping it in a ' + '<Provider store={store}>.');
          return _possibleConstructorReturn(_this);
        }

        if (context.store) {
          _this.liftedStore = context.store.liftedStore;
        } else {
          _this.liftedStore = props.store.liftedStore;
        }

        if (!_this.liftedStore) {
          console.error('Redux DevTools could not render. Did you forget to include ' + 'DevTools.instrument() in your store enhancer chain before ' + 'using createStore()?');
        }
        return _this;
      }

      DevTools.prototype.render = function render() {
        if (!this.liftedStore) {
          return null;
        }

        return _react2.default.createElement(ConnectedMonitor, _extends({}, monitorProps, {
          store: this.liftedStore }));
      };

      return DevTools;
    }(_react.Component), _class.contextTypes = {
      store: _propTypes2.default.object
    }, _class.propTypes = {
      store: _propTypes2.default.object
    }, _class.instrument = function (options) {
      return (0, _reduxDevtoolsInstrument2.default)(function (state, action) {
        return Monitor.update(monitorProps, state, action);
      }, options);
    }, _temp;
  }

  /***/
},
/* 521 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _LogMonitor = __webpack_require__(522);

  var _LogMonitor2 = _interopRequireDefault(_LogMonitor);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _LogMonitor2.default;

  /***/
},
/* 522 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _function = __webpack_require__(39);

  var _function2 = _interopRequireDefault(_function);

  var _reduxDevtoolsThemes = __webpack_require__(524);

  var themes = _interopRequireWildcard(_reduxDevtoolsThemes);

  var _reduxDevtools = __webpack_require__(88);

  var _actions = __webpack_require__(202);

  var _reducers = __webpack_require__(563);

  var _reducers2 = _interopRequireDefault(_reducers);

  var _LogMonitorButtonBar = __webpack_require__(564);

  var _LogMonitorButtonBar2 = _interopRequireDefault(_LogMonitorButtonBar);

  var _LogMonitorEntryList = __webpack_require__(567);

  var _LogMonitorEntryList2 = _interopRequireDefault(_LogMonitorEntryList);

  var _lodash = __webpack_require__(636);

  var _lodash2 = _interopRequireDefault(_lodash);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var toggleAction = _reduxDevtools.ActionCreators.toggleAction;
  var setActionsActive = _reduxDevtools.ActionCreators.setActionsActive;

  var styles = {
    container: {
      fontFamily: 'monaco, Consolas, Lucida Console, monospace',
      position: 'relative',
      overflowY: 'hidden',
      width: '100%',
      height: '100%',
      minWidth: 300,
      direction: 'ltr'
    },
    elements: {
      position: 'absolute',
      left: 0,
      right: 0,
      top: 0,
      bottom: 0,
      overflowX: 'hidden',
      overflowY: 'auto'
    }
  };

  var LogMonitor = function (_Component) {
    _inherits(LogMonitor, _Component);

    function LogMonitor(props) {
      _classCallCheck(this, LogMonitor);

      var _this = _possibleConstructorReturn(this, _Component.call(this, props));

      _this.shouldComponentUpdate = _function2.default;
      _this.updateScrollTop = (0, _lodash2.default)(function () {
        var node = _this.node;
        _this.props.dispatch((0, _actions.updateScrollTop)(node ? node.scrollTop : 0));
      }, 500);

      _this.handleToggleAction = _this.handleToggleAction.bind(_this);
      _this.handleToggleConsecutiveAction = _this.handleToggleConsecutiveAction.bind(_this);
      _this.getRef = _this.getRef.bind(_this);
      return _this;
    }

    LogMonitor.prototype.scroll = function scroll() {
      var node = this.node;
      if (!node) {
        return;
      }
      if (this.scrollDown) {
        var offsetHeight = node.offsetHeight;
        var scrollHeight = node.scrollHeight;

        node.scrollTop = scrollHeight - offsetHeight;
        this.scrollDown = false;
      }
    };

    LogMonitor.prototype.componentDidMount = function componentDidMount() {
      var node = this.node;
      if (!node || !this.props.monitorState) {
        return;
      }

      if (this.props.preserveScrollTop) {
        node.scrollTop = this.props.monitorState.initialScrollTop;
        node.addEventListener('scroll', this.updateScrollTop);
      } else {
        this.scrollDown = true;
        this.scroll();
      }
    };

    LogMonitor.prototype.componentWillUnmount = function componentWillUnmount() {
      var node = this.node;
      if (node && this.props.preserveScrollTop) {
        node.removeEventListener('scroll', this.updateScrollTop);
      }
    };

    LogMonitor.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
      var node = this.node;
      if (!node) {
        this.scrollDown = true;
      } else if (this.props.stagedActionIds.length < nextProps.stagedActionIds.length) {
        var scrollTop = node.scrollTop;
        var offsetHeight = node.offsetHeight;
        var scrollHeight = node.scrollHeight;

        this.scrollDown = Math.abs(scrollHeight - (scrollTop + offsetHeight)) < 20;
      } else {
        this.scrollDown = false;
      }
    };

    LogMonitor.prototype.componentDidUpdate = function componentDidUpdate() {
      this.scroll();
    };

    LogMonitor.prototype.handleToggleAction = function handleToggleAction(id) {
      this.props.dispatch(toggleAction(id));
    };

    LogMonitor.prototype.handleToggleConsecutiveAction = function handleToggleConsecutiveAction(id) {
      var _props = this.props;
      var monitorState = _props.monitorState;
      var actionsById = _props.actionsById;
      var consecutiveToggleStartId = monitorState.consecutiveToggleStartId;

      if (consecutiveToggleStartId && actionsById[consecutiveToggleStartId]) {
        var skippedActionIds = this.props.skippedActionIds;

        var start = Math.min(consecutiveToggleStartId, id);
        var end = Math.max(consecutiveToggleStartId, id);
        var active = skippedActionIds.indexOf(consecutiveToggleStartId) > -1;
        this.props.dispatch(setActionsActive(start, end + 1, active));
        this.props.dispatch((0, _actions.startConsecutiveToggle)(null));
      } else if (id > 0) {
        this.props.dispatch((0, _actions.startConsecutiveToggle)(id));
      }
    };

    LogMonitor.prototype.getTheme = function getTheme() {
      var theme = this.props.theme;

      if (typeof theme !== 'string') {
        return theme;
      }

      if (typeof themes[theme] !== 'undefined') {
        return themes[theme];
      }

      console.warn('DevTools theme ' + theme + ' not found, defaulting to nicinabox');
      return themes.nicinabox;
    };

    LogMonitor.prototype.getRef = function getRef(node) {
      this.node = node;
    };

    LogMonitor.prototype.render = function render() {
      var theme = this.getTheme();
      var consecutiveToggleStartId = this.props.monitorState.consecutiveToggleStartId;
      var _props2 = this.props;
      var dispatch = _props2.dispatch;
      var actionsById = _props2.actionsById;
      var skippedActionIds = _props2.skippedActionIds;
      var stagedActionIds = _props2.stagedActionIds;
      var computedStates = _props2.computedStates;
      var currentStateIndex = _props2.currentStateIndex;
      var select = _props2.select;
      var expandActionRoot = _props2.expandActionRoot;
      var expandStateRoot = _props2.expandStateRoot;
      var markStateDiff = _props2.markStateDiff;

      var entryListProps = {
        theme: theme,
        actionsById: actionsById,
        skippedActionIds: skippedActionIds,
        stagedActionIds: stagedActionIds,
        computedStates: computedStates,
        currentStateIndex: currentStateIndex,
        consecutiveToggleStartId: consecutiveToggleStartId,
        select: select,
        expandActionRoot: expandActionRoot,
        expandStateRoot: expandStateRoot,
        markStateDiff: markStateDiff,
        onActionClick: this.handleToggleAction,
        onActionShiftClick: this.handleToggleConsecutiveAction
      };

      return _react2.default.createElement('div', { style: _extends({}, styles.container, { backgroundColor: theme.base00 }) }, !this.props.hideMainButtons && _react2.default.createElement(_LogMonitorButtonBar2.default, {
        theme: theme,
        dispatch: dispatch,
        hasStates: computedStates.length > 1,
        hasSkippedActions: skippedActionIds.length > 0
      }), _react2.default.createElement('div', {
        style: this.props.hideMainButtons ? styles.elements : _extends({}, styles.elements, { top: 30 }),
        ref: this.getRef
      }, _react2.default.createElement(_LogMonitorEntryList2.default, entryListProps)));
    };

    return LogMonitor;
  }(_react.Component);

  LogMonitor.update = _reducers2.default;
  LogMonitor.propTypes = {
    dispatch: _propTypes2.default.func,
    computedStates: _propTypes2.default.array,
    actionsById: _propTypes2.default.object,
    stagedActionIds: _propTypes2.default.array,
    skippedActionIds: _propTypes2.default.array,
    monitorState: _propTypes2.default.shape({
      initialScrollTop: _propTypes2.default.number,
      consecutiveToggleStartId: _propTypes2.default.number
    }),

    preserveScrollTop: _propTypes2.default.bool,
    select: _propTypes2.default.func,
    theme: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
    expandActionRoot: _propTypes2.default.bool,
    expandStateRoot: _propTypes2.default.bool,
    markStateDiff: _propTypes2.default.bool,
    hideMainButtons: _propTypes2.default.bool
  };
  LogMonitor.defaultProps = {
    select: function select(state) {
      return state;
    },
    theme: 'nicinabox',
    preserveScrollTop: true,
    expandActionRoot: true,
    expandStateRoot: true,
    markStateDiff: false
  };
  exports.default = LogMonitor;

  /***/
},
/* 523 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = shallowEqual;

  function shallowEqual(objA, objB) {
    if (objA === objB) {
      return true;
    }

    if ((typeof objA === "undefined" ? "undefined" : _typeof4(objA)) !== 'object' || objA === null || (typeof objB === "undefined" ? "undefined" : _typeof4(objB)) !== 'object' || objB === null) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    }

    // Test for A's keys different from B.
    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);
    for (var i = 0; i < keysA.length; i++) {
      if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {
        return false;
      }
    }

    return true;
  }

  module.exports = exports['default'];

  /***/
},
/* 524 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  function _interopRequire(obj) {
    return obj && obj.__esModule ? obj['default'] : obj;
  }

  function _interopExportWildcard(obj, defaults) {
    var newObj = defaults({}, obj);delete newObj['default'];return newObj;
  }

  function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);for (var i = 0; i < keys.length; i++) {
      var key = keys[i];var value = Object.getOwnPropertyDescriptor(defaults, key);if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }return obj;
  }

  var _base16 = __webpack_require__(201);

  _defaults(exports, _interopExportWildcard(_base16, _defaults));

  var _nicinabox = __webpack_require__(562);

  exports.nicinabox = _interopRequire(_nicinabox);

  /***/
},
/* 525 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'threezerotwofour',
    author: 'jan t. sott (http://github.com/idleberg)',
    base00: '#090300',
    base01: '#3a3432',
    base02: '#4a4543',
    base03: '#5c5855',
    base04: '#807d7c',
    base05: '#a5a2a2',
    base06: '#d6d5d4',
    base07: '#f7f7f7',
    base08: '#db2d20',
    base09: '#e8bbd0',
    base0A: '#fded02',
    base0B: '#01a252',
    base0C: '#b5e4f4',
    base0D: '#01a0e4',
    base0E: '#a16a94',
    base0F: '#cdab53'
  };
  module.exports = exports['default'];

  /***/
},
/* 526 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'apathy',
    author: 'jannik siebert (https://github.com/janniks)',
    base00: '#031A16',
    base01: '#0B342D',
    base02: '#184E45',
    base03: '#2B685E',
    base04: '#5F9C92',
    base05: '#81B5AC',
    base06: '#A7CEC8',
    base07: '#D2E7E4',
    base08: '#3E9688',
    base09: '#3E7996',
    base0A: '#3E4C96',
    base0B: '#883E96',
    base0C: '#963E4C',
    base0D: '#96883E',
    base0E: '#4C963E',
    base0F: '#3E965B'
  };
  module.exports = exports['default'];

  /***/
},
/* 527 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'ashes',
    author: 'jannik siebert (https://github.com/janniks)',
    base00: '#1C2023',
    base01: '#393F45',
    base02: '#565E65',
    base03: '#747C84',
    base04: '#ADB3BA',
    base05: '#C7CCD1',
    base06: '#DFE2E5',
    base07: '#F3F4F5',
    base08: '#C7AE95',
    base09: '#C7C795',
    base0A: '#AEC795',
    base0B: '#95C7AE',
    base0C: '#95AEC7',
    base0D: '#AE95C7',
    base0E: '#C795AE',
    base0F: '#C79595'
  };
  module.exports = exports['default'];

  /***/
},
/* 528 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'atelier dune',
    author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/dune)',
    base00: '#20201d',
    base01: '#292824',
    base02: '#6e6b5e',
    base03: '#7d7a68',
    base04: '#999580',
    base05: '#a6a28c',
    base06: '#e8e4cf',
    base07: '#fefbec',
    base08: '#d73737',
    base09: '#b65611',
    base0A: '#cfb017',
    base0B: '#60ac39',
    base0C: '#1fad83',
    base0D: '#6684e1',
    base0E: '#b854d4',
    base0F: '#d43552'
  };
  module.exports = exports['default'];

  /***/
},
/* 529 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'atelier forest',
    author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/forest)',
    base00: '#1b1918',
    base01: '#2c2421',
    base02: '#68615e',
    base03: '#766e6b',
    base04: '#9c9491',
    base05: '#a8a19f',
    base06: '#e6e2e0',
    base07: '#f1efee',
    base08: '#f22c40',
    base09: '#df5320',
    base0A: '#d5911a',
    base0B: '#5ab738',
    base0C: '#00ad9c',
    base0D: '#407ee7',
    base0E: '#6666ea',
    base0F: '#c33ff3'
  };
  module.exports = exports['default'];

  /***/
},
/* 530 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'atelier heath',
    author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/heath)',
    base00: '#1b181b',
    base01: '#292329',
    base02: '#695d69',
    base03: '#776977',
    base04: '#9e8f9e',
    base05: '#ab9bab',
    base06: '#d8cad8',
    base07: '#f7f3f7',
    base08: '#ca402b',
    base09: '#a65926',
    base0A: '#bb8a35',
    base0B: '#379a37',
    base0C: '#159393',
    base0D: '#516aec',
    base0E: '#7b59c0',
    base0F: '#cc33cc'
  };
  module.exports = exports['default'];

  /***/
},
/* 531 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'atelier lakeside',
    author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/lakeside/)',
    base00: '#161b1d',
    base01: '#1f292e',
    base02: '#516d7b',
    base03: '#5a7b8c',
    base04: '#7195a8',
    base05: '#7ea2b4',
    base06: '#c1e4f6',
    base07: '#ebf8ff',
    base08: '#d22d72',
    base09: '#935c25',
    base0A: '#8a8a0f',
    base0B: '#568c3b',
    base0C: '#2d8f6f',
    base0D: '#257fad',
    base0E: '#5d5db1',
    base0F: '#b72dd2'
  };
  module.exports = exports['default'];

  /***/
},
/* 532 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'atelier seaside',
    author: 'bram de haan (http://atelierbram.github.io/syntax-highlighting/atelier-schemes/seaside/)',
    base00: '#131513',
    base01: '#242924',
    base02: '#5e6e5e',
    base03: '#687d68',
    base04: '#809980',
    base05: '#8ca68c',
    base06: '#cfe8cf',
    base07: '#f0fff0',
    base08: '#e6193c',
    base09: '#87711d',
    base0A: '#c3c322',
    base0B: '#29a329',
    base0C: '#1999b3',
    base0D: '#3d62f5',
    base0E: '#ad2bee',
    base0F: '#e619c3'
  };
  module.exports = exports['default'];

  /***/
},
/* 533 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'bespin',
    author: 'jan t. sott',
    base00: '#28211c',
    base01: '#36312e',
    base02: '#5e5d5c',
    base03: '#666666',
    base04: '#797977',
    base05: '#8a8986',
    base06: '#9d9b97',
    base07: '#baae9e',
    base08: '#cf6a4c',
    base09: '#cf7d34',
    base0A: '#f9ee98',
    base0B: '#54be0d',
    base0C: '#afc4db',
    base0D: '#5ea6ea',
    base0E: '#9b859d',
    base0F: '#937121'
  };
  module.exports = exports['default'];

  /***/
},
/* 534 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'brewer',
    author: 'timothée poisot (http://github.com/tpoisot)',
    base00: '#0c0d0e',
    base01: '#2e2f30',
    base02: '#515253',
    base03: '#737475',
    base04: '#959697',
    base05: '#b7b8b9',
    base06: '#dadbdc',
    base07: '#fcfdfe',
    base08: '#e31a1c',
    base09: '#e6550d',
    base0A: '#dca060',
    base0B: '#31a354',
    base0C: '#80b1d3',
    base0D: '#3182bd',
    base0E: '#756bb1',
    base0F: '#b15928'
  };
  module.exports = exports['default'];

  /***/
},
/* 535 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'bright',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#000000',
    base01: '#303030',
    base02: '#505050',
    base03: '#b0b0b0',
    base04: '#d0d0d0',
    base05: '#e0e0e0',
    base06: '#f5f5f5',
    base07: '#ffffff',
    base08: '#fb0120',
    base09: '#fc6d24',
    base0A: '#fda331',
    base0B: '#a1c659',
    base0C: '#76c7b7',
    base0D: '#6fb3d2',
    base0E: '#d381c3',
    base0F: '#be643c'
  };
  module.exports = exports['default'];

  /***/
},
/* 536 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'chalk',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#151515',
    base01: '#202020',
    base02: '#303030',
    base03: '#505050',
    base04: '#b0b0b0',
    base05: '#d0d0d0',
    base06: '#e0e0e0',
    base07: '#f5f5f5',
    base08: '#fb9fb1',
    base09: '#eda987',
    base0A: '#ddb26f',
    base0B: '#acc267',
    base0C: '#12cfc0',
    base0D: '#6fc2ef',
    base0E: '#e1a3ee',
    base0F: '#deaf8f'
  };
  module.exports = exports['default'];

  /***/
},
/* 537 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'codeschool',
    author: 'brettof86',
    base00: '#232c31',
    base01: '#1c3657',
    base02: '#2a343a',
    base03: '#3f4944',
    base04: '#84898c',
    base05: '#9ea7a6',
    base06: '#a7cfa3',
    base07: '#b5d8f6',
    base08: '#2a5491',
    base09: '#43820d',
    base0A: '#a03b1e',
    base0B: '#237986',
    base0C: '#b02f30',
    base0D: '#484d79',
    base0E: '#c59820',
    base0F: '#c98344'
  };
  module.exports = exports['default'];

  /***/
},
/* 538 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'colors',
    author: 'mrmrs (http://clrs.cc)',
    base00: '#111111',
    base01: '#333333',
    base02: '#555555',
    base03: '#777777',
    base04: '#999999',
    base05: '#bbbbbb',
    base06: '#dddddd',
    base07: '#ffffff',
    base08: '#ff4136',
    base09: '#ff851b',
    base0A: '#ffdc00',
    base0B: '#2ecc40',
    base0C: '#7fdbff',
    base0D: '#0074d9',
    base0E: '#b10dc9',
    base0F: '#85144b'
  };
  module.exports = exports['default'];

  /***/
},
/* 539 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'default',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#181818',
    base01: '#282828',
    base02: '#383838',
    base03: '#585858',
    base04: '#b8b8b8',
    base05: '#d8d8d8',
    base06: '#e8e8e8',
    base07: '#f8f8f8',
    base08: '#ab4642',
    base09: '#dc9656',
    base0A: '#f7ca88',
    base0B: '#a1b56c',
    base0C: '#86c1b9',
    base0D: '#7cafc2',
    base0E: '#ba8baf',
    base0F: '#a16946'
  };
  module.exports = exports['default'];

  /***/
},
/* 540 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'eighties',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#2d2d2d',
    base01: '#393939',
    base02: '#515151',
    base03: '#747369',
    base04: '#a09f93',
    base05: '#d3d0c8',
    base06: '#e8e6df',
    base07: '#f2f0ec',
    base08: '#f2777a',
    base09: '#f99157',
    base0A: '#ffcc66',
    base0B: '#99cc99',
    base0C: '#66cccc',
    base0D: '#6699cc',
    base0E: '#cc99cc',
    base0F: '#d27b53'
  };
  module.exports = exports['default'];

  /***/
},
/* 541 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'embers',
    author: 'jannik siebert (https://github.com/janniks)',
    base00: '#16130F',
    base01: '#2C2620',
    base02: '#433B32',
    base03: '#5A5047',
    base04: '#8A8075',
    base05: '#A39A90',
    base06: '#BEB6AE',
    base07: '#DBD6D1',
    base08: '#826D57',
    base09: '#828257',
    base0A: '#6D8257',
    base0B: '#57826D',
    base0C: '#576D82',
    base0D: '#6D5782',
    base0E: '#82576D',
    base0F: '#825757'
  };
  module.exports = exports['default'];

  /***/
},
/* 542 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'flat',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#2C3E50',
    base01: '#34495E',
    base02: '#7F8C8D',
    base03: '#95A5A6',
    base04: '#BDC3C7',
    base05: '#e0e0e0',
    base06: '#f5f5f5',
    base07: '#ECF0F1',
    base08: '#E74C3C',
    base09: '#E67E22',
    base0A: '#F1C40F',
    base0B: '#2ECC71',
    base0C: '#1ABC9C',
    base0D: '#3498DB',
    base0E: '#9B59B6',
    base0F: '#be643c'
  };
  module.exports = exports['default'];

  /***/
},
/* 543 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'google',
    author: 'seth wright (http://sethawright.com)',
    base00: '#1d1f21',
    base01: '#282a2e',
    base02: '#373b41',
    base03: '#969896',
    base04: '#b4b7b4',
    base05: '#c5c8c6',
    base06: '#e0e0e0',
    base07: '#ffffff',
    base08: '#CC342B',
    base09: '#F96A38',
    base0A: '#FBA922',
    base0B: '#198844',
    base0C: '#3971ED',
    base0D: '#3971ED',
    base0E: '#A36AC7',
    base0F: '#3971ED'
  };
  module.exports = exports['default'];

  /***/
},
/* 544 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'grayscale',
    author: 'alexandre gavioli (https://github.com/alexx2/)',
    base00: '#101010',
    base01: '#252525',
    base02: '#464646',
    base03: '#525252',
    base04: '#ababab',
    base05: '#b9b9b9',
    base06: '#e3e3e3',
    base07: '#f7f7f7',
    base08: '#7c7c7c',
    base09: '#999999',
    base0A: '#a0a0a0',
    base0B: '#8e8e8e',
    base0C: '#868686',
    base0D: '#686868',
    base0E: '#747474',
    base0F: '#5e5e5e'
  };
  module.exports = exports['default'];

  /***/
},
/* 545 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'green screen',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#001100',
    base01: '#003300',
    base02: '#005500',
    base03: '#007700',
    base04: '#009900',
    base05: '#00bb00',
    base06: '#00dd00',
    base07: '#00ff00',
    base08: '#007700',
    base09: '#009900',
    base0A: '#007700',
    base0B: '#00bb00',
    base0C: '#005500',
    base0D: '#009900',
    base0E: '#00bb00',
    base0F: '#005500'
  };
  module.exports = exports['default'];

  /***/
},
/* 546 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'harmonic16',
    author: 'jannik siebert (https://github.com/janniks)',
    base00: '#0b1c2c',
    base01: '#223b54',
    base02: '#405c79',
    base03: '#627e99',
    base04: '#aabcce',
    base05: '#cbd6e2',
    base06: '#e5ebf1',
    base07: '#f7f9fb',
    base08: '#bf8b56',
    base09: '#bfbf56',
    base0A: '#8bbf56',
    base0B: '#56bf8b',
    base0C: '#568bbf',
    base0D: '#8b56bf',
    base0E: '#bf568b',
    base0F: '#bf5656'
  };
  module.exports = exports['default'];

  /***/
},
/* 547 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'hopscotch',
    author: 'jan t. sott',
    base00: '#322931',
    base01: '#433b42',
    base02: '#5c545b',
    base03: '#797379',
    base04: '#989498',
    base05: '#b9b5b8',
    base06: '#d5d3d5',
    base07: '#ffffff',
    base08: '#dd464c',
    base09: '#fd8b19',
    base0A: '#fdcc59',
    base0B: '#8fc13e',
    base0C: '#149b93',
    base0D: '#1290bf',
    base0E: '#c85e7c',
    base0F: '#b33508'
  };
  module.exports = exports['default'];

  /***/
},
/* 548 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'isotope',
    author: 'jan t. sott',
    base00: '#000000',
    base01: '#404040',
    base02: '#606060',
    base03: '#808080',
    base04: '#c0c0c0',
    base05: '#d0d0d0',
    base06: '#e0e0e0',
    base07: '#ffffff',
    base08: '#ff0000',
    base09: '#ff9900',
    base0A: '#ff0099',
    base0B: '#33ff00',
    base0C: '#00ffff',
    base0D: '#0066ff',
    base0E: '#cc00ff',
    base0F: '#3300ff'
  };
  module.exports = exports['default'];

  /***/
},
/* 549 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'marrakesh',
    author: 'alexandre gavioli (http://github.com/alexx2/)',
    base00: '#201602',
    base01: '#302e00',
    base02: '#5f5b17',
    base03: '#6c6823',
    base04: '#86813b',
    base05: '#948e48',
    base06: '#ccc37a',
    base07: '#faf0a5',
    base08: '#c35359',
    base09: '#b36144',
    base0A: '#a88339',
    base0B: '#18974e',
    base0C: '#75a738',
    base0D: '#477ca1',
    base0E: '#8868b3',
    base0F: '#b3588e'
  };
  module.exports = exports['default'];

  /***/
},
/* 550 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'mocha',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#3B3228',
    base01: '#534636',
    base02: '#645240',
    base03: '#7e705a',
    base04: '#b8afad',
    base05: '#d0c8c6',
    base06: '#e9e1dd',
    base07: '#f5eeeb',
    base08: '#cb6077',
    base09: '#d28b71',
    base0A: '#f4bc87',
    base0B: '#beb55b',
    base0C: '#7bbda4',
    base0D: '#8ab3b5',
    base0E: '#a89bb9',
    base0F: '#bb9584'
  };
  module.exports = exports['default'];

  /***/
},
/* 551 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'monokai',
    author: 'wimer hazenberg (http://www.monokai.nl)',
    base00: '#272822',
    base01: '#383830',
    base02: '#49483e',
    base03: '#75715e',
    base04: '#a59f85',
    base05: '#f8f8f2',
    base06: '#f5f4f1',
    base07: '#f9f8f5',
    base08: '#f92672',
    base09: '#fd971f',
    base0A: '#f4bf75',
    base0B: '#a6e22e',
    base0C: '#a1efe4',
    base0D: '#66d9ef',
    base0E: '#ae81ff',
    base0F: '#cc6633'
  };
  module.exports = exports['default'];

  /***/
},
/* 552 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'ocean',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#2b303b',
    base01: '#343d46',
    base02: '#4f5b66',
    base03: '#65737e',
    base04: '#a7adba',
    base05: '#c0c5ce',
    base06: '#dfe1e8',
    base07: '#eff1f5',
    base08: '#bf616a',
    base09: '#d08770',
    base0A: '#ebcb8b',
    base0B: '#a3be8c',
    base0C: '#96b5b4',
    base0D: '#8fa1b3',
    base0E: '#b48ead',
    base0F: '#ab7967'
  };
  module.exports = exports['default'];

  /***/
},
/* 553 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'paraiso',
    author: 'jan t. sott',
    base00: '#2f1e2e',
    base01: '#41323f',
    base02: '#4f424c',
    base03: '#776e71',
    base04: '#8d8687',
    base05: '#a39e9b',
    base06: '#b9b6b0',
    base07: '#e7e9db',
    base08: '#ef6155',
    base09: '#f99b15',
    base0A: '#fec418',
    base0B: '#48b685',
    base0C: '#5bc4bf',
    base0D: '#06b6ef',
    base0E: '#815ba4',
    base0F: '#e96ba8'
  };
  module.exports = exports['default'];

  /***/
},
/* 554 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'pop',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#000000',
    base01: '#202020',
    base02: '#303030',
    base03: '#505050',
    base04: '#b0b0b0',
    base05: '#d0d0d0',
    base06: '#e0e0e0',
    base07: '#ffffff',
    base08: '#eb008a',
    base09: '#f29333',
    base0A: '#f8ca12',
    base0B: '#37b349',
    base0C: '#00aabb',
    base0D: '#0e5a94',
    base0E: '#b31e8d',
    base0F: '#7a2d00'
  };
  module.exports = exports['default'];

  /***/
},
/* 555 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'railscasts',
    author: 'ryan bates (http://railscasts.com)',
    base00: '#2b2b2b',
    base01: '#272935',
    base02: '#3a4055',
    base03: '#5a647e',
    base04: '#d4cfc9',
    base05: '#e6e1dc',
    base06: '#f4f1ed',
    base07: '#f9f7f3',
    base08: '#da4939',
    base09: '#cc7833',
    base0A: '#ffc66d',
    base0B: '#a5c261',
    base0C: '#519f50',
    base0D: '#6d9cbe',
    base0E: '#b6b3eb',
    base0F: '#bc9458'
  };
  module.exports = exports['default'];

  /***/
},
/* 556 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'shapeshifter',
    author: 'tyler benziger (http://tybenz.com)',
    base00: '#000000',
    base01: '#040404',
    base02: '#102015',
    base03: '#343434',
    base04: '#555555',
    base05: '#ababab',
    base06: '#e0e0e0',
    base07: '#f9f9f9',
    base08: '#e92f2f',
    base09: '#e09448',
    base0A: '#dddd13',
    base0B: '#0ed839',
    base0C: '#23edda',
    base0D: '#3b48e3',
    base0E: '#f996e2',
    base0F: '#69542d'
  };
  module.exports = exports['default'];

  /***/
},
/* 557 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'solarized',
    author: 'ethan schoonover (http://ethanschoonover.com/solarized)',
    base00: '#002b36',
    base01: '#073642',
    base02: '#586e75',
    base03: '#657b83',
    base04: '#839496',
    base05: '#93a1a1',
    base06: '#eee8d5',
    base07: '#fdf6e3',
    base08: '#dc322f',
    base09: '#cb4b16',
    base0A: '#b58900',
    base0B: '#859900',
    base0C: '#2aa198',
    base0D: '#268bd2',
    base0E: '#6c71c4',
    base0F: '#d33682'
  };
  module.exports = exports['default'];

  /***/
},
/* 558 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'summerfruit',
    author: 'christopher corley (http://cscorley.github.io/)',
    base00: '#151515',
    base01: '#202020',
    base02: '#303030',
    base03: '#505050',
    base04: '#B0B0B0',
    base05: '#D0D0D0',
    base06: '#E0E0E0',
    base07: '#FFFFFF',
    base08: '#FF0086',
    base09: '#FD8900',
    base0A: '#ABA800',
    base0B: '#00C918',
    base0C: '#1faaaa',
    base0D: '#3777E6',
    base0E: '#AD00A1',
    base0F: '#cc6633'
  };
  module.exports = exports['default'];

  /***/
},
/* 559 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'tomorrow',
    author: 'chris kempson (http://chriskempson.com)',
    base00: '#1d1f21',
    base01: '#282a2e',
    base02: '#373b41',
    base03: '#969896',
    base04: '#b4b7b4',
    base05: '#c5c8c6',
    base06: '#e0e0e0',
    base07: '#ffffff',
    base08: '#cc6666',
    base09: '#de935f',
    base0A: '#f0c674',
    base0B: '#b5bd68',
    base0C: '#8abeb7',
    base0D: '#81a2be',
    base0E: '#b294bb',
    base0F: '#a3685a'
  };
  module.exports = exports['default'];

  /***/
},
/* 560 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'london tube',
    author: 'jan t. sott',
    base00: '#231f20',
    base01: '#1c3f95',
    base02: '#5a5758',
    base03: '#737171',
    base04: '#959ca1',
    base05: '#d9d8d8',
    base06: '#e7e7e8',
    base07: '#ffffff',
    base08: '#ee2e24',
    base09: '#f386a1',
    base0A: '#ffd204',
    base0B: '#00853e',
    base0C: '#85cebc',
    base0D: '#009ddc',
    base0E: '#98005d',
    base0F: '#b06110'
  };
  module.exports = exports['default'];

  /***/
},
/* 561 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'twilight',
    author: 'david hart (http://hart-dev.com)',
    base00: '#1e1e1e',
    base01: '#323537',
    base02: '#464b50',
    base03: '#5f5a60',
    base04: '#838184',
    base05: '#a7a7a7',
    base06: '#c3c3c3',
    base07: '#ffffff',
    base08: '#cf6a4c',
    base09: '#cda869',
    base0A: '#f9ee98',
    base0B: '#8f9d6a',
    base0C: '#afc4db',
    base0D: '#7587a6',
    base0E: '#9b859d',
    base0F: '#9b703f'
  };
  module.exports = exports['default'];

  /***/
},
/* 562 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'nicinabox',
    author: 'nicinabox (http://github.com/nicinabox)',
    base00: '#2A2F3A',
    base01: '#3C444F',
    base02: '#4F5A65',
    base03: '#BEBEBE',
    base04: '#b0b0b0', // based on ocean theme
    base05: '#d0d0d0', // based on ocean theme
    base06: '#FFFFFF',
    base07: '#f5f5f5', // based on ocean theme
    base08: '#fb9fb1', // based on ocean theme
    base09: '#FC6D24',
    base0A: '#ddb26f', // based on ocean theme
    base0B: '#A1C659',
    base0C: '#12cfc0', // based on ocean theme
    base0D: '#6FB3D2',
    base0E: '#D381C3',
    base0F: '#deaf8f' // based on ocean theme
  };
  module.exports = exports['default'];

  /***/
},
/* 563 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports.default = reducer;

  var _actions = __webpack_require__(202);

  function initialScrollTop(props) {
    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var action = arguments[2];

    if (!props.preserveScrollTop) {
      return 0;
    }

    return action.type === _actions.UPDATE_SCROLL_TOP ? action.scrollTop : state;
  }

  function startConsecutiveToggle(props, state, action) {
    return action.type === _actions.START_CONSECUTIVE_TOGGLE ? action.id : state;
  }

  function reducer(props) {
    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var action = arguments[2];

    return {
      initialScrollTop: initialScrollTop(props, state.initialScrollTop, action),
      consecutiveToggleStartId: startConsecutiveToggle(props, state.consecutiveToggleStartId, action)
    };
  }

  /***/
},
/* 564 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _function = __webpack_require__(39);

  var _function2 = _interopRequireDefault(_function);

  var _reduxDevtools = __webpack_require__(88);

  var _LogMonitorButton = __webpack_require__(565);

  var _LogMonitorButton2 = _interopRequireDefault(_LogMonitorButton);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var reset = _reduxDevtools.ActionCreators.reset;
  var rollback = _reduxDevtools.ActionCreators.rollback;
  var commit = _reduxDevtools.ActionCreators.commit;
  var sweep = _reduxDevtools.ActionCreators.sweep;

  var style = {
    textAlign: 'center',
    borderBottomWidth: 1,
    borderBottomStyle: 'solid',
    borderColor: 'transparent',
    zIndex: 1,
    display: 'flex',
    flexDirection: 'row'
  };

  var LogMonitorButtonBar = function (_Component) {
    _inherits(LogMonitorButtonBar, _Component);

    function LogMonitorButtonBar(props) {
      _classCallCheck(this, LogMonitorButtonBar);

      var _this = _possibleConstructorReturn(this, _Component.call(this, props));

      _this.shouldComponentUpdate = _function2.default;

      _this.handleReset = _this.handleReset.bind(_this);
      _this.handleRollback = _this.handleRollback.bind(_this);
      _this.handleSweep = _this.handleSweep.bind(_this);
      _this.handleCommit = _this.handleCommit.bind(_this);
      return _this;
    }

    LogMonitorButtonBar.prototype.handleRollback = function handleRollback() {
      this.props.dispatch(rollback());
    };

    LogMonitorButtonBar.prototype.handleSweep = function handleSweep() {
      this.props.dispatch(sweep());
    };

    LogMonitorButtonBar.prototype.handleCommit = function handleCommit() {
      this.props.dispatch(commit());
    };

    LogMonitorButtonBar.prototype.handleReset = function handleReset() {
      this.props.dispatch(reset());
    };

    LogMonitorButtonBar.prototype.render = function render() {
      var _props = this.props;
      var theme = _props.theme;
      var hasStates = _props.hasStates;
      var hasSkippedActions = _props.hasSkippedActions;

      return _react2.default.createElement('div', { style: _extends({}, style, { borderColor: theme.base02 }) }, _react2.default.createElement(_LogMonitorButton2.default, {
        theme: theme,
        onClick: this.handleReset,
        enabled: true }, 'Reset'), _react2.default.createElement(_LogMonitorButton2.default, {
        theme: theme,
        onClick: this.handleRollback,
        enabled: hasStates }, 'Revert'), _react2.default.createElement(_LogMonitorButton2.default, {
        theme: theme,
        onClick: this.handleSweep,
        enabled: hasSkippedActions }, 'Sweep'), _react2.default.createElement(_LogMonitorButton2.default, {
        theme: theme,
        onClick: this.handleCommit,
        enabled: hasStates }, 'Commit'));
    };

    return LogMonitorButtonBar;
  }(_react.Component);

  LogMonitorButtonBar.propTypes = {
    dispatch: _propTypes2.default.func,
    theme: _propTypes2.default.object
  };
  exports.default = LogMonitorButtonBar;

  /***/
},
/* 565 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _brighten = __webpack_require__(566);

  var _brighten2 = _interopRequireDefault(_brighten);

  var _function = __webpack_require__(39);

  var _function2 = _interopRequireDefault(_function);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var styles = {
    base: {
      cursor: 'pointer',
      fontWeight: 'bold',
      borderRadius: 3,
      padding: 4,
      marginLeft: 3,
      marginRight: 3,
      marginTop: 5,
      marginBottom: 5,
      flexGrow: 1,
      display: 'inline-block',
      fontSize: '0.8em',
      color: 'white',
      textDecoration: 'none'
    }
  };

  var LogMonitorButton = function (_React$Component) {
    _inherits(LogMonitorButton, _React$Component);

    function LogMonitorButton(props) {
      _classCallCheck(this, LogMonitorButton);

      var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));

      _this.shouldComponentUpdate = _function2.default;

      _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);
      _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);
      _this.handleMouseDown = _this.handleMouseDown.bind(_this);
      _this.handleMouseUp = _this.handleMouseUp.bind(_this);
      _this.onClick = _this.onClick.bind(_this);

      _this.state = {
        hovered: false,
        active: false
      };
      return _this;
    }

    LogMonitorButton.prototype.handleMouseEnter = function handleMouseEnter() {
      this.setState({ hovered: true });
    };

    LogMonitorButton.prototype.handleMouseLeave = function handleMouseLeave() {
      this.setState({ hovered: false });
    };

    LogMonitorButton.prototype.handleMouseDown = function handleMouseDown() {
      this.setState({ active: true });
    };

    LogMonitorButton.prototype.handleMouseUp = function handleMouseUp() {
      this.setState({ active: false });
    };

    LogMonitorButton.prototype.onClick = function onClick() {
      if (!this.props.enabled) {
        return;
      }
      if (this.props.onClick) {
        this.props.onClick();
      }
    };

    LogMonitorButton.prototype.render = function render() {
      var style = _extends({}, styles.base, {
        backgroundColor: this.props.theme.base02
      });
      if (this.props.enabled && this.state.hovered) {
        style = _extends({}, style, {
          backgroundColor: (0, _brighten2.default)(this.props.theme.base02, 0.2)
        });
      }
      if (!this.props.enabled) {
        style = _extends({}, style, {
          opacity: 0.2,
          cursor: 'text',
          backgroundColor: 'transparent'
        });
      }
      return _react2.default.createElement('a', { onMouseEnter: this.handleMouseEnter,
        onMouseLeave: this.handleMouseLeave,
        onMouseDown: this.handleMouseDown,
        onMouseUp: this.handleMouseUp,
        onClick: this.onClick,
        style: style }, this.props.children);
    };

    return LogMonitorButton;
  }(_react2.default.Component);

  exports.default = LogMonitorButton;

  /***/
},
/* 566 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  exports.default = function (hexColor, lightness) {
    var hex = String(hexColor).replace(/[^0-9a-f]/gi, '');
    if (hex.length < 6) {
      hex = hex.replace(/(.)/g, '$1$1');
    }
    var lum = lightness || 0;

    var rgb = '#';
    var c = void 0;
    for (var i = 0; i < 3; ++i) {
      c = parseInt(hex.substr(i * 2, 2), 16);
      c = Math.round(Math.min(Math.max(0, c + c * lum), 255)).toString(16);
      rgb += ('00' + c).substr(c.length);
    }
    return rgb;
  };

  /***/
},
/* 567 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _LogMonitorEntry = __webpack_require__(568);

  var _LogMonitorEntry2 = _interopRequireDefault(_LogMonitorEntry);

  var _function = __webpack_require__(39);

  var _function2 = _interopRequireDefault(_function);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var LogMonitorEntryList = function (_Component) {
    _inherits(LogMonitorEntryList, _Component);

    function LogMonitorEntryList() {
      var _temp, _this, _ret;

      _classCallCheck(this, LogMonitorEntryList);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.shouldComponentUpdate = _function2.default, _temp), _possibleConstructorReturn(_this, _ret);
    }

    LogMonitorEntryList.prototype.render = function render() {
      var elements = [];
      var _props = this.props;
      var theme = _props.theme;
      var actionsById = _props.actionsById;
      var computedStates = _props.computedStates;
      var currentStateIndex = _props.currentStateIndex;
      var consecutiveToggleStartId = _props.consecutiveToggleStartId;
      var select = _props.select;
      var skippedActionIds = _props.skippedActionIds;
      var stagedActionIds = _props.stagedActionIds;
      var expandActionRoot = _props.expandActionRoot;
      var expandStateRoot = _props.expandStateRoot;
      var markStateDiff = _props.markStateDiff;
      var onActionClick = _props.onActionClick;
      var onActionShiftClick = _props.onActionShiftClick;

      for (var i = 0; i < stagedActionIds.length; i++) {
        var actionId = stagedActionIds[i];
        var action = actionsById[actionId].action;
        var _computedStates$i = computedStates[i];
        var state = _computedStates$i.state;
        var error = _computedStates$i.error;

        var previousState = void 0;
        if (i > 0) {
          previousState = computedStates[i - 1].state;
        }
        elements.push(_react2.default.createElement(_LogMonitorEntry2.default, { key: actionId,
          theme: theme,
          select: select,
          action: action,
          actionId: actionId,
          state: state,
          previousState: previousState,
          collapsed: skippedActionIds.indexOf(actionId) > -1,
          inFuture: i > currentStateIndex,
          selected: consecutiveToggleStartId === i,
          error: error,
          expandActionRoot: expandActionRoot,
          expandStateRoot: expandStateRoot,
          markStateDiff: markStateDiff,
          onActionClick: onActionClick,
          onActionShiftClick: onActionShiftClick }));
      }

      return _react2.default.createElement('div', null, elements);
    };

    return LogMonitorEntryList;
  }(_react.Component);

  LogMonitorEntryList.propTypes = {
    actionsById: _propTypes2.default.object,
    computedStates: _propTypes2.default.array,
    stagedActionIds: _propTypes2.default.array,
    skippedActionIds: _propTypes2.default.array,
    currentStateIndex: _propTypes2.default.number,
    consecutiveToggleStartId: _propTypes2.default.number,

    select: _propTypes2.default.func.isRequired,
    onActionClick: _propTypes2.default.func.isRequired,
    theme: _propTypes2.default.oneOfType([_propTypes2.default.object, _propTypes2.default.string]),
    expandActionRoot: _propTypes2.default.bool,
    expandStateRoot: _propTypes2.default.bool
  };
  exports.default = LogMonitorEntryList;

  /***/
},
/* 568 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _typeof = typeof Symbol === "function" && _typeof4(Symbol.iterator) === "symbol" ? function (obj) {
    return typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof4(obj);
  };

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _reactJsonTree = __webpack_require__(203);

  var _reactJsonTree2 = _interopRequireDefault(_reactJsonTree);

  var _LogMonitorEntryAction = __webpack_require__(635);

  var _LogMonitorEntryAction2 = _interopRequireDefault(_LogMonitorEntryAction);

  var _function = __webpack_require__(39);

  var _function2 = _interopRequireDefault(_function);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var styles = {
    entry: {
      display: 'block',
      WebkitUserSelect: 'none'
    },

    root: {
      marginLeft: 0
    }
  };

  var getDeepItem = function getDeepItem(data, path) {
    return path.reduce(function (obj, key) {
      return obj && obj[key];
    }, data);
  };
  var dataIsEqual = function dataIsEqual(data, previousData, keyPath) {
    var path = [].concat(keyPath).reverse().slice(1);

    return getDeepItem(data, path) === getDeepItem(previousData, path);
  };

  var LogMonitorEntry = function (_Component) {
    _inherits(LogMonitorEntry, _Component);

    function LogMonitorEntry(props) {
      _classCallCheck(this, LogMonitorEntry);

      var _this = _possibleConstructorReturn(this, _Component.call(this, props));

      _this.shouldComponentUpdate = _function2.default;

      _this.handleActionClick = _this.handleActionClick.bind(_this);
      _this.shouldExpandNode = _this.shouldExpandNode.bind(_this);
      return _this;
    }

    LogMonitorEntry.prototype.printState = function printState(state, error) {
      var _this2 = this;

      var errorText = error;
      if (!errorText) {
        try {
          var _ret = function () {
            var data = _this2.props.select(state);
            var theme = void 0;

            if (_this2.props.markStateDiff) {
              (function () {
                var previousData = typeof _this2.props.previousState !== 'undefined' ? _this2.props.select(_this2.props.previousState) : undefined;
                var getValueStyle = function getValueStyle(_ref, nodeType, keyPath) {
                  var style = _ref.style;
                  return {
                    style: _extends({}, style, {
                      backgroundColor: dataIsEqual(data, previousData, keyPath) ? 'transparent' : _this2.props.theme.base01
                    })
                  };
                };
                var getNestedNodeStyle = function getNestedNodeStyle(_ref2, keyPath) {
                  var style = _ref2.style;
                  return {
                    style: _extends({}, style, keyPath.length > 1 ? {} : styles.root)
                  };
                };
                theme = {
                  extend: _this2.props.theme,
                  tree: styles.tree,
                  value: getValueStyle,
                  nestedNode: getNestedNodeStyle
                };
              })();
            } else {
              theme = _this2.props.theme;
            }

            return {
              v: _react2.default.createElement(_reactJsonTree2.default, {
                theme: theme,
                data: data,
                invertTheme: false,
                keyPath: ['state'],
                shouldExpandNode: _this2.shouldExpandNode })
            };
          }();

          if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
        } catch (err) {
          errorText = 'Error selecting state.';
        }
      }

      return _react2.default.createElement('div', { style: {
          color: this.props.theme.base08,
          paddingTop: 20,
          paddingLeft: 30,
          paddingRight: 30,
          paddingBottom: 35
        } }, errorText);
    };

    LogMonitorEntry.prototype.handleActionClick = function handleActionClick(e) {
      var _props = this.props;
      var actionId = _props.actionId;
      var onActionClick = _props.onActionClick;
      var onActionShiftClick = _props.onActionShiftClick;

      if (actionId > 0) {
        if (e.shiftKey) {
          onActionShiftClick(actionId);
        } else {
          onActionClick(actionId);
        }
      }
    };

    LogMonitorEntry.prototype.shouldExpandNode = function shouldExpandNode(keyName, data, level) {
      return this.props.expandStateRoot && level === 0;
    };

    LogMonitorEntry.prototype.render = function render() {
      var _props2 = this.props;
      var actionId = _props2.actionId;
      var error = _props2.error;
      var action = _props2.action;
      var state = _props2.state;
      var collapsed = _props2.collapsed;
      var selected = _props2.selected;
      var inFuture = _props2.inFuture;

      var styleEntry = {
        opacity: collapsed ? 0.5 : 1,
        cursor: actionId > 0 ? 'pointer' : 'default'
      };

      return _react2.default.createElement('div', { style: {
          opacity: selected ? 0.4 : inFuture ? 0.6 : 1, // eslint-disable-line no-nested-ternary
          textDecoration: collapsed ? 'line-through' : 'none',
          color: this.props.theme.base06
        } }, _react2.default.createElement(_LogMonitorEntryAction2.default, {
        theme: this.props.theme,
        collapsed: collapsed,
        action: action,
        expandActionRoot: this.props.expandActionRoot,
        onClick: this.handleActionClick,
        style: _extends({}, styles.entry, styleEntry) }), !collapsed && _react2.default.createElement('div', { style: { paddingLeft: 16 } }, this.printState(state, error)));
    };

    return LogMonitorEntry;
  }(_react.Component);

  LogMonitorEntry.propTypes = {
    state: _propTypes2.default.object.isRequired,
    action: _propTypes2.default.object.isRequired,
    actionId: _propTypes2.default.number.isRequired,
    select: _propTypes2.default.func.isRequired,
    inFuture: _propTypes2.default.bool,
    error: _propTypes2.default.string,
    onActionClick: _propTypes2.default.func.isRequired,
    onActionShiftClick: _propTypes2.default.func.isRequired,
    collapsed: _propTypes2.default.bool,
    selected: _propTypes2.default.bool,
    expandActionRoot: _propTypes2.default.bool,
    expandStateRoot: _propTypes2.default.bool
  };
  exports.default = LogMonitorEntry;

  /***/
},
/* 569 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(103);
  __webpack_require__(115);
  module.exports = __webpack_require__(116).f('iterator');

  /***/
},
/* 570 */
/***/function (module, exports, __webpack_require__) {

  var toInteger = __webpack_require__(104);
  var defined = __webpack_require__(105);
  // true  -> String#at
  // false -> String#codePointAt
  module.exports = function (TO_STRING) {
    return function (that, pos) {
      var s = String(defined(that));
      var i = toInteger(pos);
      var l = s.length;
      var a, b;
      if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
      a = s.charCodeAt(i);
      return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
    };
  };

  /***/
},
/* 571 */
/***/function (module, exports) {

  module.exports = function (it) {
    if (typeof it != 'function') throw TypeError(it + ' is not a function!');
    return it;
  };

  /***/
},
/* 572 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  var create = __webpack_require__(108);
  var descriptor = __webpack_require__(61);
  var setToStringTag = __webpack_require__(113);
  var IteratorPrototype = {};

  // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
  __webpack_require__(27)(IteratorPrototype, __webpack_require__(11)('iterator'), function () {
    return this;
  });

  module.exports = function (Constructor, NAME, next) {
    Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
    setToStringTag(Constructor, NAME + ' Iterator');
  };

  /***/
},
/* 573 */
/***/function (module, exports, __webpack_require__) {

  var dP = __webpack_require__(28);
  var anObject = __webpack_require__(29);
  var getKeys = __webpack_require__(42);

  module.exports = __webpack_require__(31) ? Object.defineProperties : function defineProperties(O, Properties) {
    anObject(O);
    var keys = getKeys(Properties);
    var length = keys.length;
    var i = 0;
    var P;
    while (length > i) {
      dP.f(O, P = keys[i++], Properties[P]);
    }return O;
  };

  /***/
},
/* 574 */
/***/function (module, exports, __webpack_require__) {

  // false -> Array#indexOf
  // true  -> Array#includes
  var toIObject = __webpack_require__(33);
  var toLength = __webpack_require__(575);
  var toAbsoluteIndex = __webpack_require__(576);
  module.exports = function (IS_INCLUDES) {
    return function ($this, el, fromIndex) {
      var O = toIObject($this);
      var length = toLength(O.length);
      var index = toAbsoluteIndex(fromIndex, length);
      var value;
      // Array#includes uses SameValueZero equality algorithm
      // eslint-disable-next-line no-self-compare
      if (IS_INCLUDES && el != el) while (length > index) {
        value = O[index++];
        // eslint-disable-next-line no-self-compare
        if (value != value) return true;
        // Array#indexOf ignores holes, Array#includes - not
      } else for (; length > index; index++) {
        if (IS_INCLUDES || index in O) {
          if (O[index] === el) return IS_INCLUDES || index || 0;
        }
      }return !IS_INCLUDES && -1;
    };
  };

  /***/
},
/* 575 */
/***/function (module, exports, __webpack_require__) {

  // 7.1.15 ToLength
  var toInteger = __webpack_require__(104);
  var min = Math.min;
  module.exports = function (it) {
    return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
  };

  /***/
},
/* 576 */
/***/function (module, exports, __webpack_require__) {

  var toInteger = __webpack_require__(104);
  var max = Math.max;
  var min = Math.min;
  module.exports = function (index, length) {
    index = toInteger(index);
    return index < 0 ? max(index + length, 0) : min(index, length);
  };

  /***/
},
/* 577 */
/***/function (module, exports, __webpack_require__) {

  var document = __webpack_require__(14).document;
  module.exports = document && document.documentElement;

  /***/
},
/* 578 */
/***/function (module, exports, __webpack_require__) {

  // 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
  var has = __webpack_require__(22);
  var toObject = __webpack_require__(114);
  var IE_PROTO = __webpack_require__(110)('IE_PROTO');
  var ObjectProto = Object.prototype;

  module.exports = Object.getPrototypeOf || function (O) {
    O = toObject(O);
    if (has(O, IE_PROTO)) return O[IE_PROTO];
    if (typeof O.constructor == 'function' && O instanceof O.constructor) {
      return O.constructor.prototype;
    }return O instanceof Object ? ObjectProto : null;
  };

  /***/
},
/* 579 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  var addToUnscopables = __webpack_require__(580);
  var step = __webpack_require__(581);
  var Iterators = __webpack_require__(41);
  var toIObject = __webpack_require__(33);

  // 22.1.3.4 Array.prototype.entries()
  // 22.1.3.13 Array.prototype.keys()
  // 22.1.3.29 Array.prototype.values()
  // 22.1.3.30 Array.prototype[@@iterator]()
  module.exports = __webpack_require__(205)(Array, 'Array', function (iterated, kind) {
    this._t = toIObject(iterated); // target
    this._i = 0; // next index
    this._k = kind; // kind
    // 22.1.5.2.1 %ArrayIteratorPrototype%.next()
  }, function () {
    var O = this._t;
    var kind = this._k;
    var index = this._i++;
    if (!O || index >= O.length) {
      this._t = undefined;
      return step(1);
    }
    if (kind == 'keys') return step(0, index);
    if (kind == 'values') return step(0, O[index]);
    return step(0, [index, O[index]]);
  }, 'values');

  // argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
  Iterators.Arguments = Iterators.Array;

  addToUnscopables('keys');
  addToUnscopables('values');
  addToUnscopables('entries');

  /***/
},
/* 580 */
/***/function (module, exports) {

  module.exports = function () {/* empty */};

  /***/
},
/* 581 */
/***/function (module, exports) {

  module.exports = function (done, value) {
    return { value: value, done: !!done };
  };

  /***/
},
/* 582 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(583), __esModule: true };

  /***/
},
/* 583 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(584);
  __webpack_require__(588);
  __webpack_require__(589);
  __webpack_require__(590);
  module.exports = __webpack_require__(4).Symbol;

  /***/
},
/* 584 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  // ECMAScript 6 symbols shim

  var global = __webpack_require__(14);
  var has = __webpack_require__(22);
  var DESCRIPTORS = __webpack_require__(31);
  var $export = __webpack_require__(21);
  var redefine = __webpack_require__(209);
  var META = __webpack_require__(585).KEY;
  var $fails = __webpack_require__(32);
  var shared = __webpack_require__(111);
  var setToStringTag = __webpack_require__(113);
  var uid = __webpack_require__(62);
  var wks = __webpack_require__(11);
  var wksExt = __webpack_require__(116);
  var wksDefine = __webpack_require__(117);
  var enumKeys = __webpack_require__(586);
  var isArray = __webpack_require__(587);
  var anObject = __webpack_require__(29);
  var toIObject = __webpack_require__(33);
  var toPrimitive = __webpack_require__(107);
  var createDesc = __webpack_require__(61);
  var _create = __webpack_require__(108);
  var gOPNExt = __webpack_require__(212);
  var $GOPD = __webpack_require__(214);
  var $DP = __webpack_require__(28);
  var $keys = __webpack_require__(42);
  var gOPD = $GOPD.f;
  var dP = $DP.f;
  var gOPN = gOPNExt.f;
  var $Symbol = global.Symbol;
  var $JSON = global.JSON;
  var _stringify = $JSON && $JSON.stringify;
  var PROTOTYPE = 'prototype';
  var HIDDEN = wks('_hidden');
  var TO_PRIMITIVE = wks('toPrimitive');
  var isEnum = {}.propertyIsEnumerable;
  var SymbolRegistry = shared('symbol-registry');
  var AllSymbols = shared('symbols');
  var OPSymbols = shared('op-symbols');
  var ObjectProto = Object[PROTOTYPE];
  var USE_NATIVE = typeof $Symbol == 'function';
  var QObject = global.QObject;
  // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
  var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

  // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
  var setSymbolDesc = DESCRIPTORS && $fails(function () {
    return _create(dP({}, 'a', {
      get: function get() {
        return dP(this, 'a', { value: 7 }).a;
      }
    })).a != 7;
  }) ? function (it, key, D) {
    var protoDesc = gOPD(ObjectProto, key);
    if (protoDesc) delete ObjectProto[key];
    dP(it, key, D);
    if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
  } : dP;

  var wrap = function wrap(tag) {
    var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
    sym._k = tag;
    return sym;
  };

  var isSymbol = USE_NATIVE && _typeof4($Symbol.iterator) == 'symbol' ? function (it) {
    return (typeof it === "undefined" ? "undefined" : _typeof4(it)) == 'symbol';
  } : function (it) {
    return it instanceof $Symbol;
  };

  var $defineProperty = function defineProperty(it, key, D) {
    if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
    anObject(it);
    key = toPrimitive(key, true);
    anObject(D);
    if (has(AllSymbols, key)) {
      if (!D.enumerable) {
        if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
        it[HIDDEN][key] = true;
      } else {
        if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
        D = _create(D, { enumerable: createDesc(0, false) });
      }return setSymbolDesc(it, key, D);
    }return dP(it, key, D);
  };
  var $defineProperties = function defineProperties(it, P) {
    anObject(it);
    var keys = enumKeys(P = toIObject(P));
    var i = 0;
    var l = keys.length;
    var key;
    while (l > i) {
      $defineProperty(it, key = keys[i++], P[key]);
    }return it;
  };
  var $create = function create(it, P) {
    return P === undefined ? _create(it) : $defineProperties(_create(it), P);
  };
  var $propertyIsEnumerable = function propertyIsEnumerable(key) {
    var E = isEnum.call(this, key = toPrimitive(key, true));
    if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
    return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
  };
  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
    it = toIObject(it);
    key = toPrimitive(key, true);
    if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
    var D = gOPD(it, key);
    if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
    return D;
  };
  var $getOwnPropertyNames = function getOwnPropertyNames(it) {
    var names = gOPN(toIObject(it));
    var result = [];
    var i = 0;
    var key;
    while (names.length > i) {
      if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
    }return result;
  };
  var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
    var IS_OP = it === ObjectProto;
    var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
    var result = [];
    var i = 0;
    var key;
    while (names.length > i) {
      if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
    }return result;
  };

  // 19.4.1.1 Symbol([description])
  if (!USE_NATIVE) {
    $Symbol = function _Symbol10() {
      if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
      var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
      var $set = function $set(value) {
        if (this === ObjectProto) $set.call(OPSymbols, value);
        if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
        setSymbolDesc(this, tag, createDesc(1, value));
      };
      if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
      return wrap(tag);
    };
    redefine($Symbol[PROTOTYPE], 'toString', function toString() {
      return this._k;
    });

    $GOPD.f = $getOwnPropertyDescriptor;
    $DP.f = $defineProperty;
    __webpack_require__(213).f = gOPNExt.f = $getOwnPropertyNames;
    __webpack_require__(63).f = $propertyIsEnumerable;
    __webpack_require__(118).f = $getOwnPropertySymbols;

    if (DESCRIPTORS && !__webpack_require__(106)) {
      redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
    }

    wksExt.f = function (name) {
      return wrap(wks(name));
    };
  }

  $export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

  for (var es6Symbols =
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(','), j = 0; es6Symbols.length > j;) {
    wks(es6Symbols[j++]);
  }for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) {
    wksDefine(wellKnownSymbols[k++]);
  }$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
    // 19.4.2.1 Symbol.for(key)
    'for': function _for(key) {
      return has(SymbolRegistry, key += '') ? SymbolRegistry[key] : SymbolRegistry[key] = $Symbol(key);
    },
    // 19.4.2.5 Symbol.keyFor(sym)
    keyFor: function keyFor(sym) {
      if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
      for (var key in SymbolRegistry) {
        if (SymbolRegistry[key] === sym) return key;
      }
    },
    useSetter: function useSetter() {
      setter = true;
    },
    useSimple: function useSimple() {
      setter = false;
    }
  });

  $export($export.S + $export.F * !USE_NATIVE, 'Object', {
    // 19.1.2.2 Object.create(O [, Properties])
    create: $create,
    // 19.1.2.4 Object.defineProperty(O, P, Attributes)
    defineProperty: $defineProperty,
    // 19.1.2.3 Object.defineProperties(O, Properties)
    defineProperties: $defineProperties,
    // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
    // 19.1.2.7 Object.getOwnPropertyNames(O)
    getOwnPropertyNames: $getOwnPropertyNames,
    // 19.1.2.8 Object.getOwnPropertySymbols(O)
    getOwnPropertySymbols: $getOwnPropertySymbols
  });

  // 24.3.2 JSON.stringify(value [, replacer [, space]])
  $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
    var S = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    // WebKit converts symbol values to JSON as null
    // V8 throws on boxed symbols
    return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
  })), 'JSON', {
    stringify: function stringify(it) {
      if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      var args = [it];
      var i = 1;
      var replacer, $replacer;
      while (arguments.length > i) {
        args.push(arguments[i++]);
      }replacer = args[1];
      if (typeof replacer == 'function') $replacer = replacer;
      if ($replacer || !isArray(replacer)) replacer = function replacer(key, value) {
        if ($replacer) value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return _stringify.apply($JSON, args);
    }
  });

  // 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
  $Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(27)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
  // 19.4.3.5 Symbol.prototype[@@toStringTag]
  setToStringTag($Symbol, 'Symbol');
  // 20.2.1.9 Math[@@toStringTag]
  setToStringTag(Math, 'Math', true);
  // 24.3.3 JSON[@@toStringTag]
  setToStringTag(global.JSON, 'JSON', true);

  /***/
},
/* 585 */
/***/function (module, exports, __webpack_require__) {

  var META = __webpack_require__(62)('meta');
  var isObject = __webpack_require__(30);
  var has = __webpack_require__(22);
  var setDesc = __webpack_require__(28).f;
  var id = 0;
  var isExtensible = Object.isExtensible || function () {
    return true;
  };
  var FREEZE = !__webpack_require__(32)(function () {
    return isExtensible(Object.preventExtensions({}));
  });
  var setMeta = function setMeta(it) {
    setDesc(it, META, { value: {
        i: 'O' + ++id, // object ID
        w: {} // weak collections IDs
      } });
  };
  var fastKey = function fastKey(it, create) {
    // return primitive with prefix
    if (!isObject(it)) return (typeof it === "undefined" ? "undefined" : _typeof4(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
    if (!has(it, META)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return 'F';
      // not necessary to add metadata
      if (!create) return 'E';
      // add missing metadata
      setMeta(it);
      // return object ID
    }return it[META].i;
  };
  var getWeak = function getWeak(it, create) {
    if (!has(it, META)) {
      // can't set metadata to uncaught frozen object
      if (!isExtensible(it)) return true;
      // not necessary to add metadata
      if (!create) return false;
      // add missing metadata
      setMeta(it);
      // return hash weak collections IDs
    }return it[META].w;
  };
  // add metadata on freeze-family methods calling
  var onFreeze = function onFreeze(it) {
    if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
    return it;
  };
  var meta = module.exports = {
    KEY: META,
    NEED: false,
    fastKey: fastKey,
    getWeak: getWeak,
    onFreeze: onFreeze
  };

  /***/
},
/* 586 */
/***/function (module, exports, __webpack_require__) {

  // all enumerable object keys, includes symbols
  var getKeys = __webpack_require__(42);
  var gOPS = __webpack_require__(118);
  var pIE = __webpack_require__(63);
  module.exports = function (it) {
    var result = getKeys(it);
    var getSymbols = gOPS.f;
    if (getSymbols) {
      var symbols = getSymbols(it);
      var isEnum = pIE.f;
      var i = 0;
      var key;
      while (symbols.length > i) {
        if (isEnum.call(it, key = symbols[i++])) result.push(key);
      }
    }return result;
  };

  /***/
},
/* 587 */
/***/function (module, exports, __webpack_require__) {

  // 7.2.2 IsArray(argument)
  var cof = __webpack_require__(109);
  module.exports = Array.isArray || function isArray(arg) {
    return cof(arg) == 'Array';
  };

  /***/
},
/* 588 */
/***/function (module, exports) {

  /***/},
/* 589 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(117)('asyncIterator');

  /***/
},
/* 590 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(117)('observable');

  /***/
},
/* 591 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(592), __esModule: true };

  /***/
},
/* 592 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(593);
  module.exports = __webpack_require__(4).Object.setPrototypeOf;

  /***/
},
/* 593 */
/***/function (module, exports, __webpack_require__) {

  // 19.1.3.19 Object.setPrototypeOf(O, proto)
  var $export = __webpack_require__(21);
  $export($export.S, 'Object', { setPrototypeOf: __webpack_require__(594).set });

  /***/
},
/* 594 */
/***/function (module, exports, __webpack_require__) {

  // Works with __proto__ only. Old v8 can't work with null proto objects.
  /* eslint-disable no-proto */
  var isObject = __webpack_require__(30);
  var anObject = __webpack_require__(29);
  var check = function check(O, proto) {
    anObject(O);
    if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
  };
  module.exports = {
    set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(206)(Function.call, __webpack_require__(214).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) {
        buggy = true;
      }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
    check: check
  };

  /***/
},
/* 595 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(596), __esModule: true };

  /***/
},
/* 596 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(597);
  var $Object = __webpack_require__(4).Object;
  module.exports = function create(P, D) {
    return $Object.create(P, D);
  };

  /***/
},
/* 597 */
/***/function (module, exports, __webpack_require__) {

  var $export = __webpack_require__(21);
  // 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
  $export($export.S, 'Object', { create: __webpack_require__(108) });

  /***/
},
/* 598 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(599), __esModule: true };

  /***/
},
/* 599 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(600);
  module.exports = __webpack_require__(4).Object.assign;

  /***/
},
/* 600 */
/***/function (module, exports, __webpack_require__) {

  // 19.1.3.1 Object.assign(target, source)
  var $export = __webpack_require__(21);

  $export($export.S + $export.F, 'Object', { assign: __webpack_require__(601) });

  /***/
},
/* 601 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  // 19.1.2.1 Object.assign(target, source, ...)

  var getKeys = __webpack_require__(42);
  var gOPS = __webpack_require__(118);
  var pIE = __webpack_require__(63);
  var toObject = __webpack_require__(114);
  var IObject = __webpack_require__(211);
  var $assign = Object.assign;

  // should work with symbols and should have deterministic property order (V8 bug)
  module.exports = !$assign || __webpack_require__(32)(function () {
    var A = {};
    var B = {};
    // eslint-disable-next-line no-undef
    var S = Symbol();
    var K = 'abcdefghijklmnopqrst';
    A[S] = 7;
    K.split('').forEach(function (k) {
      B[k] = k;
    });
    return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
  }) ? function assign(target, source) {
    // eslint-disable-line no-unused-vars
    var T = toObject(target);
    var aLen = arguments.length;
    var index = 1;
    var getSymbols = gOPS.f;
    var isEnum = pIE.f;
    while (aLen > index) {
      var S = IObject(arguments[index++]);
      var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
      var length = keys.length;
      var j = 0;
      var key;
      while (length > j) {
        if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
      }
    }return T;
  } : $assign;

  /***/
},
/* 602 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(603);
  module.exports = __webpack_require__(4).Object.keys;

  /***/
},
/* 603 */
/***/function (module, exports, __webpack_require__) {

  // 19.1.2.14 Object.keys(O)
  var toObject = __webpack_require__(114);
  var $keys = __webpack_require__(42);

  __webpack_require__(215)('keys', function () {
    return function keys(it) {
      return $keys(toObject(it));
    };
  });

  /***/
},
/* 604 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _iterator = __webpack_require__(204);

  var _iterator2 = _interopRequireDefault(_iterator);

  exports['default'] = objType;

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  function objType(obj) {
    var type = Object.prototype.toString.call(obj).slice(8, -1);
    if (type === 'Object' && typeof obj[_iterator2['default']] === 'function') {
      return 'Iterable';
    }

    return type;
  }

  /***/
},
/* 605 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _objectWithoutProperties2 = __webpack_require__(40);

  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

  var _getOwnPropertyNames = __webpack_require__(217);

  var _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _JSONNestedNode = __webpack_require__(120);

  var _JSONNestedNode2 = _interopRequireDefault(_JSONNestedNode);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  // Returns the "n Items" string for this node,
  // generating and caching it if it hasn't been created yet.
  function createItemString(data) {
    var len = (0, _getOwnPropertyNames2['default'])(data).length;
    return len + ' ' + (len !== 1 ? 'keys' : 'key');
  }

  // Configures <JSONNestedNode> to render an Object
  var JSONObjectNode = function JSONObjectNode(_ref) {
    var data = _ref.data,
        props = (0, _objectWithoutProperties3['default'])(_ref, ['data']);
    return _react2['default'].createElement(_JSONNestedNode2['default'], (0, _extends3['default'])({}, props, {
      data: data,
      nodeType: 'Object',
      nodeTypeIndicator: props.nodeType === 'Error' ? 'Error()' : '{}',
      createItemString: createItemString,
      expandable: (0, _getOwnPropertyNames2['default'])(data).length > 0
    }));
  };

  JSONObjectNode.propTypes = {
    data: _propTypes2['default'].object,
    nodeType: _propTypes2['default'].string
  };

  exports['default'] = JSONObjectNode;

  /***/
},
/* 606 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(607);
  var $Object = __webpack_require__(4).Object;
  module.exports = function getOwnPropertyNames(it) {
    return $Object.getOwnPropertyNames(it);
  };

  /***/
},
/* 607 */
/***/function (module, exports, __webpack_require__) {

  // 19.1.2.7 Object.getOwnPropertyNames(O)
  __webpack_require__(215)('getOwnPropertyNames', function () {
    return __webpack_require__(212).f;
  });

  /***/
},
/* 608 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _getIterator2 = __webpack_require__(121);

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _getOwnPropertyNames = __webpack_require__(217);

  var _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);

  var _keys = __webpack_require__(64);

  var _keys2 = _interopRequireDefault(_keys);

  exports['default'] = getCollectionEntries;

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  function getLength(type, collection) {
    if (type === 'Object') {
      return (0, _keys2['default'])(collection).length;
    } else if (type === 'Array') {
      return collection.length;
    }

    return Infinity;
  }

  function isIterableMap(collection) {
    return typeof collection.set === 'function';
  }

  function getEntries(type, collection, sortObjectKeys) {
    var from = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
    var to = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : Infinity;

    var res = void 0;

    if (type === 'Object') {
      var keys = (0, _getOwnPropertyNames2['default'])(collection);

      if (typeof sortObjectKeys !== 'undefined') {
        keys.sort(sortObjectKeys);
      }

      keys = keys.slice(from, to + 1);

      res = {
        entries: keys.map(function (key) {
          return { key: key, value: collection[key] };
        })
      };
    } else if (type === 'Array') {
      res = {
        entries: collection.slice(from, to + 1).map(function (val, idx) {
          return { key: idx + from, value: val };
        })
      };
    } else {
      var idx = 0;
      var entries = [];
      var done = true;

      var isMap = isIterableMap(collection);

      for (var _iterator = collection, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3['default'])(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var item = _ref;

        if (idx > to) {
          done = false;
          break;
        }if (from <= idx) {
          if (isMap && Array.isArray(item)) {
            if (typeof item[0] === 'string' || typeof item[0] === 'number') {
              entries.push({ key: item[0], value: item[1] });
            } else {
              entries.push({ key: '[entry ' + idx + ']', value: {
                  '[key]': item[0],
                  '[value]': item[1]
                } });
            }
          } else {
            entries.push({ key: idx, value: item });
          }
        }
        idx++;
      }

      res = {
        hasMore: !done,
        entries: entries
      };
    }

    return res;
  }

  function getRanges(from, to, limit) {
    var ranges = [];
    while (to - from > limit * limit) {
      limit = limit * limit;
    }
    for (var i = from; i <= to; i += limit) {
      ranges.push({ from: i, to: Math.min(to, i + limit - 1) });
    }

    return ranges;
  }

  function getCollectionEntries(type, collection, sortObjectKeys, limit) {
    var from = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    var to = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Infinity;

    var getEntriesBound = getEntries.bind(null, type, collection, sortObjectKeys);

    if (!limit) {
      return getEntriesBound().entries;
    }

    var isSubset = to < Infinity;
    var length = Math.min(to - from, getLength(type, collection));

    if (type !== 'Iterable') {
      if (length <= limit || limit < 7) {
        return getEntriesBound(from, to).entries;
      }
    } else {
      if (length <= limit && !isSubset) {
        return getEntriesBound(from, to).entries;
      }
    }

    var limitedEntries = void 0;
    if (type === 'Iterable') {
      var _getEntriesBound = getEntriesBound(from, from + limit - 1),
          hasMore = _getEntriesBound.hasMore,
          entries = _getEntriesBound.entries;

      limitedEntries = hasMore ? [].concat(entries, getRanges(from + limit, from + 2 * limit - 1, limit)) : entries;
    } else {
      limitedEntries = isSubset ? getRanges(from, to, limit) : [].concat(getEntriesBound(0, limit - 5).entries, getRanges(limit - 4, length - 5, limit), getEntriesBound(length - 4, length - 1).entries);
    }

    return limitedEntries;
  }

  /***/
},
/* 609 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(115);
  __webpack_require__(103);
  module.exports = __webpack_require__(610);

  /***/
},
/* 610 */
/***/function (module, exports, __webpack_require__) {

  var anObject = __webpack_require__(29);
  var get = __webpack_require__(611);
  module.exports = __webpack_require__(4).getIterator = function (it) {
    var iterFn = get(it);
    if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');
    return anObject(iterFn.call(it));
  };

  /***/
},
/* 611 */
/***/function (module, exports, __webpack_require__) {

  var classof = __webpack_require__(219);
  var ITERATOR = __webpack_require__(11)('iterator');
  var Iterators = __webpack_require__(41);
  module.exports = __webpack_require__(4).getIteratorMethod = function (it) {
    if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
  };

  /***/
},
/* 612 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = undefined;

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _classCallCheck2 = __webpack_require__(100);

  var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

  var _possibleConstructorReturn2 = __webpack_require__(101);

  var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

  var _inherits2 = __webpack_require__(119);

  var _inherits3 = _interopRequireDefault(_inherits2);

  var _class, _temp;

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _JSONArrow = __webpack_require__(218);

  var _JSONArrow2 = _interopRequireDefault(_JSONArrow);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var ItemRange = (_temp = _class = function (_React$Component) {
    (0, _inherits3['default'])(ItemRange, _React$Component);

    function ItemRange(props) {
      (0, _classCallCheck3['default'])(this, ItemRange);

      var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));

      _this.state = { expanded: false };

      _this.handleClick = _this.handleClick.bind(_this);
      return _this;
    }

    ItemRange.prototype.render = function render() {
      var _props = this.props,
          styling = _props.styling,
          from = _props.from,
          to = _props.to,
          renderChildNodes = _props.renderChildNodes,
          nodeType = _props.nodeType;

      return this.state.expanded ? _react2['default'].createElement('div', styling('itemRange', this.state.expanded), renderChildNodes(this.props, from, to)) : _react2['default'].createElement('div', (0, _extends3['default'])({}, styling('itemRange', this.state.expanded), {
        onClick: this.handleClick
      }), _react2['default'].createElement(_JSONArrow2['default'], {
        nodeType: nodeType,
        styling: styling,
        expanded: false,
        onClick: this.handleClick,
        arrowStyle: 'double'
      }), from + ' ... ' + to);
    };

    ItemRange.prototype.handleClick = function handleClick() {
      this.setState({ expanded: !this.state.expanded });
    };

    return ItemRange;
  }(_react2['default'].Component), _class.propTypes = {
    styling: _propTypes2['default'].func.isRequired,
    from: _propTypes2['default'].number.isRequired,
    to: _propTypes2['default'].number.isRequired,
    renderChildNodes: _propTypes2['default'].func.isRequired,
    nodeType: _propTypes2['default'].string.isRequired
  }, _temp);
  exports['default'] = ItemRange;

  /***/
},
/* 613 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _objectWithoutProperties2 = __webpack_require__(40);

  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _JSONNestedNode = __webpack_require__(120);

  var _JSONNestedNode2 = _interopRequireDefault(_JSONNestedNode);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  // Returns the "n Items" string for this node,
  // generating and caching it if it hasn't been created yet.
  function createItemString(data) {
    return data.length + ' ' + (data.length !== 1 ? 'items' : 'item');
  }

  // Configures <JSONNestedNode> to render an Array
  var JSONArrayNode = function JSONArrayNode(_ref) {
    var data = _ref.data,
        props = (0, _objectWithoutProperties3['default'])(_ref, ['data']);
    return _react2['default'].createElement(_JSONNestedNode2['default'], (0, _extends3['default'])({}, props, {
      data: data,
      nodeType: 'Array',
      nodeTypeIndicator: '[]',
      createItemString: createItemString,
      expandable: data.length > 0
    }));
  };

  JSONArrayNode.propTypes = {
    data: _propTypes2['default'].array
  };

  exports['default'] = JSONArrayNode;

  /***/
},
/* 614 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _objectWithoutProperties2 = __webpack_require__(40);

  var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

  var _getIterator2 = __webpack_require__(121);

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  var _isSafeInteger = __webpack_require__(615);

  var _isSafeInteger2 = _interopRequireDefault(_isSafeInteger);

  exports['default'] = JSONIterableNode;

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _JSONNestedNode = __webpack_require__(120);

  var _JSONNestedNode2 = _interopRequireDefault(_JSONNestedNode);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  // Returns the "n Items" string for this node,
  // generating and caching it if it hasn't been created yet.
  function createItemString(data, limit) {
    var count = 0;
    var hasMore = false;
    if ((0, _isSafeInteger2['default'])(data.size)) {
      count = data.size;
    } else {
      for (var _iterator = data, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3['default'])(_iterator);;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var entry = _ref;
        // eslint-disable-line no-unused-vars
        if (limit && count + 1 > limit) {
          hasMore = true;
          break;
        }
        count += 1;
      }
    }
    return '' + (hasMore ? '>' : '') + count + ' ' + (count !== 1 ? 'entries' : 'entry');
  }

  // Configures <JSONNestedNode> to render an iterable
  function JSONIterableNode(_ref2) {
    var props = (0, _objectWithoutProperties3['default'])(_ref2, []);

    return _react2['default'].createElement(_JSONNestedNode2['default'], (0, _extends3['default'])({}, props, {
      nodeType: 'Iterable',
      nodeTypeIndicator: '()',
      createItemString: createItemString
    }));
  }

  /***/
},
/* 615 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(616), __esModule: true };

  /***/
},
/* 616 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(617);
  module.exports = __webpack_require__(4).Number.isSafeInteger;

  /***/
},
/* 617 */
/***/function (module, exports, __webpack_require__) {

  // 20.1.2.5 Number.isSafeInteger(number)
  var $export = __webpack_require__(21);
  var isInteger = __webpack_require__(618);
  var abs = Math.abs;

  $export($export.S, 'Number', {
    isSafeInteger: function isSafeInteger(number) {
      return isInteger(number) && abs(number) <= 0x1fffffffffffff;
    }
  });

  /***/
},
/* 618 */
/***/function (module, exports, __webpack_require__) {

  // 20.1.2.3 Number.isInteger(number)
  var isObject = __webpack_require__(30);
  var floor = Math.floor;
  module.exports = function isInteger(it) {
    return !isObject(it) && isFinite(it) && floor(it) === it;
  };

  /***/
},
/* 619 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  /**
   * Renders simple values (eg. strings, numbers, booleans, etc)
   */

  var JSONValueNode = function JSONValueNode(_ref) {
    var nodeType = _ref.nodeType,
        styling = _ref.styling,
        labelRenderer = _ref.labelRenderer,
        keyPath = _ref.keyPath,
        valueRenderer = _ref.valueRenderer,
        value = _ref.value,
        valueGetter = _ref.valueGetter;
    return _react2['default'].createElement('li', styling('value', nodeType, keyPath), _react2['default'].createElement('label', styling(['label', 'valueLabel'], nodeType, keyPath), labelRenderer(keyPath, nodeType, false, false)), _react2['default'].createElement('span', styling('valueText', nodeType, keyPath), valueRenderer.apply(undefined, [valueGetter(value), value].concat(keyPath))));
  };

  JSONValueNode.propTypes = {
    nodeType: _propTypes2['default'].string.isRequired,
    styling: _propTypes2['default'].func.isRequired,
    labelRenderer: _propTypes2['default'].func.isRequired,
    keyPath: _propTypes2['default'].arrayOf(_propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].number])).isRequired,
    valueRenderer: _propTypes2['default'].func.isRequired,
    value: _propTypes2['default'].any,
    valueGetter: _propTypes2['default'].func
  };

  JSONValueNode.defaultProps = {
    valueGetter: function valueGetter(value) {
      return value;
    }
  };

  exports['default'] = JSONValueNode;

  /***/
},
/* 620 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends2 = __webpack_require__(7);

  var _extends3 = _interopRequireDefault(_extends2);

  var _solarized = __webpack_require__(621);

  var _solarized2 = _interopRequireDefault(_solarized);

  var _reactBase16Styling = __webpack_require__(220);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { 'default': obj };
  }

  var colorMap = function colorMap(theme) {
    return {
      BACKGROUND_COLOR: theme.base00,
      TEXT_COLOR: theme.base07,
      STRING_COLOR: theme.base0B,
      DATE_COLOR: theme.base0B,
      NUMBER_COLOR: theme.base09,
      BOOLEAN_COLOR: theme.base09,
      NULL_COLOR: theme.base08,
      UNDEFINED_COLOR: theme.base08,
      FUNCTION_COLOR: theme.base08,
      SYMBOL_COLOR: theme.base08,
      LABEL_COLOR: theme.base0D,
      ARROW_COLOR: theme.base0D,
      ITEM_STRING_COLOR: theme.base0B,
      ITEM_STRING_EXPANDED_COLOR: theme.base03
    };
  };

  var valueColorMap = function valueColorMap(colors) {
    return {
      String: colors.STRING_COLOR,
      Date: colors.DATE_COLOR,
      Number: colors.NUMBER_COLOR,
      Boolean: colors.BOOLEAN_COLOR,
      Null: colors.NULL_COLOR,
      Undefined: colors.UNDEFINED_COLOR,
      Function: colors.FUNCTION_COLOR,
      Symbol: colors.SYMBOL_COLOR
    };
  };

  var getDefaultThemeStyling = function getDefaultThemeStyling(theme) {
    var colors = colorMap(theme);

    return {
      tree: {
        border: 0,
        padding: 0,
        marginTop: '0.5em',
        marginBottom: '0.5em',
        marginLeft: '0.125em',
        marginRight: 0,
        listStyle: 'none',
        MozUserSelect: 'none',
        WebkitUserSelect: 'none',
        backgroundColor: colors.BACKGROUND_COLOR
      },

      value: function value(_ref, nodeType, keyPath) {
        var style = _ref.style;
        return {
          style: (0, _extends3['default'])({}, style, {
            paddingTop: '0.25em',
            paddingRight: 0,
            marginLeft: '0.875em',
            WebkitUserSelect: 'text',
            MozUserSelect: 'text',
            wordWrap: 'break-word',
            paddingLeft: keyPath.length > 1 ? '2.125em' : '1.25em',
            textIndent: '-0.5em',
            wordBreak: 'break-all'
          })
        };
      },

      label: {
        display: 'inline-block',
        color: colors.LABEL_COLOR
      },

      valueLabel: {
        margin: '0 0.5em 0 0'
      },

      valueText: function valueText(_ref2, nodeType) {
        var style = _ref2.style;
        return {
          style: (0, _extends3['default'])({}, style, {
            color: valueColorMap(colors)[nodeType]
          })
        };
      },

      itemRange: function itemRange(_ref3, expanded) {
        var style = _ref3.style;
        return {
          style: {
            paddingTop: expanded ? 0 : '0.25em',
            cursor: 'pointer',
            color: colors.LABEL_COLOR
          }
        };
      },

      arrow: function arrow(_ref4, nodeType, expanded) {
        var style = _ref4.style;
        return {
          style: (0, _extends3['default'])({}, style, {
            marginLeft: 0,
            transition: '150ms',
            WebkitTransition: '150ms',
            MozTransition: '150ms',
            WebkitTransform: expanded ? 'rotateZ(90deg)' : 'rotateZ(0deg)',
            MozTransform: expanded ? 'rotateZ(90deg)' : 'rotateZ(0deg)',
            transform: expanded ? 'rotateZ(90deg)' : 'rotateZ(0deg)',
            transformOrigin: '45% 50%',
            WebkitTransformOrigin: '45% 50%',
            MozTransformOrigin: '45% 50%',
            position: 'relative',
            lineHeight: '1.1em',
            fontSize: '0.75em'
          })
        };
      },

      arrowContainer: function arrowContainer(_ref5, arrowStyle) {
        var style = _ref5.style;
        return {
          style: (0, _extends3['default'])({}, style, {
            display: 'inline-block',
            paddingRight: '0.5em',
            paddingLeft: arrowStyle === 'double' ? '1em' : 0,
            cursor: 'pointer'
          })
        };
      },

      arrowSign: {
        color: colors.ARROW_COLOR
      },

      arrowSignInner: {
        position: 'absolute',
        top: 0,
        left: '-0.4em'
      },

      nestedNode: function nestedNode(_ref6, keyPath, nodeType, expanded, expandable) {
        var style = _ref6.style;
        return {
          style: (0, _extends3['default'])({}, style, {
            position: 'relative',
            paddingTop: '0.25em',
            marginLeft: keyPath.length > 1 ? '0.875em' : 0,
            paddingLeft: !expandable ? '1.125em' : 0
          })
        };
      },

      rootNode: {
        padding: 0,
        margin: 0
      },

      nestedNodeLabel: function nestedNodeLabel(_ref7, keyPath, nodeType, expanded, expandable) {
        var style = _ref7.style;
        return {
          style: (0, _extends3['default'])({}, style, {
            margin: 0,
            padding: 0,
            WebkitUserSelect: expandable ? 'inherit' : 'text',
            MozUserSelect: expandable ? 'inherit' : 'text',
            cursor: expandable ? 'pointer' : 'default'
          })
        };
      },

      nestedNodeItemString: function nestedNodeItemString(_ref8, keyPath, nodeType, expanded) {
        var style = _ref8.style;
        return {
          style: (0, _extends3['default'])({}, style, {
            paddingLeft: '0.5em',
            cursor: 'default',
            color: expanded ? colors.ITEM_STRING_EXPANDED_COLOR : colors.ITEM_STRING_COLOR
          })
        };
      },

      nestedNodeItemType: {
        marginLeft: '0.3em',
        marginRight: '0.3em'
      },

      nestedNodeChildren: function nestedNodeChildren(_ref9, nodeType, expanded) {
        var style = _ref9.style;
        return {
          style: (0, _extends3['default'])({}, style, {
            padding: 0,
            margin: 0,
            listStyle: 'none',
            display: expanded ? 'block' : 'none'
          })
        };
      },

      rootNodeChildren: {
        padding: 0,
        margin: 0,
        listStyle: 'none'
      }
    };
  };

  exports['default'] = (0, _reactBase16Styling.createStyling)(getDefaultThemeStyling, {
    defaultBase16: _solarized2['default']
  });

  /***/
},
/* 621 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports['default'] = {
    scheme: 'solarized',
    author: 'ethan schoonover (http://ethanschoonover.com/solarized)',
    base00: '#002b36',
    base01: '#073642',
    base02: '#586e75',
    base03: '#657b83',
    base04: '#839496',
    base05: '#93a1a1',
    base06: '#eee8d5',
    base07: '#fdf6e3',
    base08: '#dc322f',
    base09: '#cb4b16',
    base0A: '#b58900',
    base0B: '#859900',
    base0C: '#2aa198',
    base0D: '#268bd2',
    base0E: '#6c71c4',
    base0F: '#d33682'
  };

  /***/
},
/* 622 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _isIterable2 = __webpack_require__(623);

  var _isIterable3 = _interopRequireDefault(_isIterable2);

  var _getIterator2 = __webpack_require__(121);

  var _getIterator3 = _interopRequireDefault(_getIterator2);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = function () {
    function sliceIterator(arr, i) {
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if ((0, _isIterable3.default)(Object(arr))) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();

  /***/
},
/* 623 */
/***/function (module, exports, __webpack_require__) {

  module.exports = { "default": __webpack_require__(624), __esModule: true };

  /***/
},
/* 624 */
/***/function (module, exports, __webpack_require__) {

  __webpack_require__(115);
  __webpack_require__(103);
  module.exports = __webpack_require__(625);

  /***/
},
/* 625 */
/***/function (module, exports, __webpack_require__) {

  var classof = __webpack_require__(219);
  var ITERATOR = __webpack_require__(11)('iterator');
  var Iterators = __webpack_require__(41);
  module.exports = __webpack_require__(4).isIterable = function (it) {
    var O = Object(it);
    return O[ITERATOR] !== undefined || '@@iterator' in O
    // eslint-disable-next-line no-prototype-builtins
    || Iterators.hasOwnProperty(classof(O));
  };

  /***/
},
/* 626 */
/***/function (module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function (global) {
    /**
    * lodash (Custom Build) <https://lodash.com/>
    * Build: `lodash modularize exports="npm" -o ./`
    * Copyright jQuery Foundation and other contributors <https://jquery.org/>
    * Released under MIT license <https://lodash.com/license>
    * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
    * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
    */

    /** Used as the `TypeError` message for "Functions" methods. */
    var FUNC_ERROR_TEXT = 'Expected a function';

    /** Used as the internal argument placeholder. */
    var PLACEHOLDER = '__lodash_placeholder__';

    /** Used to compose bitmasks for function metadata. */
    var BIND_FLAG = 1,
        BIND_KEY_FLAG = 2,
        CURRY_BOUND_FLAG = 4,
        CURRY_FLAG = 8,
        CURRY_RIGHT_FLAG = 16,
        PARTIAL_FLAG = 32,
        PARTIAL_RIGHT_FLAG = 64,
        ARY_FLAG = 128,
        REARG_FLAG = 256,
        FLIP_FLAG = 512;

    /** Used as references for various `Number` constants. */
    var INFINITY = 1 / 0,
        MAX_SAFE_INTEGER = 9007199254740991,
        MAX_INTEGER = 1.7976931348623157e+308,
        NAN = 0 / 0;

    /** Used to associate wrap methods with their bit flags. */
    var wrapFlags = [['ary', ARY_FLAG], ['bind', BIND_FLAG], ['bindKey', BIND_KEY_FLAG], ['curry', CURRY_FLAG], ['curryRight', CURRY_RIGHT_FLAG], ['flip', FLIP_FLAG], ['partial', PARTIAL_FLAG], ['partialRight', PARTIAL_RIGHT_FLAG], ['rearg', REARG_FLAG]];

    /** `Object#toString` result references. */
    var funcTag = '[object Function]',
        genTag = '[object GeneratorFunction]',
        symbolTag = '[object Symbol]';

    /**
     * Used to match `RegExp`
     * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
     */
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

    /** Used to match leading and trailing whitespace. */
    var reTrim = /^\s+|\s+$/g;

    /** Used to match wrap detail comments. */
    var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
        reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
        reSplitDetails = /,? & /;

    /** Used to detect bad signed hexadecimal string values. */
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

    /** Used to detect binary string values. */
    var reIsBinary = /^0b[01]+$/i;

    /** Used to detect host constructors (Safari). */
    var reIsHostCtor = /^\[object .+?Constructor\]$/;

    /** Used to detect octal string values. */
    var reIsOctal = /^0o[0-7]+$/i;

    /** Used to detect unsigned integer values. */
    var reIsUint = /^(?:0|[1-9]\d*)$/;

    /** Built-in method references without a dependency on `root`. */
    var freeParseInt = parseInt;

    /** Detect free variable `global` from Node.js. */
    var freeGlobal = (typeof global === "undefined" ? "undefined" : _typeof4(global)) == 'object' && global && global.Object === Object && global;

    /** Detect free variable `self`. */
    var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof4(self)) == 'object' && self && self.Object === Object && self;

    /** Used as a reference to the global object. */
    var root = freeGlobal || freeSelf || Function('return this')();

    /**
     * A faster alternative to `Function#apply`, this function invokes `func`
     * with the `this` binding of `thisArg` and the arguments of `args`.
     *
     * @private
     * @param {Function} func The function to invoke.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} args The arguments to invoke `func` with.
     * @returns {*} Returns the result of `func`.
     */
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }

    /**
     * A specialized version of `_.forEach` for arrays without support for
     * iteratee shorthands.
     *
     * @private
     * @param {Array} [array] The array to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns `array`.
     */
    function arrayEach(array, iteratee) {
      var index = -1,
          length = array ? array.length : 0;

      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }

    /**
     * A specialized version of `_.includes` for arrays without support for
     * specifying an index to search from.
     *
     * @private
     * @param {Array} [array] The array to inspect.
     * @param {*} target The value to search for.
     * @returns {boolean} Returns `true` if `target` is found, else `false`.
     */
    function arrayIncludes(array, value) {
      var length = array ? array.length : 0;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }

    /**
     * The base implementation of `_.findIndex` and `_.findLastIndex` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} predicate The function invoked per iteration.
     * @param {number} fromIndex The index to search from.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length,
          index = fromIndex + (fromRight ? 1 : -1);

      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} fromIndex The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function baseIndexOf(array, value, fromIndex) {
      if (value !== value) {
        return baseFindIndex(array, baseIsNaN, fromIndex);
      }
      var index = fromIndex - 1,
          length = array.length;

      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    /**
     * The base implementation of `_.isNaN` without support for number objects.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     */
    function baseIsNaN(value) {
      return value !== value;
    }

    /**
     * Gets the number of `placeholder` occurrences in `array`.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} placeholder The placeholder to search for.
     * @returns {number} Returns the placeholder count.
     */
    function countHolders(array, placeholder) {
      var length = array.length,
          result = 0;

      while (length--) {
        if (array[length] === placeholder) {
          result++;
        }
      }
      return result;
    }

    /**
     * Gets the value at `key` of `object`.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function getValue(object, key) {
      return object == null ? undefined : object[key];
    }

    /**
     * Checks if `value` is a host object in IE < 9.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
     */
    function isHostObject(value) {
      // Many host objects are `Object` objects that can coerce to strings
      // despite having improperly defined `toString` methods.
      var result = false;
      if (value != null && typeof value.toString != 'function') {
        try {
          result = !!(value + '');
        } catch (e) {}
      }
      return result;
    }

    /**
     * Replaces all `placeholder` elements in `array` with an internal placeholder
     * and returns an array of their indexes.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {*} placeholder The placeholder to replace.
     * @returns {Array} Returns the new array of placeholder indexes.
     */
    function replaceHolders(array, placeholder) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value === placeholder || value === PLACEHOLDER) {
          array[index] = PLACEHOLDER;
          result[resIndex++] = index;
        }
      }
      return result;
    }

    /** Used for built-in method references. */
    var funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = root['__core-js_shared__'];

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = function () {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? 'Symbol(src)_1.' + uid : '';
    }();

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var objectToString = objectProto.toString;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

    /** Built-in value references. */
    var objectCreate = Object.create;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax = Math.max,
        nativeMin = Math.min;

    /* Used to set `toString` methods. */
    var defineProperty = function () {
      var func = getNative(Object, 'defineProperty'),
          name = getNative.name;

      return name && name.length > 2 ? func : undefined;
    }();

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} prototype The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    function baseCreate(proto) {
      return isObject(proto) ? objectCreate(proto) : {};
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function () {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0:
            return new Ctor();
          case 1:
            return new Ctor(args[0]);
          case 2:
            return new Ctor(args[0], args[1]);
          case 3:
            return new Ctor(args[0], args[1], args[2]);
          case 4:
            return new Ctor(args[0], args[1], args[2], args[3]);
          case 5:
            return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7:
            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
        }
        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & ARY_FLAG,
          isBind = bitmask & BIND_FLAG,
          isBindKey = bitmask & BIND_KEY_FLAG,
          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
          isFlip = bitmask & FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = this && this !== root && this instanceof wrapper ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG;
      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);

      if (!(bitmask & CURRY_BOUND_FLAG)) {
        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
      }

      var result = wrapFunc(func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity);
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *  The bitmask may be composed of the following flags:
     *     1 - `_.bind`
     *     2 - `_.bindKey`
     *     4 - `_.curry` or `_.curryRight` of a bound function
     *     8 - `_.curry`
     *    16 - `_.curryRight`
     *    32 - `_.partial`
     *    64 - `_.partialRight`
     *   128 - `_.rearg`
     *   256 - `_.ary`
     *   512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }

      var newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];

      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] == null ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = func;
      return object.placeholder;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length,
          lastIndex = length - 1;

      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    var setWrapToString = !defineProperty ? identity : function (wrapper, reference, bitmask) {
      var source = reference + '';
      return defineProperty(wrapper, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)))
      });
    };

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to process.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return func + '';
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function (pair) {
        var value = '_.' + pair[0];
        if (bitmask & pair[1] && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 8-9 which returns 'object' for typed array and other constructors.
      var tag = isObject(value) ? objectToString.call(value) : '';
      return tag == funcTag || tag == genTag;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
      return !!value && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return !!value && (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'object';
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? remainder ? result - remainder : result : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? other + '' : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function () {
        return value;
      };
    }

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    // Assign default placeholders.
    curry.placeholder = {};

    module.exports = curry;

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(16));

  /***/
},
/* 627 */
/***/function (module, exports, __webpack_require__) {

  var clamp = __webpack_require__(122);

  function componentToHex(c) {
    var value = Math.round(clamp(c, 0, 255));
    var hex = value.toString(16);

    return hex.length == 1 ? "0" + hex : hex;
  }

  function rgb2hex(rgb) {
    var alpha = rgb.length === 4 ? componentToHex(rgb[3] * 255) : "";

    return "#" + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]) + alpha;
  }

  module.exports = rgb2hex;

  /***/
},
/* 628 */
/***/function (module, exports, __webpack_require__) {

  var hsl = __webpack_require__(629);
  var hex = __webpack_require__(630);
  var rgb = __webpack_require__(631);
  var hsl2rgb = __webpack_require__(632);

  function hsl2rgbParse(color) {
    var h = hsl(color);
    var r = hsl2rgb(h);

    // handle alpha since hsl2rgb doesn't know (or care!) about it
    if (h.length === 4) {
      r.push(h[3]);
    }

    return r;
  }

  var space2parser = {
    "#": hex,
    "hsl": hsl2rgbParse,
    "rgb": rgb
  };

  function parse(color) {
    for (var scheme in space2parser) {
      if (color.indexOf(scheme) === 0) {
        return space2parser[scheme](color);
      }
    }
  }

  parse.rgb = rgb;
  parse.hsl = hsl;
  parse.hex = hex;

  module.exports = parse;

  /***/
},
/* 629 */
/***/function (module, exports, __webpack_require__) {

  var extractComponents = __webpack_require__(221);
  var clamp = __webpack_require__(122);

  function parseHslComponent(component, i) {
    component = parseFloat(component);

    switch (i) {
      case 0:
        return clamp(component, 0, 360);
      case 1:
      case 2:
        return clamp(component, 0, 100);
      case 3:
        return clamp(component, 0, 1);
    }
  }

  function hsl(color) {
    return extractComponents(color).map(parseHslComponent);
  }

  module.exports = hsl;

  /***/
},
/* 630 */
/***/function (module, exports) {

  function expand(hex) {
    var result = "#";

    for (var i = 1; i < hex.length; i++) {
      var val = hex.charAt(i);
      result += val + val;
    }

    return result;
  }

  function hex(hex) {
    // #RGB or #RGBA
    if (hex.length === 4 || hex.length === 5) {
      hex = expand(hex);
    }

    var rgb = [parseInt(hex.substring(1, 3), 16), parseInt(hex.substring(3, 5), 16), parseInt(hex.substring(5, 7), 16)];

    // #RRGGBBAA
    if (hex.length === 9) {
      var alpha = parseFloat((parseInt(hex.substring(7, 9), 16) / 255).toFixed(2));
      rgb.push(alpha);
    }

    return rgb;
  }

  module.exports = hex;

  /***/
},
/* 631 */
/***/function (module, exports, __webpack_require__) {

  var extractComponents = __webpack_require__(221);
  var clamp = __webpack_require__(122);

  function parseRgbComponent(component, i) {
    if (i < 3) {
      if (component.indexOf('%') != -1) {
        return Math.round(255 * clamp(parseInt(component, 10), 0, 100) / 100);
      } else {
        return clamp(parseInt(component, 10), 0, 255);
      }
    } else {
      return clamp(parseFloat(component), 0, 1);
    }
  }

  function rgb(color) {
    return extractComponents(color).map(parseRgbComponent);
  }

  module.exports = rgb;

  /***/
},
/* 632 */
/***/function (module, exports) {

  function hsl2rgb(hsl) {
    var h = hsl[0] / 360,
        s = hsl[1] / 100,
        l = hsl[2] / 100,
        t1,
        t2,
        t3,
        rgb,
        val;

    if (s == 0) {
      val = l * 255;
      return [val, val, val];
    }

    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;
    t1 = 2 * l - t2;

    rgb = [0, 0, 0];
    for (var i = 0; i < 3; i++) {
      t3 = h + 1 / 3 * -(i - 1);
      t3 < 0 && t3++;
      t3 > 1 && t3--;

      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;

      rgb[i] = val * 255;
    }

    return rgb;
  }

  module.exports = hsl2rgb;

  /***/
},
/* 633 */
/***/function (module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function (global) {
    /**
    * lodash (Custom Build) <https://lodash.com/>
    * Build: `lodash modularize exports="npm" -o ./`
    * Copyright jQuery Foundation and other contributors <https://jquery.org/>
    * Released under MIT license <https://lodash.com/license>
    * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
    * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
    */

    /** Used as the `TypeError` message for "Functions" methods. */
    var FUNC_ERROR_TEXT = 'Expected a function';

    /** Used as references for various `Number` constants. */
    var MAX_SAFE_INTEGER = 9007199254740991;

    /** `Object#toString` result references. */
    var argsTag = '[object Arguments]',
        funcTag = '[object Function]',
        genTag = '[object GeneratorFunction]';

    /** Detect free variable `global` from Node.js. */
    var freeGlobal = (typeof global === "undefined" ? "undefined" : _typeof4(global)) == 'object' && global && global.Object === Object && global;

    /** Detect free variable `self`. */
    var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof4(self)) == 'object' && self && self.Object === Object && self;

    /** Used as a reference to the global object. */
    var root = freeGlobal || freeSelf || Function('return this')();

    /**
     * A faster alternative to `Function#apply`, this function invokes `func`
     * with the `this` binding of `thisArg` and the arguments of `args`.
     *
     * @private
     * @param {Function} func The function to invoke.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} args The arguments to invoke `func` with.
     * @returns {*} Returns the result of `func`.
     */
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }

    /**
     * Appends the elements of `values` to `array`.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to append.
     * @returns {Array} Returns `array`.
     */
    function arrayPush(array, values) {
      var index = -1,
          length = values.length,
          offset = array.length;

      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }

    /** Used for built-in method references. */
    var objectProto = Object.prototype;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var objectToString = objectProto.toString;

    /** Built-in value references. */
    var _Symbol11 = root.Symbol,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        spreadableSymbol = _Symbol11 ? _Symbol11.isConcatSpreadable : undefined;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax = Math.max;

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      start = nativeMax(start === undefined ? func.length - 1 : start, 0);
      return function () {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = array;
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return baseRest(function (funcs) {
        funcs = baseFlatten(funcs, 1);

        var length = funcs.length,
            index = length;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          if (typeof funcs[index] != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
        }
        return function () {
          var index = 0,
              result = length ? funcs[index].apply(this, arguments) : arguments[0];

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    function isArguments(value) {
      // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
    }

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 8-9 which returns 'object' for typed array and other constructors.
      var tag = isObject(value) ? objectToString.call(value) : '';
      return tag == funcTag || tag == genTag;
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
      return !!value && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return !!value && (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'object';
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    module.exports = flow;

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(16));

  /***/
},
/* 634 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.yuv2rgb = yuv2rgb;
  exports.rgb2yuv = rgb2yuv;
  function yuv2rgb(yuv) {
    var y = yuv[0],
        u = yuv[1],
        v = yuv[2],
        r,
        g,
        b;

    r = y * 1 + u * 0 + v * 1.13983;
    g = y * 1 + u * -0.39465 + v * -0.58060;
    b = y * 1 + u * 2.02311 + v * 0;

    r = Math.min(Math.max(0, r), 1);
    g = Math.min(Math.max(0, g), 1);
    b = Math.min(Math.max(0, b), 1);

    return [r * 255, g * 255, b * 255];
  }

  function rgb2yuv(rgb) {
    var r = rgb[0] / 255,
        g = rgb[1] / 255,
        b = rgb[2] / 255;

    var y = r * 0.299 + g * 0.587 + b * 0.114;
    var u = r * -0.14713 + g * -0.28886 + b * 0.436;
    var v = r * 0.615 + g * -0.51499 + b * -0.10001;

    return [y, u, v];
  };

  /***/
},
/* 635 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _reactJsonTree = __webpack_require__(203);

  var _reactJsonTree2 = _interopRequireDefault(_reactJsonTree);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var styles = {
    actionBar: {
      paddingTop: 8,
      paddingBottom: 7,
      paddingLeft: 16
    },
    payload: {
      margin: 0,
      paddingLeft: 16,
      overflow: 'auto'
    }
  };

  var LogMonitorAction = function (_Component) {
    _inherits(LogMonitorAction, _Component);

    function LogMonitorAction(props) {
      _classCallCheck(this, LogMonitorAction);

      var _this = _possibleConstructorReturn(this, _Component.call(this, props));

      _this.shouldExpandNode = _this.shouldExpandNode.bind(_this);
      return _this;
    }

    LogMonitorAction.prototype.renderPayload = function renderPayload(payload) {
      return _react2.default.createElement('div', { style: _extends({}, styles.payload, {
          backgroundColor: this.props.theme.base00
        }) }, Object.keys(payload).length > 0 ? _react2.default.createElement(_reactJsonTree2.default, { theme: this.props.theme,
        invertTheme: false,
        keyPath: ['action'],
        data: payload,
        shouldExpandNode: this.shouldExpandNode }) : '');
    };

    LogMonitorAction.prototype.shouldExpandNode = function shouldExpandNode(keyName, data, level) {
      return this.props.expandActionRoot && level === 0;
    };

    LogMonitorAction.prototype.render = function render() {
      var _props$action = this.props.action;
      var type = _props$action.type;

      var payload = _objectWithoutProperties(_props$action, ['type']);

      return _react2.default.createElement('div', { style: _extends({
          backgroundColor: this.props.theme.base02,
          color: this.props.theme.base06
        }, this.props.style) }, _react2.default.createElement('div', { style: styles.actionBar,
        onClick: this.props.onClick }, type !== null && type.toString()), !this.props.collapsed ? this.renderPayload(payload) : '');
    };

    return LogMonitorAction;
  }(_react.Component);

  exports.default = LogMonitorAction;

  /***/
},
/* 636 */
/***/function (module, exports, __webpack_require__) {

  /* WEBPACK VAR INJECTION */(function (global) {
    /**
    * lodash (Custom Build) <https://lodash.com/>
    * Build: `lodash modularize exports="npm" -o ./`
    * Copyright jQuery Foundation and other contributors <https://jquery.org/>
    * Released under MIT license <https://lodash.com/license>
    * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
    * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
    */

    /** Used as the `TypeError` message for "Functions" methods. */
    var FUNC_ERROR_TEXT = 'Expected a function';

    /** Used as references for various `Number` constants. */
    var NAN = 0 / 0;

    /** `Object#toString` result references. */
    var symbolTag = '[object Symbol]';

    /** Used to match leading and trailing whitespace. */
    var reTrim = /^\s+|\s+$/g;

    /** Used to detect bad signed hexadecimal string values. */
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

    /** Used to detect binary string values. */
    var reIsBinary = /^0b[01]+$/i;

    /** Used to detect octal string values. */
    var reIsOctal = /^0o[0-7]+$/i;

    /** Built-in method references without a dependency on `root`. */
    var freeParseInt = parseInt;

    /** Detect free variable `global` from Node.js. */
    var freeGlobal = (typeof global === "undefined" ? "undefined" : _typeof4(global)) == 'object' && global && global.Object === Object && global;

    /** Detect free variable `self`. */
    var freeSelf = (typeof self === "undefined" ? "undefined" : _typeof4(self)) == 'object' && self && self.Object === Object && self;

    /** Used as a reference to the global object. */
    var root = freeGlobal || freeSelf || Function('return this')();

    /** Used for built-in method references. */
    var objectProto = Object.prototype;

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var objectToString = objectProto.toString;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeMax = Math.max,
        nativeMin = Math.min;

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = function now() {
      return root.Date.now();
    };

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            result = wait - timeSinceLastCall;

        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
      return !!value && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return !!value && (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'object';
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? other + '' : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, '');
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }

    module.exports = debounce;

    /* WEBPACK VAR INJECTION */
  }).call(exports, __webpack_require__(16));

  /***/
},
/* 637 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports.default = undefined;

  var _DockMonitor = __webpack_require__(638);

  var _DockMonitor2 = _interopRequireDefault(_DockMonitor);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _DockMonitor2.default;

  /***/
},
/* 638 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _reactDock = __webpack_require__(639);

  var _reactDock2 = _interopRequireDefault(_reactDock);

  var _constants = __webpack_require__(222);

  var _actions = __webpack_require__(223);

  var _reducers = __webpack_require__(644);

  var _reducers2 = _interopRequireDefault(_reducers);

  var _parseKey = __webpack_require__(645);

  var _parseKey2 = _interopRequireDefault(_parseKey);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _objectWithoutProperties(obj, keys) {
    var target = {};for (var i in obj) {
      if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
    }return target;
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var DockMonitor = function (_Component) {
    _inherits(DockMonitor, _Component);

    function DockMonitor(props) {
      _classCallCheck(this, DockMonitor);

      var _this = _possibleConstructorReturn(this, _Component.call(this, props));

      _this.handleKeyDown = _this.handleKeyDown.bind(_this);
      _this.handleSizeChange = _this.handleSizeChange.bind(_this);

      var childrenCount = _react.Children.count(props.children);
      if (childrenCount === 0) {
        console.error('<DockMonitor> requires at least one monitor inside. ' + 'Why don’t you try <LogMonitor>? You can get it at ' + 'https://github.com/gaearon/redux-devtools-log-monitor.');
      } else if (childrenCount > 1 && !props.changeMonitorKey) {
        console.error('You specified multiple monitors inside <DockMonitor> ' + 'but did not provide `changeMonitorKey` prop to change them. ' + 'Try specifying <DockMonitor changeMonitorKey="ctrl-m" /> ' + 'and then press Ctrl-M.');
      }
      return _this;
    }

    DockMonitor.prototype.componentDidMount = function componentDidMount() {
      window.addEventListener('keydown', this.handleKeyDown);
    };

    DockMonitor.prototype.componentWillUnmount = function componentWillUnmount() {
      window.removeEventListener('keydown', this.handleKeyDown);
    };

    DockMonitor.prototype.matchesKey = function matchesKey(key, event) {
      if (!key) {
        return false;
      }

      var charCode = event.keyCode || event.which;
      var char = String.fromCharCode(charCode);
      return key.name.toUpperCase() === char.toUpperCase() && key.alt === event.altKey && key.ctrl === event.ctrlKey && key.meta === event.metaKey && key.shift === event.shiftKey;
    };

    DockMonitor.prototype.handleKeyDown = function handleKeyDown(e) {
      // Ignore regular keys when focused on a field
      // and no modifiers are active.
      if (!e.ctrlKey && !e.metaKey && !e.altKey && (e.target.tagName === 'INPUT' || e.target.tagName === 'SELECT' || e.target.tagName === 'TEXTAREA' || e.target.isContentEditable)) {
        return;
      }

      var visibilityKey = (0, _parseKey2.default)(this.props.toggleVisibilityKey);
      var positionKey = (0, _parseKey2.default)(this.props.changePositionKey);

      var monitorKey = void 0;
      if (this.props.changeMonitorKey) {
        monitorKey = (0, _parseKey2.default)(this.props.changeMonitorKey);
      }

      if (this.matchesKey(visibilityKey, e)) {
        e.preventDefault();
        this.props.dispatch((0, _actions.toggleVisibility)());
      } else if (this.matchesKey(positionKey, e)) {
        e.preventDefault();
        this.props.dispatch((0, _actions.changePosition)());
      } else if (this.matchesKey(monitorKey, e)) {
        e.preventDefault();
        this.props.dispatch((0, _actions.changeMonitor)());
      }
    };

    DockMonitor.prototype.handleSizeChange = function handleSizeChange(requestedSize) {
      this.props.dispatch((0, _actions.changeSize)(requestedSize));
    };

    DockMonitor.prototype.renderChild = function renderChild(child, index, otherProps) {
      var monitorState = this.props.monitorState;
      var childMonitorIndex = monitorState.childMonitorIndex,
          childMonitorStates = monitorState.childMonitorStates;

      if (index !== childMonitorIndex) {
        return null;
      }

      return (0, _react.cloneElement)(child, _extends({
        monitorState: childMonitorStates[index]
      }, otherProps));
    };

    DockMonitor.prototype.render = function render() {
      var _this2 = this;

      var _props = this.props,
          monitorState = _props.monitorState,
          children = _props.children,
          fluid = _props.fluid,
          rest = _objectWithoutProperties(_props, ['monitorState', 'children', 'fluid']);

      var position = monitorState.position,
          isVisible = monitorState.isVisible,
          size = monitorState.size;

      return _react2.default.createElement(_reactDock2.default, { position: position,
        isVisible: isVisible,
        size: size,
        fluid: fluid,
        onSizeChange: this.handleSizeChange,
        dimMode: 'none' }, _react.Children.map(children, function (child, index) {
        return _this2.renderChild(child, index, rest);
      }));
    };

    return DockMonitor;
  }(_react.Component);

  DockMonitor.update = _reducers2.default;
  DockMonitor.propTypes = {
    defaultPosition: _propTypes2.default.oneOf(_constants.POSITIONS),
    defaultIsVisible: _propTypes2.default.bool.isRequired,
    defaultSize: _propTypes2.default.number.isRequired,
    toggleVisibilityKey: _propTypes2.default.string.isRequired,
    changePositionKey: _propTypes2.default.string.isRequired,
    changeMonitorKey: _propTypes2.default.string,
    fluid: _propTypes2.default.bool,

    dispatch: _propTypes2.default.func,
    monitorState: _propTypes2.default.shape({
      position: _propTypes2.default.oneOf(_constants.POSITIONS).isRequired,
      size: _propTypes2.default.number.isRequired,
      isVisible: _propTypes2.default.bool.isRequired,
      childMonitorState: _propTypes2.default.any
    })
  };
  DockMonitor.defaultProps = {
    defaultIsVisible: true,
    defaultPosition: 'right',
    defaultSize: 0.3,
    fluid: true
  };
  exports.default = DockMonitor;

  /***/
},
/* 639 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _Dock = __webpack_require__(640);

  var _Dock2 = _interopRequireDefault(_Dock);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  exports.default = _Dock2.default;

  /***/
},
/* 640 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = undefined;

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _class, _temp;

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _propTypes = __webpack_require__(2);

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _lodash = __webpack_require__(641);

  var _lodash2 = _interopRequireDefault(_lodash);

  var _autoprefix = __webpack_require__(643);

  var _autoprefix2 = _interopRequireDefault(_autoprefix);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
        arr2[i] = arr[i];
      }return arr2;
    } else {
      return Array.from(arr);
    }
  }

  function autoprefixes(styles) {
    return Object.keys(styles).reduce(function (obj, key) {
      return obj[key] = (0, _autoprefix2.default)(styles[key]), obj;
    }, {});
  }

  var styles = autoprefixes({
    wrapper: {
      position: 'fixed',
      width: 0,
      height: 0,
      top: 0,
      left: 0
    },

    dim: {
      position: 'fixed',
      left: 0,
      right: 0,
      top: 0,
      bottom: 0,
      zIndex: 0,
      background: 'rgba(0, 0, 0, 0.2)',
      opacity: 1
    },

    dimAppear: {
      opacity: 0
    },

    dimTransparent: {
      pointerEvents: 'none'
    },

    dimHidden: {
      opacity: 0
    },

    dock: {
      position: 'fixed',
      zIndex: 1,
      boxShadow: '0 0 4px rgba(0, 0, 0, 0.3)',
      background: 'white',
      left: 0,
      top: 0,
      width: '100%',
      height: '100%'
    },

    dockHidden: {
      opacity: 0
    },

    dockResizing: {
      transition: 'none'
    },

    dockContent: {
      width: '100%',
      height: '100%',
      overflow: 'auto'
    },

    resizer: {
      position: 'absolute',
      zIndex: 2,
      opacity: 0
    }
  });

  function getTransitions(duration) {
    return ['left', 'top', 'width', 'height'].map(function (p) {
      return p + ' ' + duration / 1000 + 's ease-out';
    });
  }

  function getDockStyles(_ref, _ref2) {
    var fluid = _ref.fluid;
    var dockStyle = _ref.dockStyle;
    var dockHiddenStyle = _ref.dockHiddenStyle;
    var duration = _ref.duration;
    var position = _ref.position;
    var isVisible = _ref.isVisible;
    var size = _ref2.size;
    var isResizing = _ref2.isResizing;
    var fullWidth = _ref2.fullWidth;
    var fullHeight = _ref2.fullHeight;

    var posStyle = void 0;
    var absSize = fluid ? size * 100 + '%' : size + 'px';

    function getRestSize(fullSize) {
      return fluid ? 100 - size * 100 + '%' : fullSize - size + 'px';
    }

    switch (position) {
      case 'left':
        posStyle = {
          width: absSize,
          left: isVisible ? 0 : '-' + absSize
        };
        break;
      case 'right':
        posStyle = {
          left: isVisible ? getRestSize(fullWidth) : fullWidth,
          width: absSize
        };
        break;
      case 'top':
        posStyle = {
          top: isVisible ? 0 : '-' + absSize,
          height: absSize
        };
        break;
      case 'bottom':
        posStyle = {
          top: isVisible ? getRestSize(fullHeight) : fullHeight,
          height: absSize
        };
        break;
    }

    var transitions = getTransitions(duration);

    return [styles.dock, (0, _autoprefix2.default)({
      transition: [].concat(_toConsumableArray(transitions), [!isVisible && 'opacity 0.01s linear ' + duration / 1000 + 's']).filter(function (t) {
        return t;
      }).join(',')
    }), dockStyle, (0, _autoprefix2.default)(posStyle), isResizing && styles.dockResizing, !isVisible && styles.dockHidden, !isVisible && dockHiddenStyle];
  }

  function getDimStyles(_ref3, _ref4) {
    var dimMode = _ref3.dimMode;
    var dimStyle = _ref3.dimStyle;
    var duration = _ref3.duration;
    var isVisible = _ref3.isVisible;
    var isTransitionStarted = _ref4.isTransitionStarted;

    return [styles.dim, (0, _autoprefix2.default)({
      transition: 'opacity ' + duration / 1000 + 's ease-out'
    }), dimStyle, dimMode === 'transparent' && styles.dimTransparent, !isVisible && styles.dimHidden, isTransitionStarted && isVisible && styles.dimAppear, isTransitionStarted && !isVisible && styles.dimDisappear];
  }

  function getResizerStyles(position) {
    var resizerStyle = void 0;
    var size = 10;

    switch (position) {
      case 'left':
        resizerStyle = {
          right: -size / 2,
          width: size,
          top: 0,
          height: '100%',
          cursor: 'col-resize'
        };
        break;
      case 'right':
        resizerStyle = {
          left: -size / 2,
          width: size,
          top: 0,
          height: '100%',
          cursor: 'col-resize'
        };
        break;
      case 'top':
        resizerStyle = {
          bottom: -size / 2,
          height: size,
          left: 0,
          width: '100%',
          cursor: 'row-resize'
        };
        break;
      case 'bottom':
        resizerStyle = {
          top: -size / 2,
          height: size,
          left: 0,
          width: '100%',
          cursor: 'row-resize'
        };
        break;
    }

    return [styles.resizer, (0, _autoprefix2.default)(resizerStyle)];
  }

  function getFullSize(position, fullWidth, fullHeight) {
    return position === 'left' || position === 'right' ? fullWidth : fullHeight;
  }

  var Dock = (_temp = _class = function (_Component) {
    _inherits(Dock, _Component);

    function Dock(props) {
      _classCallCheck(this, Dock);

      var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Dock).call(this, props));

      _this.transitionEnd = function () {
        _this.setState({ isTransitionStarted: false });
      };

      _this.hideDim = function () {
        if (!_this.props.isVisible) {
          _this.setState({ isDimHidden: true });
        }
      };

      _this.handleDimClick = function () {
        if (_this.props.dimMode === 'opaque') {
          _this.props.onVisibleChange && _this.props.onVisibleChange(false);
        }
      };

      _this.handleResize = function () {
        if (window.requestAnimationFrame) {
          window.requestAnimationFrame(_this.updateWindowSize.bind(_this, true));
        } else {
          _this.updateWindowSize(true);
        }
      };

      _this.updateWindowSize = function (windowResize) {
        var sizeState = {
          fullWidth: window.innerWidth,
          fullHeight: window.innerHeight
        };

        if (windowResize) {
          _this.setState(_extends({}, sizeState, {
            isResizing: true,
            isWindowResizing: windowResize
          }));

          _this.debouncedUpdateWindowSizeEnd();
        } else {
          _this.setState(sizeState);
        }
      };

      _this.updateWindowSizeEnd = function () {
        _this.setState({
          isResizing: false,
          isWindowResizing: false
        });
      };

      _this.debouncedUpdateWindowSizeEnd = (0, _lodash2.default)(_this.updateWindowSizeEnd, 30);

      _this.handleWrapperLeave = function () {
        _this.setState({ isResizing: false });
      };

      _this.handleMouseDown = function () {
        _this.setState({ isResizing: true });
      };

      _this.handleMouseUp = function () {
        _this.setState({ isResizing: false });
      };

      _this.handleMouseMove = function (e) {
        if (!_this.state.isResizing || _this.state.isWindowResizing) return;
        e.preventDefault();

        var _this$props = _this.props;
        var position = _this$props.position;
        var fluid = _this$props.fluid;
        var _this$state = _this.state;
        var fullWidth = _this$state.fullWidth;
        var fullHeight = _this$state.fullHeight;
        var isControlled = _this$state.isControlled;
        var x = e.clientX;
        var y = e.clientY;

        var size = void 0;

        switch (position) {
          case 'left':
            size = fluid ? x / fullWidth : x;
            break;
          case 'right':
            size = fluid ? (fullWidth - x) / fullWidth : fullWidth - x;
            break;
          case 'top':
            size = fluid ? y / fullHeight : y;
            break;
          case 'bottom':
            size = fluid ? (fullHeight - y) / fullHeight : fullHeight - y;
            break;
        }

        _this.props.onSizeChange && _this.props.onSizeChange(size);

        if (!isControlled) {
          _this.setState({ size: size });
        }
      };

      _this.state = {
        isControlled: typeof props.size !== 'undefined',
        size: props.size || props.defaultSize,
        isDimHidden: !props.isVisible,
        fullWidth: typeof window !== 'undefined' && window.innerWidth,
        fullHeight: typeof window !== 'undefined' && window.innerHeight,
        isTransitionStarted: false,
        isWindowResizing: false
      };
      return _this;
    }

    _createClass(Dock, [{
      key: 'componentDidMount',
      value: function componentDidMount() {
        window.addEventListener('mouseup', this.handleMouseUp);
        window.addEventListener('mousemove', this.handleMouseMove);
        window.addEventListener('resize', this.handleResize);

        if (!window.fullWidth) {
          this.updateWindowSize();
        }
      }
    }, {
      key: 'componentWillUnmount',
      value: function componentWillUnmount() {
        window.removeEventListener('mouseup', this.handleMouseUp);
        window.removeEventListener('mousemove', this.handleMouseMove);
        window.removeEventListener('resize', this.handleResize);
      }
    }, {
      key: 'componentWillReceiveProps',
      value: function componentWillReceiveProps(nextProps) {
        var isControlled = typeof nextProps.size !== 'undefined';

        this.setState({ isControlled: isControlled });

        if (isControlled && this.props.size !== nextProps.size) {
          this.setState({ size: nextProps.size });
        } else if (this.props.fluid !== nextProps.fluid) {
          this.updateSize(nextProps);
        }

        if (this.props.isVisible !== nextProps.isVisible) {
          this.setState({
            isTransitionStarted: true
          });
        }
      }
    }, {
      key: 'updateSize',
      value: function updateSize(props) {
        var _state = this.state;
        var fullWidth = _state.fullWidth;
        var fullHeight = _state.fullHeight;

        this.setState({
          size: props.fluid ? this.state.size / getFullSize(props.position, fullWidth, fullHeight) : getFullSize(props.position, fullWidth, fullHeight) * this.state.size
        });
      }
    }, {
      key: 'componentDidUpdate',
      value: function componentDidUpdate(prevProps) {
        var _this2 = this;

        if (this.props.isVisible !== prevProps.isVisible) {
          if (!this.props.isVisible) {
            window.setTimeout(function () {
              return _this2.hideDim();
            }, this.props.duration);
          } else {
            this.setState({ isDimHidden: false });
          }

          window.setTimeout(function () {
            return _this2.setState({ isTransitionStarted: false });
          }, 0);
        }
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props;
        var children = _props.children;
        var zIndex = _props.zIndex;
        var dimMode = _props.dimMode;
        var position = _props.position;
        var isVisible = _props.isVisible;
        var _state2 = this.state;
        var isResizing = _state2.isResizing;
        var size = _state2.size;
        var isDimHidden = _state2.isDimHidden;

        var dimStyles = Object.assign.apply(Object, [{}].concat(_toConsumableArray(getDimStyles(this.props, this.state))));
        var dockStyles = Object.assign.apply(Object, [{}].concat(_toConsumableArray(getDockStyles(this.props, this.state))));
        var resizerStyles = Object.assign.apply(Object, [{}].concat(_toConsumableArray(getResizerStyles(position))));

        return _react2.default.createElement('div', { style: Object.assign({}, styles.wrapper, { zIndex: zIndex }) }, dimMode !== 'none' && !isDimHidden && _react2.default.createElement('div', { style: dimStyles, onClick: this.handleDimClick }), _react2.default.createElement('div', { style: dockStyles }, _react2.default.createElement('div', { style: resizerStyles,
          onMouseDown: this.handleMouseDown }), _react2.default.createElement('div', { style: styles.dockContent }, typeof children === 'function' ? children({
          position: position,
          isResizing: isResizing,
          size: size,
          isVisible: isVisible
        }) : children)));
      }
    }]);

    return Dock;
  }(_react.Component), _class.propTypes = {
    position: _propTypes2.default.oneOf(['left', 'right', 'top', 'bottom']),
    zIndex: _propTypes2.default.number,
    fluid: _propTypes2.default.bool,
    size: _propTypes2.default.number,
    defaultSize: _propTypes2.default.number,
    dimMode: _propTypes2.default.oneOf(['none', 'transparent', 'opaque']),
    isVisible: _propTypes2.default.bool,
    onVisibleChange: _propTypes2.default.func,
    onSizeChange: _propTypes2.default.func,
    dimStyle: _propTypes2.default.object,
    dockStyle: _propTypes2.default.object,
    duration: _propTypes2.default.number
  }, _class.defaultProps = {
    position: 'left',
    zIndex: 99999999,
    fluid: true,
    defaultSize: 0.3,
    dimMode: 'opaque',
    duration: 200
  }, _temp);
  exports.default = Dock;

  /***/
},
/* 641 */
/***/function (module, exports, __webpack_require__) {

  /**
   * lodash 3.1.1 (Custom Build) <https://lodash.com/>
   * Build: `lodash modern modularize exports="npm" -o ./`
   * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   * Available under MIT license <https://lodash.com/license>
   */
  var getNative = __webpack_require__(642);

  /** Used as the `TypeError` message for "Functions" methods. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /* Native method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max,
      nativeNow = getNative(Date, 'now');

  /**
   * Gets the number of milliseconds that have elapsed since the Unix epoch
   * (1 January 1970 00:00:00 UTC).
   *
   * @static
   * @memberOf _
   * @category Date
   * @example
   *
   * _.defer(function(stamp) {
   *   console.log(_.now() - stamp);
   * }, _.now());
   * // => logs the number of milliseconds it took for the deferred function to be invoked
   */
  var now = nativeNow || function () {
    return new Date().getTime();
  };

  /**
   * Creates a debounced function that delays invoking `func` until after `wait`
   * milliseconds have elapsed since the last time the debounced function was
   * invoked. The debounced function comes with a `cancel` method to cancel
   * delayed invocations. Provide an options object to indicate that `func`
   * should be invoked on the leading and/or trailing edge of the `wait` timeout.
   * Subsequent calls to the debounced function return the result of the last
   * `func` invocation.
   *
   * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked
   * on the trailing edge of the timeout only if the the debounced function is
   * invoked more than once during the `wait` timeout.
   *
   * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)
   * for details over the differences between `_.debounce` and `_.throttle`.
   *
   * @static
   * @memberOf _
   * @category Function
   * @param {Function} func The function to debounce.
   * @param {number} [wait=0] The number of milliseconds to delay.
   * @param {Object} [options] The options object.
   * @param {boolean} [options.leading=false] Specify invoking on the leading
   *  edge of the timeout.
   * @param {number} [options.maxWait] The maximum time `func` is allowed to be
   *  delayed before it is invoked.
   * @param {boolean} [options.trailing=true] Specify invoking on the trailing
   *  edge of the timeout.
   * @returns {Function} Returns the new debounced function.
   * @example
   *
   * // avoid costly calculations while the window size is in flux
   * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
   *
   * // invoke `sendMail` when the click event is fired, debouncing subsequent calls
   * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {
   *   'leading': true,
   *   'trailing': false
   * }));
   *
   * // ensure `batchLog` is invoked once after 1 second of debounced calls
   * var source = new EventSource('/stream');
   * jQuery(source).on('message', _.debounce(batchLog, 250, {
   *   'maxWait': 1000
   * }));
   *
   * // cancel a debounced call
   * var todoChanges = _.debounce(batchLog, 1000);
   * Object.observe(models.todo, todoChanges);
   *
   * Object.observe(models, function(changes) {
   *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {
   *     todoChanges.cancel();
   *   }
   * }, ['delete']);
   *
   * // ...at some point `models.todo` is changed
   * models.todo.completed = true;
   *
   * // ...before 1 second has passed `models.todo` is deleted
   * // which cancels the debounced `todoChanges` call
   * delete models.todo;
   */
  function debounce(func, wait, options) {
    var args,
        maxTimeoutId,
        result,
        stamp,
        thisArg,
        timeoutId,
        trailingCall,
        lastCalled = 0,
        maxWait = false,
        trailing = true;

    if (typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    wait = wait < 0 ? 0 : +wait || 0;
    if (options === true) {
      var leading = true;
      trailing = false;
    } else if (isObject(options)) {
      leading = !!options.leading;
      maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);
      trailing = 'trailing' in options ? !!options.trailing : trailing;
    }

    function cancel() {
      if (timeoutId) {
        clearTimeout(timeoutId);
      }
      if (maxTimeoutId) {
        clearTimeout(maxTimeoutId);
      }
      lastCalled = 0;
      maxTimeoutId = timeoutId = trailingCall = undefined;
    }

    function complete(isCalled, id) {
      if (id) {
        clearTimeout(id);
      }
      maxTimeoutId = timeoutId = trailingCall = undefined;
      if (isCalled) {
        lastCalled = now();
        result = func.apply(thisArg, args);
        if (!timeoutId && !maxTimeoutId) {
          args = thisArg = undefined;
        }
      }
    }

    function delayed() {
      var remaining = wait - (now() - stamp);
      if (remaining <= 0 || remaining > wait) {
        complete(trailingCall, maxTimeoutId);
      } else {
        timeoutId = setTimeout(delayed, remaining);
      }
    }

    function maxDelayed() {
      complete(trailing, timeoutId);
    }

    function debounced() {
      args = arguments;
      stamp = now();
      thisArg = this;
      trailingCall = trailing && (timeoutId || !leading);

      if (maxWait === false) {
        var leadingCall = leading && !timeoutId;
      } else {
        if (!maxTimeoutId && !leading) {
          lastCalled = stamp;
        }
        var remaining = maxWait - (stamp - lastCalled),
            isCalled = remaining <= 0 || remaining > maxWait;

        if (isCalled) {
          if (maxTimeoutId) {
            maxTimeoutId = clearTimeout(maxTimeoutId);
          }
          lastCalled = stamp;
          result = func.apply(thisArg, args);
        } else if (!maxTimeoutId) {
          maxTimeoutId = setTimeout(maxDelayed, remaining);
        }
      }
      if (isCalled && timeoutId) {
        timeoutId = clearTimeout(timeoutId);
      } else if (!timeoutId && wait !== maxWait) {
        timeoutId = setTimeout(delayed, wait);
      }
      if (leadingCall) {
        isCalled = true;
        result = func.apply(thisArg, args);
      }
      if (isCalled && !timeoutId && !maxTimeoutId) {
        args = thisArg = undefined;
      }
      return result;
    }
    debounced.cancel = cancel;
    return debounced;
  }

  /**
   * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(1);
   * // => false
   */
  function isObject(value) {
    // Avoid a V8 JIT bug in Chrome 19-20.
    // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
    var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
    return !!value && (type == 'object' || type == 'function');
  }

  module.exports = debounce;

  /***/
},
/* 642 */
/***/function (module, exports) {

  /**
   * lodash 3.9.1 (Custom Build) <https://lodash.com/>
   * Build: `lodash modern modularize exports="npm" -o ./`
   * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   * Available under MIT license <https://lodash.com/license>
   */

  /** `Object#toString` result references. */
  var funcTag = '[object Function]';

  /** Used to detect host constructors (Safari > 5). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /**
   * Checks if `value` is object-like.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   */
  function isObjectLike(value) {
    return !!value && (typeof value === "undefined" ? "undefined" : _typeof4(value)) == 'object';
  }

  /** Used for native method references. */
  var objectProto = Object.prototype;

  /** Used to resolve the decompiled source of functions. */
  var fnToString = Function.prototype.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
   * of values.
   */
  var objToString = objectProto.toString;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' + fnToString.call(hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = object == null ? undefined : object[key];
    return isNative(value) ? value : undefined;
  }

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction(value) {
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in older versions of Chrome and Safari which return 'function' for regexes
    // and Safari 8 equivalents which return 'object' for typed array constructors.
    return isObject(value) && objToString.call(value) == funcTag;
  }

  /**
   * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
   * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(1);
   * // => false
   */
  function isObject(value) {
    // Avoid a V8 JIT bug in Chrome 19-20.
    // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.
    var type = typeof value === "undefined" ? "undefined" : _typeof4(value);
    return !!value && (type == 'object' || type == 'function');
  }

  /**
   * Checks if `value` is a native function.
   *
   * @static
   * @memberOf _
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
   * @example
   *
   * _.isNative(Array.prototype.push);
   * // => true
   *
   * _.isNative(_);
   * // => false
   */
  function isNative(value) {
    if (value == null) {
      return false;
    }
    if (isFunction(value)) {
      return reIsNative.test(fnToString.call(value));
    }
    return isObjectLike(value) && reIsHostCtor.test(value);
  }

  module.exports = getNative;

  /***/
},
/* 643 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  exports.default = autoprefix;
  // Same as https://github.com/SimenB/react-vendor-prefixes/blob/master/src/index.js,
  // but dumber

  var vendorSpecificProperties = ['animation', 'animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction', 'appearance', 'backfaceVisibility', 'backgroundClip', 'borderImage', 'borderImageSlice', 'boxSizing', 'boxShadow', 'contentColumns', 'transform', 'transformOrigin', 'transformStyle', 'transition', 'transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction', 'perspective', 'perspectiveOrigin', 'userSelect'];

  var prefixes = ['Moz', 'Webkit', 'ms', 'O'];

  function prefixProp(key, value) {
    return prefixes.reduce(function (obj, pre) {
      return obj[pre + key[0].toUpperCase() + key.substr(1)] = value, obj;
    }, {});
  }

  function autoprefix(style) {
    return Object.keys(style).reduce(function (obj, key) {
      return vendorSpecificProperties.indexOf(key) !== -1 ? _extends({}, obj, prefixProp(key, style[key])) : obj;
    }, style);
  }

  /***/
},
/* 644 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  exports.__esModule = true;
  exports.default = reducer;

  var _actions = __webpack_require__(223);

  var _constants = __webpack_require__(222);

  var _react = __webpack_require__(0);

  function position(props) {
    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.defaultPosition;
    var action = arguments[2];

    return action.type === _actions.CHANGE_POSITION ? _constants.POSITIONS[(_constants.POSITIONS.indexOf(state) + 1) % _constants.POSITIONS.length] : state;
  }

  function size(props) {
    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.defaultSize;
    var action = arguments[2];

    return action.type === _actions.CHANGE_SIZE ? action.size : state;
  }

  function isVisible(props) {
    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.defaultIsVisible;
    var action = arguments[2];

    return action.type === _actions.TOGGLE_VISIBILITY ? !state : state;
  }

  function childMonitorStates(props) {
    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var action = arguments[2];

    return _react.Children.map(props.children, function (child, index) {
      return child.type.update(child.props, state[index], action);
    });
  }

  function childMonitorIndex(props) {
    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var action = arguments[2];

    switch (action.type) {
      case _actions.CHANGE_MONITOR:
        return (state + 1) % _react.Children.count(props.children);
      default:
        return state;
    }
  }

  function reducer(props) {
    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var action = arguments[2];

    if (!state.childMonitorStates) {
      _react.Children.forEach(props.children, function (child, index) {
        if (typeof child.type.update !== 'function') {
          console.error('Child of <DockMonitor> with the index ' + index + ' ' + ('(' + (child.type.displayName || child.type.name || child.type) + ') ') + 'does not appear to be a valid Redux DevTools monitor.');
        }
      });
    }

    return {
      position: position(props, state.position, action),
      isVisible: isVisible(props, state.isVisible, action),
      size: size(props, state.size, action),
      childMonitorIndex: childMonitorIndex(props, state.childMonitorIndex, action),
      childMonitorStates: childMonitorStates(props, state.childMonitorStates, action)
    };
  }

  /***/
},
/* 645 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  var keycodes = __webpack_require__(646);

  function assertKeyString(s) {
    if (!/^(ctrl-|shift-|alt-|meta-){0,4}\w+$/.test(s)) throw new Error('The string to parse needs to be of the format "c", "ctrl-c", "shift-ctrl-c".');
  }

  module.exports = function parse(s) {
    var keyString = s.trim().toLowerCase();

    assertKeyString(keyString);

    var key = {
      name: undefined,
      ctrl: false,
      meta: false,
      shift: false,
      alt: false,
      sequence: undefined
    },
        parts = keyString.split('-'),
        c;

    key.name = parts.pop();
    while (c = parts.pop()) {
      key[c] = true;
    }key.sequence = key.ctrl ? keycodes.ctrl[key.name] || key.name : keycodes.nomod[key.name] || key.name;

    // uppercase sequence for single chars when shift was pressed
    if (key.shift && key.sequence && key.sequence.length === 1) key.sequence = key.sequence.toUpperCase();

    return key;
  };

  /***/
},
/* 646 */
/***/function (module, exports) {

  // Most of these are according to this table: http://www.ssicom.org/js/x171166.htm
  // However where nodejs readline diverges, they are adjusted to conform to it
  module.exports = {
    nomod: {
      escape: "\x1B",
      space: ' ' // actually '\u0020'
    },
    ctrl: {
      ' ': "\0",
      'a': "\x01",
      'b': "\x02",
      'c': "\x03",
      'd': "\x04",
      'e': "\x05",
      'f': "\x06",
      'g': "\x07",
      'h': "\b",
      'i': "\t",
      'j': "\n",
      'k': "\x0B",
      'm': "\f",
      'n': "\r",
      'l': "\x0E",
      'o': "\x0F",
      'p': "\x10",
      'q': "\x11",
      'r': "\x12",
      's': "\x13",
      't': "\x14",
      'u': "\x15",
      'v': "\x16",
      'w': "\x17",
      'x': "\x18",
      'y': "\x19",
      'z': "\x1A",
      '[': "\x1B",
      '\\': "\x1C",
      ']': "\x1D",
      '^': "\x1E",
      '_': "\x1F",

      'space': "\0"
    }
  };

  /***/
},
/* 647 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _redux = __webpack_require__(24);

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _reactRedux = __webpack_require__(8);

  var _Modal = __webpack_require__(648);

  var _Modal2 = _interopRequireDefault(_Modal);

  var _Modal3 = __webpack_require__(649);

  var _DevTools = __webpack_require__(173);

  var _DevTools2 = _interopRequireDefault(_DevTools);

  var _Form = __webpack_require__(650);

  var _Form2 = _interopRequireDefault(_Form);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var App = function (_Component) {
    _inherits(App, _Component);

    function App() {
      _classCallCheck(this, App);

      return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).apply(this, arguments));
    }

    _createClass(App, [{
      key: 'componentWillMount',
      value: function componentWillMount() {}
    }, {
      key: 'handleModalOpen',
      value: function handleModalOpen() {
        this.props.modalOpen(true);
      }
    }, {
      key: 'handleModalClose',
      value: function handleModalClose() {
        this.props.modalOpen(false);
      }
    }, {
      key: 'onSubmitEvent',
      value: function onSubmitEvent(values) {
        console.log('APIに送信したり色々するとこ');
        console.log(values);
      }
    }, {
      key: 'render',
      value: function render() {
        var show = this.props.show;

        return _react2.default.createElement('div', null, _react2.default.createElement('div', { className: 'l-wrapper' }, _react2.default.createElement('div', { className: 'c-container' }, _react2.default.createElement('h1', { className: 'c-title c-title--primary' }, 'Modal'), _react2.default.createElement('button', { className: 'c-btn c-btn-primary--flat', onClick: this.handleModalOpen.bind(this) }, 'Modal Open'), _react2.default.createElement(_Modal2.default, {
          handleModalOpen: this.handleModalOpen.bind(this),
          handleModalClose: this.handleModalClose.bind(this),
          show: show,
          title: "modal\u30C6\u30B9\u30C8"
        }, "\u30E2\u30FC\u30C0\u30EB\u5185\u5BB9")), _react2.default.createElement(_Form2.default, { onSubmit: this.onSubmitEvent.bind(this) })), _react2.default.createElement(_DevTools2.default, null));
      }
    }]);

    return App;
  }(_react.Component);

  function mapStateToProps(state) {
    return {
      show: state.Modal.show
    };
  }

  function mapDispatchToProps(dispatch) {
    return (0, _redux.bindActionCreators)(Object.assign({}, { modalOpen: _Modal3.modalOpen }), dispatch);
  }

  exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(App);

  /***/
},
/* 648 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var Modal = function (_React$Component) {
    _inherits(Modal, _React$Component);

    function Modal() {
      _classCallCheck(this, Modal);

      return _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).apply(this, arguments));
    }

    _createClass(Modal, [{
      key: 'handleClickOpen',
      value: function handleClickOpen() {
        var handleModalOpen = this.props.handleModalOpen;

        handleModalOpen();
      }
    }, {
      key: 'handleClickClose',
      value: function handleClickClose() {
        var handleModalClose = this.props.handleModalClose;

        handleModalClose();
      }
    }, {
      key: 'render',
      value: function render() {
        var _props = this.props,
            show = _props.show,
            title = _props.title,
            children = _props.children;

        return _react2.default.createElement('div', { className: 'c-modal', 'data-clicked': show === true ? 'true' : 'false' }, _react2.default.createElement('div', { className: 'c-modal__panel' }, _react2.default.createElement('div', { className: 'c-modal__header' }, _react2.default.createElement('h3', null, title)), _react2.default.createElement('div', { className: 'c-modal__content' }, children), _react2.default.createElement('div', { className: 'c-modal__bottom' }, _react2.default.createElement('button', { className: 'c-btn c-btn-default--flat', onClick: this.handleClickClose.bind(this) }, "\u9589\u3058\u308B"))), _react2.default.createElement('div', { className: 'c-modal__overlay', onClick: this.handleClickClose.bind(this) }));
      }
    }]);

    return Modal;
  }(_react2.default.Component);

  exports.default = Modal;

  /***/
},
/* 649 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.modalOpen = modalOpen;

  var _ActionTypes = __webpack_require__(172);

  var ActionTypes = _interopRequireWildcard(_ActionTypes);

  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
        }
      }newObj.default = obj;return newObj;
    }
  }

  function modalOpen(dec) {
    return {
      type: ActionTypes.MODAL_OPEN,
      show: dec
    };
  }

  /***/
},
/* 650 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.validations = undefined;

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  var _reduxForm = __webpack_require__(140);

  var _FieldInput = __webpack_require__(651);

  var _FieldInput2 = _interopRequireDefault(_FieldInput);

  var _Validate = __webpack_require__(652);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var SubmitValidationForm = function (_Component) {
    _inherits(SubmitValidationForm, _Component);

    function SubmitValidationForm() {
      _classCallCheck(this, SubmitValidationForm);

      return _possibleConstructorReturn(this, (SubmitValidationForm.__proto__ || Object.getPrototypeOf(SubmitValidationForm)).apply(this, arguments));
    }

    _createClass(SubmitValidationForm, [{
      key: 'render',
      value: function render() {
        var _props = this.props,
            error = _props.error,
            handleSubmit = _props.handleSubmit;

        return _react2.default.createElement('form', { className: 'c-form', onSubmit: handleSubmit }, _react2.default.createElement(_reduxForm.Field, { name: 'email', type: 'email', component: _FieldInput2.default, label: 'email' }), _react2.default.createElement(_reduxForm.Field, { name: 'password', type: 'password', component: _FieldInput2.default, label: 'Password' }), error && _react2.default.createElement('strong', null, error), _react2.default.createElement('div', null, _react2.default.createElement('button', { className: 'c-btn c-btn-primary--flat', type: 'submit' }, 'Submit')));
      }
    }]);

    return SubmitValidationForm;
  }(_react.Component);

  var validations = exports.validations = {
    'email': { required: true, email: true },
    'password': { required: true, password: true }
  };

  exports.default = (0, _reduxForm.reduxForm)({
    form: 'submitValidation',
    validate: (0, _Validate.validate)(validations)
  })(SubmitValidationForm);

  /***/
},
/* 651 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }return target;
  };

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
      }
    }return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
    };
  }();

  var _react = __webpack_require__(0);

  var _react2 = _interopRequireDefault(_react);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _possibleConstructorReturn(self, call) {
    if (!self) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }return call && ((typeof call === "undefined" ? "undefined" : _typeof4(call)) === "object" || typeof call === "function") ? call : self;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : _typeof4(superClass)));
    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }

  var FieldInput = function (_React$Component) {
    _inherits(FieldInput, _React$Component);

    function FieldInput(props) {
      _classCallCheck(this, FieldInput);

      return _possibleConstructorReturn(this, (FieldInput.__proto__ || Object.getPrototypeOf(FieldInput)).call(this, props));
    }

    _createClass(FieldInput, [{
      key: "render",
      value: function render() {
        var _props = this.props,
            input = _props.input,
            label = _props.label,
            type = _props.type,
            meta = _props.meta,
            _props$meta = _props.meta,
            touched = _props$meta.touched,
            error = _props$meta.error;

        return _react2.default.createElement("div", { className: "c-container--full" }, _react2.default.createElement("label", null, label), _react2.default.createElement("div", null, _react2.default.createElement("input", _extends({}, input, { placeholder: label, type: type })), touched && error && _react2.default.createElement("span", { className: "c-text--highlight" }, error)));
      }
    }]);

    return FieldInput;
  }(_react2.default.Component);

  exports.default = FieldInput;

  /***/
},
/* 652 */
/***/function (module, exports, __webpack_require__) {

  "use strict";

  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _slicedToArray = function () {
    function sliceIterator(arr, i) {
      var _arr = [];var _n = true;var _d = false;var _e = undefined;try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;_e = err;
      } finally {
        try {
          if (!_n && _i["return"]) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }return _arr;
    }return function (arr, i) {
      if (Array.isArray(arr)) {
        return arr;
      } else if (Symbol.iterator in Object(arr)) {
        return sliceIterator(arr, i);
      } else {
        throw new TypeError("Invalid attempt to destructure non-iterable instance");
      }
    };
  }();

  var validate = exports.validate = function validate(config) {
    return function (values, props) {
      var errors = {};
      for (var configKey in config) {
        var keys = configKey.split('.');
        // 横断的にバリデーションを行う
        traverse(values, keys, config[configKey], errors);
      }
      return errors;
    };
  };

  /**
   * 横断バリデーション
   */
  function traverse(values, keys, validations) {
    var errors = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};

    // バリデーション設定キーが存在する場合(root node / inner node)
    if (keys.length > 0) {
      // 配列識別文字列[]を削除
      var _key = keys[0].replace(/\[]/g, '');
      // まだ対象キーの階層にエラーが存在しない場合、初期化
      if (errors[_key] === undefined) {
        errors[_key] = {};
      }

      // バリデーション対象のフィールドに値が存在しない場合（フォーム初期化直後等）
      if (values === undefined || values[_key] === undefined) {

        // フィールドキーから判断して、対象のフィールドが配列となりうる場合
        if (keys[0].indexOf('[') > 0) {
          // インデックス0でバリデーションエラーを登録する
          errors[_key] = [{}];
          // 再帰的にバリデーション
          errors[_key][0] = traverse(undefined, keys.slice(1), validations, errors[_key][0]);
          // エラーが無かった場合は、エラーオブジェクトのkeyごと削除
          // 残ってるとエラーがあるとredux-formに判断される
          if (errors[_key][0] && Object.keys(errors[_key][0]).length < 1) delete errors[_key][0];
        } else {
          // 再帰的にバリデーション
          errors[_key] = traverse(undefined, keys.slice(1), validations, errors[_key]);
          // エラーが無かった場合は、エラーオブジェクトのkeyごと削除
          if (errors[_key] && Object.keys(errors[_key]).length < 1) delete errors[_key];
        }
      } else {
        // 値が存在する場合
        if (values[_key] instanceof Array) {
          errors[_key] = [];
          // 値が配列の場合、各インデックスをバリデーション
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (var _iterator = values[_key].entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
              var _step$value = _slicedToArray(_step.value, 2),
                  index = _step$value[0],
                  value = _step$value[1];

              errors[_key].push({});
              // 再帰的にバリデーション
              errors[_key][index] = traverse(value, keys.slice(1), validations, errors[_key][index]);
              // エラーが無かった場合は、エラーオブジェクトのkeyごと削除
              if (errors[_key][index] && Object.keys(errors[_key][index]).length < 1) delete errors[_key][index];
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }
        } else if (values[_key] instanceof Object) {
          // 値がオブジェクトの場合
          // 子要素を再帰的にバリデーション
          errors[_key] = traverse(values[_key], keys.slice(1), validations, errors[_key]);
          // エラーが無かった場合は、エラーオブジェクトのkeyごと削除
          if (errors[_key] && Object.keys(errors[_key]).length < 1) delete errors[_key];
        } else {
          // 値がプリミティブの場合（入力値 / 未入力でオブジェクトが存在していない）
          errors[_key] = traverse(values[_key], keys.slice(1), validations, errors[_key]);
          // エラーが無かった場合は、エラーオブジェクトのkeyごと削除
          if (errors[_key] && Object.keys(errors[_key]).length < 1) delete errors[_key];
        }
      }
    } else {
      // leaf nodeの場合
      errors = [];
      // 対象フィールドのバリデーション設定に基づきバリデーションを行う
      for (var type in validations) {
        if (Validates[type] && !Validates[type](values, validations[type])) {
          var msg = ErrorMessages[type];
          if (msg) errors.push(msg);
        }
      }
    }

    return errors;
  }

  var ErrorMessages = exports.ErrorMessages = {
    required: "必須項目です。",
    email: "Emailの形式が正しくありません。",
    password: "英字、数字を組み合わせた8文字以上で入力してください。"
  };

  var Validates = exports.Validates = {
    required: function required(value, prop) {
      return prop ? value !== undefined && value !== null && value.toString().length > 0 : true;
    },
    email: function email(value, prop) {
      return (/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value)
      );
    },
    password: function password(value, prop) {
      return (/^(?=.*?[a-zA-Z])(?=.*?\d)[a-zA-Z\d]{8,}$/.test(value)
      );
    }
  };

  /***/
}]
/******/);
},{"process":7,"buffer":8}],0:[function(require,module,exports) {
var global = (1,eval)('this');
var OldModule = module.bundle.Module;
function Module() {
  OldModule.call(this);
  this.hot = {
    accept: function (fn) {
      this._acceptCallback = fn || function () {};
    },
    dispose: function (fn) {
      this._disposeCallback = fn;
    }
  };
}

module.bundle.Module = Module;

if (!module.bundle.parent) {
  var ws = new WebSocket('ws://localhost:61956/');
  ws.onmessage = (e) => {
    var data = JSON.parse(e.data);

    if (data.type === 'update') {
      for (let asset of data.assets) {
        hmrApply(global.require, asset);
      }

      for (let asset of data.assets) {
        if (!asset.isNew) {
          hmrAccept(global.require, asset.id);
        }
      }
    }
  };
}

function getParents(bundle, id) {
  var modules = bundle.modules;
  if (!modules) {
    return [];
  }

  let parents = [];
  for (let k in modules) {
    for (let d in modules[k][1]) {
      let dep = modules[k][1][d];
      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {
        parents.push(+k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;
  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    let fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAccept(bundle, id) {
  var modules = bundle.modules;
  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAccept(bundle.parent, id);
  }

  let cached = bundle.cache[id];
  if (cached && cached.hot._disposeCallback) {
    cached.hot._disposeCallback();
  }

  delete bundle.cache[id];
  bundle(id);

  cached = bundle.cache[id];
  if (cached && cached.hot && cached.hot._acceptCallback) {
    cached.hot._acceptCallback();
    return true;
  }

  return getParents(global.require, id).some(id => hmrAccept(global.require, id));
}
},{}]},{},[0,6])